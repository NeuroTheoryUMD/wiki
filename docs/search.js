window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = {"version": "0.9.5", "fields": ["qualname", "fullname", "annotation", "default_value", "signature", "bases", "doc"], "ref": "fullname", "documentStore": {"docs": {"NDNT": {"fullname": "NDNT", "modulename": "NDNT", "kind": "module", "doc": "<p></p>\n"}, "NDNT.NDN": {"fullname": "NDNT.NDN", "modulename": "NDNT.NDN", "kind": "module", "doc": "<p></p>\n"}, "NDNT.NDN.FFnets": {"fullname": "NDNT.NDN.FFnets", "modulename": "NDNT.NDN", "qualname": "FFnets", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;normal&#x27;: &lt;class &#x27;NDNT.networks.FFnetwork&#x27;&gt;, &#x27;add&#x27;: &lt;class &#x27;NDNT.networks.FFnetwork&#x27;&gt;, &#x27;mult&#x27;: &lt;class &#x27;NDNT.networks.FFnetwork&#x27;&gt;, &#x27;scaffold&#x27;: &lt;class &#x27;NDNT.networks.ScaffoldNetwork&#x27;&gt;, &#x27;scaffold3d&#x27;: &lt;class &#x27;NDNT.networks.ScaffoldNetwork3d&#x27;&gt;, &#x27;readout&#x27;: &lt;class &#x27;NDNT.networks.ReadoutNetwork&#x27;&gt;}"}, "NDNT.NDN.NDN": {"fullname": "NDNT.NDN.NDN", "modulename": "NDNT.NDN", "qualname": "NDN", "kind": "class", "doc": "<p>Initializes an instance of the NDN (Neural Deep Network) class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>ffnet_list (list):</strong>  A list of FFnetwork objects. If None, a single ffnet specified by layer_list will be used.</li>\n<li><strong>layer_list (list):</strong>  A list specifying the layers of the FFnetwork. Only used if ffnet_list is None.</li>\n<li><strong>external_modules (list):</strong>  A list of external modules to be used in the FFnetwork.</li>\n<li><strong>loss_type (str):</strong>  The type of loss function to be used. Default is 'poisson'.</li>\n<li><strong>ffnet_out (int or list):</strong>  The index(es) of the output layer(s) of the FFnetwork(s). If None, the last layer will be used.</li>\n<li><strong>optimizer_params (dict):</strong>  Parameters for the optimizer. If None, default parameters will be used.</li>\n<li><strong>model_name (str):</strong>  The name of the model. If None, a default name will be assigned.</li>\n<li><strong>seed (int):</strong>  The random seed to be used for reproducibility.</li>\n<li><strong>working_dir (str):</strong>  The directory to save checkpoints and other files.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>None</p>\n</blockquote>\n", "bases": "torch.nn.modules.module.Module"}, "NDNT.NDN.NDN.__init__": {"fullname": "NDNT.NDN.NDN.__init__", "modulename": "NDNT.NDN", "qualname": "NDN.__init__", "kind": "function", "doc": "<p>Initializes internal Module state, shared by both nn.Module and ScriptModule.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">ffnet_list</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">layer_list</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">external_modules</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">loss_type</span><span class=\"o\">=</span><span class=\"s1\">&#39;poisson&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">ffnet_out</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">optimizer_params</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">model_name</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">seed</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">working_dir</span><span class=\"o\">=</span><span class=\"s1\">&#39;./checkpoints&#39;</span></span>)</span>"}, "NDNT.NDN.NDN.loss_type": {"fullname": "NDNT.NDN.NDN.loss_type", "modulename": "NDNT.NDN", "qualname": "NDN.loss_type", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.NDN.NDN.ffnet_out": {"fullname": "NDNT.NDN.NDN.ffnet_out", "modulename": "NDNT.NDN", "qualname": "NDN.ffnet_out", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.NDN.NDN.seed": {"fullname": "NDNT.NDN.NDN.seed", "modulename": "NDNT.NDN", "qualname": "NDN.seed", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.NDN.NDN.ffnet_list": {"fullname": "NDNT.NDN.NDN.ffnet_list", "modulename": "NDNT.NDN", "qualname": "NDN.ffnet_list", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.NDN.NDN.working_dir": {"fullname": "NDNT.NDN.NDN.working_dir", "modulename": "NDNT.NDN", "qualname": "NDN.working_dir", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.NDN.NDN.loss": {"fullname": "NDNT.NDN.NDN.loss", "modulename": "NDNT.NDN", "qualname": "NDN.loss", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.NDN.NDN.val_loss": {"fullname": "NDNT.NDN.NDN.val_loss", "modulename": "NDNT.NDN", "qualname": "NDN.val_loss", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.NDN.NDN.trainer": {"fullname": "NDNT.NDN.NDN.trainer", "modulename": "NDNT.NDN", "qualname": "NDN.trainer", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.NDN.NDN.block_sample": {"fullname": "NDNT.NDN.NDN.block_sample", "modulename": "NDNT.NDN", "qualname": "NDN.block_sample", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.NDN.NDN.networks": {"fullname": "NDNT.NDN.NDN.networks", "modulename": "NDNT.NDN", "qualname": "NDN.networks", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.NDN.NDN.opt_params": {"fullname": "NDNT.NDN.NDN.opt_params", "modulename": "NDNT.NDN", "qualname": "NDN.opt_params", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.NDN.NDN.speckled_flag": {"fullname": "NDNT.NDN.NDN.speckled_flag", "modulename": "NDNT.NDN", "qualname": "NDN.speckled_flag", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.NDN.NDN.assemble_ffnetworks": {"fullname": "NDNT.NDN.NDN.assemble_ffnetworks", "modulename": "NDNT.NDN", "qualname": "NDN.assemble_ffnetworks", "kind": "function", "doc": "<p>This function takes a list of ffnetworks and puts them together \nin order. This has to do two steps for each ffnetwork: </p>\n\n<ol>\n<li>Plug in the inputs to each ffnetwork as specified</li>\n<li>Builds the ff-network with the input</li>\n</ol>\n\n<p>This returns the 'network', which is (currently) a module with a \n'forward' and 'reg_loss' function specified.</p>\n\n<p>When multiple ffnet inputs are concatenated, it will always happen in the first\n(filter) dimension, so all other dimensions must match</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>ffnet_list (list):</strong>  A list of ffnetworks to be assembled.</li>\n<li><strong>external_nets (optional):</strong>  External networks to be passed into the 'external' type ffnetworks.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>networks (nn.ModuleList): A module list containing the assembled ff-networks.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>AssertionError:</strong>  If ffnet_list is not a list.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">ffnet_list</span>, </span><span class=\"param\"><span class=\"n\">external_nets</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.NDN.NDN.compute_network_outputs": {"fullname": "NDNT.NDN.NDN.compute_network_outputs", "modulename": "NDNT.NDN", "qualname": "NDN.compute_network_outputs", "kind": "function", "doc": "<p>Computes the network outputs for the given input data.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>Xs (list):</strong>  The input data.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>tuple: A tuple containing the network inputs and network outputs.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>AssertionError:</strong>  If no networks are defined in this NDN.</li>\n</ul>\n\n<h6 id=\"note\">Note:</h6>\n\n<blockquote>\n  <p>This method currently saves only the network outputs and does not return the network inputs.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">Xs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.NDN.NDN.forward": {"fullname": "NDNT.NDN.NDN.forward", "modulename": "NDNT.NDN", "qualname": "NDN.forward", "kind": "function", "doc": "<p>Applies the forward pass of each network in sequential order.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>Xs (list):</strong>  List of input data.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>ndarray: Output of the forward pass.</p>\n</blockquote>\n\n<h6 id=\"notes\">Notes:</h6>\n\n<blockquote>\n  <p>The tricky thing is concatenating multiple-input dimensions together correctly.\n  Note that the external inputs are actually in principle a list of inputs.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">Xs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.NDN.NDN.training_step": {"fullname": "NDNT.NDN.NDN.training_step", "modulename": "NDNT.NDN", "qualname": "NDN.training_step", "kind": "function", "doc": "<p>Performs a single training step.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>batch (dict):</strong>  A dictionary containing the input data batch.</li>\n<li><strong>batch_idx (int, optional):</strong>  The index of the current batch. Defaults to None.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>dict: A dictionary containing the loss values for training, total loss, and regularization loss.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">batch</span>, </span><span class=\"param\"><span class=\"n\">batch_idx</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.NDN.NDN.validation_step": {"fullname": "NDNT.NDN.NDN.validation_step", "modulename": "NDNT.NDN", "qualname": "NDN.validation_step", "kind": "function", "doc": "<p>Performs a validation step for the model.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>batch (dict):</strong>  A dictionary containing the input batch data.</li>\n<li><strong>batch_idx (int, optional):</strong>  The index of the current batch. Defaults to None.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>dict: A dictionary containing the computed losses for the validation step.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">batch</span>, </span><span class=\"param\"><span class=\"n\">batch_idx</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.NDN.NDN.compute_reg_loss": {"fullname": "NDNT.NDN.NDN.compute_reg_loss", "modulename": "NDNT.NDN", "qualname": "NDN.compute_reg_loss", "kind": "function", "doc": "<p>Computes the regularization loss for the NDNT model.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li>None</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>The total regularization loss.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.NDN.NDN.get_trainer": {"fullname": "NDNT.NDN.NDN.get_trainer", "modulename": "NDNT.NDN", "qualname": "NDN.get_trainer", "kind": "function", "doc": "<p>Returns a trainer object.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>version (str):</strong>  The version of the trainer.</li>\n<li><strong>save_dir (str):</strong>  The directory to save the trainer checkpoints.</li>\n<li><strong>name (str):</strong>  The name of the trainer.</li>\n<li><strong>optimizer (torch.optim.Optimizer):</strong>  The optimizer to use for training.</li>\n<li><strong>scheduler (torch.optim.lr_scheduler._LRScheduler):</strong>  The scheduler to use for adjusting the learning rate during training.</li>\n<li><strong>device (str or torch.device):</strong>  The device to use for training. If not specified, it will default to 'cuda:0' if available, otherwise 'cpu'.</li>\n<li><strong>optimizer_type (str):</strong>  The type of optimizer to use. Default is 'AdamW'.</li>\n<li><strong>early_stopping (bool):</strong>  Whether to use early stopping during training. Default is False.</li>\n<li><strong>early_stopping_patience (int):</strong>  The number of epochs to wait for improvement before stopping early. Default is 5.</li>\n<li><strong>early_stopping_delta (float):</strong>  The minimum change in the monitored metric to be considered as improvement. Default is 0.0.</li>\n<li><strong>optimize_graph (bool):</strong>  Whether to optimize the computation graph during training. Default is False.</li>\n<li><strong>**kwargs:</strong>  Additional keyword arguments to be passed to the trainer.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>trainer (Trainer): The trainer object.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">version</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">save_dir</span><span class=\"o\">=</span><span class=\"s1\">&#39;./checkpoints&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;jnkname&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">optimizer</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">scheduler</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">device</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">optimizer_type</span><span class=\"o\">=</span><span class=\"s1\">&#39;AdamW&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">early_stopping</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">early_stopping_patience</span><span class=\"o\">=</span><span class=\"mi\">5</span>,</span><span class=\"param\">\t<span class=\"n\">early_stopping_delta</span><span class=\"o\">=</span><span class=\"mf\">0.0</span>,</span><span class=\"param\">\t<span class=\"n\">optimize_graph</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.NDN.NDN.get_dataloaders": {"fullname": "NDNT.NDN.NDN.get_dataloaders", "modulename": "NDNT.NDN", "qualname": "NDN.get_dataloaders", "kind": "function", "doc": "<p>Creates dataloaders for training and validation.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>dataset (Dataset):</strong>  The dataset to use for training and validation.</li>\n<li><strong>train_inds (list):</strong>  The indices of the training data.</li>\n<li><strong>val_inds (list):</strong>  The indices of the validation data.</li>\n<li><strong>batch_size (int):</strong>  The batch size to use.</li>\n<li><strong>num_workers (int):</strong>  The number of workers to use for data loading.</li>\n<li><strong>is_multiexp (bool):</strong>  Whether the dataset is a multi-experiment dataset.</li>\n<li><strong>full_batch (bool):</strong>  Whether to use the full batch for training.</li>\n<li><strong>pin_memory (bool):</strong>  Whether to pin memory for faster data loading.</li>\n<li><strong>data_seed (int):</strong>  The seed to use for the data loader.</li>\n<li><strong>**kwargs:</strong>  Additional keyword arguments.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>train_dl (DataLoader): The training data loader.\n  valid_dl (DataLoader): The validation data loader.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">dataset</span>,</span><span class=\"param\">\t<span class=\"n\">train_inds</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">val_inds</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">batch_size</span><span class=\"o\">=</span><span class=\"mi\">10</span>,</span><span class=\"param\">\t<span class=\"n\">num_workers</span><span class=\"o\">=</span><span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">is_multiexp</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">full_batch</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">pin_memory</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">data_seed</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.NDN.NDN.get_optimizer": {"fullname": "NDNT.NDN.NDN.get_optimizer", "modulename": "NDNT.NDN", "qualname": "NDN.get_optimizer", "kind": "function", "doc": "<p>Returns an optimizer object.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>optimizer_type (str):</strong>  The type of optimizer to use. Default is 'AdamW'.</li>\n<li><strong>learning_rate (float):</strong>  The learning rate to use. Default is 0.001.</li>\n<li><strong>weight_decay (float):</strong>  The weight decay to use. Default is 0.01.</li>\n<li><strong>amsgrad (bool):</strong>  Whether to use the AMSGrad variant of Adam. Default is False.</li>\n<li><strong>betas (tuple):</strong>  The beta values to use for the optimizer. Default is (0.9, 0.999).</li>\n<li><strong>max_iter (int):</strong>  The maximum number of iterations for the LBFGS optimizer. Default is 10.</li>\n<li><strong>history_size (int):</strong>  The history size to use for the LBFGS optimizer. Default is 4.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>optimizer (torch.optim.Optimizer): The optimizer object.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">optimizer_type</span><span class=\"o\">=</span><span class=\"s1\">&#39;AdamW&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">learning_rate</span><span class=\"o\">=</span><span class=\"mf\">0.001</span>,</span><span class=\"param\">\t<span class=\"n\">weight_decay</span><span class=\"o\">=</span><span class=\"mf\">0.01</span>,</span><span class=\"param\">\t<span class=\"n\">amsgrad</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">betas</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mf\">0.9</span><span class=\"p\">,</span> <span class=\"mf\">0.999</span><span class=\"p\">)</span>,</span><span class=\"param\">\t<span class=\"n\">max_iter</span><span class=\"o\">=</span><span class=\"mi\">10</span>,</span><span class=\"param\">\t<span class=\"n\">history_size</span><span class=\"o\">=</span><span class=\"mi\">4</span>,</span><span class=\"param\">\t<span class=\"n\">tolerance_change</span><span class=\"o\">=</span><span class=\"mf\">0.001</span>,</span><span class=\"param\">\t<span class=\"n\">tolerance_grad</span><span class=\"o\">=</span><span class=\"mf\">0.0001</span>,</span><span class=\"param\">\t<span class=\"n\">line_search_fn</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.NDN.NDN.prepare_regularization": {"fullname": "NDNT.NDN.NDN.prepare_regularization", "modulename": "NDNT.NDN", "qualname": "NDN.prepare_regularization", "kind": "function", "doc": "<p>Prepares the regularization for the model.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>None</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.NDN.NDN.fit": {"fullname": "NDNT.NDN.NDN.fit", "modulename": "NDNT.NDN", "qualname": "NDN.fit", "kind": "function", "doc": "<p>Trains the model using the specified dataset.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>dataset (Dataset):</strong>  The dataset to use for training and validation.</li>\n<li><strong>train_inds (list):</strong>  The indices of the training data.</li>\n<li><strong>val_inds (list):</strong>  The indices of the validation data.</li>\n<li><strong>speckledXV (bool):</strong>  Whether to use speckled cross-validation. Default is False.</li>\n<li><strong>seed (int):</strong>  The seed to use for reproducibility.</li>\n<li><strong>save_dir (str):</strong>  The directory to save the model checkpoints.</li>\n<li><strong>version (int):</strong>  The version of the trainer.</li>\n<li><strong>optimizer (torch.optim.Optimizer):</strong>  The optimizer to use for training.</li>\n<li><strong>scheduler (torch.optim.lr_scheduler._LRScheduler):</strong>  The scheduler to use for adjusting the learning rate during training.</li>\n<li><strong>batch_size (int):</strong>  The batch size to use.</li>\n<li><strong>force_dict_training (bool):</strong>  Whether to force dictionary-based training. Default is False.</li>\n<li><strong>block_sample (bool):</strong>  Whether to use block sampling. Default is None.</li>\n<li><strong>reuse_trainer (bool):</strong>  Whether to reuse the trainer. Default is False.</li>\n<li><strong>device (str or torch.device):</strong>  The device to use for training. Default is None.</li>\n<li><strong>**kwargs:</strong>  Additional keyword arguments.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>None</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>AssertionError:</strong>  If batch_size is not specified.</li>\n</ul>\n\n<h6 id=\"notes\">Notes:</h6>\n\n<blockquote>\n  <p>The fit method is the main training loop for the model.\n  Steps:</p>\n  \n  <ol>\n  <li>Get a trainer and dataloaders</li>\n  <li>Prepare regularizers</li>\n  <li>Run the main fit loop from the trainer, checkpoint, and save model</li>\n  </ol>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">dataset</span>,</span><span class=\"param\">\t<span class=\"n\">train_inds</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">val_inds</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">speckledXV</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">seed</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">save_dir</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">version</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">optimizer</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">scheduler</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">batch_size</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">force_dict_training</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">block_sample</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">reuse_trainer</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">device</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.NDN.NDN.fit_dl": {"fullname": "NDNT.NDN.NDN.fit_dl", "modulename": "NDNT.NDN", "qualname": "NDN.fit_dl", "kind": "function", "doc": "<p>Fits the model using deep learning training.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>train_ds (Dataset):</strong>  The training dataset.</li>\n<li><strong>val_ds (Dataset):</strong>  The validation dataset.</li>\n<li><strong>seed (int, optional):</strong>  The seed for data and optimization. Defaults to None.</li>\n<li><strong>save_dir (str, optional):</strong>  The directory to save the model. Defaults to None.</li>\n<li><strong>version (int, optional):</strong>  The version of the model. Defaults to None.</li>\n<li><strong>name (str, optional):</strong>  The name of the model. Defaults to None.</li>\n<li><strong>optimizer (Optimizer, optional):</strong>  The optimizer for training. Defaults to None.</li>\n<li><strong>scheduler (Scheduler, optional):</strong>  The scheduler for training. Defaults to None.</li>\n<li><strong>batch_size (int, optional):</strong>  The batch size for training. Defaults to None.</li>\n<li><strong>num_workers (int, optional):</strong>  The number of workers for data loading. Defaults to 0.</li>\n<li><strong>force_dict_training (bool, optional):</strong>  Whether to force dictionary-based training instead of using data loaders for LBFGS. Defaults to False.</li>\n<li><strong>device (str, optional):</strong>  The device to use for training. Defaults to None.</li>\n<li><strong>**kwargs:</strong>  Additional keyword arguments.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>None</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>AssertionError:</strong>  If batch_size is not provided.</li>\n</ul>\n\n<h6 id=\"notes\">Notes:</h6>\n\n<blockquote>\n  <p>This is the main training loop.\n  Steps:</p>\n  \n  <ol>\n  <li>Get a trainer and data loaders.</li>\n  <li>Prepare regularizers.</li>\n  <li>Run the main fit loop from the trainer, checkpoint, and save the model.</li>\n  </ol>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">train_ds</span>,</span><span class=\"param\">\t<span class=\"n\">val_ds</span>,</span><span class=\"param\">\t<span class=\"n\">seed</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">save_dir</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">version</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">optimizer</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">scheduler</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">batch_size</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">num_workers</span><span class=\"o\">=</span><span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">force_dict_training</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">device</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.NDN.NDN.initialize_loss": {"fullname": "NDNT.NDN.NDN.initialize_loss", "modulename": "NDNT.NDN", "qualname": "NDN.initialize_loss", "kind": "function", "doc": "<p>Interacts with loss_module to set loss flags and/or pass in dataset information.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>dataset (optional):</strong>  The dataset to be used for computing average batch size and unit weights.</li>\n<li><strong>batch_size (optional):</strong>  The batch size to be used for computing average batch size.</li>\n<li><strong>data_inds (optional):</strong>  The indices of the data in the dataset to be used.</li>\n<li><strong>batch_weighting (optional):</strong>  The batch weighting value to be set. Must be one of [-1, 0, 1, 2].</li>\n<li><strong>unit_weighting (optional):</strong>  The unit weighting value to be set.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>None</p>\n</blockquote>\n\n<h6 id=\"notes\">Notes:</h6>\n\n<blockquote>\n  <p>Without a dataset, this method will only set the flags 'batch_weighting' and 'unit_weighting'.\n  With a dataset, this method will set 'av_batch_size' and 'unit_weights' based on the average rate.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">dataset</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">batch_size</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">data_inds</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">batch_weighting</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">unit_weighting</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.NDN.NDN.compute_average_responses": {"fullname": "NDNT.NDN.NDN.compute_average_responses", "modulename": "NDNT.NDN", "qualname": "NDN.compute_average_responses", "kind": "function", "doc": "<p>Computes the average responses for the specified dataset.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>dataset:</strong>  The dataset to use for computing the average responses.</li>\n<li><strong>data_inds:</strong>  The indices of the data in the dataset.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>ndarray: The average responses.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">dataset</span>, </span><span class=\"param\"><span class=\"n\">data_inds</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.NDN.NDN.initialize_biases": {"fullname": "NDNT.NDN.NDN.initialize_biases", "modulename": "NDNT.NDN", "qualname": "NDN.initialize_biases", "kind": "function", "doc": "<p>Initializes the biases for the specified dataset.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>dataset:</strong>  The dataset to use for initializing the biases.</li>\n<li><strong>data_inds:</strong>  The indices of the data in the dataset.</li>\n<li><strong>ffnet_target:</strong>  The target feedforward network.</li>\n<li><strong>layer_target:</strong>  The target layer.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>None</p>\n</blockquote>\n\n<h6 id=\"notes\">Notes:</h6>\n\n<blockquote>\n  <p>This method initializes the biases for the specified feedforward network and layer using the average responses.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">dataset</span>, </span><span class=\"param\"><span class=\"n\">data_inds</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">ffnet_target</span><span class=\"o\">=-</span><span class=\"mi\">1</span>, </span><span class=\"param\"><span class=\"n\">layer_target</span><span class=\"o\">=-</span><span class=\"mi\">1</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.NDN.NDN.eval_models": {"fullname": "NDNT.NDN.NDN.eval_models", "modulename": "NDNT.NDN", "qualname": "NDN.eval_models", "kind": "function", "doc": "<p>Evaluate the neural network models on the given data.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>data (dict or Dataset):</strong>  The input data to evaluate the models on. If a dictionary is provided, it is assumed to be a single sample. If a Dataset object is provided, it is assumed to contain multiple samples.</li>\n<li><strong>data_inds (list, optional):</strong>  The indices of the data samples to evaluate. Only applicable if <code>data</code> is a Dataset object. Defaults to None.</li>\n<li><strong>bits (bool, optional):</strong>  If True, the result will be returned in units of bits/spike. Defaults to False.</li>\n<li><strong>null_adjusted (bool, optional):</strong>  If True, the null-adjusted log likelihood will be calculated. Defaults to False.</li>\n<li><strong>speckledXV (bool, optional):</strong>  If True, speckled cross-validation will be used. Defaults to False.</li>\n<li><strong>train_val (int, optional):</strong>  The train/validation split ratio. Only applicable if <code>speckledXV</code> is True. Defaults to 1.</li>\n<li><strong>batch_size (int, optional):</strong>  The batch size for data loading. Defaults to 1000.</li>\n<li><strong>num_workers (int, optional):</strong>  The number of worker processes for data loading. Defaults to 0.</li>\n<li><strong>device (torch.device, optional):</strong>  The device to perform the evaluation on. If None, the device of the model will be used. Defaults to None.</li>\n<li><strong>**kwargs:</strong>  Additional keyword arguments.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>numpy.ndarray: The evaluated log likelihood values for each neuron.</p>\n</blockquote>\n\n<h6 id=\"note\">Note:</h6>\n\n<blockquote>\n  <p>If <code>data</code> is a dictionary, it is assumed to contain the following keys:\n      'robs': The observed responses.\n      'Mval': The validation mask.\n      'dfs': The data filters.\n  If <code>data</code> is a Dataset object, it is assumed to have the following attributes:\n      'robs': The observed responses.\n      'dfs': The data filters.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>AssertionError:</strong>  If <code>data_inds</code> is not None when <code>data</code> is a dictionary.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">data</span>,</span><span class=\"param\">\t<span class=\"n\">data_inds</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">bits</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">null_adjusted</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">speckledXV</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">train_val</span><span class=\"o\">=</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">batch_size</span><span class=\"o\">=</span><span class=\"mi\">1000</span>,</span><span class=\"param\">\t<span class=\"n\">num_workers</span><span class=\"o\">=</span><span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">device</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.NDN.NDN.generate_predictions": {"fullname": "NDNT.NDN.NDN.generate_predictions", "modulename": "NDNT.NDN", "qualname": "NDN.generate_predictions", "kind": "function", "doc": "<p>Generate predictions for a dataset.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>data:</strong>  The dataset.</li>\n<li><strong>data_inds:</strong>  The indices to use from the dataset.</li>\n<li><strong>block_inds:</strong>  The blocks to use from the dataset (if block_sample).</li>\n<li><strong>batch_size:</strong>  The batch size to use for processing. Reduce if running out of memory.</li>\n<li><strong>num_lags:</strong>  The number of lags to use for prediction.</li>\n<li><strong>ffnet_target:</strong>  The index of the feedforward network to use for prediction. Defaults to None.</li>\n<li><strong>device:</strong>  The device to use for prediction.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>torch.Tensor: The predictions array.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">data</span>,</span><span class=\"param\">\t<span class=\"n\">data_inds</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">block_inds</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">batch_size</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">num_lags</span><span class=\"o\">=</span><span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">ffnet_target</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">device</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.NDN.NDN.change_loss": {"fullname": "NDNT.NDN.NDN.change_loss", "modulename": "NDNT.NDN", "qualname": "NDN.change_loss", "kind": "function", "doc": "<p>Change the loss function for the model.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>new_loss_type:</strong>  The new loss type.</li>\n<li><strong>dataset:</strong>  The dataset to use for initializing the loss.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>None</p>\n</blockquote>\n\n<h6 id=\"notes\">Notes:</h6>\n\n<blockquote>\n  <p>This method swaps in a new loss module for the model.\n  If a dataset is provided, the loss will be initialized during the fit.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">new_loss_type</span>, </span><span class=\"param\"><span class=\"n\">dataset</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.NDN.NDN.get_weights": {"fullname": "NDNT.NDN.NDN.get_weights", "modulename": "NDNT.NDN", "qualname": "NDN.get_weights", "kind": "function", "doc": "<p>Get the weights for the specified feedforward network.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>ffnet_target:</strong>  The target feedforward network.</li>\n<li><strong>**kwargs:</strong>  Additional keyword arguments.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>list: The weights for the specified feedforward network.</p>\n</blockquote>\n\n<h6 id=\"notes\">Notes:</h6>\n\n<blockquote>\n  <p>This method is passed down to the layer call with optional arguments conveyed.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">ffnet_target</span><span class=\"o\">=</span><span class=\"mi\">0</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.NDN.NDN.get_readout_locations": {"fullname": "NDNT.NDN.NDN.get_readout_locations", "modulename": "NDNT.NDN", "qualname": "NDN.get_readout_locations", "kind": "function", "doc": "<p>Get the readout locations and sigmas.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>list: The readout locations and sigmas.</p>\n</blockquote>\n\n<h6 id=\"notes\">Notes:</h6>\n\n<blockquote>\n  <p>This method currently returns a list of readout locations and sigmas set in the readout network.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.NDN.NDN.passive_readout": {"fullname": "NDNT.NDN.NDN.passive_readout", "modulename": "NDNT.NDN", "qualname": "NDN.passive_readout", "kind": "function", "doc": "<p>Applies the passive readout function to the readout layer.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>None</p>\n</blockquote>\n\n<h6 id=\"notes\">Notes:</h6>\n\n<blockquote>\n  <p>This method finds the readout layer and applies its passive_readout function.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.NDN.NDN.list_parameters": {"fullname": "NDNT.NDN.NDN.list_parameters", "modulename": "NDNT.NDN", "qualname": "NDN.list_parameters", "kind": "function", "doc": "<p>List the parameters for the specified feedforward network and layer.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>ffnet_target:</strong>  The target feedforward network.</li>\n<li><strong>layer_target:</strong>  The target layer.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>None</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">ffnet_target</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">layer_target</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.NDN.NDN.set_parameters": {"fullname": "NDNT.NDN.NDN.set_parameters", "modulename": "NDNT.NDN", "qualname": "NDN.set_parameters", "kind": "function", "doc": "<p>Set the parameters for the specified feedforward network and layer.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>ffnet_target:</strong>  The target feedforward network.</li>\n<li><strong>layer_target:</strong>  The target layer.</li>\n<li><strong>name:</strong>  The name of the parameter.</li>\n<li><strong>val:</strong>  The value to set the parameter to.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>None</p>\n</blockquote>\n\n<h6 id=\"notes\">Notes:</h6>\n\n<blockquote>\n  <p>This method sets the parameters for the specified feedforward network and layer.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">ffnet_target</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">layer_target</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">val</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.NDN.NDN.set_reg_val": {"fullname": "NDNT.NDN.NDN.set_reg_val", "modulename": "NDNT.NDN", "qualname": "NDN.set_reg_val", "kind": "function", "doc": "<p>Set the regularization values for the specified feedforward network and layer.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>reg_type:</strong>  The regularization type.</li>\n<li><strong>reg_val:</strong>  The regularization value.</li>\n<li><strong>ffnet_target:</strong>  The target feedforward network.</li>\n<li><strong>layer_target:</strong>  The target layer.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>None</p>\n</blockquote>\n\n<h6 id=\"notes\">Notes:</h6>\n\n<blockquote>\n  <p>This method sets the regularization values for the specified feedforward network and layer.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">reg_type</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">reg_val</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">ffnet_target</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">layer_target</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.NDN.NDN.plot_filters": {"fullname": "NDNT.NDN.NDN.plot_filters", "modulename": "NDNT.NDN", "qualname": "NDN.plot_filters", "kind": "function", "doc": "<p>Plot the filters for the specified feedforward network.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>ffnet_target:</strong>  The target feedforward network.</li>\n<li><strong>**kwargs:</strong>  Additional keyword arguments.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>None</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">ffnet_target</span><span class=\"o\">=</span><span class=\"mi\">0</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.NDN.NDN.save_model_zip": {"fullname": "NDNT.NDN.NDN.save_model_zip", "modulename": "NDNT.NDN", "qualname": "NDN.save_model_zip", "kind": "function", "doc": "<p>Save the model as a zip file containing a json file with the model parameters\nand a .ckpt file with the state_dict.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>filename:</strong>  The name of the zip file to save.</li>\n<li><strong>ffnet_list:</strong>  The list of feedforward networks.</li>\n<li><strong>ffnet_out:</strong>  The output layer of the feedforward network.</li>\n<li><strong>loss_type:</strong>  The loss type.</li>\n<li><strong>model_name:</strong>  The name of the model.</li>\n<li><strong>working_dir:</strong>  The working directory.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>None</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">filename</span>,</span><span class=\"param\">\t<span class=\"n\">ffnet_list</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">ffnet_out</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">loss_type</span><span class=\"o\">=</span><span class=\"s1\">&#39;poisson&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">model_name</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">working_dir</span><span class=\"o\">=</span><span class=\"s1\">&#39;./checkpoints&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.NDN.NDN.load_model_zip": {"fullname": "NDNT.NDN.NDN.load_model_zip", "modulename": "NDNT.NDN", "qualname": "NDN.load_model_zip", "kind": "function", "doc": "<p>Load the model from a zip file containing a json file with the model parameters\nand a .ckpt file with the state_dict.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>filename:</strong>  The name of the zip file to load.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>NDN: The loaded model.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">filename</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.NDN.NDN.save_model": {"fullname": "NDNT.NDN.NDN.save_model", "modulename": "NDNT.NDN", "qualname": "NDN.save_model", "kind": "function", "doc": "<p>Models will be saved using dill/pickle in as the filename, which can contain\nthe directory information. Will be put in the CPU first</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>filename:</strong>  The name of the file to save.</li>\n<li><strong>pt:</strong>  Whether to use torch.save instead of dill.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>None</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">filename</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">pt</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.NDN.NDN.save_model_chk": {"fullname": "NDNT.NDN.NDN.save_model_chk", "modulename": "NDNT.NDN", "qualname": "NDN.save_model_chk", "kind": "function", "doc": "<p>Models will be saved using dill/pickle in the directory above the version\ndirectories, which happen to be under the model-name itself. This assumes the\ncurrent save-directory (notebook specific) and the model name</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>filename:</strong>  The name of the file to save.</li>\n<li><strong>alt_dirname:</strong>  The alternate directory to save the file.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>None</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">filename</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">alt_dirname</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.NDN.NDN.get_null_adjusted_ll": {"fullname": "NDNT.NDN.NDN.get_null_adjusted_ll", "modulename": "NDNT.NDN", "qualname": "NDN.get_null_adjusted_ll", "kind": "function", "doc": "<p>Get the null-adjusted log likelihood.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>sample:</strong>  The sample data from a dataset.</li>\n<li><strong>bits:</strong>  Whether to return the result in units of bits/spike.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>float: The null-adjusted log likelihood.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">sample</span>, </span><span class=\"param\"><span class=\"n\">bits</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.NDN.NDN.get_activations": {"fullname": "NDNT.NDN.NDN.get_activations", "modulename": "NDNT.NDN", "qualname": "NDN.get_activations", "kind": "function", "doc": "<p>Returns the inputs and outputs of a specified ffnet and layer</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>sample:</strong>  dictionary of sample data from a dataset</li>\n<li><strong>ffnet_target:</strong>  which network to target (default: 0)</li>\n<li><strong>layer_target:</strong>  which layer to target (default: 0)</li>\n<li><strong>NL:</strong>  get activations using the nonlinearity as the module target</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>activations dict\n  with keys:\n      'input' : input to layer\n      'output' : output of layer</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">sample</span>, </span><span class=\"param\"><span class=\"n\">ffnet_target</span><span class=\"o\">=</span><span class=\"mi\">0</span>, </span><span class=\"param\"><span class=\"n\">layer_target</span><span class=\"o\">=</span><span class=\"mi\">0</span>, </span><span class=\"param\"><span class=\"n\">NL</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.NDN.NDN.device": {"fullname": "NDNT.NDN.NDN.device", "modulename": "NDNT.NDN", "qualname": "NDN.device", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.NDN.NDN.load_model": {"fullname": "NDNT.NDN.NDN.load_model", "modulename": "NDNT.NDN", "qualname": "NDN.load_model", "kind": "function", "doc": "<p>Load a pickled model from disk.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>filename:</strong>  The path and filename.</li>\n<li><strong>pt:</strong>  Whether to use torch.load instead of dill.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>model: The loaded model on CPU.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">filename</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">pt</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.NDN.NDN.load_model_chk": {"fullname": "NDNT.NDN.NDN.load_model_chk", "modulename": "NDNT.NDN", "qualname": "NDN.load_model_chk", "kind": "function", "doc": "<p>Load a model from disk.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>checkpoint_path:</strong>  The path to the directory containing model checkpoints.</li>\n<li><strong>model_name:</strong>  The name of the model (from model.model_name).</li>\n<li><strong>version:</strong>  The checkpoint version (default: best).</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>model: The loaded model.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">checkpoint_path</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">model_name</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">version</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.NDN.NDN.model_string": {"fullname": "NDNT.NDN.NDN.model_string", "modulename": "NDNT.NDN", "qualname": "NDN.model_string", "kind": "function", "doc": "<p>Automated way to name model</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>str: The model name.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules": {"fullname": "NDNT.modules", "modulename": "NDNT.modules", "kind": "module", "doc": "<p></p>\n"}, "NDNT.modules.activations": {"fullname": "NDNT.modules.activations", "modulename": "NDNT.modules.activations", "kind": "module", "doc": "<p></p>\n"}, "NDNT.modules.activations.adaptive_elu": {"fullname": "NDNT.modules.activations.adaptive_elu", "modulename": "NDNT.modules.activations", "qualname": "adaptive_elu", "kind": "function", "doc": "<p>Exponential Linear Unit shifted by user specified values.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>x (torch.Tensor):</strong>  input tensor</li>\n<li><strong>xshift (float):</strong>  shift in x direction</li>\n<li><strong>yshift (float):</strong>  shift in y direction</li>\n<li><strong>inplace (bool):</strong>  whether to modify the input tensor in place</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>torch.Tensor: output tensor</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span>, </span><span class=\"param\"><span class=\"n\">xshift</span>, </span><span class=\"param\"><span class=\"n\">yshift</span>, </span><span class=\"param\"><span class=\"n\">inplace</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.activations.Square": {"fullname": "NDNT.modules.activations.Square", "modulename": "NDNT.modules.activations", "qualname": "Square", "kind": "class", "doc": "<p>Square activation function.</p>\n", "bases": "torch.nn.modules.module.Module"}, "NDNT.modules.activations.Square.__init__": {"fullname": "NDNT.modules.activations.Square.__init__", "modulename": "NDNT.modules.activations", "qualname": "Square.__init__", "kind": "function", "doc": "<p>Initializes internal Module state, shared by both nn.Module and ScriptModule.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "NDNT.modules.activations.Square.forward": {"fullname": "NDNT.modules.activations.Square.forward", "modulename": "NDNT.modules.activations", "qualname": "Square.forward", "kind": "function", "doc": "<p>Forward pass of the square activation function.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>x (torch.Tensor):</strong>  input tensor</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>torch.Tensor: output tensor</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.activations.AdaptiveELU": {"fullname": "NDNT.modules.activations.AdaptiveELU", "modulename": "NDNT.modules.activations", "qualname": "AdaptiveELU", "kind": "class", "doc": "<p>Exponential Linear Unit shifted by user specified values.\nThis helps to ensure the output to stay positive.</p>\n", "bases": "torch.nn.modules.module.Module"}, "NDNT.modules.activations.AdaptiveELU.__init__": {"fullname": "NDNT.modules.activations.AdaptiveELU.__init__", "modulename": "NDNT.modules.activations", "qualname": "AdaptiveELU.__init__", "kind": "function", "doc": "<p>Initialize the AdaptiveELU activation function.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>xshift (float):</strong>  shift in x direction</li>\n<li><strong>yshift (float):</strong>  shift in y direction</li>\n<li><strong>inplace (bool):</strong>  whether to modify the input tensor in place</li>\n<li><strong>**kwargs:</strong>  additional keyword arguments</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>None</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">xshift</span><span class=\"o\">=</span><span class=\"mf\">0.0</span>, </span><span class=\"param\"><span class=\"n\">yshift</span><span class=\"o\">=</span><span class=\"mf\">1.0</span>, </span><span class=\"param\"><span class=\"n\">inplace</span><span class=\"o\">=</span><span class=\"kc\">True</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "NDNT.modules.activations.AdaptiveELU.xshift": {"fullname": "NDNT.modules.activations.AdaptiveELU.xshift", "modulename": "NDNT.modules.activations", "qualname": "AdaptiveELU.xshift", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.activations.AdaptiveELU.yshift": {"fullname": "NDNT.modules.activations.AdaptiveELU.yshift", "modulename": "NDNT.modules.activations", "qualname": "AdaptiveELU.yshift", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.activations.AdaptiveELU.inplace": {"fullname": "NDNT.modules.activations.AdaptiveELU.inplace", "modulename": "NDNT.modules.activations", "qualname": "AdaptiveELU.inplace", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.activations.AdaptiveELU.forward": {"fullname": "NDNT.modules.activations.AdaptiveELU.forward", "modulename": "NDNT.modules.activations", "qualname": "AdaptiveELU.forward", "kind": "function", "doc": "<p>Forward pass of the AdaptiveELU activation function.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>x (torch.Tensor):</strong>  input tensor</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>torch.Tensor: output tensor</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.activations.NLtypes": {"fullname": "NDNT.modules.activations.NLtypes", "modulename": "NDNT.modules.activations", "qualname": "NLtypes", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;lin&#x27;: None, &#x27;relu&#x27;: ReLU(), &#x27;elu&#x27;: AdaptiveELU(), &#x27;square&#x27;: Square(), &#x27;softplus&#x27;: Softplus(beta=1, threshold=20), &#x27;tanh&#x27;: Tanh(), &#x27;sigmoid&#x27;: Sigmoid(), &#x27;gelu&#x27;: GELU(approximate=&#x27;none&#x27;)}"}, "NDNT.modules.activity_regularization": {"fullname": "NDNT.modules.activity_regularization", "modulename": "NDNT.modules.activity_regularization", "kind": "module", "doc": "<p></p>\n"}, "NDNT.modules.activity_regularization.ActivityRegularization": {"fullname": "NDNT.modules.activity_regularization.ActivityRegularization", "modulename": "NDNT.modules.activity_regularization", "qualname": "ActivityRegularization", "kind": "class", "doc": "<p></p>\n"}, "NDNT.modules.activity_regularization.ActivityRegularization.__init__": {"fullname": "NDNT.modules.activity_regularization.ActivityRegularization.__init__", "modulename": "NDNT.modules.activity_regularization", "qualname": "ActivityRegularization.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">reg_vals</span></span>)</span>"}, "NDNT.modules.activity_regularization.ActivityRegularization.reg_vals": {"fullname": "NDNT.modules.activity_regularization.ActivityRegularization.reg_vals", "modulename": "NDNT.modules.activity_regularization", "qualname": "ActivityRegularization.reg_vals", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.activity_regularization.ActivityRegularization.activity": {"fullname": "NDNT.modules.activity_regularization.ActivityRegularization.activity", "modulename": "NDNT.modules.activity_regularization", "qualname": "ActivityRegularization.activity", "kind": "function", "doc": "<p>Activity regularization loss function.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>layer_output (torch.Tensor):</strong>  output of a layer</li>\n<li><strong>alpha (float):</strong>  (regularization strength)</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>torch.Tensor (regularization loss)</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">layer_output</span>, </span><span class=\"param\"><span class=\"n\">alpha</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.activity_regularization.ActivityRegularization.nonneg": {"fullname": "NDNT.modules.activity_regularization.ActivityRegularization.nonneg", "modulename": "NDNT.modules.activity_regularization", "qualname": "ActivityRegularization.nonneg", "kind": "function", "doc": "<p>Non-negative regularization loss function.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>layer_output (torch.Tensor):</strong>  output of a layer</li>\n<li><strong>alpha (float):</strong>  (regularization strength)</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>torch.Tensor (regularization loss)</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">layer_output</span>, </span><span class=\"param\"><span class=\"n\">alpha</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.activity_regularization.ActivityRegularization.regularize": {"fullname": "NDNT.modules.activity_regularization.ActivityRegularization.regularize", "modulename": "NDNT.modules.activity_regularization", "qualname": "ActivityRegularization.regularize", "kind": "function", "doc": "<p>Regularization loss function.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>layer_output (torch.Tensor):</strong>  output of a layer</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>torch.Tensor (regularization loss)</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">layer_output</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.experiment_sampler": {"fullname": "NDNT.modules.experiment_sampler", "modulename": "NDNT.modules.experiment_sampler", "kind": "module", "doc": "<p></p>\n"}, "NDNT.modules.experiment_sampler.ExperimentBatchGenerator": {"fullname": "NDNT.modules.experiment_sampler.ExperimentBatchGenerator", "modulename": "NDNT.modules.experiment_sampler", "qualname": "ExperimentBatchGenerator", "kind": "class", "doc": "<p>Generator that returns batches of timepoints for a single experiment.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>timepoints (list):</strong>  list of timepoints to sample from</li>\n<li><strong>batch_size (int):</strong>  size of the batch to sample</li>\n<li><strong>shuffle (bool):</strong>  whether to shuffle the batches</li>\n<li><strong>random_seed (int):</strong>  random seed to use for shuffling</li>\n</ul>\n"}, "NDNT.modules.experiment_sampler.ExperimentBatchGenerator.__init__": {"fullname": "NDNT.modules.experiment_sampler.ExperimentBatchGenerator.__init__", "modulename": "NDNT.modules.experiment_sampler", "qualname": "ExperimentBatchGenerator.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">timepoints</span><span class=\"p\">:</span> <span class=\"nb\">list</span>,</span><span class=\"param\">\t<span class=\"n\">batch_size</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">shuffle</span><span class=\"p\">:</span> <span class=\"nb\">bool</span>,</span><span class=\"param\">\t<span class=\"n\">random_seed</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, "NDNT.modules.experiment_sampler.ExperimentBatchGenerator.batches": {"fullname": "NDNT.modules.experiment_sampler.ExperimentBatchGenerator.batches", "modulename": "NDNT.modules.experiment_sampler", "qualname": "ExperimentBatchGenerator.batches", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.experiment_sampler.ExperimentBatchGenerator.current_batch_index": {"fullname": "NDNT.modules.experiment_sampler.ExperimentBatchGenerator.current_batch_index", "modulename": "NDNT.modules.experiment_sampler", "qualname": "ExperimentBatchGenerator.current_batch_index", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.experiment_sampler.ExperimentBatchGenerator.next": {"fullname": "NDNT.modules.experiment_sampler.ExperimentBatchGenerator.next", "modulename": "NDNT.modules.experiment_sampler", "qualname": "ExperimentBatchGenerator.next", "kind": "function", "doc": "<p>Next method of the generator.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>the next batch</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span>:</span></span>", "funcdef": "def"}, "NDNT.modules.experiment_sampler.ExperimentBatchIterator": {"fullname": "NDNT.modules.experiment_sampler.ExperimentBatchIterator", "modulename": "NDNT.modules.experiment_sampler", "qualname": "ExperimentBatchIterator", "kind": "class", "doc": "<p>Iterator that returns batches of timepoints across experiments.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>exp_to_time (dict):</strong>  map from experiment indices to timepoints</li>\n<li><strong>exp_batch_sizes (list):</strong>  list of batch sizes for each experiment</li>\n<li><strong>shuffle (bool):</strong>  whether to shuffle the batches</li>\n<li><strong>random_seed (int):</strong>  random seed to use for shuffling</li>\n</ul>\n", "bases": "typing.Iterator"}, "NDNT.modules.experiment_sampler.ExperimentBatchIterator.__init__": {"fullname": "NDNT.modules.experiment_sampler.ExperimentBatchIterator.__init__", "modulename": "NDNT.modules.experiment_sampler", "qualname": "ExperimentBatchIterator.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">exp_to_time</span>, </span><span class=\"param\"><span class=\"n\">exp_batch_sizes</span>, </span><span class=\"param\"><span class=\"n\">shuffle</span><span class=\"p\">:</span> <span class=\"nb\">bool</span>, </span><span class=\"param\"><span class=\"n\">random_seed</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, "NDNT.modules.experiment_sampler.ExperimentBatchIterator.exp_batch_generators": {"fullname": "NDNT.modules.experiment_sampler.ExperimentBatchIterator.exp_batch_generators", "modulename": "NDNT.modules.experiment_sampler", "qualname": "ExperimentBatchIterator.exp_batch_generators", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.experiment_sampler.construct_exp_to_time": {"fullname": "NDNT.modules.experiment_sampler.construct_exp_to_time", "modulename": "NDNT.modules.experiment_sampler", "qualname": "construct_exp_to_time", "kind": "function", "doc": "<p>Construct a dictionary that maps experiment indices to timepoints.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>dataset (Dataset):</strong>  dataset to sample from</li>\n<li><strong>indices (list):</strong>  indices to filter by</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">dataset</span>, </span><span class=\"param\"><span class=\"n\">indices</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, "NDNT.modules.experiment_sampler.ExperimentSampler": {"fullname": "NDNT.modules.experiment_sampler.ExperimentSampler", "modulename": "NDNT.modules.experiment_sampler", "qualname": "ExperimentSampler", "kind": "class", "doc": "<p>Samples elements across experiments.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>dataset (Dataset):</strong>  dataset to sample from</li>\n<li><strong>batch_size (int):</strong>  size of the batch to sample</li>\n<li><strong>indices (list):</strong>  indices to sample from</li>\n<li><strong>shuffle (bool):</strong>  whether to shuffle the indices</li>\n<li><strong>random_seed (int):</strong>  random seed to use for shuffling</li>\n<li><strong>verbose (bool):</strong>  whether to print out information about the sampler</li>\n</ul>\n", "bases": "typing.Generic[+T_co]"}, "NDNT.modules.experiment_sampler.ExperimentSampler.__init__": {"fullname": "NDNT.modules.experiment_sampler.ExperimentSampler.__init__", "modulename": "NDNT.modules.experiment_sampler", "qualname": "ExperimentSampler.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">dataset</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">dataset</span><span class=\"o\">.</span><span class=\"n\">Dataset</span>,</span><span class=\"param\">\t<span class=\"n\">batch_size</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">indices</span><span class=\"p\">:</span> <span class=\"nb\">list</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">shuffle</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">random_seed</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">False</span></span>)</span>"}, "NDNT.modules.experiment_sampler.ExperimentSampler.dataset": {"fullname": "NDNT.modules.experiment_sampler.ExperimentSampler.dataset", "modulename": "NDNT.modules.experiment_sampler", "qualname": "ExperimentSampler.dataset", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.experiment_sampler.ExperimentSampler.batch_size": {"fullname": "NDNT.modules.experiment_sampler.ExperimentSampler.batch_size", "modulename": "NDNT.modules.experiment_sampler", "qualname": "ExperimentSampler.batch_size", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.experiment_sampler.ExperimentSampler.shuffle": {"fullname": "NDNT.modules.experiment_sampler.ExperimentSampler.shuffle", "modulename": "NDNT.modules.experiment_sampler", "qualname": "ExperimentSampler.shuffle", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.experiment_sampler.ExperimentSampler.random_seed": {"fullname": "NDNT.modules.experiment_sampler.ExperimentSampler.random_seed", "modulename": "NDNT.modules.experiment_sampler", "qualname": "ExperimentSampler.random_seed", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.experiment_sampler.ExperimentSampler.num_exps": {"fullname": "NDNT.modules.experiment_sampler.ExperimentSampler.num_exps", "modulename": "NDNT.modules.experiment_sampler", "qualname": "ExperimentSampler.num_exps", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.experiment_sampler.ExperimentSampler.exp_to_time": {"fullname": "NDNT.modules.experiment_sampler.ExperimentSampler.exp_to_time", "modulename": "NDNT.modules.experiment_sampler", "qualname": "ExperimentSampler.exp_to_time", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.experiment_sampler.ExperimentSampler.exp_lengths": {"fullname": "NDNT.modules.experiment_sampler.ExperimentSampler.exp_lengths", "modulename": "NDNT.modules.experiment_sampler", "qualname": "ExperimentSampler.exp_lengths", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.experiment_sampler.ExperimentSampler.exp_batch_sizes": {"fullname": "NDNT.modules.experiment_sampler.ExperimentSampler.exp_batch_sizes", "modulename": "NDNT.modules.experiment_sampler", "qualname": "ExperimentSampler.exp_batch_sizes", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.experiment_sampler.ExperimentSampler.num_batches": {"fullname": "NDNT.modules.experiment_sampler.ExperimentSampler.num_batches", "modulename": "NDNT.modules.experiment_sampler", "qualname": "ExperimentSampler.num_batches", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers": {"fullname": "NDNT.modules.layers", "modulename": "NDNT.modules.layers", "kind": "module", "doc": "<p></p>\n"}, "NDNT.modules.layers.bilayers": {"fullname": "NDNT.modules.layers.bilayers", "modulename": "NDNT.modules.layers.bilayers", "kind": "module", "doc": "<p></p>\n"}, "NDNT.modules.layers.bilayers.BinocLayer1D": {"fullname": "NDNT.modules.layers.bilayers.BinocLayer1D", "modulename": "NDNT.modules.layers.bilayers", "qualname": "BinocLayer1D", "kind": "class", "doc": "<p>Takes a monocular convolutional output over both eyes -- assumes first spatial dimension is doubled\n-- reinterprets input as separate filters from each eye, but keeps them grouped\n-- assumes each 2 input filters (for each eye -- 4 inputs total) are inputs to each output filter</p>\n", "bases": "NDNT.modules.layers.convlayers.ConvLayer"}, "NDNT.modules.layers.bilayers.BinocLayer1D.__init__": {"fullname": "NDNT.modules.layers.bilayers.BinocLayer1D.__init__", "modulename": "NDNT.modules.layers.bilayers", "qualname": "BinocLayer1D.__init__", "kind": "function", "doc": "<p>Same arguments as ConvLayer, but will reshape output to divide space in half</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>input_dims:</strong>  tuple or list of ints, (num_channels, height, width, lags)</li>\n<li><strong>num_filters:</strong>  number of output filters</li>\n<li><strong>padding:</strong>  'same' or 'valid' (default 'same')</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">input_dims</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">num_filters</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">padding</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "NDNT.modules.layers.bilayers.BinocLayer1D.forward": {"fullname": "NDNT.modules.layers.bilayers.BinocLayer1D.forward", "modulename": "NDNT.modules.layers.bilayers", "qualname": "BinocLayer1D.forward", "kind": "function", "doc": "<p>Call conv forward, but then option to reshape</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>x:</strong>  tensor of shape [batch, num_channels, height, width, lags]</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>y: tensor of shape [batch, num_outputs]</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.bilayers.BinocLayer1D.layer_dict": {"fullname": "NDNT.modules.layers.bilayers.BinocLayer1D.layer_dict", "modulename": "NDNT.modules.layers.bilayers", "qualname": "BinocLayer1D.layer_dict", "kind": "function", "doc": "<p>This outputs a dictionary of parameters that need to input into the layer to completely specify.\nOutput is a dictionary with these keywords. \n-- All layer-specific inputs are included in the returned dict\n-- Values that must be set are set to empty lists\n-- Other values will be given their defaults</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.bilayers.BiConvLayer1D": {"fullname": "NDNT.modules.layers.bilayers.BiConvLayer1D", "modulename": "NDNT.modules.layers.bilayers", "qualname": "BiConvLayer1D", "kind": "class", "doc": "<p>Filters that act solely on filter-dimension (dim-0)</p>\n", "bases": "NDNT.modules.layers.convlayers.ConvLayer"}, "NDNT.modules.layers.bilayers.BiConvLayer1D.__init__": {"fullname": "NDNT.modules.layers.bilayers.BiConvLayer1D.__init__", "modulename": "NDNT.modules.layers.bilayers", "qualname": "BiConvLayer1D.__init__", "kind": "function", "doc": "<p>Same arguments as ConvLayer, but will reshape output to divide space in half.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>input_dims:</strong>  tuple or list of ints, (num_channels, height, width, lags)</li>\n<li><strong>num_filters:</strong>  number of output filters</li>\n<li><strong>filter_dims:</strong>  width of convolutional kernel (int or list of ints)</li>\n<li><strong>padding:</strong>  'same' or 'valid' (default 'same')</li>\n<li><strong>weight_init:</strong>  str, 'uniform', 'normal', 'xavier', 'zeros', or None</li>\n<li><strong>bias_init:</strong>  str, 'uniform', 'normal', 'xavier', 'zeros', or None</li>\n<li><strong>bias:</strong>  bool, whether to include bias term</li>\n<li><strong>NLtype:</strong>  str, 'lin', 'relu', 'tanh', 'sigmoid', 'elu', 'none'</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "NDNT.modules.layers.bilayers.BiConvLayer1D.layer_dict": {"fullname": "NDNT.modules.layers.bilayers.BiConvLayer1D.layer_dict", "modulename": "NDNT.modules.layers.bilayers", "qualname": "BiConvLayer1D.layer_dict", "kind": "function", "doc": "<p>This outputs a dictionary of parameters that need to input into the layer to completely specify.\nOutput is a dictionary with these keywords. \n-- All layer-specific inputs are included in the returned dict\n-- Values that must be set are set to empty lists\n-- Other values will be given their defaults</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.bilayers.BiSTconv1D": {"fullname": "NDNT.modules.layers.bilayers.BiSTconv1D", "modulename": "NDNT.modules.layers.bilayers", "qualname": "BiSTconv1D", "kind": "class", "doc": "<p>To be BinocMixLayer (bimix):\nInputs of size B x C x 2xNX x 1: mixes 2 eyes based on ratio\n    filter number is NC -- one for each channel: so infered from input_dims\n    filter_dims is [1,1,1,1] -> one number per filter\nORIGINAL BiSTconv1D: Filters that act solely on filter-dimension (dim-0)</p>\n", "bases": "NDNT.modules.layers.ndnlayer.NDNLayer"}, "NDNT.modules.layers.bilayers.BiSTconv1D.__init__": {"fullname": "NDNT.modules.layers.bilayers.BiSTconv1D.__init__", "modulename": "NDNT.modules.layers.bilayers", "qualname": "BiSTconv1D.__init__", "kind": "function", "doc": "<p>Same arguments as ConvLayer, but will reshape output to divide space in half.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>input_dims:</strong>  tuple or list of ints, (num_channels, height, width, lags)</li>\n<li><strong>num_filters:</strong>  number of output filters</li>\n<li><strong>filter_dims:</strong>  width of convolutional kernel (int or list of ints)</li>\n<li><strong>padding:</strong>  'same' or 'valid' (default 'same')</li>\n<li><strong>weight_init:</strong>  str, 'uniform', 'normal', 'xavier', 'zeros', or None</li>\n<li><strong>bias_init:</strong>  str, 'uniform', 'normal', 'xavier', 'zeros', or None</li>\n<li><strong>bias:</strong>  bool, whether to include bias term</li>\n<li><strong>NLtype:</strong>  str, 'lin', 'relu', 'tanh', 'sigmoid', 'elu', 'none'</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">input_dims</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">num_filters</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">filter_dims</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">norm_type</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">NLtype</span><span class=\"o\">=</span><span class=\"s1\">&#39;relu&#39;</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "NDNT.modules.layers.bilayers.BiSTconv1D.output_dims": {"fullname": "NDNT.modules.layers.bilayers.BiSTconv1D.output_dims", "modulename": "NDNT.modules.layers.bilayers", "qualname": "BiSTconv1D.output_dims", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.bilayers.BiSTconv1D.num_outputs": {"fullname": "NDNT.modules.layers.bilayers.BiSTconv1D.num_outputs", "modulename": "NDNT.modules.layers.bilayers", "qualname": "BiSTconv1D.num_outputs", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.bilayers.BiSTconv1D.forward": {"fullname": "NDNT.modules.layers.bilayers.BiSTconv1D.forward", "modulename": "NDNT.modules.layers.bilayers", "qualname": "BiSTconv1D.forward", "kind": "function", "doc": "<p>Call conv forward, but then option to reshape.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>x:</strong>  tensor of shape [batch, num_channels, height, width, lags]</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>y: tensor of shape [batch, num_outputs]</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"fullname": "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict", "modulename": "NDNT.modules.layers.bilayers", "qualname": "BiSTconv1D.layer_dict", "kind": "function", "doc": "<p>This outputs a dictionary of parameters that need to input into the layer to completely specify.\nOutput is a dictionary with these keywords. \n-- All layer-specific inputs are included in the returned dict\n-- Values that must be set are set to empty lists\n-- Other values will be given their defaults</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>input_dims:</strong>  list of 4 ints, dimensions of input</li>\n<li><strong>num_filters:</strong>  int, number of filters in layer</li>\n<li><strong>bias:</strong>  bool, whether to include bias term</li>\n<li><strong>NLtype:</strong>  str, type of nonlinearity to use (see activations.py)</li>\n<li><strong>norm_type:</strong>  int, type of filter normalization to use (0=None, 1=filters are unit vectors, 2=maxnorm?)</li>\n<li><strong>pos_constraint:</strong>  bool, whether to constrain weights to be positive</li>\n<li><strong>num_inh:</strong>  int, number of inhibitory units (creates ei_mask and makes \"inhibitory\" units have negative output)</li>\n<li><strong>initialize_center:</strong>  bool, whether to initialize the weights to have a Gaussian envelope</li>\n<li><strong>reg_vals:</strong>  dict, regularization values to use (see regularizers.py)</li>\n<li><strong>output_norm:</strong>  str, type of output normalization to use</li>\n<li><strong>weights_initializer:</strong>  str, type of weight initialization to use</li>\n<li><strong>bias_initializer:</strong>  str, type of bias initialization to use</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>dict: dictionary of layer parameters</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.bilayers.ChannelConvLayer": {"fullname": "NDNT.modules.layers.bilayers.ChannelConvLayer", "modulename": "NDNT.modules.layers.bilayers", "qualname": "ChannelConvLayer", "kind": "class", "doc": "<p>Channel-Convolutional NDN Layer -- convolutional layer that has each output filter use different\ngroup of M input filters. So, if there are N output filters, the channel dimension of the input has to be M*N</p>\n\n<p>Args (required):\n    input_dims: tuple or list of ints, (num_channels, height, width, lags)\n    num_filters: number of output filters\n    filter_dims: width of convolutional kernel (int or list of ints)</p>\n\n<p>Args (optional):\n    padding: 'same' or 'valid' (default 'same')\n    weight_init: str, 'uniform', 'normal', 'xavier', 'zeros', or None\n    bias_init: str, 'uniform', 'normal', 'xavier', 'zeros', or None\n    bias: bool, whether to include bias term\n    NLtype: str, 'lin', 'relu', 'tanh', 'sigmoid', 'elu', 'none'</p>\n", "bases": "NDNT.modules.layers.convlayers.ConvLayer"}, "NDNT.modules.layers.bilayers.ChannelConvLayer.__init__": {"fullname": "NDNT.modules.layers.bilayers.ChannelConvLayer.__init__", "modulename": "NDNT.modules.layers.bilayers", "qualname": "ChannelConvLayer.__init__", "kind": "function", "doc": "<p>Same arguments as ConvLayer, but will reshape output to divide space in half.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>input_dims:</strong>  tuple or list of ints, (num_channels, height, width, lags)</li>\n<li><strong>num_filters:</strong>  number of output filters</li>\n<li><strong>filter_width:</strong>  width of convolutional kernel (int or list of ints)</li>\n<li><strong>temporal_tent_spacing:</strong>  spacing of tent-basis functions in time</li>\n<li><strong>output_norm:</strong>  normalization to apply to output</li>\n<li><strong>window:</strong>  window function to apply to output</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">input_dims</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">num_filters</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">filter_width</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">temporal_tent_spacing</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">output_norm</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">window</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "NDNT.modules.layers.bilayers.ChannelConvLayer.weights_folded_dims": {"fullname": "NDNT.modules.layers.bilayers.ChannelConvLayer.weights_folded_dims", "modulename": "NDNT.modules.layers.bilayers", "qualname": "ChannelConvLayer.weights_folded_dims", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.bilayers.ChannelConvLayer.layer_dict": {"fullname": "NDNT.modules.layers.bilayers.ChannelConvLayer.layer_dict", "modulename": "NDNT.modules.layers.bilayers", "qualname": "ChannelConvLayer.layer_dict", "kind": "function", "doc": "<p>This outputs a dictionary of parameters that need to input into the layer to completely specify.\nOutput is a dictionary with these keywords. \n-- All layer-specific inputs are included in the returned dict\n-- Values that must be set are set to empty lists\n-- Other values will be given their defaults</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">filter_width</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.bilayers.ChannelConvLayer.forward": {"fullname": "NDNT.modules.layers.bilayers.ChannelConvLayer.forward", "modulename": "NDNT.modules.layers.bilayers", "qualname": "ChannelConvLayer.forward", "kind": "function", "doc": "<p>Call conv forward, but then option to reshape.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>x:</strong>  tensor of shape [batch, num_channels, height, width, lags]</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>y: tensor of shape [batch, num_outputs]</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.convlayers": {"fullname": "NDNT.modules.layers.convlayers", "modulename": "NDNT.modules.layers.convlayers", "kind": "module", "doc": "<p></p>\n"}, "NDNT.modules.layers.convlayers.ConvLayer": {"fullname": "NDNT.modules.layers.convlayers.ConvLayer", "modulename": "NDNT.modules.layers.convlayers", "qualname": "ConvLayer", "kind": "class", "doc": "<p>Convolutional NDN Layer</p>\n\n<p>Args (required):\n    input_dims: tuple or list of ints, (num_channels, height, width, lags)\n    num_filters: number of output filters\n    filter_dims: width of convolutional kernel (int or list of ints)\nArgs (optional):\n    padding: 'same','valid', or 'circular' (default 'same')\n    weight_init: str, 'uniform', 'normal', 'xavier', 'zeros', or None\n    bias_init: str, 'uniform', 'normal', 'xavier', 'zeros', or None\n    bias: bool, whether to include bias term\n    NLtype: str, 'lin', 'relu', 'tanh', 'sigmoid', 'elu', 'none'</p>\n", "bases": "NDNT.modules.layers.ndnlayer.NDNLayer"}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"fullname": "NDNT.modules.layers.convlayers.ConvLayer.__init__", "modulename": "NDNT.modules.layers.convlayers", "qualname": "ConvLayer.__init__", "kind": "function", "doc": "<p>Initialize the layer.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>input_dims:</strong>  list of 4 ints, dimensions of input</li>\n<li><strong>num_filters:</strong>  int, number of filters in layer</li>\n<li><strong>NLtype:</strong>  str, type of nonlinearity to use (see activations.py)</li>\n<li><strong>norm:</strong>  int, type of filter normalization to use (0=None, 1=filters are unit vectors, 2=maxnorm?)</li>\n<li><strong>pos_constraint:</strong>  bool, whether to constrain weights to be positive</li>\n<li><strong>num_inh:</strong>  int, number of inhibitory units (creates ei_mask and makes \"inhibitory\" units have negative output)</li>\n<li><strong>bias:</strong>  bool, whether to include bias term</li>\n<li><strong>weight_init:</strong>  str, type of weight initialization to use (see reset_parameters, default 'xavier_uniform')</li>\n<li><strong>bias_init:</strong>  str, type of bias initialization to use (see reset_parameters, default 'zeros')</li>\n<li><strong>reg_vals:</strong>  dict, regularization values to use (see regularizers.py)</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">input_dims</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">num_filters</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">filter_dims</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">temporal_tent_spacing</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">output_norm</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">stride</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">dilation</span><span class=\"o\">=</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">padding</span><span class=\"o\">=</span><span class=\"s1\">&#39;same&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">res_layer</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">window</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">folded_lags</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "NDNT.modules.layers.convlayers.ConvLayer.window": {"fullname": "NDNT.modules.layers.convlayers.ConvLayer.window", "modulename": "NDNT.modules.layers.convlayers", "qualname": "ConvLayer.window", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.convlayers.ConvLayer.tent_basis": {"fullname": "NDNT.modules.layers.convlayers.ConvLayer.tent_basis", "modulename": "NDNT.modules.layers.convlayers", "qualname": "ConvLayer.tent_basis", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.convlayers.ConvLayer.is1D": {"fullname": "NDNT.modules.layers.convlayers.ConvLayer.is1D", "modulename": "NDNT.modules.layers.convlayers", "qualname": "ConvLayer.is1D", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.convlayers.ConvLayer.res_layer": {"fullname": "NDNT.modules.layers.convlayers.ConvLayer.res_layer", "modulename": "NDNT.modules.layers.convlayers", "qualname": "ConvLayer.res_layer", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.convlayers.ConvLayer.filter_dims": {"fullname": "NDNT.modules.layers.convlayers.ConvLayer.filter_dims", "modulename": "NDNT.modules.layers.convlayers", "qualname": "ConvLayer.filter_dims", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.convlayers.ConvLayer.padding": {"fullname": "NDNT.modules.layers.convlayers.ConvLayer.padding", "modulename": "NDNT.modules.layers.convlayers", "qualname": "ConvLayer.padding", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.convlayers.ConvLayer.folded_dims": {"fullname": "NDNT.modules.layers.convlayers.ConvLayer.folded_dims", "modulename": "NDNT.modules.layers.convlayers", "qualname": "ConvLayer.folded_dims", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.convlayers.ConvLayer.batchnorm_clone": {"fullname": "NDNT.modules.layers.convlayers.ConvLayer.batchnorm_clone", "modulename": "NDNT.modules.layers.convlayers", "qualname": "ConvLayer.batchnorm_clone", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">bn_orig</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.convlayers.ConvLayer.batchnorm_convert": {"fullname": "NDNT.modules.layers.convlayers.ConvLayer.batchnorm_convert", "modulename": "NDNT.modules.layers.convlayers", "qualname": "ConvLayer.batchnorm_convert", "kind": "function", "doc": "<p>Converts layer with batch_norm to have the same output without batch_norm. This involves\nadjusting the weights and adding offsets</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.convlayers.ConvLayer.layer_dict": {"fullname": "NDNT.modules.layers.convlayers.ConvLayer.layer_dict", "modulename": "NDNT.modules.layers.convlayers", "qualname": "ConvLayer.layer_dict", "kind": "function", "doc": "<p>This outputs a dictionary of parameters that need to input into the layer to completely specify.\nOutput is a dictionary with these keywords. \n-- All layer-specific inputs are included in the returned dict\n-- Values that must be set are set to empty lists\n-- Other values will be given their defaults</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">padding</span><span class=\"o\">=</span><span class=\"s1\">&#39;same&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">filter_dims</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">folded_lags</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">res_layer</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">window</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.convlayers.ConvLayer.preprocess_weights": {"fullname": "NDNT.modules.layers.convlayers.ConvLayer.preprocess_weights", "modulename": "NDNT.modules.layers.convlayers", "qualname": "ConvLayer.preprocess_weights", "kind": "function", "doc": "<p>Preprocess the weights before using them in the forward pass.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>w: torch.Tensor, preprocessed weights</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.convlayers.ConvLayer.forward": {"fullname": "NDNT.modules.layers.convlayers.ConvLayer.forward", "modulename": "NDNT.modules.layers.convlayers", "qualname": "ConvLayer.forward", "kind": "function", "doc": "<p>Forward pass for the layer.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>x:</strong>  torch.Tensor, input tensor</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>x: torch.Tensor, output tensor</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.convlayers.TconvLayer": {"fullname": "NDNT.modules.layers.convlayers.TconvLayer", "modulename": "NDNT.modules.layers.convlayers", "qualname": "TconvLayer", "kind": "class", "doc": "<p>Temporal convolutional layer.\nTConv does not integrate out the time dimension and instead treats it as a true convolutional dimension</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>input_dims (list of ints):</strong>  input dimensions [C, W, H, T]</li>\n<li><strong>num_filters (int):</strong>  number of filters</li>\n<li><strong>filter_dims (list of ints):</strong>  filter dimensions [C, w, h, T]\nw &lt; W, h &lt; H</li>\n<li><strong>stride (int):</strong>  stride of convolution</li>\n</ul>\n", "bases": "ConvLayer"}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"fullname": "NDNT.modules.layers.convlayers.TconvLayer.__init__", "modulename": "NDNT.modules.layers.convlayers", "qualname": "TconvLayer.__init__", "kind": "function", "doc": "<p>Initialize the layer.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>input_dims:</strong>  list of 4 ints, dimensions of input</li>\n<li><strong>num_filters:</strong>  int, number of filters in layer</li>\n<li><strong>NLtype:</strong>  str, type of nonlinearity to use (see activations.py)</li>\n<li><strong>norm:</strong>  int, type of filter normalization to use (0=None, 1=filters are unit vectors, 2=maxnorm?)</li>\n<li><strong>pos_constraint:</strong>  bool, whether to constrain weights to be positive</li>\n<li><strong>num_inh:</strong>  int, number of inhibitory units (creates ei_mask and makes \"inhibitory\" units have negative output)</li>\n<li><strong>bias:</strong>  bool, whether to include bias term</li>\n<li><strong>weight_init:</strong>  str, type of weight initialization to use (see reset_parameters, default 'xavier_uniform')</li>\n<li><strong>bias_init:</strong>  str, type of bias initialization to use (see reset_parameters, default 'zeros')</li>\n<li><strong>reg_vals:</strong>  dict, regularization values to use (see regularizers.py)</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">input_dims</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">num_filters</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">conv_dims</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">filter_dims</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">padding</span><span class=\"o\">=</span><span class=\"s1\">&#39;spatial&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">output_norm</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "NDNT.modules.layers.convlayers.TconvLayer.num_lags": {"fullname": "NDNT.modules.layers.convlayers.TconvLayer.num_lags", "modulename": "NDNT.modules.layers.convlayers", "qualname": "TconvLayer.num_lags", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.convlayers.TconvLayer.is1D": {"fullname": "NDNT.modules.layers.convlayers.TconvLayer.is1D", "modulename": "NDNT.modules.layers.convlayers", "qualname": "TconvLayer.is1D", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.convlayers.TconvLayer.padding": {"fullname": "NDNT.modules.layers.convlayers.TconvLayer.padding", "modulename": "NDNT.modules.layers.convlayers", "qualname": "TconvLayer.padding", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.convlayers.TconvLayer.forward": {"fullname": "NDNT.modules.layers.convlayers.TconvLayer.forward", "modulename": "NDNT.modules.layers.convlayers", "qualname": "TconvLayer.forward", "kind": "function", "doc": "<p>Forward pass for the layer.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>x:</strong>  torch.Tensor, input tensor</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>x: torch.Tensor, output tensor</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.convlayers.TconvLayer.plot_filters": {"fullname": "NDNT.modules.layers.convlayers.TconvLayer.plot_filters", "modulename": "NDNT.modules.layers.convlayers", "qualname": "TconvLayer.plot_filters", "kind": "function", "doc": "<p>Plot the filters in the layer.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>cmaps:</strong>  str or colormap, colormap to use for plotting (default 'gray')</li>\n<li><strong>num_cols:</strong>  int, number of columns to use in plot (default 8)</li>\n<li><strong>row_height:</strong>  int, number of rows to use in plot (default 2)</li>\n<li><strong>time_reverse:</strong>  bool, whether to reverse the time dimension (default depends on dimension)</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>None</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">cmaps</span><span class=\"o\">=</span><span class=\"s1\">&#39;viridis&#39;</span>, </span><span class=\"param\"><span class=\"n\">num_cols</span><span class=\"o\">=</span><span class=\"mi\">8</span>, </span><span class=\"param\"><span class=\"n\">row_height</span><span class=\"o\">=</span><span class=\"mi\">2</span>, </span><span class=\"param\"><span class=\"n\">time_reverse</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.convlayers.TconvLayer.layer_dict": {"fullname": "NDNT.modules.layers.convlayers.TconvLayer.layer_dict", "modulename": "NDNT.modules.layers.convlayers", "qualname": "TconvLayer.layer_dict", "kind": "function", "doc": "<p>This outputs a dictionary of parameters that need to input into the layer to completely specify.\nOutput is a dictionary with these keywords. \n-- All layer-specific inputs are included in the returned dict\n-- Values that must be set are set to empty lists\n-- Other values will be given their defaults</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">padding</span><span class=\"o\">=</span><span class=\"s1\">&#39;spatial&#39;</span>, </span><span class=\"param\"><span class=\"n\">conv_dims</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.convlayers.STconvLayer": {"fullname": "NDNT.modules.layers.convlayers.STconvLayer", "modulename": "NDNT.modules.layers.convlayers", "qualname": "STconvLayer", "kind": "class", "doc": "<p>Spatio-temporal convolutional layer.\nSTConv Layers overload the batch dimension and assume they are contiguous in time.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>input_dims (list of ints):</strong>  input dimensions [C, W, H, T]\nThis is, of course, not the real input dimensions, because the batch dimension is assumed to be contiguous.\nThe real input dimensions are [B, C, W, H, 1], T specifies the number of lags</li>\n<li><strong>num_filters (int):</strong>  number of filters</li>\n<li><strong>filter_dims (list of ints):</strong>  filter dimensions [C, w, h, T]\nw &lt; W, h &lt; H</li>\n<li><strong>stride (int):</strong>  stride of convolution</li>\n</ul>\n", "bases": "TconvLayer"}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"fullname": "NDNT.modules.layers.convlayers.STconvLayer.__init__", "modulename": "NDNT.modules.layers.convlayers", "qualname": "STconvLayer.__init__", "kind": "function", "doc": "<p>Initialize the layer.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>input_dims:</strong>  list of 4 ints, dimensions of input</li>\n<li><strong>num_filters:</strong>  int, number of filters in layer</li>\n<li><strong>NLtype:</strong>  str, type of nonlinearity to use (see activations.py)</li>\n<li><strong>norm:</strong>  int, type of filter normalization to use (0=None, 1=filters are unit vectors, 2=maxnorm?)</li>\n<li><strong>pos_constraint:</strong>  bool, whether to constrain weights to be positive</li>\n<li><strong>num_inh:</strong>  int, number of inhibitory units (creates ei_mask and makes \"inhibitory\" units have negative output)</li>\n<li><strong>bias:</strong>  bool, whether to include bias term</li>\n<li><strong>weight_init:</strong>  str, type of weight initialization to use (see reset_parameters, default 'xavier_uniform')</li>\n<li><strong>bias_init:</strong>  str, type of bias initialization to use (see reset_parameters, default 'zeros')</li>\n<li><strong>reg_vals:</strong>  dict, regularization values to use (see regularizers.py)</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">input_dims</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">num_filters</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">output_norm</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "NDNT.modules.layers.convlayers.STconvLayer.num_lags": {"fullname": "NDNT.modules.layers.convlayers.STconvLayer.num_lags", "modulename": "NDNT.modules.layers.convlayers", "qualname": "STconvLayer.num_lags", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.convlayers.STconvLayer.output_dims": {"fullname": "NDNT.modules.layers.convlayers.STconvLayer.output_dims", "modulename": "NDNT.modules.layers.convlayers", "qualname": "STconvLayer.output_dims", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.convlayers.STconvLayer.forward": {"fullname": "NDNT.modules.layers.convlayers.STconvLayer.forward", "modulename": "NDNT.modules.layers.convlayers", "qualname": "STconvLayer.forward", "kind": "function", "doc": "<p>Forward pass for the layer.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>x:</strong>  torch.Tensor, input tensor</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>x: torch.Tensor, output tensor</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.convlayers.STconvLayer.plot_filters": {"fullname": "NDNT.modules.layers.convlayers.STconvLayer.plot_filters", "modulename": "NDNT.modules.layers.convlayers", "qualname": "STconvLayer.plot_filters", "kind": "function", "doc": "<p>Plot the filters in the layer.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>cmaps:</strong>  str or colormap, colormap to use for plotting (default 'gray')</li>\n<li><strong>num_cols:</strong>  int, number of columns to use in plot (default 8)</li>\n<li><strong>row_height:</strong>  int, number of rows to use in plot (default 2)</li>\n<li><strong>time_reverse:</strong>  bool, whether to reverse the time dimension (default depends on dimension)</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>None</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">cmaps</span><span class=\"o\">=</span><span class=\"s1\">&#39;gray&#39;</span>, </span><span class=\"param\"><span class=\"n\">num_cols</span><span class=\"o\">=</span><span class=\"mi\">8</span>, </span><span class=\"param\"><span class=\"n\">row_height</span><span class=\"o\">=</span><span class=\"mi\">2</span>, </span><span class=\"param\"><span class=\"n\">time_reverse</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.convlayers.STconvLayer.layer_dict": {"fullname": "NDNT.modules.layers.convlayers.STconvLayer.layer_dict", "modulename": "NDNT.modules.layers.convlayers", "qualname": "STconvLayer.layer_dict", "kind": "function", "doc": "<p>This outputs a dictionary of parameters that need to input into the layer to completely specify.\nOutput is a dictionary with these keywords. \n-- All layer-specific inputs are included in the returned dict\n-- Values that must be set are set to empty lists\n-- Other values will be given their defaults</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.dimlayers": {"fullname": "NDNT.modules.layers.dimlayers", "modulename": "NDNT.modules.layers.dimlayers", "kind": "module", "doc": "<p></p>\n"}, "NDNT.modules.layers.dimlayers.Dim0Layer": {"fullname": "NDNT.modules.layers.dimlayers.Dim0Layer", "modulename": "NDNT.modules.layers.dimlayers", "qualname": "Dim0Layer", "kind": "class", "doc": "<p>Filters that act solely on filter-dimension (dim-0).</p>\n", "bases": "NDNT.modules.layers.ndnlayer.NDNLayer"}, "NDNT.modules.layers.dimlayers.Dim0Layer.__init__": {"fullname": "NDNT.modules.layers.dimlayers.Dim0Layer.__init__", "modulename": "NDNT.modules.layers.dimlayers", "qualname": "Dim0Layer.__init__", "kind": "function", "doc": "<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>input_dims:</strong>  tuple or list of ints, (num_channels, height, width, lags)</li>\n<li><strong>num_filters:</strong>  number of output filters</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">input_dims</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">num_filters</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "NDNT.modules.layers.dimlayers.Dim0Layer.output_dims": {"fullname": "NDNT.modules.layers.dimlayers.Dim0Layer.output_dims", "modulename": "NDNT.modules.layers.dimlayers", "qualname": "Dim0Layer.output_dims", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.dimlayers.Dim0Layer.num_outputs": {"fullname": "NDNT.modules.layers.dimlayers.Dim0Layer.num_outputs", "modulename": "NDNT.modules.layers.dimlayers", "qualname": "Dim0Layer.num_outputs", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.dimlayers.Dim0Layer.num_other_dims": {"fullname": "NDNT.modules.layers.dimlayers.Dim0Layer.num_other_dims", "modulename": "NDNT.modules.layers.dimlayers", "qualname": "Dim0Layer.num_other_dims", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.dimlayers.Dim0Layer.forward": {"fullname": "NDNT.modules.layers.dimlayers.Dim0Layer.forward", "modulename": "NDNT.modules.layers.dimlayers", "qualname": "Dim0Layer.forward", "kind": "function", "doc": "<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>x:</strong>  torch.Tensor, input tensor of shape [B, C, H, W, L]</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>y: torch.Tensor, output tensor of shape [B, N, H, W, L]</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.dimlayers.Dim0Layer.dim_info": {"fullname": "NDNT.modules.layers.dimlayers.Dim0Layer.dim_info", "modulename": "NDNT.modules.layers.dimlayers", "qualname": "Dim0Layer.dim_info", "kind": "function", "doc": "<p>This uses the methods in the init to determine the input_dims, output_dims, filter_dims, and actual size of\nthe weight tensor (weight_shape), given inputs, and package in a dictionary. This should be overloaded with each\nchild of NDNLayer if want to use -- but this is external to function of actual layer.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>input_dims:</strong>  tuple or list of ints, (num_channels, height, width, lags)</li>\n<li><strong>num_filters:</strong>  number of output filters</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>dinfo: dictionary with keys 'input_dims', 'filter_dims', 'output_dims', 'num_outputs', 'weight_shape'</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">input_dims</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">num_filters</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.dimlayers.Dim0Layer.layer_dict": {"fullname": "NDNT.modules.layers.dimlayers.Dim0Layer.layer_dict", "modulename": "NDNT.modules.layers.dimlayers", "qualname": "Dim0Layer.layer_dict", "kind": "function", "doc": "<p>This outputs a dictionary of parameters that need to input into the layer to completely specify.\nOutput is a dictionary with these keywords. \n-- All layer-specific inputs are included in the returned dict\n-- Values that must be set are set to empty lists\n-- Other values will be given their defaults</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.dimlayers.ChannelLayer": {"fullname": "NDNT.modules.layers.dimlayers.ChannelLayer", "modulename": "NDNT.modules.layers.dimlayers", "qualname": "ChannelLayer", "kind": "class", "doc": "<p>Applies individual filter for each filter (dim0) dimension, preserving separate channels but filtering over other dimensions\n=&gt; num_filters equals the channel dimension by definition, otherwise like NDNLayer</p>\n", "bases": "NDNT.modules.layers.ndnlayer.NDNLayer"}, "NDNT.modules.layers.dimlayers.ChannelLayer.__init__": {"fullname": "NDNT.modules.layers.dimlayers.ChannelLayer.__init__", "modulename": "NDNT.modules.layers.dimlayers", "qualname": "ChannelLayer.__init__", "kind": "function", "doc": "<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>input_dims:</strong>  tuple or list of ints, (num_channels, height, width, lags)</li>\n<li><strong>num_filters:</strong>  number of output filters</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">input_dims</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">num_filters</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "NDNT.modules.layers.dimlayers.ChannelLayer.layer_dict": {"fullname": "NDNT.modules.layers.dimlayers.ChannelLayer.layer_dict", "modulename": "NDNT.modules.layers.dimlayers", "qualname": "ChannelLayer.layer_dict", "kind": "function", "doc": "<p>This outputs a dictionary of parameters that need to input into the layer to completely specify.\nOutput is a dictionary with these keywords. \n-- All layer-specific inputs are included in the returned dict\n-- Values that must be set are set to empty lists\n-- Other values will be given their defaults</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.dimlayers.ChannelLayer.forward": {"fullname": "NDNT.modules.layers.dimlayers.ChannelLayer.forward", "modulename": "NDNT.modules.layers.dimlayers", "qualname": "ChannelLayer.forward", "kind": "function", "doc": "<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>x:</strong>  torch.Tensor, input tensor of shape [B, C, H, W, L]</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>y: torch.Tensor, output tensor of shape [B, N, H, W, L]</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.dimlayers.DimSPLayer": {"fullname": "NDNT.modules.layers.dimlayers.DimSPLayer", "modulename": "NDNT.modules.layers.dimlayers", "qualname": "DimSPLayer", "kind": "class", "doc": "<p>Filters that act solely on spatial-dimensions (dims-1,3)\ntransparent=True means that one spatial filter for each channel</p>\n", "bases": "NDNT.modules.layers.ndnlayer.NDNLayer"}, "NDNT.modules.layers.dimlayers.DimSPLayer.__init__": {"fullname": "NDNT.modules.layers.dimlayers.DimSPLayer.__init__", "modulename": "NDNT.modules.layers.dimlayers", "qualname": "DimSPLayer.__init__", "kind": "function", "doc": "<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>input_dims:</strong>  tuple or list of ints, (num_channels, height, width, lags)</li>\n<li><strong>num_filters:</strong>  number of output filters</li>\n<li><strong>transparent:</strong>  if True, one spatial filter for each channel</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">input_dims</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">num_filters</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">transparent</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "NDNT.modules.layers.dimlayers.DimSPLayer.transparent": {"fullname": "NDNT.modules.layers.dimlayers.DimSPLayer.transparent", "modulename": "NDNT.modules.layers.dimlayers", "qualname": "DimSPLayer.transparent", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.dimlayers.DimSPLayer.num_outputs": {"fullname": "NDNT.modules.layers.dimlayers.DimSPLayer.num_outputs", "modulename": "NDNT.modules.layers.dimlayers", "qualname": "DimSPLayer.num_outputs", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.dimlayers.DimSPLayer.num_sp_dims": {"fullname": "NDNT.modules.layers.dimlayers.DimSPLayer.num_sp_dims", "modulename": "NDNT.modules.layers.dimlayers", "qualname": "DimSPLayer.num_sp_dims", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.dimlayers.DimSPLayer.forward": {"fullname": "NDNT.modules.layers.dimlayers.DimSPLayer.forward", "modulename": "NDNT.modules.layers.dimlayers", "qualname": "DimSPLayer.forward", "kind": "function", "doc": "<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>x:</strong>  torch.Tensor, input tensor of shape [B, C, H, W, L]</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>y: torch.Tensor, output tensor of shape [B, N, H, W, L]</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.dimlayers.DimSPLayer.layer_dict": {"fullname": "NDNT.modules.layers.dimlayers.DimSPLayer.layer_dict", "modulename": "NDNT.modules.layers.dimlayers", "qualname": "DimSPLayer.layer_dict", "kind": "function", "doc": "<p>This outputs a dictionary of parameters that need to input into the layer to completely specify.\nOutput is a dictionary with these keywords. \n-- All layer-specific inputs are included in the returned dict\n-- Values that must be set are set to empty lists\n-- Other values will be given their defaults</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">transparent</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.dimlayers.DimSPTLayer": {"fullname": "NDNT.modules.layers.dimlayers.DimSPTLayer", "modulename": "NDNT.modules.layers.dimlayers", "qualname": "DimSPTLayer", "kind": "class", "doc": "<p>Filters that act solely on spatial-dimensions (dims-1,3).</p>\n", "bases": "NDNT.modules.layers.ndnlayer.NDNLayer"}, "NDNT.modules.layers.dimlayers.DimSPTLayer.__init__": {"fullname": "NDNT.modules.layers.dimlayers.DimSPTLayer.__init__", "modulename": "NDNT.modules.layers.dimlayers", "qualname": "DimSPTLayer.__init__", "kind": "function", "doc": "<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>input_dims:</strong>  tuple or list of ints, (num_channels, height, width, lags)</li>\n<li><strong>num_filters:</strong>  number of output filters</li>\n<li><strong>transparent:</strong>  if True, one spatial filter for each channel</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">input_dims</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">num_filters</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">transparent</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "NDNT.modules.layers.dimlayers.DimSPTLayer.output_dims": {"fullname": "NDNT.modules.layers.dimlayers.DimSPTLayer.output_dims", "modulename": "NDNT.modules.layers.dimlayers", "qualname": "DimSPTLayer.output_dims", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.dimlayers.DimSPTLayer.num_outputs": {"fullname": "NDNT.modules.layers.dimlayers.DimSPTLayer.num_outputs", "modulename": "NDNT.modules.layers.dimlayers", "qualname": "DimSPTLayer.num_outputs", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.dimlayers.DimSPTLayer.transparent": {"fullname": "NDNT.modules.layers.dimlayers.DimSPTLayer.transparent", "modulename": "NDNT.modules.layers.dimlayers", "qualname": "DimSPTLayer.transparent", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.dimlayers.DimSPTLayer.num_spt_dims": {"fullname": "NDNT.modules.layers.dimlayers.DimSPTLayer.num_spt_dims", "modulename": "NDNT.modules.layers.dimlayers", "qualname": "DimSPTLayer.num_spt_dims", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.dimlayers.DimSPTLayer.forward": {"fullname": "NDNT.modules.layers.dimlayers.DimSPTLayer.forward", "modulename": "NDNT.modules.layers.dimlayers", "qualname": "DimSPTLayer.forward", "kind": "function", "doc": "<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>x:</strong>  torch.Tensor, input tensor of shape [B, C, H, W, L]</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>y: torch.Tensor, output tensor of shape [B, N, H, W, L]</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.dimlayers.DimSPTLayer.layer_dict": {"fullname": "NDNT.modules.layers.dimlayers.DimSPTLayer.layer_dict", "modulename": "NDNT.modules.layers.dimlayers", "qualname": "DimSPTLayer.layer_dict", "kind": "function", "doc": "<p>This outputs a dictionary of parameters that need to input into the layer to completely specify.\nOutput is a dictionary with these keywords. \n-- All layer-specific inputs are included in the returned dict\n-- Values that must be set are set to empty lists\n-- Other values will be given their defaults</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">transparent</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.externallayer": {"fullname": "NDNT.modules.layers.externallayer", "modulename": "NDNT.modules.layers.externallayer", "kind": "module", "doc": "<p></p>\n"}, "NDNT.modules.layers.externallayer.ExternalLayer": {"fullname": "NDNT.modules.layers.externallayer.ExternalLayer", "modulename": "NDNT.modules.layers.externallayer", "qualname": "ExternalLayer", "kind": "class", "doc": "<p>This is a dummy 'layer' for the Extenal network that gets filled in by the passed-in network.</p>\n", "bases": "torch.nn.modules.module.Module"}, "NDNT.modules.layers.externallayer.ExternalLayer.__init__": {"fullname": "NDNT.modules.layers.externallayer.ExternalLayer.__init__", "modulename": "NDNT.modules.layers.externallayer", "qualname": "ExternalLayer.__init__", "kind": "function", "doc": "<p>ExternalLayer: Dummy layer for the Extenal network that gets filled in by the passed-in network.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>input_dims:</strong>  tuple or list of ints, (num_channels, height, width, lags)</li>\n<li><strong>num_filters:</strong>  number of output filters</li>\n<li><strong>output_dims:</strong>  tuple or list of ints, (num_channels, height, width, lags)</li>\n<li><strong>**kwargs:</strong>  additional arguments to pass to NDNLayer</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">input_dims</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">num_filters</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">output_dims</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "NDNT.modules.layers.externallayer.ExternalLayer.input_dims": {"fullname": "NDNT.modules.layers.externallayer.ExternalLayer.input_dims", "modulename": "NDNT.modules.layers.externallayer", "qualname": "ExternalLayer.input_dims", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.externallayer.ExternalLayer.num_filters": {"fullname": "NDNT.modules.layers.externallayer.ExternalLayer.num_filters", "modulename": "NDNT.modules.layers.externallayer", "qualname": "ExternalLayer.num_filters", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.externallayer.ExternalLayer.filter_dims": {"fullname": "NDNT.modules.layers.externallayer.ExternalLayer.filter_dims", "modulename": "NDNT.modules.layers.externallayer", "qualname": "ExternalLayer.filter_dims", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.externallayer.ExternalLayer.output_dims": {"fullname": "NDNT.modules.layers.externallayer.ExternalLayer.output_dims", "modulename": "NDNT.modules.layers.externallayer", "qualname": "ExternalLayer.output_dims", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.externallayer.ExternalLayer.reg": {"fullname": "NDNT.modules.layers.externallayer.ExternalLayer.reg", "modulename": "NDNT.modules.layers.externallayer", "qualname": "ExternalLayer.reg", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.externallayer.ExternalLayer.forward": {"fullname": "NDNT.modules.layers.externallayer.ExternalLayer.forward", "modulename": "NDNT.modules.layers.externallayer", "qualname": "ExternalLayer.forward", "kind": "function", "doc": "<p>Forward pass for ExternalLayer.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>x:</strong>  input tensor</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>y: output tensor</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.laglayers": {"fullname": "NDNT.modules.layers.laglayers", "modulename": "NDNT.modules.layers.laglayers", "kind": "module", "doc": "<p></p>\n"}, "NDNT.modules.layers.laglayers.LagLayer": {"fullname": "NDNT.modules.layers.laglayers.LagLayer", "modulename": "NDNT.modules.layers.laglayers", "qualname": "LagLayer", "kind": "class", "doc": "<p>Operates spatiotemporal filter om time-embeeded stimulus\nSpatiotemporal filter should have less lags than stimulus -- then ends up with some lags left\nFilter is full spatial width and the number of lags is explicity specified in initializer\n(so, inherits spatial and chanel dimensions of stimulus input)</p>\n\n<p>Args (required):\n    input_dims: tuple or list of ints, (num_channels, height, width, lags)\n    num_filters: number of output filters\n    num_lags: number of lags in spatiotemporal filter</p>\n\n<p>Args (optional):\n    weight_init: str, 'uniform', 'normal', 'xavier', 'zeros', or None\n    bias_init: str, 'uniform', 'normal', 'xavier', 'zeros', or None\n    bias: bool, whether to include bias term\n    NLtype: str, 'lin', 'relu', 'tanh', 'sigmoid', 'elu', 'none'</p>\n", "bases": "NDNT.modules.layers.ndnlayer.NDNLayer"}, "NDNT.modules.layers.laglayers.LagLayer.__init__": {"fullname": "NDNT.modules.layers.laglayers.LagLayer.__init__", "modulename": "NDNT.modules.layers.laglayers", "qualname": "LagLayer.__init__", "kind": "function", "doc": "<p>Initialize the layer.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>input_dims:</strong>  tuple or list of ints, (num_channels, height, width, lags)</li>\n<li><strong>num_filters:</strong>  int, number of output filters</li>\n<li><strong>num_lags:</strong>  int, number of lags in spatiotemporal filter</li>\n<li><strong>**kwargs:</strong>  keyword arguments to pass to the parent class</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">input_dims</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">num_filters</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">num_lags</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "NDNT.modules.layers.laglayers.LagLayer.num_lags": {"fullname": "NDNT.modules.layers.laglayers.LagLayer.num_lags", "modulename": "NDNT.modules.layers.laglayers", "qualname": "LagLayer.num_lags", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.laglayers.LagLayer.num_folded_dims": {"fullname": "NDNT.modules.layers.laglayers.LagLayer.num_folded_dims", "modulename": "NDNT.modules.layers.laglayers", "qualname": "LagLayer.num_folded_dims", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.laglayers.LagLayer.forward": {"fullname": "NDNT.modules.layers.laglayers.LagLayer.forward", "modulename": "NDNT.modules.layers.laglayers", "qualname": "LagLayer.forward", "kind": "function", "doc": "<p>Forward pass through the layer.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>x:</strong>  torch.Tensor, input tensor of shape (batch_size, *input_dims)</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>y: torch.Tensor, output tensor of shape (batch_size, *output_dims)</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.laglayers.LagLayer.plot_filters": {"fullname": "NDNT.modules.layers.laglayers.LagLayer.plot_filters", "modulename": "NDNT.modules.layers.laglayers", "qualname": "LagLayer.plot_filters", "kind": "function", "doc": "<p>Overload plot_filters to automatically time_reverse.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>cmaps:</strong>  str or list of str, colormap(s) to use for plotting</li>\n<li><strong>num_cols:</strong>  int, number of columns in the plot</li>\n<li><strong>row_height:</strong>  int, height of each row in the plot</li>\n<li><strong>time_reverse:</strong>  bool, whether to reverse the time axis</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>fig: matplotlib.figure.Figure, the figure object\n  axs: list of matplotlib.axes.Axes, the axes objects</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">cmaps</span><span class=\"o\">=</span><span class=\"s1\">&#39;gray&#39;</span>, </span><span class=\"param\"><span class=\"n\">num_cols</span><span class=\"o\">=</span><span class=\"mi\">8</span>, </span><span class=\"param\"><span class=\"n\">row_height</span><span class=\"o\">=</span><span class=\"mi\">2</span>, </span><span class=\"param\"><span class=\"n\">time_reverse</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.laglayers.LagLayer.layer_dict": {"fullname": "NDNT.modules.layers.laglayers.LagLayer.layer_dict", "modulename": "NDNT.modules.layers.laglayers", "qualname": "LagLayer.layer_dict", "kind": "function", "doc": "<p>This outputs a dictionary of parameters that need to input into the layer to completely specify.\nOutput is a dictionary with these keywords. \n-- All layer-specific inputs are included in the returned dict\n-- Values that must be set are set to empty lists\n-- Other values will be given their defaults</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>num_lags:</strong>  int, number of lags in spatiotemporal filter</li>\n<li><strong>**kwargs:</strong>  keyword arguments to pass to the parent class</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Ldict: dict, dictionary of layer parameters</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">num_lags</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.lvlayers": {"fullname": "NDNT.modules.layers.lvlayers", "modulename": "NDNT.modules.layers.lvlayers", "kind": "module", "doc": "<p></p>\n"}, "NDNT.modules.layers.lvlayers.LVLayer": {"fullname": "NDNT.modules.layers.lvlayers.LVLayer", "modulename": "NDNT.modules.layers.lvlayers", "qualname": "LVLayer", "kind": "class", "doc": "<p>Generates output at based on a number of LVs, sampled by time point.\nEach LV has T weights, and can be many LVs (so weight matrix is T x NLVs.\nRequires specifically formatted input that passes in indices of LVs and relative\nweight, so will linearly interpolate. Also, can have trial-structure so will have \ntemporal reg that does not need to go across trials</p>\n\n<p>Input will specifically be of form of (for each batch point):\n[index1, index2, w1]  and output will be w1<em>LV(i1) + (1-w1)</em>LV(i2)</p>\n", "bases": "NDNT.modules.layers.ndnlayer.NDNLayer"}, "NDNT.modules.layers.lvlayers.LVLayer.__init__": {"fullname": "NDNT.modules.layers.lvlayers.LVLayer.__init__", "modulename": "NDNT.modules.layers.lvlayers", "qualname": "LVLayer.__init__", "kind": "function", "doc": "<p>If num_trials is None, then assumes one continuous sequence, otherwise will assume num_time_pnts\nis per-trial, and dimensionality of filter is [num_trials, 1, 1, num_time_pnts].</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>num_time_pnts:</strong>  int, number of time points</li>\n<li><strong>num_lvs:</strong>  int, number of latent variables</li>\n<li><strong>num_trials:</strong>  int, number of trials</li>\n<li><strong>norm_type:</strong>  int, normalization type</li>\n<li><strong>weights_initializer:</strong>  str, 'uniform', 'normal', 'xavier', 'zeros', or None</li>\n<li><strong>**kwargs:</strong>  keyword arguments to pass to the parent class</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">num_time_pnts</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">num_lvs</span><span class=\"o\">=</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">num_trials</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">norm_type</span><span class=\"o\">=</span><span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">weights_initializer</span><span class=\"o\">=</span><span class=\"s1\">&#39;normal&#39;</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "NDNT.modules.layers.lvlayers.LVLayer.preprocess_weights": {"fullname": "NDNT.modules.layers.lvlayers.LVLayer.preprocess_weights", "modulename": "NDNT.modules.layers.lvlayers", "qualname": "LVLayer.preprocess_weights", "kind": "function", "doc": "<p>Preprocesses weights by applying positivity constraint and normalization.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>w: torch.Tensor, preprocessed weights</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.lvlayers.LVLayer.forward": {"fullname": "NDNT.modules.layers.lvlayers.LVLayer.forward", "modulename": "NDNT.modules.layers.lvlayers", "qualname": "LVLayer.forward", "kind": "function", "doc": "<p>Assumes input of B x 3 (where three numbers are indexes of 2 surrounding LV and relative weight of LV1).</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>x:</strong>  torch.Tensor, input tensor.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>y: torch.Tensor, output tensor.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"fullname": "NDNT.modules.layers.lvlayers.LVLayer.layer_dict", "modulename": "NDNT.modules.layers.lvlayers", "qualname": "LVLayer.layer_dict", "kind": "function", "doc": "<p>This outputs a dictionary of parameters that need to input into the layer to completely specify.\nOutput is a dictionary with these keywords. \n-- All layer-specific inputs are included in the returned dict\n-- Values that must be set are set to empty lists\n-- Other values will be given their defaults</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>num_time_pnts:</strong>  int, number of time points</li>\n<li><strong>num_lvs:</strong>  int, number of latent variables</li>\n<li><strong>num_trials:</strong>  int, number of trials</li>\n<li><strong>weights_initializer:</strong>  str, 'uniform', 'normal', 'xavier', 'zeros', or None</li>\n<li><strong>**kwargs:</strong>  keyword arguments to pass to the parent class</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">num_time_pnts</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">num_lvs</span><span class=\"o\">=</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">num_trials</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">weights_initializer</span><span class=\"o\">=</span><span class=\"s1\">&#39;normal&#39;</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.lvlayers.LVLayerOLD": {"fullname": "NDNT.modules.layers.lvlayers.LVLayerOLD", "modulename": "NDNT.modules.layers.lvlayers", "qualname": "LVLayerOLD", "kind": "class", "doc": "<p>No input. Produces LVs sampled from mu/sigma at each time step\nCould make tent functions for smoothness over time as well</p>\n", "bases": "NDNT.modules.layers.ndnlayer.NDNLayer"}, "NDNT.modules.layers.lvlayers.LVLayerOLD.__init__": {"fullname": "NDNT.modules.layers.lvlayers.LVLayerOLD.__init__", "modulename": "NDNT.modules.layers.lvlayers", "qualname": "LVLayerOLD.__init__", "kind": "function", "doc": "<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li>num_time_points</li>\n<li><strong>num_lvs:</strong>  default 1</li>\n<li><strong>init_mu_range:</strong>  default 0.1</li>\n<li><strong>init_sigma:</strong> </li>\n<li><strong>sm_reg:</strong>  smoothness regularization penalty</li>\n<li><strong>gauss_type:</strong>  isotropic</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">num_time_pnts</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">num_lvs</span><span class=\"o\">=</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">init_mu_range</span><span class=\"o\">=</span><span class=\"mf\">0.5</span>,</span><span class=\"param\">\t<span class=\"n\">init_sigma</span><span class=\"o\">=</span><span class=\"mf\">1.0</span>,</span><span class=\"param\">\t<span class=\"n\">sigma_shape</span><span class=\"o\">=</span><span class=\"s1\">&#39;lv&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">input_dims</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "NDNT.modules.layers.lvlayers.LVLayerOLD.numLVs": {"fullname": "NDNT.modules.layers.lvlayers.LVLayerOLD.numLVs", "modulename": "NDNT.modules.layers.lvlayers", "qualname": "LVLayerOLD.numLVs", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.lvlayers.LVLayerOLD.nt": {"fullname": "NDNT.modules.layers.lvlayers.LVLayerOLD.nt", "modulename": "NDNT.modules.layers.lvlayers", "qualname": "LVLayerOLD.nt", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.lvlayers.LVLayerOLD.init_mu_range": {"fullname": "NDNT.modules.layers.lvlayers.LVLayerOLD.init_mu_range", "modulename": "NDNT.modules.layers.lvlayers", "qualname": "LVLayerOLD.init_mu_range", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.lvlayers.LVLayerOLD.init_sigma": {"fullname": "NDNT.modules.layers.lvlayers.LVLayerOLD.init_sigma", "modulename": "NDNT.modules.layers.lvlayers", "qualname": "LVLayerOLD.init_sigma", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.lvlayers.LVLayerOLD.sigma": {"fullname": "NDNT.modules.layers.lvlayers.LVLayerOLD.sigma", "modulename": "NDNT.modules.layers.lvlayers", "qualname": "LVLayerOLD.sigma", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.lvlayers.LVLayerOLD.sm_skips": {"fullname": "NDNT.modules.layers.lvlayers.LVLayerOLD.sm_skips", "modulename": "NDNT.modules.layers.lvlayers", "qualname": "LVLayerOLD.sm_skips", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.lvlayers.LVLayerOLD.sample": {"fullname": "NDNT.modules.layers.lvlayers.LVLayerOLD.sample", "modulename": "NDNT.modules.layers.lvlayers", "qualname": "LVLayerOLD.sample", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.lvlayers.LVLayerOLD.weight_scale": {"fullname": "NDNT.modules.layers.lvlayers.LVLayerOLD.weight_scale", "modulename": "NDNT.modules.layers.lvlayers", "qualname": "LVLayerOLD.weight_scale", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.lvlayers.LVLayerOLD.forward": {"fullname": "NDNT.modules.layers.lvlayers.LVLayerOLD.forward", "modulename": "NDNT.modules.layers.lvlayers", "qualname": "LVLayerOLD.forward", "kind": "function", "doc": "<p>Input has to be time-indices of what data is being indexed</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>x:</strong>  time-indices of LVs</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>z: output LVs</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"fullname": "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict", "modulename": "NDNT.modules.layers.lvlayers", "qualname": "LVLayerOLD.layer_dict", "kind": "function", "doc": "<p>This outputs a dictionary of parameters that need to input into the layer to completely specify.\nOutput is a dictionary with these keywords. \n-- All layer-specific inputs are included in the returned dict\n-- Values that must be set are set to empty lists\n-- Other values will be given their defaults</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>num_time_pnts:</strong>  int, number of time points</li>\n<li><strong>num_lvs:</strong>  int, number of latent variables</li>\n<li><strong>init_mu:</strong>  float, initial mean value</li>\n<li><strong>init_sigma:</strong>  float, initial sigma value</li>\n<li><strong>sigma_shape:</strong>  str, 'full', 'lv', or 'time'</li>\n<li><strong>**kwargs:</strong>  keyword arguments to pass to the parent class</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Ldict: dict, dictionary of layer parameters</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">num_time_pnts</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">init_mu</span><span class=\"o\">=</span><span class=\"mf\">0.5</span>,</span><span class=\"param\">\t<span class=\"n\">init_sigma</span><span class=\"o\">=</span><span class=\"mf\">1.0</span>,</span><span class=\"param\">\t<span class=\"n\">num_lvs</span><span class=\"o\">=</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">sigma_shape</span><span class=\"o\">=</span><span class=\"s1\">&#39;lv&#39;</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.ndnlayer": {"fullname": "NDNT.modules.layers.ndnlayer", "modulename": "NDNT.modules.layers.ndnlayer", "kind": "module", "doc": "<p></p>\n"}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"fullname": "NDNT.modules.layers.ndnlayer.NDNLayer", "modulename": "NDNT.modules.layers.ndnlayer", "qualname": "NDNLayer", "kind": "class", "doc": "<p>Base class for NDN layers.\nHandles the weight initialization and regularization</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>input_dims:</strong>  list of 4 ints, dimensions of input\n[Channels, Height, Width, Lags]\nuse 1 if the dimension is not used</li>\n<li><strong>num_filters:</strong>  int, number of filters in layer</li>\n<li><strong>NLtype:</strong>  str, type of nonlinearity to use (see activations.py)</li>\n<li><strong>norm:</strong>  int, type of filter normalization to use (0=None, 1=filters are unit vectors, 2=maxnorm?)</li>\n<li><strong>pos_constraint:</strong>  bool, whether to constrain weights to be positive</li>\n<li><strong>num_inh:</strong>  int, number of inhibitory units (creates ei_mask and makes \"inhibitory\" units have negative output)</li>\n<li><strong>bias:</strong>  bool, whether to include bias term</li>\n<li><strong>weight_init:</strong>  str, type of weight initialization to use (see reset_parameters, default 'xavier_uniform')</li>\n<li><strong>bias_init:</strong>  str, type of bias initialization to use (see reset_parameters, default 'zeros')</li>\n<li><strong>reg_vals:</strong>  dict, regularization values to use (see regularizers.py)</li>\n</ul>\n\n<p>NDNLayers have parameters 'weight' and 'bias' (if bias=True)</p>\n\n<h6 id=\"the-forward-has-steps\">The forward has steps:</h6>\n\n<blockquote>\n  <ol>\n  <li>preprocess_weights</li>\n  <li>main computation (this is just a linear layer for the base class)</li>\n  <li>nonlinearity</li>\n  <li>ei_mask</li>\n  </ol>\n</blockquote>\n\n<p>weight is always flattened to a vector, and then reshaped to the appropriate size\nuse get_weights() to get the weights in the correct shape</p>\n\n<p>preprocess_weights() applies positive constraint and normalization if requested\ncompute_reg_loss() computes the regularization loss for the regularization specified in reg_vals</p>\n", "bases": "torch.nn.modules.module.Module"}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"fullname": "NDNT.modules.layers.ndnlayer.NDNLayer.__init__", "modulename": "NDNT.modules.layers.ndnlayer", "qualname": "NDNLayer.__init__", "kind": "function", "doc": "<p>Initialize the layer.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>input_dims:</strong>  list of 4 ints, dimensions of input</li>\n<li><strong>num_filters:</strong>  int, number of filters in layer</li>\n<li><strong>NLtype:</strong>  str, type of nonlinearity to use (see activations.py)</li>\n<li><strong>norm:</strong>  int, type of filter normalization to use (0=None, 1=filters are unit vectors, 2=maxnorm?)</li>\n<li><strong>pos_constraint:</strong>  bool, whether to constrain weights to be positive</li>\n<li><strong>num_inh:</strong>  int, number of inhibitory units (creates ei_mask and makes \"inhibitory\" units have negative output)</li>\n<li><strong>bias:</strong>  bool, whether to include bias term</li>\n<li><strong>weight_init:</strong>  str, type of weight initialization to use (see reset_parameters, default 'xavier_uniform')</li>\n<li><strong>bias_init:</strong>  str, type of bias initialization to use (see reset_parameters, default 'zeros')</li>\n<li><strong>reg_vals:</strong>  dict, regularization values to use (see regularizers.py)</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">input_dims</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">num_filters</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">filter_dims</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">NLtype</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;lin&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">norm_type</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">pos_constraint</span><span class=\"o\">=</span><span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">num_inh</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">bias</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">weights_initializer</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;xavier_uniform&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">output_norm</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">initialize_center</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">bias_initializer</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;zeros&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">reg_vals</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "NDNT.modules.layers.ndnlayer.NDNLayer.input_dims": {"fullname": "NDNT.modules.layers.ndnlayer.NDNLayer.input_dims", "modulename": "NDNT.modules.layers.ndnlayer", "qualname": "NDNLayer.input_dims", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.ndnlayer.NDNLayer.num_filters": {"fullname": "NDNT.modules.layers.ndnlayer.NDNLayer.num_filters", "modulename": "NDNT.modules.layers.ndnlayer", "qualname": "NDNLayer.num_filters", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.ndnlayer.NDNLayer.output_dims": {"fullname": "NDNT.modules.layers.ndnlayer.NDNLayer.output_dims", "modulename": "NDNT.modules.layers.ndnlayer", "qualname": "NDNLayer.output_dims", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.ndnlayer.NDNLayer.norm_type": {"fullname": "NDNT.modules.layers.ndnlayer.NDNLayer.norm_type", "modulename": "NDNT.modules.layers.ndnlayer", "qualname": "NDNLayer.norm_type", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.ndnlayer.NDNLayer.pos_constraint": {"fullname": "NDNT.modules.layers.ndnlayer.NDNLayer.pos_constraint", "modulename": "NDNT.modules.layers.ndnlayer", "qualname": "NDNLayer.pos_constraint", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.ndnlayer.NDNLayer.conv": {"fullname": "NDNT.modules.layers.ndnlayer.NDNLayer.conv", "modulename": "NDNT.modules.layers.ndnlayer", "qualname": "NDNLayer.conv", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.ndnlayer.NDNLayer.NL": {"fullname": "NDNT.modules.layers.ndnlayer.NDNLayer.NL", "modulename": "NDNT.modules.layers.ndnlayer", "qualname": "NDNLayer.NL", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.ndnlayer.NDNLayer.shape": {"fullname": "NDNT.modules.layers.ndnlayer.NDNLayer.shape", "modulename": "NDNT.modules.layers.ndnlayer", "qualname": "NDNLayer.shape", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.ndnlayer.NDNLayer.weight_scale": {"fullname": "NDNT.modules.layers.ndnlayer.NDNLayer.weight_scale", "modulename": "NDNT.modules.layers.ndnlayer", "qualname": "NDNLayer.weight_scale", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.ndnlayer.NDNLayer.weight": {"fullname": "NDNT.modules.layers.ndnlayer.NDNLayer.weight", "modulename": "NDNT.modules.layers.ndnlayer", "qualname": "NDNLayer.weight", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.ndnlayer.NDNLayer.reg": {"fullname": "NDNT.modules.layers.ndnlayer.NDNLayer.reg", "modulename": "NDNT.modules.layers.ndnlayer", "qualname": "NDNLayer.reg", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.ndnlayer.NDNLayer.num_inh": {"fullname": "NDNT.modules.layers.ndnlayer.NDNLayer.num_inh", "modulename": "NDNT.modules.layers.ndnlayer", "qualname": "NDNLayer.num_inh", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.ndnlayer.NDNLayer.reset_parameters": {"fullname": "NDNT.modules.layers.ndnlayer.NDNLayer.reset_parameters", "modulename": "NDNT.modules.layers.ndnlayer", "qualname": "NDNLayer.reset_parameters", "kind": "function", "doc": "<p>Initialize the weights and bias parameters of the layer.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>weights_initializer:</strong>  str, type of weight initialization to use\noptions: 'xavier_uniform', 'xavier_normal', 'kaiming_uniform', 'kaiming_normal', 'orthogonal', 'zeros', 'ones'</li>\n<li><strong>bias_initializer:</strong>  str, type of bias initialization to use\noptions: 'uniform', 'normal', 'zeros', 'ones'</li>\n<li><strong>param:</strong>  float or list of floats, parameter for weight initialization</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">weights_initializer</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">bias_initializer</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">param</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "NDNT.modules.layers.ndnlayer.NDNLayer.initialize_gaussian_envelope": {"fullname": "NDNT.modules.layers.ndnlayer.NDNLayer.initialize_gaussian_envelope", "modulename": "NDNT.modules.layers.ndnlayer", "qualname": "NDNLayer.initialize_gaussian_envelope", "kind": "function", "doc": "<p>Initialize the weights to have a Gaussian envelope.\nThis is useful for initializing filters to have a spatial-temporal Gaussian shape.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.ndnlayer.NDNLayer.preprocess_weights": {"fullname": "NDNT.modules.layers.ndnlayer.NDNLayer.preprocess_weights", "modulename": "NDNT.modules.layers.ndnlayer", "qualname": "NDNLayer.preprocess_weights", "kind": "function", "doc": "<p>Preprocess the weights before using them in the forward pass.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>w: torch.Tensor, preprocessed weights</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.ndnlayer.NDNLayer.forward": {"fullname": "NDNT.modules.layers.ndnlayer.NDNLayer.forward", "modulename": "NDNT.modules.layers.ndnlayer", "qualname": "NDNLayer.forward", "kind": "function", "doc": "<p>Forward pass for the layer.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>x:</strong>  torch.Tensor, input tensor</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>x: torch.Tensor, output tensor</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.ndnlayer.NDNLayer.compute_reg_loss": {"fullname": "NDNT.modules.layers.ndnlayer.NDNLayer.compute_reg_loss", "modulename": "NDNT.modules.layers.ndnlayer", "qualname": "NDNLayer.compute_reg_loss", "kind": "function", "doc": "<p>Compute the regularization loss for the layer.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>reg_loss: torch.Tensor, regularization loss</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.ndnlayer.NDNLayer.get_weights": {"fullname": "NDNT.modules.layers.ndnlayer.NDNLayer.get_weights", "modulename": "NDNT.modules.layers.ndnlayer", "qualname": "NDNLayer.get_weights", "kind": "function", "doc": "<p>num-inh can take into account previous layer inhibition weights.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>to_reshape:</strong>  bool, whether to reshape the weights to the original filter shape</li>\n<li><strong>time_reverse:</strong>  bool, whether to reverse the time dimension</li>\n<li><strong>num_inh:</strong>  int, number of inhibitory units</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>ws: np.ndarray, weights of the layer, on the CPU</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">to_reshape</span><span class=\"o\">=</span><span class=\"kc\">True</span>, </span><span class=\"param\"><span class=\"n\">time_reverse</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">num_inh</span><span class=\"o\">=</span><span class=\"mi\">0</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.ndnlayer.NDNLayer.list_parameters": {"fullname": "NDNT.modules.layers.ndnlayer.NDNLayer.list_parameters", "modulename": "NDNT.modules.layers.ndnlayer", "qualname": "NDNLayer.list_parameters", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.ndnlayer.NDNLayer.set_parameters": {"fullname": "NDNT.modules.layers.ndnlayer.NDNLayer.set_parameters", "modulename": "NDNT.modules.layers.ndnlayer", "qualname": "NDNLayer.set_parameters", "kind": "function", "doc": "<p>Turn fitting for named params on or off.\nIf name is none, do for whole layer.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">val</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.ndnlayer.NDNLayer.set_reg_val": {"fullname": "NDNT.modules.layers.ndnlayer.NDNLayer.set_reg_val", "modulename": "NDNT.modules.layers.ndnlayer", "qualname": "NDNLayer.set_reg_val", "kind": "function", "doc": "<p>Set the regularization value for a given regularization type.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>reg_type:</strong>  str, type of regularization to set</li>\n<li><strong>reg_val:</strong>  float, value to set the regularization to</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>None</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">reg_type</span>, </span><span class=\"param\"><span class=\"n\">reg_val</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.ndnlayer.NDNLayer.plot_filters": {"fullname": "NDNT.modules.layers.ndnlayer.NDNLayer.plot_filters", "modulename": "NDNT.modules.layers.ndnlayer", "qualname": "NDNLayer.plot_filters", "kind": "function", "doc": "<p>Plot the filters in the layer.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>cmaps:</strong>  str or colormap, colormap to use for plotting (default 'gray')</li>\n<li><strong>num_cols:</strong>  int, number of columns to use in plot (default 8)</li>\n<li><strong>row_height:</strong>  int, number of rows to use in plot (default 2)</li>\n<li><strong>time_reverse:</strong>  bool, whether to reverse the time dimension (default depends on dimension)</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>None</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">time_reverse</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.ndnlayer.NDNLayer.dim_info": {"fullname": "NDNT.modules.layers.ndnlayer.NDNLayer.dim_info", "modulename": "NDNT.modules.layers.ndnlayer", "qualname": "NDNLayer.dim_info", "kind": "function", "doc": "<p>This uses the methods in the init to determine the input_dims, output_dims, filter_dims, and actual size of\nthe weight tensor (weight_shape), given inputs, and package in a dictionary. This should be overloaded with each\nchild of NDNLayer if want to use -- but this is external to function of actual layer.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>input_dims:</strong>  list of 4 ints, dimensions of input</li>\n<li><strong>num_filters:</strong>  int, number of filters in layer</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>dinfo: dict, dictionary of dimension information</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">input_dims</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">num_filters</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"fullname": "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict", "modulename": "NDNT.modules.layers.ndnlayer", "qualname": "NDNLayer.layer_dict", "kind": "function", "doc": "<p>This outputs a dictionary of parameters that need to input into the layer to completely specify.\nOutput is a dictionary with these keywords. \n-- All layer-specific inputs are included in the returned dict\n-- Values that must be set are set to empty lists\n-- Other values will be given their defaults</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>input_dims:</strong>  list of 4 ints, dimensions of input</li>\n<li><strong>num_filters:</strong>  int, number of filters in layer</li>\n<li><strong>bias:</strong>  bool, whether to include bias term</li>\n<li><strong>NLtype:</strong>  str, type of nonlinearity to use (see activations.py)</li>\n<li><strong>norm_type:</strong>  int, type of filter normalization to use (0=None, 1=filters are unit vectors, 2=maxnorm?)</li>\n<li><strong>pos_constraint:</strong>  bool, whether to constrain weights to be positive</li>\n<li><strong>num_inh:</strong>  int, number of inhibitory units (creates ei_mask and makes \"inhibitory\" units have negative output)</li>\n<li><strong>initialize_center:</strong>  bool, whether to initialize the weights to have a Gaussian envelope</li>\n<li><strong>reg_vals:</strong>  dict, regularization values to use (see regularizers.py)</li>\n<li><strong>output_norm:</strong>  str, type of output normalization to use</li>\n<li><strong>weights_initializer:</strong>  str, type of weight initialization to use</li>\n<li><strong>bias_initializer:</strong>  str, type of bias initialization to use</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>dict: dictionary of layer parameters</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">input_dims</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">num_filters</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">bias</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">NLtype</span><span class=\"o\">=</span><span class=\"s1\">&#39;lin&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">norm_type</span><span class=\"o\">=</span><span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">initialize_center</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">num_inh</span><span class=\"o\">=</span><span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">pos_constraint</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">reg_vals</span><span class=\"o\">=</span><span class=\"p\">{}</span>,</span><span class=\"param\">\t<span class=\"n\">output_norm</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">weights_initializer</span><span class=\"o\">=</span><span class=\"s1\">&#39;xavier_uniform&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">bias_initializer</span><span class=\"o\">=</span><span class=\"s1\">&#39;zeros&#39;</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.normlayers": {"fullname": "NDNT.modules.layers.normlayers", "modulename": "NDNT.modules.layers.normlayers", "kind": "module", "doc": "<p></p>\n"}, "NDNT.modules.layers.normlayers.DivNormLayer": {"fullname": "NDNT.modules.layers.normlayers.DivNormLayer", "modulename": "NDNT.modules.layers.normlayers", "qualname": "DivNormLayer", "kind": "class", "doc": "<p>Divisive normalization implementation: not explicitly convolutional.</p>\n", "bases": "NDNT.modules.layers.ndnlayer.NDNLayer"}, "NDNT.modules.layers.normlayers.DivNormLayer.__init__": {"fullname": "NDNT.modules.layers.normlayers.DivNormLayer.__init__", "modulename": "NDNT.modules.layers.normlayers", "qualname": "DivNormLayer.__init__", "kind": "function", "doc": "<p>Divisive normalization layer.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>input_dims:</strong>  list or tuple of ints, dimensions of input tensor.</li>\n<li><strong>num_filters:</strong>  int, number of filters to use.</li>\n<li><strong>filter_dims:</strong>  list or tuple of ints, dimensions of filter tensor.</li>\n<li><strong>pos_constraint:</strong>  bool, if True, apply a positivity constraint to the weights.</li>\n<li><strong>bias:</strong>  bool, if True, include a bias term.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">input_dims</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">num_filters</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">filter_dims</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">pos_constraint</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">bias</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "NDNT.modules.layers.normlayers.DivNormLayer.output_dims": {"fullname": "NDNT.modules.layers.normlayers.DivNormLayer.output_dims", "modulename": "NDNT.modules.layers.normlayers", "qualname": "DivNormLayer.output_dims", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.normlayers.DivNormLayer.num_outputs": {"fullname": "NDNT.modules.layers.normlayers.DivNormLayer.num_outputs", "modulename": "NDNT.modules.layers.normlayers", "qualname": "DivNormLayer.num_outputs", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.normlayers.DivNormLayer.preprocess_weights": {"fullname": "NDNT.modules.layers.normlayers.DivNormLayer.preprocess_weights", "modulename": "NDNT.modules.layers.normlayers", "qualname": "DivNormLayer.preprocess_weights", "kind": "function", "doc": "<p>Preprocesses weights by applying positivity constraint and normalization.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>w: torch.Tensor, preprocessed weights.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.normlayers.DivNormLayer.forward": {"fullname": "NDNT.modules.layers.normlayers.DivNormLayer.forward", "modulename": "NDNT.modules.layers.normlayers", "qualname": "DivNormLayer.forward", "kind": "function", "doc": "<p>Forward pass for divisive normalization layer.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>x:</strong>  torch.Tensor, input tensor.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>x: torch.Tensor, output tensor.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.orilayers": {"fullname": "NDNT.modules.layers.orilayers", "modulename": "NDNT.modules.layers.orilayers", "kind": "module", "doc": "<p></p>\n"}, "NDNT.modules.layers.orilayers.OriLayer": {"fullname": "NDNT.modules.layers.orilayers.OriLayer", "modulename": "NDNT.modules.layers.orilayers", "qualname": "OriLayer", "kind": "class", "doc": "<p>Orientation layer.</p>\n", "bases": "NDNT.modules.layers.ndnlayer.NDNLayer"}, "NDNT.modules.layers.orilayers.OriLayer.__init__": {"fullname": "NDNT.modules.layers.orilayers.OriLayer.__init__", "modulename": "NDNT.modules.layers.orilayers", "qualname": "OriLayer.__init__", "kind": "function", "doc": "<p>Initialize orientation layer.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>input_dims:</strong>  input dimensions</li>\n<li><strong>num_filters:</strong>  number of filters</li>\n<li><strong>filter_dims:</strong>  filter dimensions</li>\n<li><strong>angles:</strong>  angles for rotation (in degrees)</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">input_dims</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">num_filters</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">filter_dims</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">angles</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "NDNT.modules.layers.orilayers.OriLayer.angles": {"fullname": "NDNT.modules.layers.orilayers.OriLayer.angles", "modulename": "NDNT.modules.layers.orilayers", "qualname": "OriLayer.angles", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.orilayers.OriLayer.output_dims": {"fullname": "NDNT.modules.layers.orilayers.OriLayer.output_dims", "modulename": "NDNT.modules.layers.orilayers", "qualname": "OriLayer.output_dims", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.orilayers.OriLayer.rotation_matrix_tensor": {"fullname": "NDNT.modules.layers.orilayers.OriLayer.rotation_matrix_tensor", "modulename": "NDNT.modules.layers.orilayers", "qualname": "OriLayer.rotation_matrix_tensor", "kind": "function", "doc": "<p>Create a rotation matrix tensor for each angle in theta_list.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>filter_dims:</strong>  filter dimensions</li>\n<li><strong>theta_list:</strong>  list of angles in degrees</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>rotation_matrix_tensor: rotation matrix tensor</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">filter_dims</span>, </span><span class=\"param\"><span class=\"n\">theta_list</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.orilayers.OriLayer.forward": {"fullname": "NDNT.modules.layers.orilayers.OriLayer.forward", "modulename": "NDNT.modules.layers.orilayers", "qualname": "OriLayer.forward", "kind": "function", "doc": "<p>Forward pass through the layer.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>x:</strong>  torch.Tensor, input tensor of shape (batch_size, *input_dims)</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>y: torch.Tensor, output tensor of shape (batch_size, *output_dims)</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.orilayers.OriLayer.layer_dict": {"fullname": "NDNT.modules.layers.orilayers.OriLayer.layer_dict", "modulename": "NDNT.modules.layers.orilayers", "qualname": "OriLayer.layer_dict", "kind": "function", "doc": "<p>This outputs a dictionary of parameters that need to input into the layer to completely specify.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>angles:</strong>  list of angles for rotation (in degrees)</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Ldict: dict, dictionary of layer parameters</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">angles</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.orilayers.OriConvLayer": {"fullname": "NDNT.modules.layers.orilayers.OriConvLayer", "modulename": "NDNT.modules.layers.orilayers", "qualname": "OriConvLayer", "kind": "class", "doc": "<p>Orientation layer.</p>\n", "bases": "NDNT.modules.layers.convlayers.ConvLayer"}, "NDNT.modules.layers.orilayers.OriConvLayer.__init__": {"fullname": "NDNT.modules.layers.orilayers.OriConvLayer.__init__", "modulename": "NDNT.modules.layers.orilayers", "qualname": "OriConvLayer.__init__", "kind": "function", "doc": "<p>Initialize orientation layer.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>input_dims:</strong>  input dimensions</li>\n<li><strong>num_filters:</strong>  number of filters</li>\n<li><strong>filter_dims:</strong>  filter dimensions</li>\n<li><strong>angles:</strong>  angles for rotation (in degrees)</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">input_dims</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">num_filters</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">res_layer</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">filter_dims</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">padding</span><span class=\"o\">=</span><span class=\"s1\">&#39;valid&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">output_norm</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">angles</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "NDNT.modules.layers.orilayers.OriConvLayer.angles": {"fullname": "NDNT.modules.layers.orilayers.OriConvLayer.angles", "modulename": "NDNT.modules.layers.orilayers", "qualname": "OriConvLayer.angles", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.orilayers.OriConvLayer.folded_dims": {"fullname": "NDNT.modules.layers.orilayers.OriConvLayer.folded_dims", "modulename": "NDNT.modules.layers.orilayers", "qualname": "OriConvLayer.folded_dims", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.orilayers.OriConvLayer.output_dims": {"fullname": "NDNT.modules.layers.orilayers.OriConvLayer.output_dims", "modulename": "NDNT.modules.layers.orilayers", "qualname": "OriConvLayer.output_dims", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.orilayers.OriConvLayer.rotation_matrix_tensor": {"fullname": "NDNT.modules.layers.orilayers.OriConvLayer.rotation_matrix_tensor", "modulename": "NDNT.modules.layers.orilayers", "qualname": "OriConvLayer.rotation_matrix_tensor", "kind": "function", "doc": "<p>Create a rotation matrix tensor for each angle in theta_list.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>filter_dims:</strong>  filter dimensions</li>\n<li><strong>theta_list:</strong>  list of angles in degrees</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>rotation_matrix_tensor: rotation matrix tensor</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">filter_dims</span>, </span><span class=\"param\"><span class=\"n\">theta_list</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.orilayers.OriConvLayer.get_rot_mat": {"fullname": "NDNT.modules.layers.orilayers.OriConvLayer.get_rot_mat", "modulename": "NDNT.modules.layers.orilayers", "qualname": "OriConvLayer.get_rot_mat", "kind": "function", "doc": "<p>Get a rotation matrix for a given angle.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>theta:</strong>  angle in radians</li>\n<li><strong>device:</strong>  device to put the tensor on</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>rot_mat: rotation matrix</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">theta</span>, </span><span class=\"param\"><span class=\"n\">device</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.orilayers.OriConvLayer.rotate_tensor": {"fullname": "NDNT.modules.layers.orilayers.OriConvLayer.rotate_tensor", "modulename": "NDNT.modules.layers.orilayers", "qualname": "OriConvLayer.rotate_tensor", "kind": "function", "doc": "<p>Rotate a tensor by a given angle.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>x:</strong>  input tensor</li>\n<li><strong>theta:</strong>  angle in radians</li>\n<li><strong>dtype:</strong>  data type</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span>, </span><span class=\"param\"><span class=\"n\">theta</span>, </span><span class=\"param\"><span class=\"n\">dtype</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.orilayers.OriConvLayer.forward": {"fullname": "NDNT.modules.layers.orilayers.OriConvLayer.forward", "modulename": "NDNT.modules.layers.orilayers", "qualname": "OriConvLayer.forward", "kind": "function", "doc": "<p>Forward pass through the layer.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>x:</strong>  torch.Tensor, input tensor of shape (batch_size, *input_dims)</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>y: torch.Tensor, output tensor of shape (batch_size, *output_dims)</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.orilayers.OriConvLayer.layer_dict": {"fullname": "NDNT.modules.layers.orilayers.OriConvLayer.layer_dict", "modulename": "NDNT.modules.layers.orilayers", "qualname": "OriConvLayer.layer_dict", "kind": "function", "doc": "<p>This outputs a dictionary of parameters that need to input into the layer to completely specify.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>angles:</strong>  list of angles for rotation (in degrees)</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Ldict: dict, dictionary of layer parameters</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">angles</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.orilayers.ConvLayer3D": {"fullname": "NDNT.modules.layers.orilayers.ConvLayer3D", "modulename": "NDNT.modules.layers.orilayers", "qualname": "ConvLayer3D", "kind": "class", "doc": "<p>3D convolutional layer.</p>\n", "bases": "NDNT.modules.layers.convlayers.ConvLayer"}, "NDNT.modules.layers.orilayers.ConvLayer3D.__init__": {"fullname": "NDNT.modules.layers.orilayers.ConvLayer3D.__init__", "modulename": "NDNT.modules.layers.orilayers", "qualname": "ConvLayer3D.__init__", "kind": "function", "doc": "<p>Initialize 3D convolutional layer.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>input_dims:</strong>  input dimensions</li>\n<li><strong>filter_width:</strong>  filter width</li>\n<li><strong>ori_filter_width:</strong>  orientation filter width</li>\n<li><strong>num_filters:</strong>  number of filters</li>\n<li><strong>output_norm:</strong>  output normalization</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">input_dims</span><span class=\"p\">:</span> <span class=\"nb\">list</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">filter_width</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">ori_filter_width</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">num_filters</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">output_norm</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "NDNT.modules.layers.orilayers.ConvLayer3D.ori_padding": {"fullname": "NDNT.modules.layers.orilayers.ConvLayer3D.ori_padding", "modulename": "NDNT.modules.layers.orilayers", "qualname": "ConvLayer3D.ori_padding", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.orilayers.ConvLayer3D.input_dims": {"fullname": "NDNT.modules.layers.orilayers.ConvLayer3D.input_dims", "modulename": "NDNT.modules.layers.orilayers", "qualname": "ConvLayer3D.input_dims", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.orilayers.ConvLayer3D.output_dims": {"fullname": "NDNT.modules.layers.orilayers.ConvLayer3D.output_dims", "modulename": "NDNT.modules.layers.orilayers", "qualname": "ConvLayer3D.output_dims", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.orilayers.ConvLayer3D.forward": {"fullname": "NDNT.modules.layers.orilayers.ConvLayer3D.forward", "modulename": "NDNT.modules.layers.orilayers", "qualname": "ConvLayer3D.forward", "kind": "function", "doc": "<p>Forward pass through the layer.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>x:</strong>  torch.Tensor, input tensor of shape (batch_size, *input_dims)</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>y: torch.Tensor, output tensor of shape (batch_size, *output_dims)</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.orilayers.ConvLayer3D.plot_filters": {"fullname": "NDNT.modules.layers.orilayers.ConvLayer3D.plot_filters", "modulename": "NDNT.modules.layers.orilayers", "qualname": "ConvLayer3D.plot_filters", "kind": "function", "doc": "<p>Plot the filters.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>cmaps:</strong>  color map</li>\n<li><strong>num_cols:</strong>  number of columns</li>\n<li><strong>row_height:</strong>  row height</li>\n<li><strong>time_reverse:</strong>  time reverse</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>fig: figure\n  axs: axes</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">cmaps</span><span class=\"o\">=</span><span class=\"s1\">&#39;gray&#39;</span>, </span><span class=\"param\"><span class=\"n\">num_cols</span><span class=\"o\">=</span><span class=\"mi\">8</span>, </span><span class=\"param\"><span class=\"n\">row_height</span><span class=\"o\">=</span><span class=\"mi\">2</span>, </span><span class=\"param\"><span class=\"n\">time_reverse</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.orilayers.ConvLayer3D.layer_dict": {"fullname": "NDNT.modules.layers.orilayers.ConvLayer3D.layer_dict", "modulename": "NDNT.modules.layers.orilayers", "qualname": "ConvLayer3D.layer_dict", "kind": "function", "doc": "<p>This outputs a dictionary of parameters that need to input into the layer to completely specify.\nOutput is a dictionary with these keywords. \n-- All layer-specific inputs are included in the returned dict\n-- Values that must be set are set to empty lists\n-- Other values will be given their defaults</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>filter_width:</strong>  filter width</li>\n<li><strong>ori_filter_width:</strong>  orientation filter width</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">filter_width</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">ori_filter_width</span><span class=\"o\">=</span><span class=\"mi\">1</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.readouts": {"fullname": "NDNT.modules.layers.readouts", "modulename": "NDNT.modules.layers.readouts", "kind": "module", "doc": "<p></p>\n"}, "NDNT.modules.layers.readouts.ReadoutLayer": {"fullname": "NDNT.modules.layers.readouts.ReadoutLayer", "modulename": "NDNT.modules.layers.readouts", "qualname": "ReadoutLayer", "kind": "class", "doc": "<p>ReadoutLayer for spatial readout.</p>\n", "bases": "NDNT.modules.layers.ndnlayer.NDNLayer"}, "NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"fullname": "NDNT.modules.layers.readouts.ReadoutLayer.__init__", "modulename": "NDNT.modules.layers.readouts", "qualname": "ReadoutLayer.__init__", "kind": "function", "doc": "<p>ReadoutLayer: Spatial readout layer for NDNs.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>input_dims:</strong>  tuple or list of ints, (num_channels, height, width, lags)</li>\n<li><strong>num_filters:</strong>  number of output filters</li>\n<li><strong>filter_dims:</strong>  tuple or list of ints, (num_channels, height, width, lags)</li>\n<li><strong>batch_sample:</strong>  bool, whether to sample grid locations separately per sample per batch</li>\n<li><strong>init_mu_range:</strong>  float, range for uniform initialization of means</li>\n<li><strong>init_sigma:</strong>  float, standard deviation for uniform initialization of sigmas</li>\n<li><strong>gauss_type:</strong>  str, 'isotropic', 'uncorrelated', or 'full'</li>\n<li><strong>align_corners:</strong>  bool, whether to align corners in grid_sample</li>\n<li><strong>mode:</strong>  str, 'bilinear' or 'nearest'</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">input_dims</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">num_filters</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">filter_dims</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">batch_sample</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">init_mu_range</span><span class=\"o\">=</span><span class=\"mf\">0.1</span>,</span><span class=\"param\">\t<span class=\"n\">init_sigma</span><span class=\"o\">=</span><span class=\"mf\">0.2</span>,</span><span class=\"param\">\t<span class=\"n\">gauss_type</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;uncorrelated&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">align_corners</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"s1\">&#39;bilinear&#39;</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "NDNT.modules.layers.readouts.ReadoutLayer.batch_sample": {"fullname": "NDNT.modules.layers.readouts.ReadoutLayer.batch_sample", "modulename": "NDNT.modules.layers.readouts", "qualname": "ReadoutLayer.batch_sample", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_mode": {"fullname": "NDNT.modules.layers.readouts.ReadoutLayer.sample_mode", "modulename": "NDNT.modules.layers.readouts", "qualname": "ReadoutLayer.sample_mode", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.readouts.ReadoutLayer.init_mu_range": {"fullname": "NDNT.modules.layers.readouts.ReadoutLayer.init_mu_range", "modulename": "NDNT.modules.layers.readouts", "qualname": "ReadoutLayer.init_mu_range", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.readouts.ReadoutLayer.init_sigma": {"fullname": "NDNT.modules.layers.readouts.ReadoutLayer.init_sigma", "modulename": "NDNT.modules.layers.readouts", "qualname": "ReadoutLayer.init_sigma", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.readouts.ReadoutLayer.align_corners": {"fullname": "NDNT.modules.layers.readouts.ReadoutLayer.align_corners", "modulename": "NDNT.modules.layers.readouts", "qualname": "ReadoutLayer.align_corners", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.readouts.ReadoutLayer.grid_shape": {"fullname": "NDNT.modules.layers.readouts.ReadoutLayer.grid_shape", "modulename": "NDNT.modules.layers.readouts", "qualname": "ReadoutLayer.grid_shape", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.readouts.ReadoutLayer.mu": {"fullname": "NDNT.modules.layers.readouts.ReadoutLayer.mu", "modulename": "NDNT.modules.layers.readouts", "qualname": "ReadoutLayer.mu", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.readouts.ReadoutLayer.sigma": {"fullname": "NDNT.modules.layers.readouts.ReadoutLayer.sigma", "modulename": "NDNT.modules.layers.readouts", "qualname": "ReadoutLayer.sigma", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.readouts.ReadoutLayer.sample": {"fullname": "NDNT.modules.layers.readouts.ReadoutLayer.sample", "modulename": "NDNT.modules.layers.readouts", "qualname": "ReadoutLayer.sample", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.readouts.ReadoutLayer.features": {"fullname": "NDNT.modules.layers.readouts.ReadoutLayer.features", "modulename": "NDNT.modules.layers.readouts", "qualname": "ReadoutLayer.features", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.readouts.ReadoutLayer.grid": {"fullname": "NDNT.modules.layers.readouts.ReadoutLayer.grid", "modulename": "NDNT.modules.layers.readouts", "qualname": "ReadoutLayer.grid", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.readouts.ReadoutLayer.initialize_spatial_mapping": {"fullname": "NDNT.modules.layers.readouts.ReadoutLayer.initialize_spatial_mapping", "modulename": "NDNT.modules.layers.readouts", "qualname": "ReadoutLayer.initialize_spatial_mapping", "kind": "function", "doc": "<p>Initializes the mean, and sigma of the Gaussian readout.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li>None</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"fullname": "NDNT.modules.layers.readouts.ReadoutLayer.sample_grid", "modulename": "NDNT.modules.layers.readouts", "qualname": "ReadoutLayer.sample_grid", "kind": "function", "doc": "<p>Returns the grid locations from the core by sampling from a Gaussian distribution\nDAN: more specifically, it returns sampled positions for each batch over all elements, given mus and sigmas\nDAN: if not 'sample', it just gives mu back (so testing has no randomness)\nDAN: this is some funny bit of code, but don't think I need to touch it past what I did</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>batch_size (int):</strong>  size of the batch</li>\n<li><strong>sample (bool/None):</strong>  sample determines whether we draw a sample from Gaussian distribution, N(mu,sigma), defined per neuron\n or use the mean, mu, of the Gaussian distribution without sampling.\nif sample is None (default), samples from the N(mu,sigma) during training phase and\n  fixes to the mean, mu, during evaluation phase.\nif sample is True/False, overrides the model_state (i.e training or eval) and does as instructed</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">batch_size</span>, </span><span class=\"param\"><span class=\"n\">sample</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.readouts.ReadoutLayer.get_weights": {"fullname": "NDNT.modules.layers.readouts.ReadoutLayer.get_weights", "modulename": "NDNT.modules.layers.readouts", "qualname": "ReadoutLayer.get_weights", "kind": "function", "doc": "<p>Overloaded to read not use preprocess weights but instead use layer property features.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>to_reshape (bool):</strong>  whether to reshape the weights to the filter_dims</li>\n<li><strong>time_reverse (bool):</strong>  whether to reverse the time dimension</li>\n<li><strong>num_inh (int):</strong>  number of inhibitory units</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>ws: weights of the readout layer</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">to_reshape</span><span class=\"o\">=</span><span class=\"kc\">True</span>, </span><span class=\"param\"><span class=\"n\">time_reverse</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">num_inh</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.readouts.ReadoutLayer.forward": {"fullname": "NDNT.modules.layers.readouts.ReadoutLayer.forward", "modulename": "NDNT.modules.layers.readouts", "qualname": "ReadoutLayer.forward", "kind": "function", "doc": "<p>Propagates the input forwards through the readout.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>x:</strong>  input data</li>\n<li><strong>shift (bool):</strong>  shifts the location of the grid (from eye-tracking data)</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>y: neuronal activity</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span>, </span><span class=\"param\"><span class=\"n\">shift</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.readouts.ReadoutLayer.set_readout_locations": {"fullname": "NDNT.modules.layers.readouts.ReadoutLayer.set_readout_locations", "modulename": "NDNT.modules.layers.readouts", "qualname": "ReadoutLayer.set_readout_locations", "kind": "function", "doc": "<p>This hasn't been tested yet, but should be self-explanatory.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>locs:</strong>  locations of the readout units</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">locs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.readouts.ReadoutLayer.get_readout_locations": {"fullname": "NDNT.modules.layers.readouts.ReadoutLayer.get_readout_locations", "modulename": "NDNT.modules.layers.readouts", "qualname": "ReadoutLayer.get_readout_locations", "kind": "function", "doc": "<p>Currently returns center location and sigmas, as list.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>mu: center locations of the readout units\n  sigma: sigmas of the readout units</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.readouts.ReadoutLayer.passive_readout": {"fullname": "NDNT.modules.layers.readouts.ReadoutLayer.passive_readout", "modulename": "NDNT.modules.layers.readouts", "qualname": "ReadoutLayer.passive_readout", "kind": "function", "doc": "<p>This will not fit mu and std, but set them to zero. It will pass identities in,\nso number of input filters must equal number of readout units.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li>None</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>None</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.readouts.ReadoutLayer.layer_dict": {"fullname": "NDNT.modules.layers.readouts.ReadoutLayer.layer_dict", "modulename": "NDNT.modules.layers.readouts", "qualname": "ReadoutLayer.layer_dict", "kind": "function", "doc": "<p>This outputs a dictionary of parameters that need to input into the layer to completely specify.\nOutput is a dictionary with these keywords. \n-- All layer-specific inputs are included in the returned dict\n-- Values that must be set are set to empty lists\n-- Other values will be given their defaults</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>NLtype:</strong>  str, type of nonlinearity</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Ldict: dictionary of layer parameters</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">NLtype</span><span class=\"o\">=</span><span class=\"s1\">&#39;softplus&#39;</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.readouts.ReadoutLayer3d": {"fullname": "NDNT.modules.layers.readouts.ReadoutLayer3d", "modulename": "NDNT.modules.layers.readouts", "qualname": "ReadoutLayer3d", "kind": "class", "doc": "<p>ReadoutLayer3d for 3d readout.\nThis is a subclass of ReadoutLayer, but with the added dimension of time.</p>\n", "bases": "ReadoutLayer"}, "NDNT.modules.layers.readouts.ReadoutLayer3d.__init__": {"fullname": "NDNT.modules.layers.readouts.ReadoutLayer3d.__init__", "modulename": "NDNT.modules.layers.readouts", "qualname": "ReadoutLayer3d.__init__", "kind": "function", "doc": "<p>ReadoutLayer3d: 3d readout layer for NDNs.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>input_dims:</strong>  tuple or list of ints, (num_channels, height, width, depth, lags)</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">input_dims</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "NDNT.modules.layers.readouts.ReadoutLayer3d.input_dims": {"fullname": "NDNT.modules.layers.readouts.ReadoutLayer3d.input_dims", "modulename": "NDNT.modules.layers.readouts", "qualname": "ReadoutLayer3d.input_dims", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.readouts.ReadoutLayer3d.filter_dims": {"fullname": "NDNT.modules.layers.readouts.ReadoutLayer3d.filter_dims", "modulename": "NDNT.modules.layers.readouts", "qualname": "ReadoutLayer3d.filter_dims", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.readouts.ReadoutLayer3d.reg": {"fullname": "NDNT.modules.layers.readouts.ReadoutLayer3d.reg", "modulename": "NDNT.modules.layers.readouts", "qualname": "ReadoutLayer3d.reg", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.readouts.ReadoutLayer3d.forward": {"fullname": "NDNT.modules.layers.readouts.ReadoutLayer3d.forward", "modulename": "NDNT.modules.layers.readouts", "qualname": "ReadoutLayer3d.forward", "kind": "function", "doc": "<p>Propagates the input forwards through the readout</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>x:</strong>  input data</li>\n<li><strong>shift (bool):</strong>  shifts the location of the grid (from eye-tracking data)</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>y: neuronal activity</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span>, </span><span class=\"param\"><span class=\"n\">shift</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.readouts.ReadoutLayer3d.passive_readout": {"fullname": "NDNT.modules.layers.readouts.ReadoutLayer3d.passive_readout", "modulename": "NDNT.modules.layers.readouts", "qualname": "ReadoutLayer3d.passive_readout", "kind": "function", "doc": "<p>This might have to be redone for readout3d to take into account extra filter dim.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.readouts.ReadoutLayer3d.layer_dict": {"fullname": "NDNT.modules.layers.readouts.ReadoutLayer3d.layer_dict", "modulename": "NDNT.modules.layers.readouts", "qualname": "ReadoutLayer3d.layer_dict", "kind": "function", "doc": "<p>This outputs a dictionary of parameters that need to input into the layer to completely specify.\nOutput is a dictionary with these keywords. \n-- All layer-specific inputs are included in the returned dict\n-- Values that must be set are set to empty lists\n-- Other values will be given their defaults</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li>None</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Ldict: dictionary of layer parameters</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.readouts.FixationLayer": {"fullname": "NDNT.modules.layers.readouts.FixationLayer", "modulename": "NDNT.modules.layers.readouts", "qualname": "FixationLayer", "kind": "class", "doc": "<p>FixationLayer for fixation.</p>\n", "bases": "NDNT.modules.layers.ndnlayer.NDNLayer"}, "NDNT.modules.layers.readouts.FixationLayer.__init__": {"fullname": "NDNT.modules.layers.readouts.FixationLayer.__init__", "modulename": "NDNT.modules.layers.readouts", "qualname": "FixationLayer.__init__", "kind": "function", "doc": "<p>Layer weights become the shift for each fixation, sigma is constant over each dimension.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>num_fixations:</strong>  int, number of fixations</li>\n<li><strong>num_spatial_dims:</strong>  int, number of spatial dimensions</li>\n<li><strong>batch_sample:</strong>  bool, whether to sample grid locations separately per sample per batch</li>\n<li><strong>fix_n_index:</strong>  bool, whether to index fixations starting at 1</li>\n<li><strong>init_sigma:</strong>  float, standard deviation for uniform initialization of sigmas</li>\n<li><strong>single_sigma:</strong>  bool, whether to use a single sigma for all fixations</li>\n<li><strong>bias:</strong>  bool, whether to include bias term</li>\n<li><strong>NLtype:</strong>  str, type of nonlinearity</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">num_fixations</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">num_spatial_dims</span><span class=\"o\">=</span><span class=\"mi\">2</span>,</span><span class=\"param\">\t<span class=\"n\">batch_sample</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">fix_n_index</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">init_sigma</span><span class=\"o\">=</span><span class=\"mf\">0.3</span>,</span><span class=\"param\">\t<span class=\"n\">single_sigma</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">bias</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">NLtype</span><span class=\"o\">=</span><span class=\"s1\">&#39;lin&#39;</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "NDNT.modules.layers.readouts.FixationLayer.num_spatial_dims": {"fullname": "NDNT.modules.layers.readouts.FixationLayer.num_spatial_dims", "modulename": "NDNT.modules.layers.readouts", "qualname": "FixationLayer.num_spatial_dims", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.readouts.FixationLayer.num_fixations": {"fullname": "NDNT.modules.layers.readouts.FixationLayer.num_fixations", "modulename": "NDNT.modules.layers.readouts", "qualname": "FixationLayer.num_fixations", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.readouts.FixationLayer.batch_sample": {"fullname": "NDNT.modules.layers.readouts.FixationLayer.batch_sample", "modulename": "NDNT.modules.layers.readouts", "qualname": "FixationLayer.batch_sample", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.readouts.FixationLayer.init_sigma": {"fullname": "NDNT.modules.layers.readouts.FixationLayer.init_sigma", "modulename": "NDNT.modules.layers.readouts", "qualname": "FixationLayer.init_sigma", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.readouts.FixationLayer.single_sigma": {"fullname": "NDNT.modules.layers.readouts.FixationLayer.single_sigma", "modulename": "NDNT.modules.layers.readouts", "qualname": "FixationLayer.single_sigma", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.readouts.FixationLayer.fix_n_index": {"fullname": "NDNT.modules.layers.readouts.FixationLayer.fix_n_index", "modulename": "NDNT.modules.layers.readouts", "qualname": "FixationLayer.fix_n_index", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.readouts.FixationLayer.sample": {"fullname": "NDNT.modules.layers.readouts.FixationLayer.sample", "modulename": "NDNT.modules.layers.readouts", "qualname": "FixationLayer.sample", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.readouts.FixationLayer.forward": {"fullname": "NDNT.modules.layers.readouts.FixationLayer.forward", "modulename": "NDNT.modules.layers.readouts", "qualname": "FixationLayer.forward", "kind": "function", "doc": "<p>The input is the sampled fixation-stim</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>x:</strong>  input data</li>\n<li><strong>shift (bool):</strong>  shifts the location of the grid (from eye-tracking data)</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>y: neuronal activity</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span>, </span><span class=\"param\"><span class=\"n\">shift</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.readouts.FixationLayer.initialize": {"fullname": "NDNT.modules.layers.readouts.FixationLayer.initialize", "modulename": "NDNT.modules.layers.readouts", "qualname": "FixationLayer.initialize", "kind": "function", "doc": "<p>This will initialize the layer parameters.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"fullname": "NDNT.modules.layers.readouts.FixationLayer.layer_dict", "modulename": "NDNT.modules.layers.readouts", "qualname": "FixationLayer.layer_dict", "kind": "function", "doc": "<p>This outputs a dictionary of parameters that need to input into the layer to completely specify.\nOutput is a dictionary with these keywords. \n-- All layer-specific inputs are included in the returned dict\n-- Values that must be set are set to empty lists\n-- Other values will be given their defaults</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>num_fixations:</strong>  int, number of fixations</li>\n<li><strong>num_spatial_dims:</strong>  int, number of spatial dimensions</li>\n<li><strong>init_sigma:</strong>  float, standard deviation for uniform initialization of sigmas</li>\n<li><strong>input_dims:</strong>  tuple or list of ints, (num_channels, height, width, lags)</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Ldict: dictionary of layer parameters</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">num_fixations</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">num_spatial_dims</span><span class=\"o\">=</span><span class=\"mi\">2</span>,</span><span class=\"param\">\t<span class=\"n\">init_sigma</span><span class=\"o\">=</span><span class=\"mf\">0.25</span>,</span><span class=\"param\">\t<span class=\"n\">input_dims</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.reslayers": {"fullname": "NDNT.modules.layers.reslayers", "modulename": "NDNT.modules.layers.reslayers", "kind": "module", "doc": "<p></p>\n"}, "NDNT.modules.layers.reslayers.IterLayer": {"fullname": "NDNT.modules.layers.reslayers.IterLayer", "modulename": "NDNT.modules.layers.reslayers", "qualname": "IterLayer", "kind": "class", "doc": "<p>Residual network layer based on conv-net setup but with different forward.\nNamely, the forward includes a skip-connection, and has to be 'same'</p>\n\n<p>Args (required):\n    input_dims: tuple or list of ints, (num_channels, height, width, lags)\n    num_filters: number of output filters\n    filter_width: width of convolutional kernel (int or list of ints)</p>\n\n<p>Args (optional):\n    padding: 'same' or 'valid' (default 'same')\n    weight_init: str, 'uniform', 'normal', 'xavier', 'zeros', or None\n    bias_init: str, 'uniform', 'normal', 'xavier', 'zeros', or None\n    bias: bool, whether to include bias term\n    NLtype: str, 'lin', 'relu', 'tanh', 'sigmoid', 'elu', 'none'</p>\n", "bases": "NDNT.modules.layers.convlayers.ConvLayer"}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"fullname": "NDNT.modules.layers.reslayers.IterLayer.__init__", "modulename": "NDNT.modules.layers.reslayers", "qualname": "IterLayer.__init__", "kind": "function", "doc": "<p>Initialize IterLayer with specified parameters.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>input_dims:</strong>  tuple or list of ints, (num_channels, height, width, lags)</li>\n<li><strong>num_filters:</strong>  number of output filters</li>\n<li><strong>filter_width:</strong>  width of convolutional kernel (int or list of ints)</li>\n<li><strong>num_iter:</strong>  number of iterations to apply the layer</li>\n<li><strong>output_config:</strong>  'last' or 'full' (default 'last')</li>\n<li><strong>temporal_tent_spacing:</strong>  spacing of temporal tent-basis functions (default None)</li>\n<li><strong>output_norm:</strong>  'batch', 'batchX', or None (default None)</li>\n<li><strong>window:</strong>  'hamming' or None (default None)</li>\n<li><strong>res_layer:</strong>  bool, whether to include a residual connection (default True)</li>\n<li><strong>LN_reverse:</strong>  bool, whether to apply layer normalization after nonlinearity (default False)</li>\n<li><strong>**kwargs:</strong>  additional arguments to pass to ConvLayer</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">input_dims</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">num_filters</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">filter_width</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">num_iter</span><span class=\"o\">=</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">output_config</span><span class=\"o\">=</span><span class=\"s1\">&#39;last&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">temporal_tent_spacing</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">output_norm</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">window</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">res_layer</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">LN_reverse</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "NDNT.modules.layers.reslayers.IterLayer.num_iter": {"fullname": "NDNT.modules.layers.reslayers.IterLayer.num_iter", "modulename": "NDNT.modules.layers.reslayers", "qualname": "IterLayer.num_iter", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.reslayers.IterLayer.LN_reverse": {"fullname": "NDNT.modules.layers.reslayers.IterLayer.LN_reverse", "modulename": "NDNT.modules.layers.reslayers", "qualname": "IterLayer.LN_reverse", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.reslayers.IterLayer.output_config": {"fullname": "NDNT.modules.layers.reslayers.IterLayer.output_config", "modulename": "NDNT.modules.layers.reslayers", "qualname": "IterLayer.output_config", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.reslayers.IterLayer.res_layer": {"fullname": "NDNT.modules.layers.reslayers.IterLayer.res_layer", "modulename": "NDNT.modules.layers.reslayers", "qualname": "IterLayer.res_layer", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"fullname": "NDNT.modules.layers.reslayers.IterLayer.layer_dict", "modulename": "NDNT.modules.layers.reslayers", "qualname": "IterLayer.layer_dict", "kind": "function", "doc": "<p>This outputs a dictionary of parameters that need to input into the layer to completely specify.\nOutput is a dictionary with these keywords. \n-- All layer-specific inputs are included in the returned dict\n-- Values that must be set are set to empty lists\n-- Other values will be given their defaults</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>filter_width:</strong>  width of convolutional kernel (int or list of ints)</li>\n<li><strong>num_iter:</strong>  number of iterations to apply the layer</li>\n<li><strong>output_config:</strong>  'last' or 'full' (default 'last')</li>\n<li><strong>res_layer:</strong>  bool, whether to include a residual connection (default True)</li>\n<li><strong>LN_reverse:</strong>  bool, whether to apply layer normalization after nonlinearity (default False)</li>\n<li><strong>**kwargs:</strong>  additional arguments to pass to ConvLayer</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Ldict: dictionary of layer parameters</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">filter_width</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">num_iter</span><span class=\"o\">=</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">output_config</span><span class=\"o\">=</span><span class=\"s1\">&#39;last&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">res_layer</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">LN_reverse</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.reslayers.IterLayer.forward": {"fullname": "NDNT.modules.layers.reslayers.IterLayer.forward", "modulename": "NDNT.modules.layers.reslayers", "qualname": "IterLayer.forward", "kind": "function", "doc": "<p>Forward pass through the IterLayer.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>x:</strong>  torch.Tensor, input tensor</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>y: torch.Tensor, output tensor</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.reslayers.IterTlayer": {"fullname": "NDNT.modules.layers.reslayers.IterTlayer", "modulename": "NDNT.modules.layers.reslayers", "qualname": "IterTlayer", "kind": "class", "doc": "<p>Residual network layer based on conv-net setup but with different forward.\nNamely, the forward includes a skip-connection, and has to be 'same'</p>\n\n<p>Args (required):\n    input_dims: tuple or list of ints, (num_channels, height, width, lags)\n    num_filters: number of output filters\n    filter_dims: width of convolutional kernel (int or list of ints)</p>\n\n<p>Args (optional):\n    padding: 'same' or 'valid' (default 'same')\n    weight_init: str, 'uniform', 'normal', 'xavier', 'zeros', or None\n    bias_init: str, 'uniform', 'normal', 'xavier', 'zeros', or None\n    bias: bool, whether to include bias term\n    NLtype: str, 'lin', 'relu', 'tanh', 'sigmoid', 'elu', 'none'</p>\n", "bases": "NDNT.modules.layers.convlayers.TconvLayer"}, "NDNT.modules.layers.reslayers.IterTlayer.__init__": {"fullname": "NDNT.modules.layers.reslayers.IterTlayer.__init__", "modulename": "NDNT.modules.layers.reslayers", "qualname": "IterTlayer.__init__", "kind": "function", "doc": "<p>Initialize IterLayer with specified parameters.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>input_dims:</strong>  tuple or list of ints, (num_channels, height, width, lags)</li>\n<li><strong>num_filters:</strong>  number of output filters</li>\n<li><strong>filter_width:</strong>  width of convolutional kernel (int or list of ints)</li>\n<li><strong>num_iter:</strong>  number of iterations to apply the layer</li>\n<li><strong>num_lags:</strong>  number of lags in spatiotemporal filter</li>\n<li><strong>res_layer:</strong>  bool, whether to include a residual connection (default True)</li>\n<li><strong>output_config:</strong>  'last' or 'full' (default 'last')</li>\n<li><strong>output_norm:</strong>  'batch', 'batchX', or None (default None)</li>\n<li><strong>**kwargs:</strong>  additional arguments to pass to ConvLayer</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">input_dims</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">num_filters</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">filter_width</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">num_iter</span><span class=\"o\">=</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">num_lags</span><span class=\"o\">=</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">res_layer</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">output_config</span><span class=\"o\">=</span><span class=\"s1\">&#39;last&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">output_norm</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "NDNT.modules.layers.reslayers.IterTlayer.num_iter": {"fullname": "NDNT.modules.layers.reslayers.IterTlayer.num_iter", "modulename": "NDNT.modules.layers.reslayers", "qualname": "IterTlayer.num_iter", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.reslayers.IterTlayer.output_config": {"fullname": "NDNT.modules.layers.reslayers.IterTlayer.output_config", "modulename": "NDNT.modules.layers.reslayers", "qualname": "IterTlayer.output_config", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.reslayers.IterTlayer.res_layer": {"fullname": "NDNT.modules.layers.reslayers.IterTlayer.res_layer", "modulename": "NDNT.modules.layers.reslayers", "qualname": "IterTlayer.res_layer", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.reslayers.IterTlayer.num_outputs": {"fullname": "NDNT.modules.layers.reslayers.IterTlayer.num_outputs", "modulename": "NDNT.modules.layers.reslayers", "qualname": "IterTlayer.num_outputs", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"fullname": "NDNT.modules.layers.reslayers.IterTlayer.layer_dict", "modulename": "NDNT.modules.layers.reslayers", "qualname": "IterTlayer.layer_dict", "kind": "function", "doc": "<p>This outputs a dictionary of parameters that need to input into the layer to completely specify.\nOutput is a dictionary with these keywords. \n-- All layer-specific inputs are included in the returned dict\n-- Values that must be set are set to empty lists\n-- Other values will be given their defaults</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>filter_width:</strong>  width of convolutional kernel (int or list of ints)</li>\n<li><strong>num_iter:</strong>  number of iterations to apply the layer</li>\n<li><strong>num_lags:</strong>  number of lags in spatiotemporal filter</li>\n<li><strong>res_layer:</strong>  bool, whether to include a residual connection (default True)</li>\n<li><strong>output_config:</strong>  'last' or 'full' (default 'last')</li>\n<li><strong>**kwargs:</strong>  additional arguments to pass to ConvLayer</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Ldict: dictionary of layer parameters</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">filter_width</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">num_iter</span><span class=\"o\">=</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">num_lags</span><span class=\"o\">=</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">res_layer</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">output_config</span><span class=\"o\">=</span><span class=\"s1\">&#39;last&#39;</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.reslayers.IterTlayer.forward": {"fullname": "NDNT.modules.layers.reslayers.IterTlayer.forward", "modulename": "NDNT.modules.layers.reslayers", "qualname": "IterTlayer.forward", "kind": "function", "doc": "<p>Forward pass through the IterLayer.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>x:</strong>  torch.Tensor, input tensor</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>y: torch.Tensor, output tensor</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.reslayers.IterSTlayer": {"fullname": "NDNT.modules.layers.reslayers.IterSTlayer", "modulename": "NDNT.modules.layers.reslayers", "qualname": "IterSTlayer", "kind": "class", "doc": "<p>Residual network layer based on conv-net setup but with different forward.\nNamely, the forward includes a skip-connection, and has to be 'same'</p>\n\n<p>Args (required):\n    input_dims: tuple or list of ints, (num_channels, height, width, lags)\n    num_filters: number of output filters\n    filter_dims: width of convolutional kernel (int or list of ints)</p>\n\n<p>Args (optional):\n    padding: 'same' or 'valid' (default 'same')\n    weight_init: str, 'uniform', 'normal', 'xavier', 'zeros', or None\n    bias_init: str, 'uniform', 'normal', 'xavier', 'zeros', or None\n    bias: bool, whether to include bias term\n    NLtype: str, 'lin', 'relu', 'tanh', 'sigmoid', 'elu', 'none'</p>\n", "bases": "NDNT.modules.layers.convlayers.STconvLayer"}, "NDNT.modules.layers.reslayers.IterSTlayer.__init__": {"fullname": "NDNT.modules.layers.reslayers.IterSTlayer.__init__", "modulename": "NDNT.modules.layers.reslayers", "qualname": "IterSTlayer.__init__", "kind": "function", "doc": "<p>Initialize IterLayer with specified parameters.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>input_dims:</strong>  tuple or list of ints, (num_channels, height, width, lags)</li>\n<li><strong>num_filters:</strong>  number of output filters</li>\n<li><strong>filter_width:</strong>  width of convolutional kernel (int or list of ints)</li>\n<li><strong>num_iter:</strong>  number of iterations to apply the layer</li>\n<li><strong>num_lags:</strong>  number of lags in spatiotemporal filter</li>\n<li><strong>res_layer:</strong>  bool, whether to include a residual connection (default True)</li>\n<li><strong>output_config:</strong>  'last' or 'full' (default 'last')</li>\n<li><strong>output_norm:</strong>  'batch', 'batchX', or None (default None)</li>\n<li><strong>**kwargs:</strong>  additional arguments to pass to ConvLayer</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">input_dims</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">num_filters</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">filter_width</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">num_iter</span><span class=\"o\">=</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">num_lags</span><span class=\"o\">=</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">res_layer</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">output_config</span><span class=\"o\">=</span><span class=\"s1\">&#39;last&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">output_norm</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "NDNT.modules.layers.reslayers.IterSTlayer.num_iter": {"fullname": "NDNT.modules.layers.reslayers.IterSTlayer.num_iter", "modulename": "NDNT.modules.layers.reslayers", "qualname": "IterSTlayer.num_iter", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.reslayers.IterSTlayer.output_config": {"fullname": "NDNT.modules.layers.reslayers.IterSTlayer.output_config", "modulename": "NDNT.modules.layers.reslayers", "qualname": "IterSTlayer.output_config", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.reslayers.IterSTlayer.res_layer": {"fullname": "NDNT.modules.layers.reslayers.IterSTlayer.res_layer", "modulename": "NDNT.modules.layers.reslayers", "qualname": "IterSTlayer.res_layer", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.reslayers.IterSTlayer.num_outputs": {"fullname": "NDNT.modules.layers.reslayers.IterSTlayer.num_outputs", "modulename": "NDNT.modules.layers.reslayers", "qualname": "IterSTlayer.num_outputs", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"fullname": "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict", "modulename": "NDNT.modules.layers.reslayers", "qualname": "IterSTlayer.layer_dict", "kind": "function", "doc": "<p>This outputs a dictionary of parameters that need to input into the layer to completely specify.\nOutput is a dictionary with these keywords. \n-- All layer-specific inputs are included in the returned dict\n-- Values that must be set are set to empty lists\n-- Other values will be given their defaults</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>filter_width:</strong>  width of convolutional kernel (int or list of ints)</li>\n<li><strong>num_iter:</strong>  number of iterations to apply the layer</li>\n<li><strong>num_lags:</strong>  number of lags in spatiotemporal filter</li>\n<li><strong>res_layer:</strong>  bool, whether to include a residual connection (default True)</li>\n<li><strong>output_config:</strong>  'last' or 'full' (default 'last')</li>\n<li><strong>**kwargs:</strong>  additional arguments to pass to ConvLayer</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Ldict: dictionary of layer parameters</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">filter_width</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">num_iter</span><span class=\"o\">=</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">num_lags</span><span class=\"o\">=</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">res_layer</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">output_config</span><span class=\"o\">=</span><span class=\"s1\">&#39;last&#39;</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.reslayers.IterSTlayer.forward": {"fullname": "NDNT.modules.layers.reslayers.IterSTlayer.forward", "modulename": "NDNT.modules.layers.reslayers", "qualname": "IterSTlayer.forward", "kind": "function", "doc": "<p>Forward pass through the IterLayer.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>x:</strong>  torch.Tensor, input tensor</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>y: torch.Tensor, output tensor</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.specialtylayers": {"fullname": "NDNT.modules.layers.specialtylayers", "modulename": "NDNT.modules.layers.specialtylayers", "kind": "module", "doc": "<p></p>\n"}, "NDNT.modules.layers.specialtylayers.Tlayer": {"fullname": "NDNT.modules.layers.specialtylayers.Tlayer", "modulename": "NDNT.modules.layers.specialtylayers", "qualname": "Tlayer", "kind": "class", "doc": "<p>NDN Layer where num_lags is handled convolutionally (but all else is normal)</p>\n\n<p>Args (required):\n    input_dims: tuple or list of ints, (num_channels, height, width, lags)\n    num_filters: number of output filters\n    filter_dims: width of convolutional kernel (int or list of ints)\nArgs (optional):\n    padding: 'same' or 'valid' (default 'same')\n    weight_init: str, 'uniform', 'normal', 'xavier', 'zeros', or None\n    bias_init: str, 'uniform', 'normal', 'xavier', 'zeros', or None\n    bias: bool, whether to include bias term\n    NLtype: str, 'lin', 'relu', 'tanh', 'sigmoid', 'elu', 'none'</p>\n", "bases": "NDNT.modules.layers.ndnlayer.NDNLayer"}, "NDNT.modules.layers.specialtylayers.Tlayer.__init__": {"fullname": "NDNT.modules.layers.specialtylayers.Tlayer.__init__", "modulename": "NDNT.modules.layers.specialtylayers", "qualname": "Tlayer.__init__", "kind": "function", "doc": "<p>Tlayer: NDN Layer where num_lags is handled convolutionally (but all else is normal).</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>input_dims:</strong>  tuple or list of ints, (num_channels, height, width, lags)</li>\n<li><strong>num_filters:</strong>  number of output filters</li>\n<li><strong>num_lags:</strong>  number of lags in spatiotemporal filter</li>\n<li><strong>temporal_tent_spacing:</strong>  int, spacing of tent basis functions</li>\n<li><strong>output_norm:</strong>  str, 'batch', 'batchX', or None</li>\n<li><strong>res_layer:</strong>  bool, whether to make a residual layer</li>\n<li><strong>**kwargs:</strong>  additional arguments to pass to NDNLayer</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">input_dims</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">num_filters</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">num_lags</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">temporal_tent_spacing</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">output_norm</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">res_layer</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "NDNT.modules.layers.specialtylayers.Tlayer.tent_basis": {"fullname": "NDNT.modules.layers.specialtylayers.Tlayer.tent_basis", "modulename": "NDNT.modules.layers.specialtylayers", "qualname": "Tlayer.tent_basis", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.specialtylayers.Tlayer.res_layer": {"fullname": "NDNT.modules.layers.specialtylayers.Tlayer.res_layer", "modulename": "NDNT.modules.layers.specialtylayers", "qualname": "Tlayer.res_layer", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.specialtylayers.Tlayer.folded_dims": {"fullname": "NDNT.modules.layers.specialtylayers.Tlayer.folded_dims", "modulename": "NDNT.modules.layers.specialtylayers", "qualname": "Tlayer.folded_dims", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.specialtylayers.Tlayer.forward": {"fullname": "NDNT.modules.layers.specialtylayers.Tlayer.forward", "modulename": "NDNT.modules.layers.specialtylayers", "qualname": "Tlayer.forward", "kind": "function", "doc": "<p>Forward pass through the Tlayer.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>x:</strong>  torch.Tensor, input tensor</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>y: torch.Tensor, output tensor</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.specialtylayers.Tlayer.plot_filters": {"fullname": "NDNT.modules.layers.specialtylayers.Tlayer.plot_filters", "modulename": "NDNT.modules.layers.specialtylayers", "qualname": "Tlayer.plot_filters", "kind": "function", "doc": "<p>Overload plot_filters to automatically time_reverse.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>cmaps:</strong>  str or list of str, colormap(s) to use</li>\n<li><strong>num_cols:</strong>  int, number of columns to use in plot</li>\n<li><strong>row_height:</strong>  int, height of each row in plot</li>\n<li><strong>time_reverse:</strong>  bool, whether to reverse the time dimension</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>None</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">cmaps</span><span class=\"o\">=</span><span class=\"s1\">&#39;gray&#39;</span>, </span><span class=\"param\"><span class=\"n\">num_cols</span><span class=\"o\">=</span><span class=\"mi\">8</span>, </span><span class=\"param\"><span class=\"n\">row_height</span><span class=\"o\">=</span><span class=\"mi\">2</span>, </span><span class=\"param\"><span class=\"n\">time_reverse</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.specialtylayers.Tlayer.layer_dict": {"fullname": "NDNT.modules.layers.specialtylayers.Tlayer.layer_dict", "modulename": "NDNT.modules.layers.specialtylayers", "qualname": "Tlayer.layer_dict", "kind": "function", "doc": "<p>This outputs a dictionary of parameters that need to input into the layer to completely specify.\nOutput is a dictionary with these keywords. \n-- All layer-specific inputs are included in the returned dict\n-- Values that must be set are set to empty lists\n-- Other values will be given their defaults</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">num_lags</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">res_layer</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.specialtylayers.L1convLayer": {"fullname": "NDNT.modules.layers.specialtylayers.L1convLayer", "modulename": "NDNT.modules.layers.specialtylayers", "qualname": "L1convLayer", "kind": "class", "doc": "<p>First start with non-convolutional version.</p>\n\n<p>L1convLayer: Convolutional layer with L1 regularization.</p>\n", "bases": "NDNT.modules.layers.ndnlayer.NDNLayer"}, "NDNT.modules.layers.specialtylayers.L1convLayer.__init__": {"fullname": "NDNT.modules.layers.specialtylayers.L1convLayer.__init__", "modulename": "NDNT.modules.layers.specialtylayers", "qualname": "L1convLayer.__init__", "kind": "function", "doc": "<p>Set up ConvLayer with L1 regularization.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>**kwargs:</strong>  additional arguments to pass to ConvLayer</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>None</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "NDNT.modules.layers.specialtylayers.L1convLayer.weight_minus": {"fullname": "NDNT.modules.layers.specialtylayers.L1convLayer.weight_minus", "modulename": "NDNT.modules.layers.specialtylayers", "qualname": "L1convLayer.weight_minus", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.specialtylayers.L1convLayer.window": {"fullname": "NDNT.modules.layers.specialtylayers.L1convLayer.window", "modulename": "NDNT.modules.layers.specialtylayers", "qualname": "L1convLayer.window", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.specialtylayers.L1convLayer.tent_basis": {"fullname": "NDNT.modules.layers.specialtylayers.L1convLayer.tent_basis", "modulename": "NDNT.modules.layers.specialtylayers", "qualname": "L1convLayer.tent_basis", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.specialtylayers.L1convLayer.preprocess_weights": {"fullname": "NDNT.modules.layers.specialtylayers.L1convLayer.preprocess_weights", "modulename": "NDNT.modules.layers.specialtylayers", "qualname": "L1convLayer.preprocess_weights", "kind": "function", "doc": "<p>Preprocess weights for L1convLayer.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>w: torch.Tensor, preprocessed weights</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.specialtylayers.L1convLayer.reset_parameters2": {"fullname": "NDNT.modules.layers.specialtylayers.L1convLayer.reset_parameters2", "modulename": "NDNT.modules.layers.specialtylayers", "qualname": "L1convLayer.reset_parameters2", "kind": "function", "doc": "<p>Reset parameters for L1convLayer.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>weights_initializer:</strong>  str, 'uniform', 'normal', 'xavier', 'zeros', or None</li>\n<li><strong>bias_initializer:</strong>  str, 'uniform', 'normal', 'xavier', 'zeros', or None</li>\n<li><strong>param:</strong>  dict, additional parameters to pass to the initializer</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>None</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">weights_initializer</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">bias_initializer</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">param</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "NDNT.modules.layers.specialtylayers.L1convLayer.layer_dict": {"fullname": "NDNT.modules.layers.specialtylayers.L1convLayer.layer_dict", "modulename": "NDNT.modules.layers.specialtylayers", "qualname": "L1convLayer.layer_dict", "kind": "function", "doc": "<p>This outputs a dictionary of parameters that need to input into the layer to completely specify.\nOutput is a dictionary with these keywords. \n-- All layer-specific inputs are included in the returned dict\n-- Values that must be set are set to empty lists\n-- Other values will be given their defaults</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.specialtylayers.OnOffLayer": {"fullname": "NDNT.modules.layers.specialtylayers.OnOffLayer", "modulename": "NDNT.modules.layers.specialtylayers", "qualname": "OnOffLayer", "kind": "class", "doc": "<p>OnOffLayer: Layer with separate on and off filters.</p>\n", "bases": "Tlayer"}, "NDNT.modules.layers.specialtylayers.OnOffLayer.__init__": {"fullname": "NDNT.modules.layers.specialtylayers.OnOffLayer.__init__", "modulename": "NDNT.modules.layers.specialtylayers", "qualname": "OnOffLayer.__init__", "kind": "function", "doc": "<p>Args (required):\n    input_dims: tuple or list of ints, (num_channels, height, width, lags)\n    num_filters: number of output filters\n    num_lags: number of lags in spatiotemporal filter</p>\n\n<p>Args (optional):\n    temporal_tent_spacing: int, spacing of tent basis functions\n    output_norm: str, 'batch', 'batchX', or None\n    res_layer: bool, whether to make a residual layer\n    **kwargs: additional arguments to pass to NDNLayer</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">input_dims</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">num_filters</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">num_lags</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">temporal_tent_spacing</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">output_norm</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">res_layer</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "NDNT.modules.layers.specialtylayers.OnOffLayer.plot_filters": {"fullname": "NDNT.modules.layers.specialtylayers.OnOffLayer.plot_filters", "modulename": "NDNT.modules.layers.specialtylayers", "qualname": "OnOffLayer.plot_filters", "kind": "function", "doc": "<p>Plot the filters for the OnOffLayer.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>time_reverse:</strong>  bool, whether to reverse the time dimension</li>\n<li><strong>**kwargs:</strong>  additional arguments to pass to the plotting function</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>None</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">time_reverse</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.specialtylayers.OnOffLayer.forward": {"fullname": "NDNT.modules.layers.specialtylayers.OnOffLayer.forward", "modulename": "NDNT.modules.layers.specialtylayers", "qualname": "OnOffLayer.forward", "kind": "function", "doc": "<p>Forward pass through the OnOffLayer.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>x:</strong>  torch.Tensor, input tensor</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>y: torch.Tensor, output tensor</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.specialtylayers.OnOffLayer.layer_dict": {"fullname": "NDNT.modules.layers.specialtylayers.OnOffLayer.layer_dict", "modulename": "NDNT.modules.layers.specialtylayers", "qualname": "OnOffLayer.layer_dict", "kind": "function", "doc": "<p>This outputs a dictionary of parameters that need to input into the layer to completely specify.\nOutput is a dictionary with these keywords. \n-- All layer-specific inputs are included in the returned dict\n-- Values that must be set are set to empty lists\n-- Other values will be given their defaults</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>num_lags:</strong>  int, number of lags in spatiotemporal filter</li>\n<li><strong>**kwargs:</strong>  additional arguments to pass to NDNLayer</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Ldict: dict, dictionary of layer parameters</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">num_lags</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.specialtylayers.MaskLayer": {"fullname": "NDNT.modules.layers.specialtylayers.MaskLayer", "modulename": "NDNT.modules.layers.specialtylayers", "qualname": "MaskLayer", "kind": "class", "doc": "<p>MaskLayer: Layer with a mask applied to the weights.</p>\n", "bases": "NDNT.modules.layers.ndnlayer.NDNLayer"}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"fullname": "NDNT.modules.layers.specialtylayers.MaskLayer.__init__", "modulename": "NDNT.modules.layers.specialtylayers", "qualname": "MaskLayer.__init__", "kind": "function", "doc": "<p>MaskLayer: Layer with a mask applied to the weights.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>input_dims:</strong>  tuple or list of ints, (num_channels, height, width, lags)</li>\n<li><strong>num_filters:</strong>  number of output filters</li>\n<li><strong>mask:</strong>  np.ndarray, mask to apply to the weights</li>\n<li><strong>NLtype:</strong>  str, 'lin', 'relu', 'tanh', 'sigmoid', 'elu', 'none'</li>\n<li><strong>norm_type:</strong>  int, normalization type</li>\n<li><strong>pos_constraint:</strong>  int, whether to enforce non-negative weights</li>\n<li><strong>num_inh:</strong>  int, number of inhibitory filters</li>\n<li><strong>bias:</strong>  bool, whether to include bias term</li>\n<li><strong>weights_initializer:</strong>  str, 'uniform', 'normal', 'xavier', 'zeros', or None</li>\n<li><strong>output_norm:</strong>  str, 'batch', 'batchX', or None</li>\n<li><strong>initialize_center:</strong>  bool, whether to initialize the center</li>\n<li><strong>bias_initializer:</strong>  str, 'uniform', 'normal', 'xavier', 'zeros', or None</li>\n<li><strong>reg_vals:</strong>  dict, regularization values</li>\n<li><strong>**kwargs:</strong>  additional arguments to pass to NDNLayer</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">input_dims</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">num_filters</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">mask</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">NLtype</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;lin&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">norm_type</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">pos_constraint</span><span class=\"o\">=</span><span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">num_inh</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">bias</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">weights_initializer</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;xavier_uniform&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">output_norm</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">initialize_center</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">bias_initializer</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;zeros&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">reg_vals</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "NDNT.modules.layers.specialtylayers.MaskLayer.preprocess_weights": {"fullname": "NDNT.modules.layers.specialtylayers.MaskLayer.preprocess_weights", "modulename": "NDNT.modules.layers.specialtylayers", "qualname": "MaskLayer.preprocess_weights", "kind": "function", "doc": "<p>Preprocess weights for MaskLayer.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>w: torch.Tensor, preprocessed weights</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.specialtylayers.MaskLayer.layer_dict": {"fullname": "NDNT.modules.layers.specialtylayers.MaskLayer.layer_dict", "modulename": "NDNT.modules.layers.specialtylayers", "qualname": "MaskLayer.layer_dict", "kind": "function", "doc": "<p>This outputs a dictionary of parameters that need to input into the layer to completely specify.\nOutput is a dictionary with these keywords. \n-- All layer-specific inputs are included in the returned dict\n-- Values that must be set are set to empty lists\n-- Other values will be given their defaults</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>mask:</strong>  np.ndarray, mask to apply to the weights</li>\n<li><strong>**kwargs:</strong>  additional arguments to pass to NDNLayer</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Ldict: dict, dictionary of layer parameters</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">mask</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.layers.timelayers": {"fullname": "NDNT.modules.layers.timelayers", "modulename": "NDNT.modules.layers.timelayers", "kind": "module", "doc": "<p></p>\n"}, "NDNT.modules.layers.timelayers.TimeLayer": {"fullname": "NDNT.modules.layers.timelayers.TimeLayer", "modulename": "NDNT.modules.layers.timelayers", "qualname": "TimeLayer", "kind": "class", "doc": "<p>Layer to track experiment time and a weighted output.</p>\n", "bases": "NDNT.modules.layers.ndnlayer.NDNLayer"}, "NDNT.modules.layers.timelayers.TimeLayer.__init__": {"fullname": "NDNT.modules.layers.timelayers.TimeLayer.__init__", "modulename": "NDNT.modules.layers.timelayers", "qualname": "TimeLayer.__init__", "kind": "function", "doc": "<p>TimeLayer: Layer to track experiment time and a weighted output.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>start_time:</strong>  float, start time of experiment</li>\n<li><strong>end_time:</strong>  float, end time of experiment</li>\n<li><strong>input_dims:</strong>  tuple or list of ints, (num_channels, height, width, lags)</li>\n<li><strong>num_bases:</strong>  number of tent basis functions</li>\n<li><strong>num_filters:</strong>  number of output filters</li>\n<li><strong>filter_dims:</strong>  tuple or list of ints, (num_channels, height, width, lags)</li>\n<li><strong>pos_constraint:</strong>  bool, whether to enforce non-negative weights</li>\n<li><strong>**kwargs:</strong>  additional arguments to pass to NDNLayer</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">start_time</span><span class=\"o\">=</span><span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">end_time</span><span class=\"o\">=</span><span class=\"mi\">1000</span>,</span><span class=\"param\">\t<span class=\"n\">input_dims</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">num_bases</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">num_filters</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">filter_dims</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">pos_constraint</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "NDNT.modules.layers.timelayers.TimeLayer.output_dims": {"fullname": "NDNT.modules.layers.timelayers.TimeLayer.output_dims", "modulename": "NDNT.modules.layers.timelayers", "qualname": "TimeLayer.output_dims", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.timelayers.TimeLayer.num_outputs": {"fullname": "NDNT.modules.layers.timelayers.TimeLayer.num_outputs", "modulename": "NDNT.modules.layers.timelayers", "qualname": "TimeLayer.num_outputs", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.layers.timelayers.TimeLayer.forward": {"fullname": "NDNT.modules.layers.timelayers.TimeLayer.forward", "modulename": "NDNT.modules.layers.timelayers", "qualname": "TimeLayer.forward", "kind": "function", "doc": "<p>Forward pass through the TimeLayer.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>x:</strong>  torch.Tensor, input tensor</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>y: torch.Tensor, output tensor</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.regularization": {"fullname": "NDNT.modules.regularization", "modulename": "NDNT.modules.regularization", "kind": "module", "doc": "<p></p>\n"}, "NDNT.modules.regularization.Regularization": {"fullname": "NDNT.modules.regularization.Regularization", "modulename": "NDNT.modules.regularization", "qualname": "Regularization", "kind": "class", "doc": "<p>Class for handling layer-wise regularization. </p>\n\n<p>This class stores all info for regularization, \nand sets up regularization modules for training, \nand returns reg_penalty from layer when passed in weights.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong>vals (dict):</strong>  values for different types of regularization stored as\nfloats</li>\n<li><strong>vals_ph (dict):</strong>  placeholders for different types of regularization to\nsimplify the tf Graph when experimenting with different reg vals</li>\n<li><strong>vals_var (dict):</strong>  values for different types of regularization stored as\n(un-trainable) tf.Variables</li>\n<li><strong>mats (dict):</strong>  matrices for different types of regularization stored as\ntf constants</li>\n<li><strong>penalties (dict):</strong>  tf ops for evaluating different regularization \npenalties</li>\n<li><strong>input_dims (list):</strong>  dimensions of layer input size; for constructing reg \nmatrices</li>\n<li><strong>num_outputs (int):</strong>  dimension of layer output size; for generating \ntarget weights in norm2</li>\n</ul>\n", "bases": "torch.nn.modules.module.Module"}, "NDNT.modules.regularization.Regularization.__init__": {"fullname": "NDNT.modules.regularization.Regularization.__init__", "modulename": "NDNT.modules.regularization", "qualname": "Regularization.__init__", "kind": "function", "doc": "<p>Constructor for Regularization class. This stores all info for regularization, and \nsets up regularization modules for training, and returns reg_penalty from layer when passed in weights</p>\n\n<p>Parameters:</p>\n\n<ul>\n<li>input_dims (list of ints): dimension of input size (for building reg mats)</li>\n<li>vals (dict, optional): key-value pairs specifying value for each type of regularization </li>\n<li>Note: to pass in boundary_condition information, use a dict in vals with the values corresponding to\nparticular regularization, e,g., 'BCs':{'d2t':1, 'd2x':0} (1=on, 0=off)</li>\n</ul>\n\n<p>Raises:</p>\n\n<ul>\n<li>TypeError: If <code>input_dims</code> is not specified</li>\n<li>TypeError: If <code>num_outputs</code> is not specified</li>\n</ul>\n\n<p>Notes:</p>\n\n<ul>\n<li>I'm using my old regularization matrices, which is made for the following 3-dimensional \nweights with dimensions ordered in [NX, NY, num_lags]. Currently, filter_dims is 4-d: \n[num_filters, NX, NY, num_lags] so this will need to rearrage so num_filters gets folded into last \ndimension so that it will work with d2t regularization, if reshape is necessary]</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">filter_dims</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">vals</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">num_outputs</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">normalize</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">pos_constraint</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">folded_lags</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "NDNT.modules.regularization.Regularization.input_dims": {"fullname": "NDNT.modules.regularization.Regularization.input_dims", "modulename": "NDNT.modules.regularization", "qualname": "Regularization.input_dims", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.regularization.Regularization.vals": {"fullname": "NDNT.modules.regularization.Regularization.vals", "modulename": "NDNT.modules.regularization", "qualname": "Regularization.vals", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.regularization.Regularization.reg_modules": {"fullname": "NDNT.modules.regularization.Regularization.reg_modules", "modulename": "NDNT.modules.regularization", "qualname": "Regularization.reg_modules", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.regularization.Regularization.normalize": {"fullname": "NDNT.modules.regularization.Regularization.normalize", "modulename": "NDNT.modules.regularization", "qualname": "Regularization.normalize", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.regularization.Regularization.unit_reg": {"fullname": "NDNT.modules.regularization.Regularization.unit_reg", "modulename": "NDNT.modules.regularization", "qualname": "Regularization.unit_reg", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.regularization.Regularization.folded_lags": {"fullname": "NDNT.modules.regularization.Regularization.folded_lags", "modulename": "NDNT.modules.regularization", "qualname": "Regularization.folded_lags", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.regularization.Regularization.num_outputs": {"fullname": "NDNT.modules.regularization.Regularization.num_outputs", "modulename": "NDNT.modules.regularization", "qualname": "Regularization.num_outputs", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.regularization.Regularization.pos_constraint": {"fullname": "NDNT.modules.regularization.Regularization.pos_constraint", "modulename": "NDNT.modules.regularization", "qualname": "Regularization.pos_constraint", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.regularization.Regularization.boundary_conditions": {"fullname": "NDNT.modules.regularization.Regularization.boundary_conditions", "modulename": "NDNT.modules.regularization", "qualname": "Regularization.boundary_conditions", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.regularization.Regularization.activity_regmodule": {"fullname": "NDNT.modules.regularization.Regularization.activity_regmodule", "modulename": "NDNT.modules.regularization", "qualname": "Regularization.activity_regmodule", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.regularization.Regularization.set_reg_val": {"fullname": "NDNT.modules.regularization.Regularization.set_reg_val", "modulename": "NDNT.modules.regularization", "qualname": "Regularization.set_reg_val", "kind": "function", "doc": "<p>Set regularization value in self.vals dict </p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>reg_type (str):</strong>  see <code>_allowed_reg_types</code> for options</li>\n<li><strong>reg_val (float):</strong>  value of regularization parameter</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>bool: True if <code>reg_type</code> has not been previously set</p>\n</blockquote>\n\n<p>Note: can also pass in a dictionary with boundary condition information addressed by reg_type</p>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>ValueError:</strong>  If <code>reg_type</code> is not a valid regularization type</li>\n<li><strong>ValueError:</strong>  If <code>reg_val</code> is less than 0.0</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">reg_type</span>, </span><span class=\"param\"><span class=\"n\">reg_val</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.regularization.Regularization.unit_reg_convert": {"fullname": "NDNT.modules.regularization.Regularization.unit_reg_convert", "modulename": "NDNT.modules.regularization", "qualname": "Regularization.unit_reg_convert", "kind": "function", "doc": "<p>Can convert reg object to turn on or off unit_reg (default turns it on</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">unit_reg</span><span class=\"o\">=</span><span class=\"kc\">True</span>, </span><span class=\"param\"><span class=\"n\">num_outputs</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.regularization.Regularization.build_reg_modules": {"fullname": "NDNT.modules.regularization.Regularization.build_reg_modules", "modulename": "NDNT.modules.regularization", "qualname": "Regularization.build_reg_modules", "kind": "function", "doc": "<p>Prepares regularization modules in train based on current regularization values</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">device</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.regularization.Regularization.compute_reg_loss": {"fullname": "NDNT.modules.regularization.Regularization.compute_reg_loss", "modulename": "NDNT.modules.regularization", "qualname": "Regularization.compute_reg_loss", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">weights</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.regularization.Regularization.compute_activity_regularization": {"fullname": "NDNT.modules.regularization.Regularization.compute_activity_regularization", "modulename": "NDNT.modules.regularization", "qualname": "Regularization.compute_activity_regularization", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">layer_output</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.regularization.Regularization.reg_copy": {"fullname": "NDNT.modules.regularization.Regularization.reg_copy", "modulename": "NDNT.modules.regularization", "qualname": "Regularization.reg_copy", "kind": "function", "doc": "<p>Copy regularization to new structure</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.regularization.Regularization.get_reg_class": {"fullname": "NDNT.modules.regularization.Regularization.get_reg_class", "modulename": "NDNT.modules.regularization", "qualname": "Regularization.get_reg_class", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">reg_type</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.regularization.RegModule": {"fullname": "NDNT.modules.regularization.RegModule", "modulename": "NDNT.modules.regularization", "qualname": "RegModule", "kind": "class", "doc": "<p>Base class for regularization modules</p>\n", "bases": "torch.nn.modules.module.Module"}, "NDNT.modules.regularization.RegModule.__init__": {"fullname": "NDNT.modules.regularization.RegModule.__init__", "modulename": "NDNT.modules.regularization", "qualname": "RegModule.__init__", "kind": "function", "doc": "<p>Constructor for Reg_module class</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">reg_type</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">reg_val</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">input_dims</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">num_dims</span><span class=\"o\">=</span><span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">unit_reg</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">folded_lags</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">pos_constraint</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "NDNT.modules.regularization.RegModule.reg_type": {"fullname": "NDNT.modules.regularization.RegModule.reg_type", "modulename": "NDNT.modules.regularization", "qualname": "RegModule.reg_type", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.regularization.RegModule.unit_reg": {"fullname": "NDNT.modules.regularization.RegModule.unit_reg", "modulename": "NDNT.modules.regularization", "qualname": "RegModule.unit_reg", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.regularization.RegModule.input_dims": {"fullname": "NDNT.modules.regularization.RegModule.input_dims", "modulename": "NDNT.modules.regularization", "qualname": "RegModule.input_dims", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.regularization.RegModule.num_dims": {"fullname": "NDNT.modules.regularization.RegModule.num_dims", "modulename": "NDNT.modules.regularization", "qualname": "RegModule.num_dims", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.regularization.RegModule.folded_lags": {"fullname": "NDNT.modules.regularization.RegModule.folded_lags", "modulename": "NDNT.modules.regularization", "qualname": "RegModule.folded_lags", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.regularization.RegModule.pos_constraint": {"fullname": "NDNT.modules.regularization.RegModule.pos_constraint", "modulename": "NDNT.modules.regularization", "qualname": "RegModule.pos_constraint", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.regularization.RegModule.forward": {"fullname": "NDNT.modules.regularization.RegModule.forward", "modulename": "NDNT.modules.regularization", "qualname": "RegModule.forward", "kind": "function", "doc": "<p>Defines the computation performed at every call.</p>\n\n<p>Should be overridden by all subclasses.</p>\n\n<div class=\"pdoc-alert pdoc-alert-note\">\n\n<p>Although the recipe for forward pass needs to be defined within\nthis function, one should call the <code>Module</code> instance afterwards\ninstead of this since the former takes care of running the\nregistered hooks while the latter silently ignores them.</p>\n\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">weights</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.regularization.LocalityReg": {"fullname": "NDNT.modules.regularization.LocalityReg", "modulename": "NDNT.modules.regularization", "qualname": "LocalityReg", "kind": "class", "doc": "<p>Regularization to penalize locality separably for each dimension</p>\n", "bases": "RegModule"}, "NDNT.modules.regularization.LocalityReg.__init__": {"fullname": "NDNT.modules.regularization.LocalityReg.__init__", "modulename": "NDNT.modules.regularization", "qualname": "LocalityReg.__init__", "kind": "function", "doc": "<p>Constructor for LocalityReg class</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">reg_type</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">reg_val</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">input_dims</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">num_dims</span><span class=\"o\">=</span><span class=\"mi\">0</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "NDNT.modules.regularization.LocalityReg.compute_reg_penalty": {"fullname": "NDNT.modules.regularization.LocalityReg.compute_reg_penalty", "modulename": "NDNT.modules.regularization", "qualname": "LocalityReg.compute_reg_penalty", "kind": "function", "doc": "<p>Compute regularization penalty for locality</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">weights</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.regularization.LocalityReg.build_reg_mats": {"fullname": "NDNT.modules.regularization.LocalityReg.build_reg_mats", "modulename": "NDNT.modules.regularization", "qualname": "LocalityReg.build_reg_mats", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.regularization.DiagonalReg": {"fullname": "NDNT.modules.regularization.DiagonalReg", "modulename": "NDNT.modules.regularization", "qualname": "DiagonalReg", "kind": "class", "doc": "<p>Regularization module for diagonal penalties</p>\n", "bases": "RegModule"}, "NDNT.modules.regularization.DiagonalReg.__init__": {"fullname": "NDNT.modules.regularization.DiagonalReg.__init__", "modulename": "NDNT.modules.regularization", "qualname": "DiagonalReg.__init__", "kind": "function", "doc": "<p>Constructor for Reg_module class</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">reg_type</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">reg_val</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">input_dims</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "NDNT.modules.regularization.DiagonalReg.input_dims": {"fullname": "NDNT.modules.regularization.DiagonalReg.input_dims", "modulename": "NDNT.modules.regularization", "qualname": "DiagonalReg.input_dims", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.regularization.DiagonalReg.compute_reg_penalty": {"fullname": "NDNT.modules.regularization.DiagonalReg.compute_reg_penalty", "modulename": "NDNT.modules.regularization", "qualname": "DiagonalReg.compute_reg_penalty", "kind": "function", "doc": "<p>Compute regularization loss</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">weights</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.regularization.DiagonalReg.build_reg_mats": {"fullname": "NDNT.modules.regularization.DiagonalReg.build_reg_mats", "modulename": "NDNT.modules.regularization", "qualname": "DiagonalReg.build_reg_mats", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">reg_type</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.regularization.InlineReg": {"fullname": "NDNT.modules.regularization.InlineReg", "modulename": "NDNT.modules.regularization", "qualname": "InlineReg", "kind": "class", "doc": "<p>Regularization module for inline penalties</p>\n", "bases": "RegModule"}, "NDNT.modules.regularization.InlineReg.__init__": {"fullname": "NDNT.modules.regularization.InlineReg.__init__", "modulename": "NDNT.modules.regularization", "qualname": "InlineReg.__init__", "kind": "function", "doc": "<p>Constructor for Reg_module class</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">reg_type</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">reg_val</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">input_dims</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "NDNT.modules.regularization.InlineReg.compute_reg_penalty": {"fullname": "NDNT.modules.regularization.InlineReg.compute_reg_penalty", "modulename": "NDNT.modules.regularization", "qualname": "InlineReg.compute_reg_penalty", "kind": "function", "doc": "<p>Calculate regularization penalty for various reg types</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">weights</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.regularization.ConvReg": {"fullname": "NDNT.modules.regularization.ConvReg", "modulename": "NDNT.modules.regularization", "qualname": "ConvReg", "kind": "class", "doc": "<p>Regularization module for convolutional penalties</p>\n", "bases": "RegModule"}, "NDNT.modules.regularization.ConvReg.__init__": {"fullname": "NDNT.modules.regularization.ConvReg.__init__", "modulename": "NDNT.modules.regularization", "qualname": "ConvReg.__init__", "kind": "function", "doc": "<p>Constructor for Reg_module class</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">reg_type</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">reg_val</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">input_dims</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">bc_val</span><span class=\"o\">=</span><span class=\"mi\">1</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "NDNT.modules.regularization.ConvReg.BC": {"fullname": "NDNT.modules.regularization.ConvReg.BC", "modulename": "NDNT.modules.regularization", "qualname": "ConvReg.BC", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.regularization.ConvReg.compute_reg_penalty": {"fullname": "NDNT.modules.regularization.ConvReg.compute_reg_penalty", "modulename": "NDNT.modules.regularization", "qualname": "ConvReg.compute_reg_penalty", "kind": "function", "doc": "<p>I'm separating the code for more complicated regularization penalties in the simplest possible way here, but\nthis can be done more (or less) elaborately in the future. The challenge here is that the dimension of the weight\nvector (1-D, 2-D, 3-D) determines what sort of Laplacian matrix, and convolution, to do\nNote that all convolutions are implicitly 'valid' so no boundary conditions</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">weights</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.regularization.Tikhanov": {"fullname": "NDNT.modules.regularization.Tikhanov", "modulename": "NDNT.modules.regularization", "qualname": "Tikhanov", "kind": "class", "doc": "<p>Regularization module for Tikhanov regularization</p>\n", "bases": "RegModule"}, "NDNT.modules.regularization.Tikhanov.__init__": {"fullname": "NDNT.modules.regularization.Tikhanov.__init__", "modulename": "NDNT.modules.regularization", "qualname": "Tikhanov.__init__", "kind": "function", "doc": "<p>Constructor for Tikhanov class</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">reg_type</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">reg_val</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">input_dims</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">bc_val</span><span class=\"o\">=</span><span class=\"mi\">0</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "NDNT.modules.regularization.Tikhanov.input_dims": {"fullname": "NDNT.modules.regularization.Tikhanov.input_dims", "modulename": "NDNT.modules.regularization", "qualname": "Tikhanov.input_dims", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.regularization.Tikhanov.compute_reg_penalty": {"fullname": "NDNT.modules.regularization.Tikhanov.compute_reg_penalty", "modulename": "NDNT.modules.regularization", "qualname": "Tikhanov.compute_reg_penalty", "kind": "function", "doc": "<p>Calculate regularization penalty for Tikhanov reg types</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">weights</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.regularization.TikhanovC": {"fullname": "NDNT.modules.regularization.TikhanovC", "modulename": "NDNT.modules.regularization", "qualname": "TikhanovC", "kind": "class", "doc": "<p>Regularization module for Tikhanov-collapse regularization -- where all but one\ndimension is marginalized over first</p>\n", "bases": "RegModule"}, "NDNT.modules.regularization.TikhanovC.__init__": {"fullname": "NDNT.modules.regularization.TikhanovC.__init__", "modulename": "NDNT.modules.regularization", "qualname": "TikhanovC.__init__", "kind": "function", "doc": "<p>Constructor for Tikhanov class</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">reg_type</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">reg_val</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">input_dims</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">bc_val</span><span class=\"o\">=</span><span class=\"mi\">0</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "NDNT.modules.regularization.TikhanovC.input_dims": {"fullname": "NDNT.modules.regularization.TikhanovC.input_dims", "modulename": "NDNT.modules.regularization", "qualname": "TikhanovC.input_dims", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.regularization.TikhanovC.collapse_dims": {"fullname": "NDNT.modules.regularization.TikhanovC.collapse_dims", "modulename": "NDNT.modules.regularization", "qualname": "TikhanovC.collapse_dims", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.regularization.TikhanovC.compute_reg_penalty": {"fullname": "NDNT.modules.regularization.TikhanovC.compute_reg_penalty", "modulename": "NDNT.modules.regularization", "qualname": "TikhanovC.compute_reg_penalty", "kind": "function", "doc": "<p>Calculate regularization penalty for Tikhanov reg types</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">weights</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.regularization.ActivityReg": {"fullname": "NDNT.modules.regularization.ActivityReg", "modulename": "NDNT.modules.regularization", "qualname": "ActivityReg", "kind": "class", "doc": "<p>Regularization to penalize activity separably for each dimension\nNote that the penalty needs to be computed elsewhere and just stored here</p>\n", "bases": "RegModule"}, "NDNT.modules.regularization.ActivityReg.__init__": {"fullname": "NDNT.modules.regularization.ActivityReg.__init__", "modulename": "NDNT.modules.regularization", "qualname": "ActivityReg.__init__", "kind": "function", "doc": "<p>Constructor for LocalityReg class</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">reg_type</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">reg_val</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">input_dims</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">num_dims</span><span class=\"o\">=</span><span class=\"mi\">0</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "NDNT.modules.regularization.ActivityReg.acitivity_penalty": {"fullname": "NDNT.modules.regularization.ActivityReg.acitivity_penalty", "modulename": "NDNT.modules.regularization", "qualname": "ActivityReg.acitivity_penalty", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.modules.regularization.ActivityReg.compute_activity_penalty": {"fullname": "NDNT.modules.regularization.ActivityReg.compute_activity_penalty", "modulename": "NDNT.modules.regularization", "qualname": "ActivityReg.compute_activity_penalty", "kind": "function", "doc": "<p>Computes activity penalty from activations -- called in layer forward</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">acts</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.modules.regularization.ActivityReg.compute_reg_penalty": {"fullname": "NDNT.modules.regularization.ActivityReg.compute_reg_penalty", "modulename": "NDNT.modules.regularization", "qualname": "ActivityReg.compute_reg_penalty", "kind": "function", "doc": "<p>Compute regularization penalty for locality</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">weights</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.networks": {"fullname": "NDNT.networks", "modulename": "NDNT.networks", "kind": "module", "doc": "<p></p>\n"}, "NDNT.networks.LayerTypes": {"fullname": "NDNT.networks.LayerTypes", "modulename": "NDNT.networks", "qualname": "LayerTypes", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;normal&#x27;: &lt;class &#x27;NDNT.modules.layers.ndnlayer.NDNLayer&#x27;&gt;, &#x27;conv&#x27;: &lt;class &#x27;NDNT.modules.layers.convlayers.ConvLayer&#x27;&gt;, &#x27;divnorm&#x27;: &lt;class &#x27;NDNT.modules.layers.normlayers.DivNormLayer&#x27;&gt;, &#x27;tconv&#x27;: &lt;class &#x27;NDNT.modules.layers.convlayers.TconvLayer&#x27;&gt;, &#x27;stconv&#x27;: &lt;class &#x27;NDNT.modules.layers.convlayers.STconvLayer&#x27;&gt;, &#x27;tlayer&#x27;: &lt;class &#x27;NDNT.modules.layers.specialtylayers.Tlayer&#x27;&gt;, &#x27;biconv&#x27;: &lt;class &#x27;NDNT.modules.layers.bilayers.BiConvLayer1D&#x27;&gt;, &#x27;bistconv&#x27;: &lt;class &#x27;NDNT.modules.layers.bilayers.BiSTconv1D&#x27;&gt;, &#x27;ori&#x27;: &lt;class &#x27;NDNT.modules.layers.orilayers.OriLayer&#x27;&gt;, &#x27;oriconv&#x27;: &lt;class &#x27;NDNT.modules.layers.orilayers.OriConvLayer&#x27;&gt;, &#x27;conv3d&#x27;: &lt;class &#x27;NDNT.modules.layers.orilayers.ConvLayer3D&#x27;&gt;, &#x27;oolayer&#x27;: &lt;class &#x27;NDNT.modules.layers.specialtylayers.OnOffLayer&#x27;&gt;, &#x27;masklayer&#x27;: &lt;class &#x27;NDNT.modules.layers.specialtylayers.MaskLayer&#x27;&gt;, &#x27;iter&#x27;: &lt;class &#x27;NDNT.modules.layers.reslayers.IterLayer&#x27;&gt;, &#x27;iterT&#x27;: &lt;class &#x27;NDNT.modules.layers.reslayers.IterTlayer&#x27;&gt;, &#x27;iterST&#x27;: &lt;class &#x27;NDNT.modules.layers.reslayers.IterSTlayer&#x27;&gt;, &#x27;readout&#x27;: &lt;class &#x27;NDNT.modules.layers.readouts.ReadoutLayer&#x27;&gt;, &#x27;readout3d&#x27;: &lt;class &#x27;NDNT.modules.layers.readouts.ReadoutLayer3d&#x27;&gt;, &#x27;fixation&#x27;: &lt;class &#x27;NDNT.modules.layers.readouts.FixationLayer&#x27;&gt;, &#x27;lag&#x27;: &lt;class &#x27;NDNT.modules.layers.laglayers.LagLayer&#x27;&gt;, &#x27;time&#x27;: &lt;class &#x27;NDNT.modules.layers.timelayers.TimeLayer&#x27;&gt;, &#x27;dim0&#x27;: &lt;class &#x27;NDNT.modules.layers.dimlayers.Dim0Layer&#x27;&gt;, &#x27;dimSP&#x27;: &lt;class &#x27;NDNT.modules.layers.dimlayers.DimSPLayer&#x27;&gt;, &#x27;dimSPT&#x27;: &lt;class &#x27;NDNT.modules.layers.dimlayers.DimSPTLayer&#x27;&gt;, &#x27;channel&#x27;: &lt;class &#x27;NDNT.modules.layers.dimlayers.ChannelLayer&#x27;&gt;, &#x27;LVlayer&#x27;: &lt;class &#x27;NDNT.modules.layers.lvlayers.LVLayer&#x27;&gt;, &#x27;l1layer&#x27;: &lt;class &#x27;NDNT.modules.layers.specialtylayers.L1convLayer&#x27;&gt;}"}, "NDNT.networks.FFnetwork": {"fullname": "NDNT.networks.FFnetwork", "modulename": "NDNT.networks", "qualname": "FFnetwork", "kind": "class", "doc": "<p>Initializes an instance of the network.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>layer_list (list, optional):</strong>  A list of dictionaries representing the layers of the network. Defaults to None.</li>\n<li><strong>ffnet_type (str, optional):</strong>  The type of the feedforward network. Defaults to 'normal'.</li>\n<li><strong>xstim_n (str, optional):</strong>  The name of the stimulus input. Defaults to 'stim'.</li>\n<li><strong>ffnet_n (list, optional):</strong>  A list of feedforward networks. Defaults to None.</li>\n<li><strong>input_dims_list (list, optional):</strong>  A list of input dimensions for each layer. Defaults to None.</li>\n<li><strong>reg_list (list, optional):</strong>  A list of regularization parameters. Defaults to None.</li>\n<li><strong>scaffold_levels (list, optional):</strong>  A list of scaffold levels. Defaults to None.</li>\n<li><strong>**kwargs:</strong>  Additional keyword arguments.</li>\n</ul>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>AssertionError:</strong>  If layer_list is not provided.</li>\n</ul>\n", "bases": "torch.nn.modules.module.Module"}, "NDNT.networks.FFnetwork.__init__": {"fullname": "NDNT.networks.FFnetwork.__init__", "modulename": "NDNT.networks", "qualname": "FFnetwork.__init__", "kind": "function", "doc": "<p>Initializes internal Module state, shared by both nn.Module and ScriptModule.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">layer_list</span><span class=\"p\">:</span> <span class=\"nb\">list</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">ffnet_type</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;normal&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">xstim_n</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;stim&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">ffnet_n</span><span class=\"p\">:</span> <span class=\"nb\">list</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">input_dims_list</span><span class=\"p\">:</span> <span class=\"nb\">list</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">reg_list</span><span class=\"p\">:</span> <span class=\"nb\">list</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">scaffold_levels</span><span class=\"p\">:</span> <span class=\"nb\">list</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "NDNT.networks.FFnetwork.network_type": {"fullname": "NDNT.networks.FFnetwork.network_type", "modulename": "NDNT.networks", "qualname": "FFnetwork.network_type", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.networks.FFnetwork.layer_list": {"fullname": "NDNT.networks.FFnetwork.layer_list", "modulename": "NDNT.networks", "qualname": "FFnetwork.layer_list", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.networks.FFnetwork.layer_types": {"fullname": "NDNT.networks.FFnetwork.layer_types", "modulename": "NDNT.networks", "qualname": "FFnetwork.layer_types", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.networks.FFnetwork.xstim_n": {"fullname": "NDNT.networks.FFnetwork.xstim_n", "modulename": "NDNT.networks", "qualname": "FFnetwork.xstim_n", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.networks.FFnetwork.ffnets_in": {"fullname": "NDNT.networks.FFnetwork.ffnets_in", "modulename": "NDNT.networks", "qualname": "FFnetwork.ffnets_in", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.networks.FFnetwork.layers": {"fullname": "NDNT.networks.FFnetwork.layers", "modulename": "NDNT.networks", "qualname": "FFnetwork.layers", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.networks.FFnetwork.output_dims": {"fullname": "NDNT.networks.FFnetwork.output_dims", "modulename": "NDNT.networks", "qualname": "FFnetwork.output_dims", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.networks.FFnetwork.num_outputs": {"fullname": "NDNT.networks.FFnetwork.num_outputs", "modulename": "NDNT.networks", "qualname": "FFnetwork.num_outputs", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.networks.FFnetwork.determine_input_dims": {"fullname": "NDNT.networks.FFnetwork.determine_input_dims", "modulename": "NDNT.networks", "qualname": "FFnetwork.determine_input_dims", "kind": "function", "doc": "<p>Sets input_dims given network inputs. Can be overloaded depending on the network type. For this base class, there\nare two types of network input: external stimulus (xstim_n) or a list of internal (ffnet_in) networks:\n    For external inputs, it just uses the passed-in input_dims\n    For internal network inputs, it will concatenate inputs along the filter dimension, but MUST match other dims\nAs currently designed, this can either external or internal, but not both</p>\n\n<h6 id=\"this-sets-the-following-internal-ffnetwork-properties\">This sets the following internal FFnetwork properties:</h6>\n\n<blockquote>\n  <p>self.input_dims\n  self.input_dims_list</p>\n</blockquote>\n\n<p>and returns Boolean whether the passed in input dims are valid</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>input_dims_list (list):</strong>  A list of input dimensions for each layer.</li>\n<li><strong>ffnet_type (str):</strong>  The type of the feedforward network.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>valid_input_dims (bool): Whether the passed in input dims are valid.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">input_dims_list</span>, </span><span class=\"param\"><span class=\"n\">ffnet_type</span><span class=\"o\">=</span><span class=\"s1\">&#39;normal&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.networks.FFnetwork.preprocess_input": {"fullname": "NDNT.networks.FFnetwork.preprocess_input", "modulename": "NDNT.networks", "qualname": "FFnetwork.preprocess_input", "kind": "function", "doc": "<p>Preprocess input to network.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>inputs (list, torch.Tensor):</strong>  The input to the network.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>x (torch.Tensor): The preprocessed input.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>ValueError:</strong>  If no layers are defined.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">inputs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.networks.FFnetwork.forward": {"fullname": "NDNT.networks.FFnetwork.forward", "modulename": "NDNT.networks", "qualname": "FFnetwork.forward", "kind": "function", "doc": "<p>Forward pass through the network.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>inputs (list, torch.Tensor):</strong>  The input to the network.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>x (torch.Tensor): The output of the network.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">inputs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.networks.FFnetwork.prepare_regularization": {"fullname": "NDNT.networks.FFnetwork.prepare_regularization", "modulename": "NDNT.networks", "qualname": "FFnetwork.prepare_regularization", "kind": "function", "doc": "<p>Makes regularization modules with current requested values.\nThis is done immediately before training, because it can change during training and tuning.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>device (str, optional):</strong>  The device to use. Defaults to None.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">device</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.networks.FFnetwork.compute_reg_loss": {"fullname": "NDNT.networks.FFnetwork.compute_reg_loss", "modulename": "NDNT.networks", "qualname": "FFnetwork.compute_reg_loss", "kind": "function", "doc": "<p>Computes the regularization loss.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li>None</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>rloss (torch.Tensor): The regularization loss.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.networks.FFnetwork.list_parameters": {"fullname": "NDNT.networks.FFnetwork.list_parameters", "modulename": "NDNT.networks", "qualname": "FFnetwork.list_parameters", "kind": "function", "doc": "<p>Lists the parameters for the network.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>layer_target (int, optional):</strong>  The layer to list the parameters for. Defaults to None.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>None</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>AssertionError:</strong>  If the layer target is invalid.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">layer_target</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.networks.FFnetwork.set_parameters": {"fullname": "NDNT.networks.FFnetwork.set_parameters", "modulename": "NDNT.networks", "qualname": "FFnetwork.set_parameters", "kind": "function", "doc": "<p>Sets the parameters for the listed layer or for all layers.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>layer_target (int, optional):</strong>  The layer to set the parameters for. Defaults to None.</li>\n<li><strong>name (str):</strong>  The name of the parameter.</li>\n<li><strong>val (bool):</strong>  The value to set the parameter to.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>None</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>AssertionError:</strong>  If the layer target is invalid.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">layer_target</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">val</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.networks.FFnetwork.set_reg_val": {"fullname": "NDNT.networks.FFnetwork.set_reg_val", "modulename": "NDNT.networks", "qualname": "FFnetwork.set_reg_val", "kind": "function", "doc": "<p>Set reg_values for listed layer or for all layers.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>reg_type (str):</strong>  The type of regularization to set.</li>\n<li><strong>reg_val (float):</strong>  The value to set the regularization to.</li>\n<li><strong>layer_target (int, optional):</strong>  The layer to set the regularization for. Defaults to None.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>None</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>AssertionError:</strong>  If the layer target is invalid.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">reg_type</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">reg_val</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">layer_target</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.networks.FFnetwork.plot_filters": {"fullname": "NDNT.networks.FFnetwork.plot_filters", "modulename": "NDNT.networks", "qualname": "FFnetwork.plot_filters", "kind": "function", "doc": "<p>Plots the filters for the listed layer.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>layer_target (int, optional):</strong>  The layer to plot the filters for. Defaults to 0.</li>\n<li><strong>**kwargs:</strong>  Additional keyword arguments.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>None</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">layer_target</span><span class=\"o\">=</span><span class=\"mi\">0</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.networks.FFnetwork.get_weights": {"fullname": "NDNT.networks.FFnetwork.get_weights", "modulename": "NDNT.networks", "qualname": "FFnetwork.get_weights", "kind": "function", "doc": "<p>Passed down to layer call, with optional arguments conveyed.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>layer_target (int):</strong>  The layer to get the weights for.</li>\n<li><strong>**kwargs:</strong>  Additional keyword arguments.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>The weights for the specified layer.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>AssertionError:</strong>  If the layer target is invalid.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">layer_target</span><span class=\"o\">=</span><span class=\"mi\">0</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.networks.FFnetwork.ffnet_dict": {"fullname": "NDNT.networks.FFnetwork.ffnet_dict", "modulename": "NDNT.networks", "qualname": "FFnetwork.ffnet_dict", "kind": "function", "doc": "<p>Returns a dictionary of the feedforward network.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>layer_list (list):</strong>  A list of dictionaries representing the layers of the network.</li>\n<li><strong>xstim_n (str):</strong>  The name of the stimulus input.</li>\n<li><strong>ffnet_n (list):</strong>  A list of feedforward networks.</li>\n<li><strong>ffnet_type (str):</strong>  The type of the feedforward network.</li>\n<li><strong>scaffold_levels (list):</strong>  A list of scaffold levels.</li>\n<li><strong>num_lags_out (int):</strong>  The number of lags out.</li>\n<li><strong>**kwargs:</strong>  Additional keyword arguments.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>ffnet_dict (dict): The dictionary of the feedforward network.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">layer_list</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">xstim_n</span><span class=\"o\">=</span><span class=\"s1\">&#39;stim&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">ffnet_n</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">ffnet_type</span><span class=\"o\">=</span><span class=\"s1\">&#39;normal&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">scaffold_levels</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">num_lags_out</span><span class=\"o\">=</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.networks.ScaffoldNetwork": {"fullname": "NDNT.networks.ScaffoldNetwork", "modulename": "NDNT.networks", "qualname": "ScaffoldNetwork", "kind": "class", "doc": "<p>Concatenates output of all layers together in filter dimension, preserving spatial dims.</p>\n\n<p>This essentially used the constructor for Point1DGaussian, with dicationary input.\nCurrently there is no extra code required at the network level. I think the constructor\ncan be left off entirely, but leaving in in case want to add something.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>scaffold_levels (list):</strong>  A list of scaffold levels.</li>\n<li><strong>num_lags_out (int):</strong>  The number of lags out.</li>\n</ul>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>AssertionError:</strong>  If the scaffold levels are invalid.</li>\n</ul>\n", "bases": "FFnetwork"}, "NDNT.networks.ScaffoldNetwork.__init__": {"fullname": "NDNT.networks.ScaffoldNetwork.__init__", "modulename": "NDNT.networks", "qualname": "ScaffoldNetwork.__init__", "kind": "function", "doc": "<p>Initializes internal Module state, shared by both nn.Module and ScriptModule.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">scaffold_levels</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">num_lags_out</span><span class=\"o\">=</span><span class=\"mi\">1</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "NDNT.networks.ScaffoldNetwork.network_type": {"fullname": "NDNT.networks.ScaffoldNetwork.network_type", "modulename": "NDNT.networks", "qualname": "ScaffoldNetwork.network_type", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.networks.ScaffoldNetwork.num_lags_out": {"fullname": "NDNT.networks.ScaffoldNetwork.num_lags_out", "modulename": "NDNT.networks", "qualname": "ScaffoldNetwork.num_lags_out", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.networks.ScaffoldNetwork.spatial_dims": {"fullname": "NDNT.networks.ScaffoldNetwork.spatial_dims", "modulename": "NDNT.networks", "qualname": "ScaffoldNetwork.spatial_dims", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.networks.ScaffoldNetwork.filter_count": {"fullname": "NDNT.networks.ScaffoldNetwork.filter_count", "modulename": "NDNT.networks", "qualname": "ScaffoldNetwork.filter_count", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.networks.ScaffoldNetwork.forward": {"fullname": "NDNT.networks.ScaffoldNetwork.forward", "modulename": "NDNT.networks", "qualname": "ScaffoldNetwork.forward", "kind": "function", "doc": "<p>Forward pass through the network.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>inputs (list, torch.Tensor):</strong>  The input to the network.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>x (torch.Tensor): The output of the network.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>ValueError:</strong>  If no layers are defined.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">inputs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.networks.ScaffoldNetwork.ffnet_dict": {"fullname": "NDNT.networks.ScaffoldNetwork.ffnet_dict", "modulename": "NDNT.networks", "qualname": "ScaffoldNetwork.ffnet_dict", "kind": "function", "doc": "<p>Returns a dictionary of the scaffold network.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>scaffold_levels (list):</strong>  A list of scaffold levels.</li>\n<li><strong>num_lags_out (int):</strong>  The number of lags out.</li>\n<li><strong>**kwargs:</strong>  Additional keyword arguments.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>ffnet_dict (dict): The dictionary of the scaffold network.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>AssertionError:</strong>  If the scaffold levels are invalid.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">scaffold_levels</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">num_lags_out</span><span class=\"o\">=</span><span class=\"mi\">1</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.networks.ScaffoldNetwork3d": {"fullname": "NDNT.networks.ScaffoldNetwork3d", "modulename": "NDNT.networks", "qualname": "ScaffoldNetwork3d", "kind": "class", "doc": "<p>Like scaffold network above, but preserves the third dimension.</p>\n\n<p>This essentially used the constructor for Point1DGaussian, with dicationary input.\nCurrently there is no extra code required at the network level. I think the constructor\ncan be left off entirely, but leaving in in case want to add something.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>num_lags_out (int):</strong>  The number of lags out.</li>\n</ul>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>AssertionError:</strong>  If the scaffold levels are invalid.</li>\n</ul>\n", "bases": "ScaffoldNetwork"}, "NDNT.networks.ScaffoldNetwork3d.__init__": {"fullname": "NDNT.networks.ScaffoldNetwork3d.__init__", "modulename": "NDNT.networks", "qualname": "ScaffoldNetwork3d.__init__", "kind": "function", "doc": "<p>Initializes internal Module state, shared by both nn.Module and ScriptModule.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">num_lags_out</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "NDNT.networks.ScaffoldNetwork3d.network_type": {"fullname": "NDNT.networks.ScaffoldNetwork3d.network_type", "modulename": "NDNT.networks", "qualname": "ScaffoldNetwork3d.network_type", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.networks.ScaffoldNetwork3d.num_lags_out": {"fullname": "NDNT.networks.ScaffoldNetwork3d.num_lags_out", "modulename": "NDNT.networks", "qualname": "ScaffoldNetwork3d.num_lags_out", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.networks.ScaffoldNetwork3d.forward": {"fullname": "NDNT.networks.ScaffoldNetwork3d.forward", "modulename": "NDNT.networks", "qualname": "ScaffoldNetwork3d.forward", "kind": "function", "doc": "<p>Forward pass through the network.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>inputs (list, torch.Tensor):</strong>  The input to the network.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>x (torch.Tensor): The output of the network.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>ValueError:</strong>  If no layers are defined.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">inputs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.networks.ScaffoldNetwork3d.ffnet_dict": {"fullname": "NDNT.networks.ScaffoldNetwork3d.ffnet_dict", "modulename": "NDNT.networks", "qualname": "ScaffoldNetwork3d.ffnet_dict", "kind": "function", "doc": "<p>Returns a dictionary of the scaffold network.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>**kwargs:</strong>  Additional keyword arguments.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>ffnet_dict (dict): The dictionary of the scaffold network.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.networks.ReadoutNetwork": {"fullname": "NDNT.networks.ReadoutNetwork", "modulename": "NDNT.networks", "qualname": "ReadoutNetwork", "kind": "class", "doc": "<p>A readout using a spatial transformer layer whose positions are sampled from one Gaussian per neuron. Mean\nand covariance of that Gaussian are learned.</p>\n\n<p>This essentially used the constructor for Point1DGaussian, with dicationary input.\nCurrently there is no extra code required at the network level. I think the constructor\ncan be left off entirely, but leaving in in case want to add something.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>in_shape (list, tuple):</strong>  shape of the input feature map [channels, width, height]</li>\n<li><strong>outdims (int):</strong>  number of output units</li>\n<li><strong>bias (bool):</strong>  adds a bias term</li>\n<li><strong>init_mu_range (float):</strong>  initialises the the mean with Uniform([-init_range, init_range])\n[expected: positive value &lt;=1]. Default: 0.1</li>\n<li><strong>init_sigma (float):</strong>  The standard deviation of the Gaussian with <code>init_sigma</code> when <code>gauss_type</code> is\n'isotropic' or 'uncorrelated'. When <code>gauss_type='full'</code> initialize the square root of the\ncovariance matrix with with Uniform([-init_sigma, init_sigma]). Default: 1</li>\n<li><strong>batch_sample (bool):</strong>  if True, samples a position for each image in the batch separately\n[default: True as it decreases convergence time and performs just as well]</li>\n<li><strong>align_corners (bool):</strong>  Keyword agrument to gridsample for bilinear interpolation.\nIt changed behavior in PyTorch 1.3. The default of align_corners = True is setting the\nbehavior to pre PyTorch 1.3 functionality for comparability.</li>\n<li><strong>gauss_type (str):</strong>  Which Gaussian to use. Options are 'isotropic', 'uncorrelated', or 'full' (default).</li>\n<li><strong>shifter (dict):</strong>  Parameters for a predictor of shfiting grid locations. Has to have a form like\n{\n'hidden_layers':1,\n'hidden_features':20,\n'final_tanh': False,\n}</li>\n</ul>\n", "bases": "FFnetwork"}, "NDNT.networks.ReadoutNetwork.__init__": {"fullname": "NDNT.networks.ReadoutNetwork.__init__", "modulename": "NDNT.networks", "qualname": "ReadoutNetwork.__init__", "kind": "function", "doc": "<p>Initializes internal Module state, shared by both nn.Module and ScriptModule.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "NDNT.networks.ReadoutNetwork.network_type": {"fullname": "NDNT.networks.ReadoutNetwork.network_type", "modulename": "NDNT.networks", "qualname": "ReadoutNetwork.network_type", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.networks.ReadoutNetwork.determine_input_dims": {"fullname": "NDNT.networks.ReadoutNetwork.determine_input_dims", "modulename": "NDNT.networks", "qualname": "ReadoutNetwork.determine_input_dims", "kind": "function", "doc": "<p>Sets input_dims given network inputs. Can be overloaded depending on the network type. For this base class, there\nare two types of network input: external stimulus (xstim_n) or a list of internal (ffnet_in) networks:\n    For external inputs, it just uses the passed-in input_dims\n    For internal network inputs, it will concatenate inputs along the filter dimension, but MUST match other dims\nAs currently designed, this can either external or internal, but not both</p>\n\n<h6 id=\"this-sets-the-following-internal-ffnetwork-properties\">This sets the following internal FFnetwork properties:</h6>\n\n<blockquote>\n  <p>self.input_dims\n  self.input_dims_list</p>\n</blockquote>\n\n<p>and returns Boolean whether the passed in input dims are valid</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>input_dims_list (list):</strong>  A list of input dimensions for each layer.</li>\n<li><strong>**kwargs:</strong>  Additional keyword arguments.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>valid_input_dims (bool): Whether the passed in input dims are valid.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">input_dims_list</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.networks.ReadoutNetwork.forward": {"fullname": "NDNT.networks.ReadoutNetwork.forward", "modulename": "NDNT.networks", "qualname": "ReadoutNetwork.forward", "kind": "function", "doc": "<p>Network inputs correspond to output of conv layer, and (if it exists), a shifter.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>inputs (list, torch.Tensor):</strong>  The input to the network.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>y (torch.Tensor): The output of the network.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">inputs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.networks.ReadoutNetwork.get_readout_locations": {"fullname": "NDNT.networks.ReadoutNetwork.get_readout_locations", "modulename": "NDNT.networks", "qualname": "ReadoutNetwork.get_readout_locations", "kind": "function", "doc": "<p>Returns the readout locations.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li>None</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>The readout locations.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.networks.ReadoutNetwork.set_readout_locations": {"fullname": "NDNT.networks.ReadoutNetwork.set_readout_locations", "modulename": "NDNT.networks", "qualname": "ReadoutNetwork.set_readout_locations", "kind": "function", "doc": "<p>Sets the readout locations.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>locs:</strong>  The readout locations.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>None</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">locs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.networks.ReadoutNetwork.ffnet_dict": {"fullname": "NDNT.networks.ReadoutNetwork.ffnet_dict", "modulename": "NDNT.networks", "qualname": "ReadoutNetwork.ffnet_dict", "kind": "function", "doc": "<p>Returns a dictionary of the readout network.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>ffnet_n (int):</strong>  The feedforward network.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>ffnet_dict (dict): The dictionary of the readout network.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">ffnet_n</span><span class=\"o\">=</span><span class=\"mi\">0</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.networks.FFnet_external": {"fullname": "NDNT.networks.FFnet_external", "modulename": "NDNT.networks", "qualname": "FFnet_external", "kind": "class", "doc": "<p>This is a 'shell' that lets an external network be plugged into the NDN. It establishes all the basics\nso that information requested to this network from other parts of the NDN will behave correctly.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>external_module_dict (dict):</strong>  A dictionary of external modules.</li>\n<li><strong>external_module_name (str):</strong>  The name of the external module.</li>\n<li><strong>input_dims_reshape (list):</strong>  A list of input dimensions to reshape.</li>\n<li><strong>**kwargs:</strong>  Additional keyword arguments.</li>\n</ul>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>AssertionError:</strong>  If the external module dictionary is invalid.</li>\n</ul>\n", "bases": "FFnetwork"}, "NDNT.networks.FFnet_external.__init__": {"fullname": "NDNT.networks.FFnet_external.__init__", "modulename": "NDNT.networks", "qualname": "FFnet_external.__init__", "kind": "function", "doc": "<p>Initializes internal Module state, shared by both nn.Module and ScriptModule.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">external_module_dict</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">external_module_name</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">input_dims_reshape</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "NDNT.networks.FFnet_external.network_type": {"fullname": "NDNT.networks.FFnet_external.network_type", "modulename": "NDNT.networks", "qualname": "FFnet_external.network_type", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.networks.FFnet_external.input_dims_reshape": {"fullname": "NDNT.networks.FFnet_external.input_dims_reshape", "modulename": "NDNT.networks", "qualname": "FFnet_external.input_dims_reshape", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.networks.FFnet_external.forward": {"fullname": "NDNT.networks.FFnet_external.forward", "modulename": "NDNT.networks", "qualname": "FFnet_external.forward", "kind": "function", "doc": "<p>Forward pass through the network.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>inputs (list, torch.Tensor):</strong>  The input to the network.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>y (torch.Tensor): The output of the network.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>ValueError:</strong>  If no layers are defined.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">inputs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.networks.FFnet_external.compute_reg_loss": {"fullname": "NDNT.networks.FFnet_external.compute_reg_loss", "modulename": "NDNT.networks", "qualname": "FFnet_external.compute_reg_loss", "kind": "function", "doc": "<p>Computes the regularization loss.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li>None</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>0</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.networks.FFnet_external.list_params": {"fullname": "NDNT.networks.FFnet_external.list_params", "modulename": "NDNT.networks", "qualname": "FFnet_external.list_params", "kind": "function", "doc": "<p>Lists the parameters for the network.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>layer_target (int, optional):</strong>  The layer to list the parameters for. Defaults to None.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>None</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>AssertionError:</strong>  If the layer target is invalid.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">layer_target</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.networks.FFnet_external.set_params": {"fullname": "NDNT.networks.FFnet_external.set_params", "modulename": "NDNT.networks", "qualname": "FFnet_external.set_params", "kind": "function", "doc": "<p>Sets the parameters for the listed layer or for all layers.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>layer_target (int, optional):</strong>  The layer to set the parameters for. Defaults to None.</li>\n<li><strong>name (str):</strong>  The name of the parameter.</li>\n<li><strong>val (bool):</strong>  The value to set the parameter to.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>None</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>AssertionError:</strong>  If the layer target is invalid.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">layer_target</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">val</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.networks.FFnet_external.ffnet_dict": {"fullname": "NDNT.networks.FFnet_external.ffnet_dict", "modulename": "NDNT.networks", "qualname": "FFnet_external.ffnet_dict", "kind": "function", "doc": "<p>Returns a dictionary of the external network.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>**kwargs:</strong>  Additional keyword arguments.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>ffnet_dict (dict): The dictionary of the external network.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.training": {"fullname": "NDNT.training", "modulename": "NDNT.training", "kind": "module", "doc": "<p></p>\n"}, "NDNT.training.ada_hessian": {"fullname": "NDNT.training.ada_hessian", "modulename": "NDNT.training.ada_hessian", "kind": "module", "doc": "<p></p>\n"}, "NDNT.training.ada_hessian.AdaHessian": {"fullname": "NDNT.training.ada_hessian.AdaHessian", "modulename": "NDNT.training.ada_hessian", "qualname": "AdaHessian", "kind": "class", "doc": "<p>Implements the AdaHessian algorithm from \"ADAHESSIAN: An Adaptive Second OrderOptimizer for Machine Learning\".</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>params (iterable):</strong>  iterable of parameters to optimize or dicts defining parameter groups</li>\n<li><strong>lr (float, optional):</strong>  learning rate (default: 0.1)</li>\n<li><strong>betas ((float, float), optional):</strong>  coefficients used for computing running averages of gradient and the squared hessian trace (default: (0.9, 0.999))</li>\n<li><strong>eps (float, optional):</strong>  term added to the denominator to improve numerical stability (default: 1e-8)</li>\n<li><strong>weight_decay (float, optional):</strong>  weight decay (L2 penalty) (default: 0.0)</li>\n<li><strong>hessian_power (float, optional):</strong>  exponent of the hessian trace (default: 1.0)</li>\n<li><strong>update_each (int, optional):</strong>  compute the hessian trace approximation only after <em>this</em> number of steps (to save time) (default: 1)</li>\n<li><strong>n_samples (int, optional):</strong>  how many times to sample <code>z</code> for the approximation of the hessian trace (default: 1)</li>\n</ul>\n", "bases": "torch.optim.optimizer.Optimizer"}, "NDNT.training.ada_hessian.AdaHessian.__init__": {"fullname": "NDNT.training.ada_hessian.AdaHessian.__init__", "modulename": "NDNT.training.ada_hessian", "qualname": "AdaHessian.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">params</span>,</span><span class=\"param\">\t<span class=\"n\">lr</span><span class=\"o\">=</span><span class=\"mf\">0.1</span>,</span><span class=\"param\">\t<span class=\"n\">betas</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mf\">0.9</span><span class=\"p\">,</span> <span class=\"mf\">0.999</span><span class=\"p\">)</span>,</span><span class=\"param\">\t<span class=\"n\">eps</span><span class=\"o\">=</span><span class=\"mf\">1e-08</span>,</span><span class=\"param\">\t<span class=\"n\">weight_decay</span><span class=\"o\">=</span><span class=\"mf\">0.0</span>,</span><span class=\"param\">\t<span class=\"n\">hessian_power</span><span class=\"o\">=</span><span class=\"mf\">1.0</span>,</span><span class=\"param\">\t<span class=\"n\">update_each</span><span class=\"o\">=</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">n_samples</span><span class=\"o\">=</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">average_conv_kernel</span><span class=\"o\">=</span><span class=\"kc\">False</span></span>)</span>"}, "NDNT.training.ada_hessian.AdaHessian.n_samples": {"fullname": "NDNT.training.ada_hessian.AdaHessian.n_samples", "modulename": "NDNT.training.ada_hessian", "qualname": "AdaHessian.n_samples", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.training.ada_hessian.AdaHessian.update_each": {"fullname": "NDNT.training.ada_hessian.AdaHessian.update_each", "modulename": "NDNT.training.ada_hessian", "qualname": "AdaHessian.update_each", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.training.ada_hessian.AdaHessian.average_conv_kernel": {"fullname": "NDNT.training.ada_hessian.AdaHessian.average_conv_kernel", "modulename": "NDNT.training.ada_hessian", "qualname": "AdaHessian.average_conv_kernel", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.training.ada_hessian.AdaHessian.generator": {"fullname": "NDNT.training.ada_hessian.AdaHessian.generator", "modulename": "NDNT.training.ada_hessian", "qualname": "AdaHessian.generator", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.training.ada_hessian.AdaHessian.get_params": {"fullname": "NDNT.training.ada_hessian.AdaHessian.get_params", "modulename": "NDNT.training.ada_hessian", "qualname": "AdaHessian.get_params", "kind": "function", "doc": "<p>Gets all parameters in all param_groups with gradients.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>generator: a generator that produces all parameters with gradients</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.training.ada_hessian.AdaHessian.zero_hessian": {"fullname": "NDNT.training.ada_hessian.AdaHessian.zero_hessian", "modulename": "NDNT.training.ada_hessian", "qualname": "AdaHessian.zero_hessian", "kind": "function", "doc": "<p>Zeros out the accumalated hessian traces.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.training.ada_hessian.AdaHessian.set_hessian": {"fullname": "NDNT.training.ada_hessian.AdaHessian.set_hessian", "modulename": "NDNT.training.ada_hessian", "qualname": "AdaHessian.set_hessian", "kind": "function", "doc": "<p>Computes the Hutchinson approximation of the hessian trace and accumulates it for each trainable parameter.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.training.ada_hessian.AdaHessian.step": {"fullname": "NDNT.training.ada_hessian.AdaHessian.step", "modulename": "NDNT.training.ada_hessian", "qualname": "AdaHessian.step", "kind": "function", "doc": "<p>Performs a single optimization step.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>closure (callable, optional):</strong>  a closure that reevaluates the model and returns the loss (default: None)</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">closure</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.training.earlystopping": {"fullname": "NDNT.training.earlystopping", "modulename": "NDNT.training.earlystopping", "kind": "module", "doc": "<p></p>\n"}, "NDNT.training.earlystopping.EarlyStopping": {"fullname": "NDNT.training.earlystopping.EarlyStopping", "modulename": "NDNT.training.earlystopping", "qualname": "EarlyStopping", "kind": "class", "doc": "<p>Early stops the training if validation loss doesn't improve after a given patience.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>patience (int):</strong>  How long to wait after last time validation loss improved. (Default: 7)</li>\n<li><strong>verbose (bool):</strong>  If True, prints a message for each validation loss improvement. (Default: False)</li>\n<li><strong>delta (float):</strong>  Minimum change in the monitored quantity to qualify as an improvement. (Default: 0)</li>\n<li><strong>trace_func (function):</strong>  trace print function. (Default: print)</li>\n</ul>\n"}, "NDNT.training.earlystopping.EarlyStopping.__init__": {"fullname": "NDNT.training.earlystopping.EarlyStopping.__init__", "modulename": "NDNT.training.earlystopping", "qualname": "EarlyStopping.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">patience</span><span class=\"o\">=</span><span class=\"mi\">7</span>,</span><span class=\"param\">\t<span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">delta</span><span class=\"o\">=</span><span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">trace_func</span><span class=\"o\">=&lt;</span><span class=\"n\">built</span><span class=\"o\">-</span><span class=\"ow\">in</span> <span class=\"n\">function</span> <span class=\"nb\">print</span><span class=\"o\">&gt;</span></span>)</span>"}, "NDNT.training.earlystopping.EarlyStopping.patience": {"fullname": "NDNT.training.earlystopping.EarlyStopping.patience", "modulename": "NDNT.training.earlystopping", "qualname": "EarlyStopping.patience", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.training.earlystopping.EarlyStopping.verbose": {"fullname": "NDNT.training.earlystopping.EarlyStopping.verbose", "modulename": "NDNT.training.earlystopping", "qualname": "EarlyStopping.verbose", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.training.earlystopping.EarlyStopping.counter": {"fullname": "NDNT.training.earlystopping.EarlyStopping.counter", "modulename": "NDNT.training.earlystopping", "qualname": "EarlyStopping.counter", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.training.earlystopping.EarlyStopping.best_score": {"fullname": "NDNT.training.earlystopping.EarlyStopping.best_score", "modulename": "NDNT.training.earlystopping", "qualname": "EarlyStopping.best_score", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.training.earlystopping.EarlyStopping.early_stop": {"fullname": "NDNT.training.earlystopping.EarlyStopping.early_stop", "modulename": "NDNT.training.earlystopping", "qualname": "EarlyStopping.early_stop", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.training.earlystopping.EarlyStopping.val_loss_min": {"fullname": "NDNT.training.earlystopping.EarlyStopping.val_loss_min", "modulename": "NDNT.training.earlystopping", "qualname": "EarlyStopping.val_loss_min", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.training.earlystopping.EarlyStopping.delta": {"fullname": "NDNT.training.earlystopping.EarlyStopping.delta", "modulename": "NDNT.training.earlystopping", "qualname": "EarlyStopping.delta", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.training.earlystopping.EarlyStopping.trace_func": {"fullname": "NDNT.training.earlystopping.EarlyStopping.trace_func", "modulename": "NDNT.training.earlystopping", "qualname": "EarlyStopping.trace_func", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.training.lbfgs": {"fullname": "NDNT.training.lbfgs", "modulename": "NDNT.training.lbfgs", "kind": "module", "doc": "<p></p>\n"}, "NDNT.training.lbfgs.is_legal": {"fullname": "NDNT.training.lbfgs.is_legal", "modulename": "NDNT.training.lbfgs", "qualname": "is_legal", "kind": "function", "doc": "<p>Checks that tensor is not NaN or Inf.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>v (tensor):</strong>  tensor to be checked</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">v</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.training.lbfgs.polyinterp": {"fullname": "NDNT.training.lbfgs.polyinterp", "modulename": "NDNT.training.lbfgs", "qualname": "polyinterp", "kind": "function", "doc": "<p>Gives the minimizer and minimum of the interpolating polynomial over given points\nbased on function and derivative information. Defaults to bisection if no critical\npoints are valid.\nBased on polyinterp.m Matlab function in minFunc by Mark Schmidt with some slight\nmodifications.\nImplemented by: Hao-Jun Michael Shi and Dheevatsa Mudigere\nLast edited 12/6/18.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>points (nparray):</strong>  two-dimensional array with each point of form [x f g]</li>\n<li><strong>x_min_bound (float):</strong>  minimum value that brackets minimum (default: minimum of points)</li>\n<li><strong>x_max_bound (float):</strong>  maximum value that brackets minimum (default: maximum of points)</li>\n<li><strong>plot (bool):</strong>  plot interpolating polynomial</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>x_sol (float): minimizer of interpolating polynomial\n  F_min (float): minimum of interpolating polynomial</p>\n</blockquote>\n\n<h6 id=\"note\">Note:</h6>\n\n<blockquote>\n  <p>Set f or g to np.nan if they are unknown</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">points</span>, </span><span class=\"param\"><span class=\"n\">x_min_bound</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">x_max_bound</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">plot</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.training.lbfgs.LBFGS": {"fullname": "NDNT.training.lbfgs.LBFGS", "modulename": "NDNT.training.lbfgs", "qualname": "LBFGS", "kind": "class", "doc": "<p>Implements the L-BFGS algorithm. Compatible with multi-batch and full-overlap\nL-BFGS implementations and (stochastic) Powell damping. Partly based on the \noriginal L-BFGS implementation in PyTorch, Mark Schmidt's minFunc MATLAB code, \nand Michael Overton's weak Wolfe line search MATLAB code.\nImplemented by: Hao-Jun Michael Shi and Dheevatsa Mudigere\nLast edited 10/20/20.</p>\n\n<h6 id=\"warnings\">Warnings:</h6>\n\n<blockquote>\n  <p>. Does not support per-parameter options and parameter groups.\n  . All parameters have to be on a single device.</p>\n</blockquote>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>lr (float):</strong>  steplength or learning rate (default: 1)</li>\n<li><strong>history_size (int):</strong>  update history size (default: 10)</li>\n<li><strong>line_search (str):</strong>  designates line search to use (default: 'Wolfe')\nOptions:\n    'None': uses steplength designated in algorithm\n    'Armijo': uses Armijo backtracking line search\n    'Wolfe': uses Armijo-Wolfe bracketing line search</li>\n<li><strong>dtype:</strong>  data type (default: torch.float)</li>\n<li><strong>debug (bool):</strong>  debugging mode</li>\n</ul>\n\n<p>References:\n[1] Berahas, Albert S., Jorge Nocedal, and Martin Tak\u00e1c. \"A Multi-Batch L-BFGS \n    Method for Machine Learning.\" Advances in Neural Information Processing \n    Systems. 2016.\n[2] Bollapragada, Raghu, et al. \"A Progressive Batching L-BFGS Method for Machine \n    Learning.\" International Conference on Machine Learning. 2018.\n[3] Lewis, Adrian S., and Michael L. Overton. \"Nonsmooth Optimization via Quasi-Newton\n    Methods.\" Mathematical Programming 141.1-2 (2013): 135-163.\n[4] Liu, Dong C., and Jorge Nocedal. \"On the Limited Memory BFGS Method for \n    Large Scale Optimization.\" Mathematical Programming 45.1-3 (1989): 503-528.\n[5] Nocedal, Jorge. \"Updating Quasi-Newton Matrices With Limited Storage.\" \n    Mathematics of Computation 35.151 (1980): 773-782.\n[6] Nocedal, Jorge, and Stephen J. Wright. \"Numerical Optimization.\" Springer New York,\n    2006.\n[7] Schmidt, Mark. \"minFunc: Unconstrained Differentiable Multivariate Optimization \n    in Matlab.\" Software available at <a href=\"http://www.cs.ubc.ca/~schmidtm/Software/minFunc.html\">http://www.cs.ubc.ca/~schmidtm/Software/minFunc.html</a> \n    (2005).\n[8] Schraudolph, Nicol N., Jin Yu, and Simon G\u00fcnter. \"A Stochastic Quasi-Newton \n    Method for Online Convex Optimization.\" Artificial Intelligence and Statistics. \n    2007.\n[9] Wang, Xiao, et al. \"Stochastic Quasi-Newton Methods for Nonconvex Stochastic \n    Optimization.\" SIAM Journal on Optimization 27.2 (2017): 927-956.</p>\n", "bases": "torch.optim.optimizer.Optimizer"}, "NDNT.training.lbfgs.LBFGS.__init__": {"fullname": "NDNT.training.lbfgs.LBFGS.__init__", "modulename": "NDNT.training.lbfgs", "qualname": "LBFGS.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">params</span>,</span><span class=\"param\">\t<span class=\"n\">lr</span><span class=\"o\">=</span><span class=\"mf\">1.0</span>,</span><span class=\"param\">\t<span class=\"n\">history_size</span><span class=\"o\">=</span><span class=\"mi\">10</span>,</span><span class=\"param\">\t<span class=\"n\">line_search</span><span class=\"o\">=</span><span class=\"s1\">&#39;Wolfe&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">float32</span>,</span><span class=\"param\">\t<span class=\"n\">debug</span><span class=\"o\">=</span><span class=\"kc\">False</span></span>)</span>"}, "NDNT.training.lbfgs.LBFGS.line_search": {"fullname": "NDNT.training.lbfgs.LBFGS.line_search", "modulename": "NDNT.training.lbfgs", "qualname": "LBFGS.line_search", "kind": "function", "doc": "<p>Switches line search option.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>line_search (str):</strong>  designates line search to use\nOptions:\n    'None': uses steplength designated in algorithm\n    'Armijo': uses Armijo backtracking line search\n    'Wolfe': uses Armijo-Wolfe bracketing line search</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">line_search</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.training.lbfgs.LBFGS.two_loop_recursion": {"fullname": "NDNT.training.lbfgs.LBFGS.two_loop_recursion", "modulename": "NDNT.training.lbfgs", "qualname": "LBFGS.two_loop_recursion", "kind": "function", "doc": "<p>Performs two-loop recursion on given vector to obtain Hv.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>vec (tensor):</strong>  1-D tensor to apply two-loop recursion to</li>\n</ul>\n\n<h6 id=\"output\">Output:</h6>\n\n<blockquote>\n  <p>r (tensor): matrix-vector product Hv</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">vec</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.training.lbfgs.LBFGS.curvature_update": {"fullname": "NDNT.training.lbfgs.LBFGS.curvature_update", "modulename": "NDNT.training.lbfgs", "qualname": "LBFGS.curvature_update", "kind": "function", "doc": "<p>Performs curvature update.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>flat_grad (tensor):</strong>  1-D tensor of flattened gradient for computing \ngradient difference with previously stored gradient</li>\n<li><strong>eps (float):</strong>  constant for curvature pair rejection or damping (default: 1e-2)</li>\n<li><strong>damping (bool):</strong>  flag for using Powell damping (default: False)</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">flat_grad</span>, </span><span class=\"param\"><span class=\"n\">eps</span><span class=\"o\">=</span><span class=\"mf\">0.01</span>, </span><span class=\"param\"><span class=\"n\">damping</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.training.lbfgs.LBFGS.step": {"fullname": "NDNT.training.lbfgs.LBFGS.step", "modulename": "NDNT.training.lbfgs", "qualname": "LBFGS.step", "kind": "function", "doc": "<p>Performs a single optimization step (parameter update).</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>closure (Callable):</strong>  A closure that reevaluates the model and\nreturns the loss. Optional for most optimizers.</li>\n</ul>\n\n<div class=\"pdoc-alert pdoc-alert-note\">\n\n<p>Unless otherwise specified, this function should not modify the\n<code>.grad</code> field of the parameters.</p>\n\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">p_k</span>, </span><span class=\"param\"><span class=\"n\">g_Ok</span>, </span><span class=\"param\"><span class=\"n\">g_Sk</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">options</span><span class=\"o\">=</span><span class=\"p\">{}</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.training.lbfgs.FullBatchLBFGS": {"fullname": "NDNT.training.lbfgs.FullBatchLBFGS", "modulename": "NDNT.training.lbfgs", "qualname": "FullBatchLBFGS", "kind": "class", "doc": "<p>Implements full-batch or deterministic L-BFGS algorithm. Compatible with\nPowell damping. Can be used when evaluating a deterministic function and\ngradient. Wraps the LBFGS optimizer. Performs the two-loop recursion,\nupdating, and curvature updating in a single step.\nImplemented by: Hao-Jun Michael Shi and Dheevatsa Mudigere\nLast edited 11/15/18.</p>\n\n<h6 id=\"warnings\">Warnings:</h6>\n\n<blockquote>\n  <p>. Does not support per-parameter options and parameter groups.\n  . All parameters have to be on a single device.</p>\n</blockquote>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>lr (float):</strong>  steplength or learning rate (default: 1)</li>\n<li><strong>history_size (int):</strong>  update history size (default: 10)</li>\n<li><strong>line_search (str):</strong>  designates line search to use (default: 'Wolfe')\nOptions:\n    'None': uses steplength designated in algorithm\n    'Armijo': uses Armijo backtracking line search\n    'Wolfe': uses Armijo-Wolfe bracketing line search</li>\n<li><strong>dtype:</strong>  data type (default: torch.float)</li>\n<li><strong>debug (bool):</strong>  debugging mode</li>\n</ul>\n", "bases": "LBFGS"}, "NDNT.training.lbfgs.FullBatchLBFGS.__init__": {"fullname": "NDNT.training.lbfgs.FullBatchLBFGS.__init__", "modulename": "NDNT.training.lbfgs", "qualname": "FullBatchLBFGS.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">params</span>,</span><span class=\"param\">\t<span class=\"n\">lr</span><span class=\"o\">=</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">history_size</span><span class=\"o\">=</span><span class=\"mi\">10</span>,</span><span class=\"param\">\t<span class=\"n\">line_search</span><span class=\"o\">=</span><span class=\"s1\">&#39;Wolfe&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">float32</span>,</span><span class=\"param\">\t<span class=\"n\">debug</span><span class=\"o\">=</span><span class=\"kc\">False</span></span>)</span>"}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"fullname": "NDNT.training.lbfgs.FullBatchLBFGS.step", "modulename": "NDNT.training.lbfgs", "qualname": "FullBatchLBFGS.step", "kind": "function", "doc": "<p>Performs a single optimization step.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>options (dict):</strong>  contains options for performing line search (default: None)</li>\n</ul>\n\n<h6 id=\"general-options\">General Options:</h6>\n\n<blockquote>\n  <p>'eps' (float): constant for curvature pair rejection or damping (default: 1e-2)\n  'damping' (bool): flag for using Powell damping (default: False)</p>\n</blockquote>\n\n<h6 id=\"options-for-armijo-backtracking-line-search\">Options for Armijo backtracking line search:</h6>\n\n<blockquote>\n  <p>'closure' (callable): reevaluates model and returns function value\n  'current_loss' (tensor): objective value at current iterate (default: F(x_k))\n  'gtd' (tensor): inner product g_Ok'd in line search (default: g_Ok'd)\n  'eta' (tensor): factor for decreasing steplength &gt; 0 (default: 2)\n  'c1' (tensor): sufficient decrease constant in (0, 1) (default: 1e-4)\n  'max_ls' (int): maximum number of line search steps permitted (default: 10)\n  'interpolate' (bool): flag for using interpolation (default: True)\n  'inplace' (bool): flag for inplace operations (default: True)\n  'ls_debug' (bool): debugging mode for line search</p>\n</blockquote>\n\n<h6 id=\"options-for-wolfe-line-search\">Options for Wolfe line search:</h6>\n\n<blockquote>\n  <p>'closure' (callable): reevaluates model and returns function value\n  'current_loss' (tensor): objective value at current iterate (default: F(x_k))\n  'gtd' (tensor): inner product g_Ok'd in line search (default: g_Ok'd)\n  'eta' (float): factor for extrapolation (default: 2)\n  'c1' (float): sufficient decrease constant in (0, 1) (default: 1e-4)\n  'c2' (float): curvature condition constant in (0, 1) (default: 0.9)\n  'max_ls' (int): maximum number of line search steps permitted (default: 10)\n  'interpolate' (bool): flag for using interpolation (default: True)\n  'inplace' (bool): flag for inplace operations (default: True)\n  'ls_debug' (bool): debugging mode for line search</p>\n</blockquote>\n\n<p>Outputs (depends on line search):\n  . No line search:\n        t (float): steplength\n  . Armijo backtracking line search:\n        F_new (tensor): loss function at new iterate\n        t (tensor): final steplength\n        ls_step (int): number of backtracks\n        closure_eval (int): number of closure evaluations\n        desc_dir (bool): descent direction flag\n            True: p_k is descent direction with respect to the line search\n            function\n            False: p_k is not a descent direction with respect to the line\n            search function\n        fail (bool): failure flag\n            True: line search reached maximum number of iterations, failed\n            False: line search succeeded\n  . Wolfe line search:\n        F_new (tensor): loss function at new iterate\n        g_new (tensor): gradient at new iterate\n        t (float): final steplength\n        ls_step (int): number of backtracks\n        closure_eval (int): number of closure evaluations\n        grad_eval (int): number of gradient evaluations\n        desc_dir (bool): descent direction flag\n            True: p_k is descent direction with respect to the line search\n            function\n            False: p_k is not a descent direction with respect to the line\n            search function\n        fail (bool): failure flag\n            True: line search reached maximum number of iterations, failed\n            False: line search succeeded</p>\n\n<h6 id=\"notes\">Notes:</h6>\n\n<blockquote>\n  <p>. If encountering line search failure in the deterministic setting, one\n    should try increasing the maximum number of line search steps max_ls.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">options</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.training.lbfgsnew": {"fullname": "NDNT.training.lbfgsnew", "modulename": "NDNT.training.lbfgsnew", "kind": "module", "doc": "<p></p>\n"}, "NDNT.training.lbfgsnew.be_verbose": {"fullname": "NDNT.training.lbfgsnew.be_verbose", "modulename": "NDNT.training.lbfgsnew", "qualname": "be_verbose", "kind": "variable", "doc": "<p></p>\n", "default_value": "False"}, "NDNT.training.lbfgsnew.LBFGSNew": {"fullname": "NDNT.training.lbfgsnew.LBFGSNew", "modulename": "NDNT.training.lbfgsnew", "qualname": "LBFGSNew", "kind": "class", "doc": "<p>Implements L-BFGS algorithm.</p>\n\n<div class=\"pdoc-alert pdoc-alert-warning\">\n\n<p>This optimizer doesn't support per-parameter options and parameter\ngroups (there can be only one).</p>\n\n</div>\n\n<div class=\"pdoc-alert pdoc-alert-warning\">\n\n<p>Right now all parameters have to be on a single device. This will be\nimproved in the future.</p>\n\n</div>\n\n<div class=\"pdoc-alert pdoc-alert-note\">\n\n<p>This is a very memory intensive optimizer (it requires additional\n<code>param_bytes * (history_size + 1)</code> bytes). If it doesn't fit in memory\ntry reducing the history size, or use a different algorithm.</p>\n\n</div>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>lr (float):</strong>  learning rate (fallback value when line search fails. not really needed) (default: 1)</li>\n<li><strong>max_iter (int):</strong>  maximal number of iterations per optimization step\n(default: 10)</li>\n<li><strong>max_eval (int):</strong>  maximal number of function evaluations per optimization\nstep (default: max_iter * 1.25).</li>\n<li><strong>tolerance_grad (float):</strong>  termination tolerance on first order optimality\n(default: 1e-5).</li>\n<li><strong>tolerance_change (float):</strong>  termination tolerance on function\nvalue/parameter changes (default: 1e-9).</li>\n<li><strong>history_size (int):</strong>  update history size (default: 7).</li>\n<li><strong>line_search_fn:</strong>  if True, use cubic interpolation to findstep size, if False: fixed step size</li>\n<li><strong>batch_mode:</strong>  True for stochastic version (default False)</li>\n<li><strong>Example usage for full batch mode:</strong>  optimizer = LBFGSNew(model.parameters(), history_size=7, max_iter=100, line_search_fn=True, batch_mode=False)</li>\n<li><strong>Example usage for batch mode (stochastic):</strong>  optimizer = LBFGSNew(net.parameters(), history_size=7, max_iter=4, line_search_fn=True,batch_mode=True)\nNote: when using a closure(), only do backward() after checking the gradient is available,\nEg: \n  def closure():\n   optimizer.zero_grad()\n   outputs=net(inputs)\n   loss=criterion(outputs,labels)\n   if loss.requires_grad:\n     loss.backward()\n   return loss</li>\n</ul>\n", "bases": "torch.optim.optimizer.Optimizer"}, "NDNT.training.lbfgsnew.LBFGSNew.__init__": {"fullname": "NDNT.training.lbfgsnew.LBFGSNew.__init__", "modulename": "NDNT.training.lbfgsnew", "qualname": "LBFGSNew.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">params</span>,</span><span class=\"param\">\t<span class=\"n\">lr</span><span class=\"o\">=</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">max_iter</span><span class=\"o\">=</span><span class=\"mi\">10</span>,</span><span class=\"param\">\t<span class=\"n\">max_eval</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">tolerance_grad</span><span class=\"o\">=</span><span class=\"mf\">1e-05</span>,</span><span class=\"param\">\t<span class=\"n\">tolerance_change</span><span class=\"o\">=</span><span class=\"mf\">1e-09</span>,</span><span class=\"param\">\t<span class=\"n\">history_size</span><span class=\"o\">=</span><span class=\"mi\">7</span>,</span><span class=\"param\">\t<span class=\"n\">line_search_fn</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">batch_mode</span><span class=\"o\">=</span><span class=\"kc\">False</span></span>)</span>"}, "NDNT.training.lbfgsnew.LBFGSNew.step": {"fullname": "NDNT.training.lbfgsnew.LBFGSNew.step", "modulename": "NDNT.training.lbfgsnew", "qualname": "LBFGSNew.step", "kind": "function", "doc": "<p>Performs a single optimization step.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>closure (callable):</strong>  A closure that reevaluates the model\nand returns the loss.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">closure</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.training.trainer": {"fullname": "NDNT.training.trainer", "modulename": "NDNT.training.trainer", "kind": "module", "doc": "<p></p>\n"}, "NDNT.training.trainer.Trainer": {"fullname": "NDNT.training.trainer.Trainer", "modulename": "NDNT.training.trainer", "qualname": "Trainer", "kind": "class", "doc": "<p>This is the most basic trainer. There are fancier things we could add (hooks, callbacks, etc.), but I don't understand them well enough yet.</p>\n"}, "NDNT.training.trainer.Trainer.__init__": {"fullname": "NDNT.training.trainer.Trainer.__init__", "modulename": "NDNT.training.trainer", "qualname": "Trainer.__init__", "kind": "function", "doc": "<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>model (nn.Module):</strong>  Pytorch Model. Needs training_step and validation_step defined.</li>\n<li><strong>optimizer (torch.optim):</strong>  Pytorch optimizer.</li>\n<li><strong>device (torch.device):</strong>  Device to train on\nDefault: will use CUDA if available</li>\n<li><strong>scheduler (torch.scheduler):</strong>  learning rate scheduler\nDefault: None</li>\n<li><strong>dirpath (str):</strong>  Path to save checkpoints\nDefault: current directory</li>\n<li><strong>multi_gpu (bool):</strong>  Whether to use multiple GPUs\nDefault: False</li>\n<li><strong>max_epochs (int):</strong>  Maximum number of epochs to train\nDefault: 100</li>\n<li><strong>early_stopping (EarlyStopping):</strong>  If not None, will use this as the early stopping callback.\nDefault: None</li>\n<li><strong>optimize_graph (bool):</strong>  Whether to optimize graph before training</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">optimizer</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">scheduler</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">device</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">optimize_graph</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">dirpath</span><span class=\"o\">=</span><span class=\"s1\">&#39;./checkpoints&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">version</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">max_epochs</span><span class=\"o\">=</span><span class=\"mi\">100</span>,</span><span class=\"param\">\t<span class=\"n\">early_stopping</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">log_activations</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">scheduler_after</span><span class=\"o\">=</span><span class=\"s1\">&#39;batch&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">scheduler_metric</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">accumulate_grad_batches</span><span class=\"o\">=</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">set_grad_to_none</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "NDNT.training.trainer.Trainer.optimizer": {"fullname": "NDNT.training.trainer.Trainer.optimizer", "modulename": "NDNT.training.trainer", "qualname": "Trainer.optimizer", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.training.trainer.Trainer.scheduler": {"fullname": "NDNT.training.trainer.Trainer.scheduler", "modulename": "NDNT.training.trainer", "qualname": "Trainer.scheduler", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.training.trainer.Trainer.optimize_graph": {"fullname": "NDNT.training.trainer.Trainer.optimize_graph", "modulename": "NDNT.training.trainer", "qualname": "Trainer.optimize_graph", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.training.trainer.Trainer.log_activations": {"fullname": "NDNT.training.trainer.Trainer.log_activations", "modulename": "NDNT.training.trainer", "qualname": "Trainer.log_activations", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.training.trainer.Trainer.accumulate_grad_batches": {"fullname": "NDNT.training.trainer.Trainer.accumulate_grad_batches", "modulename": "NDNT.training.trainer", "qualname": "Trainer.accumulate_grad_batches", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.training.trainer.Trainer.verbose": {"fullname": "NDNT.training.trainer.Trainer.verbose", "modulename": "NDNT.training.trainer", "qualname": "Trainer.verbose", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.training.trainer.Trainer.set_to_none": {"fullname": "NDNT.training.trainer.Trainer.set_to_none", "modulename": "NDNT.training.trainer", "qualname": "Trainer.set_to_none", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.training.trainer.Trainer.fullbatch": {"fullname": "NDNT.training.trainer.Trainer.fullbatch", "modulename": "NDNT.training.trainer", "qualname": "Trainer.fullbatch", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.training.trainer.Trainer.dirpath": {"fullname": "NDNT.training.trainer.Trainer.dirpath", "modulename": "NDNT.training.trainer", "qualname": "Trainer.dirpath", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.training.trainer.Trainer.early_stopping": {"fullname": "NDNT.training.trainer.Trainer.early_stopping", "modulename": "NDNT.training.trainer", "qualname": "Trainer.early_stopping", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.training.trainer.Trainer.device": {"fullname": "NDNT.training.trainer.Trainer.device", "modulename": "NDNT.training.trainer", "qualname": "Trainer.device", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.training.trainer.Trainer.logger": {"fullname": "NDNT.training.trainer.Trainer.logger", "modulename": "NDNT.training.trainer", "qualname": "Trainer.logger", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.training.trainer.Trainer.version": {"fullname": "NDNT.training.trainer.Trainer.version", "modulename": "NDNT.training.trainer", "qualname": "Trainer.version", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.training.trainer.Trainer.epoch": {"fullname": "NDNT.training.trainer.Trainer.epoch", "modulename": "NDNT.training.trainer", "qualname": "Trainer.epoch", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.training.trainer.Trainer.max_epochs": {"fullname": "NDNT.training.trainer.Trainer.max_epochs", "modulename": "NDNT.training.trainer", "qualname": "Trainer.max_epochs", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.training.trainer.Trainer.n_iter": {"fullname": "NDNT.training.trainer.Trainer.n_iter", "modulename": "NDNT.training.trainer", "qualname": "Trainer.n_iter", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.training.trainer.Trainer.val_loss_min": {"fullname": "NDNT.training.trainer.Trainer.val_loss_min", "modulename": "NDNT.training.trainer", "qualname": "Trainer.val_loss_min", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.training.trainer.Trainer.step_scheduler_after": {"fullname": "NDNT.training.trainer.Trainer.step_scheduler_after", "modulename": "NDNT.training.trainer", "qualname": "Trainer.step_scheduler_after", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.training.trainer.Trainer.step_scheduler_metric": {"fullname": "NDNT.training.trainer.Trainer.step_scheduler_metric", "modulename": "NDNT.training.trainer", "qualname": "Trainer.step_scheduler_metric", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.training.trainer.Trainer.fit": {"fullname": "NDNT.training.trainer.Trainer.fit", "modulename": "NDNT.training.trainer", "qualname": "Trainer.fit", "kind": "function", "doc": "<p>Fit the model to the data.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>model (nn.Module):</strong>  Pytorch Model. Needs training_step and validation_step defined.</li>\n<li><strong>train_loader (DataLoader):</strong>  Training data.</li>\n<li><strong>val_loader (DataLoader):</strong>  Validation data.</li>\n<li><strong>seed (int):</strong>  Random seed for reproducibility.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>None</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">model</span>, </span><span class=\"param\"><span class=\"n\">train_loader</span>, </span><span class=\"param\"><span class=\"n\">val_loader</span>, </span><span class=\"param\"><span class=\"n\">seed</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.training.trainer.Trainer.prepare_fit": {"fullname": "NDNT.training.trainer.Trainer.prepare_fit", "modulename": "NDNT.training.trainer", "qualname": "Trainer.prepare_fit", "kind": "function", "doc": "<p>This is called before fit_loop, and is used to set up the model and optimizer.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>model (nn.Module):</strong>  Pytorch Model. Needs training_step and validation_step defined.</li>\n<li><strong>seed (int):</strong>  Random seed for reproducibility.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>model (nn.Module): Pytorch Model. Needs training_step and validation_step defined.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">model</span>, </span><span class=\"param\"><span class=\"n\">seed</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.training.trainer.Trainer.fit_loop": {"fullname": "NDNT.training.trainer.Trainer.fit_loop", "modulename": "NDNT.training.trainer", "qualname": "Trainer.fit_loop", "kind": "function", "doc": "<p>Main training loop. This is where the model is trained.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>model (nn.Module):</strong>  Pytorch Model. Needs training_step and validation_step defined.</li>\n<li><strong>epochs (int):</strong>  Number of epochs to train.</li>\n<li><strong>train_loader (DataLoader):</strong>  Training data.</li>\n<li><strong>val_loader (DataLoader):</strong>  Validation data.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>None</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">model</span>, </span><span class=\"param\"><span class=\"n\">epochs</span>, </span><span class=\"param\"><span class=\"n\">train_loader</span>, </span><span class=\"param\"><span class=\"n\">val_loader</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.training.trainer.Trainer.validate_one_epoch": {"fullname": "NDNT.training.trainer.Trainer.validate_one_epoch", "modulename": "NDNT.training.trainer", "qualname": "Trainer.validate_one_epoch", "kind": "function", "doc": "<p>validation step for one epoch</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>model (nn.Module):</strong>  Pytorch Model. Needs training_step and validation_step defined.</li>\n<li><strong>val_loader (DataLoader):</strong>  Validation data.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>dict: validation loss</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">model</span>, </span><span class=\"param\"><span class=\"n\">val_loader</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.training.trainer.Trainer.train_one_epoch": {"fullname": "NDNT.training.trainer.Trainer.train_one_epoch", "modulename": "NDNT.training.trainer", "qualname": "Trainer.train_one_epoch", "kind": "function", "doc": "<p>Train for one epoch.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>model (nn.Module):</strong>  Pytorch Model. Needs training_step and validation_step defined.</li>\n<li><strong>train_loader (DataLoader):</strong>  Training data.</li>\n<li><strong>epoch (int):</strong>  Current epoch.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>dict: training loss</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">model</span>, </span><span class=\"param\"><span class=\"n\">train_loader</span>, </span><span class=\"param\"><span class=\"n\">epoch</span><span class=\"o\">=</span><span class=\"mi\">0</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.training.trainer.Trainer.train_one_step": {"fullname": "NDNT.training.trainer.Trainer.train_one_step", "modulename": "NDNT.training.trainer", "qualname": "Trainer.train_one_step", "kind": "function", "doc": "<p>Train for one step.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>model (nn.Module):</strong>  Pytorch Model. Needs training_step and validation_step defined.</li>\n<li><strong>data (dict):</strong>  Training data.</li>\n<li><strong>batch_idx (int):</strong>  Current batch index.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>dict: training loss</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">model</span>, </span><span class=\"param\"><span class=\"n\">data</span>, </span><span class=\"param\"><span class=\"n\">batch_idx</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.training.trainer.Trainer.checkpoint_model": {"fullname": "NDNT.training.trainer.Trainer.checkpoint_model", "modulename": "NDNT.training.trainer", "qualname": "Trainer.checkpoint_model", "kind": "function", "doc": "<p>Checkpoint the model.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>model (nn.Module):</strong>  Pytorch Model. Needs training_step and validation_step defined.</li>\n<li><strong>epoch (int):</strong>  Current epoch.</li>\n<li><strong>is_best (bool):</strong>  Whether this is the best model.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>None</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">model</span>, </span><span class=\"param\"><span class=\"n\">epoch</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">is_best</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.training.trainer.Trainer.graceful_exit": {"fullname": "NDNT.training.trainer.Trainer.graceful_exit", "modulename": "NDNT.training.trainer", "qualname": "Trainer.graceful_exit", "kind": "function", "doc": "<p>Graceful exit. This is called at the end of training or it if gets interrupted.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>model (nn.Module):</strong>  Pytorch Model. Needs training_step and validation_step defined.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>None</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">model</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.training.trainer.LBFGSTrainer": {"fullname": "NDNT.training.trainer.LBFGSTrainer", "modulename": "NDNT.training.trainer", "qualname": "LBFGSTrainer", "kind": "class", "doc": "<p>This class is for training with the LBFGS optimizer. It is a subclass of Trainer.</p>\n", "bases": "Trainer"}, "NDNT.training.trainer.LBFGSTrainer.__init__": {"fullname": "NDNT.training.trainer.LBFGSTrainer.__init__", "modulename": "NDNT.training.trainer", "qualname": "LBFGSTrainer.__init__", "kind": "function", "doc": "<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>full_batch (bool):</strong>  Whether to use full batch optimization.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">full_batch</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "NDNT.training.trainer.LBFGSTrainer.fullbatch": {"fullname": "NDNT.training.trainer.LBFGSTrainer.fullbatch", "modulename": "NDNT.training.trainer", "qualname": "LBFGSTrainer.fullbatch", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.training.trainer.LBFGSTrainer.fit": {"fullname": "NDNT.training.trainer.LBFGSTrainer.fit", "modulename": "NDNT.training.trainer", "qualname": "LBFGSTrainer.fit", "kind": "function", "doc": "<p>Fit the model to the data.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>model (nn.Module):</strong>  Pytorch Model. Needs training_step and validation_step defined.</li>\n<li><strong>train_loader (DataLoader):</strong>  Training data.</li>\n<li><strong>val_loader (DataLoader):</strong>  Validation data.</li>\n<li><strong>seed (int):</strong>  Random seed for reproducibility.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>None</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">model</span>, </span><span class=\"param\"><span class=\"n\">train_loader</span>, </span><span class=\"param\"><span class=\"n\">val_loader</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">seed</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.training.trainer.LBFGSTrainer.fit_data_dict": {"fullname": "NDNT.training.trainer.LBFGSTrainer.fit_data_dict", "modulename": "NDNT.training.trainer", "qualname": "LBFGSTrainer.fit_data_dict", "kind": "function", "doc": "<p>Fit data that is provided in a dictionary.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>model (nn.Module):</strong>  Pytorch Model. Needs training_step and validation_step defined.</li>\n<li><strong>train_data (dict):</strong>  Training data.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>None</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">model</span>, </span><span class=\"param\"><span class=\"n\">train_data</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.training.trainer.LBFGSTrainer.train_one_epoch": {"fullname": "NDNT.training.trainer.LBFGSTrainer.train_one_epoch", "modulename": "NDNT.training.trainer", "qualname": "LBFGSTrainer.train_one_epoch", "kind": "function", "doc": "<p>Train for one epoch.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>model (nn.Module):</strong>  Pytorch Model. Needs training_step and validation_step defined.</li>\n<li><strong>train_loader (DataLoader):</strong>  Training data.</li>\n<li><strong>epoch (int):</strong>  Current epoch.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>dict: training loss</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">model</span>, </span><span class=\"param\"><span class=\"n\">train_loader</span>, </span><span class=\"param\"><span class=\"n\">epoch</span><span class=\"o\">=</span><span class=\"mi\">0</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.training.trainer.TemperatureCalibratedTrainer": {"fullname": "NDNT.training.trainer.TemperatureCalibratedTrainer", "modulename": "NDNT.training.trainer", "qualname": "TemperatureCalibratedTrainer", "kind": "class", "doc": "<p>This class is for training with temperature calibration. It is a subclass of Trainer.</p>\n", "bases": "Trainer"}, "NDNT.training.trainer.TemperatureCalibratedTrainer.__init__": {"fullname": "NDNT.training.trainer.TemperatureCalibratedTrainer.__init__", "modulename": "NDNT.training.trainer", "qualname": "TemperatureCalibratedTrainer.__init__", "kind": "function", "doc": "<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li>None</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "NDNT.training.trainer.TemperatureCalibratedTrainer.validate_one_epoch": {"fullname": "NDNT.training.trainer.TemperatureCalibratedTrainer.validate_one_epoch", "modulename": "NDNT.training.trainer", "qualname": "TemperatureCalibratedTrainer.validate_one_epoch", "kind": "function", "doc": "<p>Validation step for one epoch.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>model (nn.Module):</strong>  Pytorch Model. Needs training_step and validation_step defined.</li>\n<li><strong>val_loader (DataLoader):</strong>  Validation data.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>dict: validation loss</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">model</span>, </span><span class=\"param\"><span class=\"n\">val_loader</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.utils": {"fullname": "NDNT.utils", "modulename": "NDNT.utils", "kind": "module", "doc": "<p></p>\n"}, "NDNT.utils.DanUtils": {"fullname": "NDNT.utils.DanUtils", "modulename": "NDNT.utils.DanUtils", "kind": "module", "doc": "<p></p>\n"}, "NDNT.utils.DanUtils.subplot_setup": {"fullname": "NDNT.utils.DanUtils.subplot_setup", "modulename": "NDNT.utils.DanUtils", "qualname": "subplot_setup", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">num_rows</span>, </span><span class=\"param\"><span class=\"n\">num_cols</span>, </span><span class=\"param\"><span class=\"n\">row_height</span><span class=\"o\">=</span><span class=\"mi\">2</span>, </span><span class=\"param\"><span class=\"n\">fig_width</span><span class=\"o\">=</span><span class=\"mi\">16</span>, </span><span class=\"param\"><span class=\"n\">fighandle</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.utils.DanUtils.ss": {"fullname": "NDNT.utils.DanUtils.ss", "modulename": "NDNT.utils.DanUtils", "qualname": "ss", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">num_rows</span><span class=\"o\">=</span><span class=\"mi\">1</span>, </span><span class=\"param\"><span class=\"n\">num_cols</span><span class=\"o\">=</span><span class=\"mi\">1</span>, </span><span class=\"param\"><span class=\"n\">row_height</span><span class=\"o\">=</span><span class=\"mf\">2.5</span>, </span><span class=\"param\"><span class=\"n\">rh</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">fighandle</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.utils.DanUtils.imagesc": {"fullname": "NDNT.utils.DanUtils.imagesc", "modulename": "NDNT.utils.DanUtils", "qualname": "imagesc", "kind": "function", "doc": "<p>Modifications of plt.imshow that choose reasonable defaults</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">img</span>,</span><span class=\"param\">\t<span class=\"n\">cmap</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">balanced</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">aspect</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"nb\">max</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">colrow</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">axis_labels</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">ax</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.utils.DanUtils.find_peaks": {"fullname": "NDNT.utils.DanUtils.find_peaks", "modulename": "NDNT.utils.DanUtils", "qualname": "find_peaks", "kind": "function", "doc": "<p>Find maximum of peaks and then get rid of other points around it for plus/minus some amount</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span>, </span><span class=\"param\"><span class=\"n\">clearance</span><span class=\"o\">=</span><span class=\"mi\">10</span>, </span><span class=\"param\"><span class=\"n\">max_peaks</span><span class=\"o\">=</span><span class=\"mi\">10</span>, </span><span class=\"param\"><span class=\"n\">thresh</span><span class=\"o\">=</span><span class=\"mf\">13.0</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.utils.DanUtils.filename_num2str": {"fullname": "NDNT.utils.DanUtils.filename_num2str", "modulename": "NDNT.utils.DanUtils", "qualname": "filename_num2str", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">n</span>, </span><span class=\"param\"><span class=\"n\">num_digits</span><span class=\"o\">=</span><span class=\"mi\">2</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.utils.DanUtils.display_matrix": {"fullname": "NDNT.utils.DanUtils.display_matrix", "modulename": "NDNT.utils.DanUtils", "qualname": "display_matrix", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span>, </span><span class=\"param\"><span class=\"n\">prec</span><span class=\"o\">=</span><span class=\"mi\">3</span>, </span><span class=\"param\"><span class=\"n\">spacing</span><span class=\"o\">=</span><span class=\"mi\">4</span>, </span><span class=\"param\"><span class=\"n\">number_rows</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">number_cols</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.utils.DanUtils.figure_export": {"fullname": "NDNT.utils.DanUtils.figure_export", "modulename": "NDNT.utils.DanUtils", "qualname": "figure_export", "kind": "function", "doc": "<p>Usage: figure_export( fig_handle, filename, variable_list, bitmap=False, dpi=300)\nif bitmap, will use dpi and export as .png. Otherwise will export PDF</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">fig_handle</span>, </span><span class=\"param\"><span class=\"n\">filename</span>, </span><span class=\"param\"><span class=\"n\">bitmap</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">dpi</span><span class=\"o\">=</span><span class=\"mi\">300</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.utils.DanUtils.matlab_export": {"fullname": "NDNT.utils.DanUtils.matlab_export", "modulename": "NDNT.utils.DanUtils", "qualname": "matlab_export", "kind": "function", "doc": "<p>Export list of variables to .mat file</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">filename</span>, </span><span class=\"param\"><span class=\"n\">variable_list</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.utils.DanUtils.save_python_data": {"fullname": "NDNT.utils.DanUtils.save_python_data", "modulename": "NDNT.utils.DanUtils", "qualname": "save_python_data", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">filename</span>, </span><span class=\"param\"><span class=\"n\">data</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.utils.DanUtils.load_python_data": {"fullname": "NDNT.utils.DanUtils.load_python_data", "modulename": "NDNT.utils.DanUtils", "qualname": "load_python_data", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">filename</span>, </span><span class=\"param\"><span class=\"n\">show_keys</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.utils.DanUtils.fold_sample": {"fullname": "NDNT.utils.DanUtils.fold_sample", "modulename": "NDNT.utils.DanUtils", "qualname": "fold_sample", "kind": "function", "doc": "<p>Divide fold sample deterministically or randomly distributed over number of items. More options\ncan be added, but his captures the basics.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">num_items</span>, </span><span class=\"param\"><span class=\"n\">folds</span><span class=\"o\">=</span><span class=\"mi\">5</span>, </span><span class=\"param\"><span class=\"n\">random_gen</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">which_fold</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.utils.DanUtils.time_embedding_simple": {"fullname": "NDNT.utils.DanUtils.time_embedding_simple", "modulename": "NDNT.utils.DanUtils", "qualname": "time_embedding_simple", "kind": "function", "doc": "<p>Simple time embedding: takes the stim and time-embeds with nlags\nIf stim is multi-dimensional, it flattens. This is a numpy function</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">stim</span>, </span><span class=\"param\"><span class=\"n\">nlags</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.utils.DanUtils.design_matrix_drift": {"fullname": "NDNT.utils.DanUtils.design_matrix_drift", "modulename": "NDNT.utils.DanUtils", "qualname": "design_matrix_drift", "kind": "function", "doc": "<p>Produce a design matrix based on continuous data (s) and anchor points for a tent_basis.\nHere s is a continuous variable (e.g., a stimulus) that is function of time -- single dimension --\nand this will generate apply a tent basis set to s with a basis variable for each anchor point. \nThe end anchor points will be one-sided, but these can be dropped by changing \"zero_left\" and/or\n\"zero_right\" into \"True\".</p>\n\n<p>Inputs: \n    NT: length of design matrix\n    anchors: list or array of anchor points for tent-basis set\n    zero_left, zero_right: boolean whether to drop the edge bases (default for both is False)</p>\n\n<h6 id=\"outputs\">Outputs:</h6>\n\n<blockquote>\n  <p>X: design matrix that will be NT x the number of anchors left after zeroing out left and right</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">NT</span>,</span><span class=\"param\">\t<span class=\"n\">anchors</span>,</span><span class=\"param\">\t<span class=\"n\">zero_left</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">zero_right</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">const_right</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">to_plot</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.utils.DanUtils.max_multiD": {"fullname": "NDNT.utils.DanUtils.max_multiD", "modulename": "NDNT.utils.DanUtils", "qualname": "max_multiD", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">k</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.utils.DanUtils.iterate_lbfgs": {"fullname": "NDNT.utils.DanUtils.iterate_lbfgs", "modulename": "NDNT.utils.DanUtils", "qualname": "iterate_lbfgs", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">mod</span>,</span><span class=\"param\">\t<span class=\"n\">dat</span>,</span><span class=\"param\">\t<span class=\"n\">lbfgs_pars</span>,</span><span class=\"param\">\t<span class=\"n\">train_inds</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">val_inds</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">tol</span><span class=\"o\">=</span><span class=\"mf\">0.0001</span>,</span><span class=\"param\">\t<span class=\"n\">max_iter</span><span class=\"o\">=</span><span class=\"mi\">20</span>,</span><span class=\"param\">\t<span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.utils.DanUtils.binocular_data_import": {"fullname": "NDNT.utils.DanUtils.binocular_data_import", "modulename": "NDNT.utils.DanUtils", "qualname": "binocular_data_import", "kind": "function", "doc": "<p>Usage: stim, Robs, DFs, used_inds, Eadd_info = binocular_data_import( datadir, expt_num )</p>\n\n<h6 id=\"inputs\">Inputs:</h6>\n\n<blockquote>\n  <p>datadir: directory on local drive where datafiles are\n  expt_num: the experiment number (1-12) representing the binocular experiments we currently have. All\n              datafiles are called 'BS2expt?.mat'. Note that numbered from 1 (not zero)</p>\n</blockquote>\n\n<h6 id=\"outputs\">Outputs:</h6>\n\n<blockquote>\n  <p>stim: formatted as NT x 72 (stimuli in each eye are cropped to NX=36). It will be time-shifted by 1 to \n          eliminate 0-latency stim\n  Robs: response concatenating all SUs and MUs, NT x NC. NSU is saved as part of Eadd_info\n  DFs:  data_filters for experiment, also NT x NC (note MU datafilters are initialized to 1)\n  used_inds: indices overwhich data is valid according to initial data parsing (adjusted to python) \n  Eadd_info: dictionary containing all other relevant info for experiment</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">datadir</span>, </span><span class=\"param\"><span class=\"n\">expt_num</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"fullname": "NDNT.utils.DanUtils.binocular_data_import_cell", "modulename": "NDNT.utils.DanUtils", "qualname": "binocular_data_import_cell", "kind": "function", "doc": "<p>Usage: stim, Robs, used_inds_cell, UiC, XiC = binocular_data_import_cell( datadir, expt_num, cell_num)</p>\n\n<p>Imports data for one cell: otherwise identitical to binocular_data_import. Takes data_filter for the \ncell into account so will not need datafilter. Also, all indices will be adjusted accordingly.</p>\n\n<h6 id=\"inputs\">Inputs:</h6>\n\n<blockquote>\n  <p>datadir: directory on local drive where datafiles are\n  expt_num: the experiment number (1-12) representing the binocular experiments we currently have. All\n              datafiles are called 'BS2expt?.mat'. Note that numbered from 1 (not zero)\n  cell_num: cell number to analyze</p>\n</blockquote>\n\n<h6 id=\"outputs\">Outputs:</h6>\n\n<blockquote>\n  <p>stim_all: formatted as NT x 72 (stimuli in each eye are cropped to NX=36). It will be time-shifted by 1 \n            to eliminate 0-latency stim. Note this is all stim in experiment, val_inds from used_inds...\n  Robs: response concatenating all SUs and MUs, NT x NC. NSU and full Robs is saved as part of Eadd_info.\n        This is already selected by used_inds_cell, so no need for further reduction\n  used_inds_cell: indices overwhich data is valid for that particular cell. Should be applied to stim only\n  UiC, XiC: cross-validation indices for that cell, based on used_inds_cell\n  Eadd_info: dictionary containing all other relevant info for experiment</p>\n</blockquote>\n\n<p>if the full experiment is NT long, stim and Robs are also NT long, \n    stim[used_inds_cell,:] and Robs[used_inds_cell] are the valid data for that cell, and UiC and XiC are\n    the proper train and test indices of used_inds_cell to access, i.e. \n_model.train( input_data=stim[used_inds_cell,:], output_data=Robs[used_inds_cell], train_indxs=UiC, ...)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">datadir</span>, </span><span class=\"param\"><span class=\"n\">expt_num</span>, </span><span class=\"param\"><span class=\"n\">cell_num</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.utils.DanUtils.monocular_data_import": {"fullname": "NDNT.utils.DanUtils.monocular_data_import", "modulename": "NDNT.utils.DanUtils", "qualname": "monocular_data_import", "kind": "function", "doc": "<p>Usage: stim, Robs, DFs, used_inds, Eadd_info = binocular_data_import( datadir, expt_num )\nNote: expt num is starting with 1\nblock_output determines whether to fit using block info, or used_inds info (derived from blocks)\nnum_lags is for purposes of used_inds</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">datadir</span>, </span><span class=\"param\"><span class=\"n\">exptn</span>, </span><span class=\"param\"><span class=\"n\">time_shift</span><span class=\"o\">=</span><span class=\"mi\">1</span>, </span><span class=\"param\"><span class=\"n\">num_lags</span><span class=\"o\">=</span><span class=\"mi\">20</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.utils.MattUtils": {"fullname": "NDNT.utils.MattUtils", "modulename": "NDNT.utils.MattUtils", "kind": "module", "doc": "<p></p>\n"}, "NDNT.utils.MattUtils.load_losses": {"fullname": "NDNT.utils.MattUtils.load_losses", "modulename": "NDNT.utils.MattUtils", "qualname": "load_losses", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">ckpts_directory</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.utils.MattUtils.smooth_ema": {"fullname": "NDNT.utils.MattUtils.smooth_ema", "modulename": "NDNT.utils.MattUtils", "qualname": "smooth_ema", "kind": "function", "doc": "<p>EMA implementation according to\n<a href=\"https://github.com/tensorflow/tensorboard/blob/34877f15153e1a2087316b9952c931807a122aa7/tensorboard/components/vz_line_chart2/line-chart.ts#L699\">https://github.com/tensorflow/tensorboard/blob/34877f15153e1a2087316b9952c931807a122aa7/tensorboard/components/vz_line_chart2/line-chart.ts#L699</a></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">scalars</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]</span>, </span><span class=\"param\"><span class=\"n\">weight</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "NDNT.utils.MattUtils.smooth_conv": {"fullname": "NDNT.utils.MattUtils.smooth_conv", "modulename": "NDNT.utils.MattUtils", "qualname": "smooth_conv", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">scalars</span>, </span><span class=\"param\"><span class=\"n\">smoothing</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.utils.MattUtils.plot_losses": {"fullname": "NDNT.utils.MattUtils.plot_losses", "modulename": "NDNT.utils.MattUtils", "qualname": "plot_losses", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">ckpts_directory</span>, </span><span class=\"param\"><span class=\"n\">smoothing</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">figsize</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">)</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.utils.NDNutils": {"fullname": "NDNT.utils.NDNutils", "modulename": "NDNT.utils.NDNutils", "kind": "module", "doc": "<p></p>\n"}, "NDNT.utils.NDNutils.fit_lbfgs": {"fullname": "NDNT.utils.NDNutils.fit_lbfgs", "modulename": "NDNT.utils.NDNutils", "qualname": "fit_lbfgs", "kind": "function", "doc": "<p>Runs fullbatch LBFGS on a Pytorch model and data dictionary\nInputs:\nModel: Pytorch model\ndata: Dictionary to used with Model.training_step(data)</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">mod</span>,</span><span class=\"param\">\t<span class=\"n\">data</span>,</span><span class=\"param\">\t<span class=\"n\">val_data</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">parameters</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">optimizer</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">max_iter</span><span class=\"o\">=</span><span class=\"mi\">1000</span>,</span><span class=\"param\">\t<span class=\"n\">lr</span><span class=\"o\">=</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">line_search</span><span class=\"o\">=</span><span class=\"s1\">&#39;strong_wolfe&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">history_size</span><span class=\"o\">=</span><span class=\"mi\">100</span>,</span><span class=\"param\">\t<span class=\"n\">tolerance_change</span><span class=\"o\">=</span><span class=\"mf\">1e-07</span>,</span><span class=\"param\">\t<span class=\"n\">tolerance_grad</span><span class=\"o\">=</span><span class=\"mf\">1e-07</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.utils.NDNutils.create_optimizer_params": {"fullname": "NDNT.utils.NDNutils.create_optimizer_params", "modulename": "NDNT.utils.NDNutils", "qualname": "create_optimizer_params", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">optimizer_type</span><span class=\"o\">=</span><span class=\"s1\">&#39;AdamW&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">batch_size</span><span class=\"o\">=</span><span class=\"mi\">1000</span>,</span><span class=\"param\">\t<span class=\"n\">max_iter</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">max_epochs</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">num_workers</span><span class=\"o\">=</span><span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">num_gpus</span><span class=\"o\">=</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">optimize_graph</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">log_activations</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">progress_bar_refresh</span><span class=\"o\">=</span><span class=\"mi\">20</span>,</span><span class=\"param\">\t<span class=\"n\">early_stopping</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">early_stopping_patience</span><span class=\"o\">=</span><span class=\"mi\">4</span>,</span><span class=\"param\">\t<span class=\"n\">early_stopping_delta</span><span class=\"o\">=</span><span class=\"mf\">0.0</span>,</span><span class=\"param\">\t<span class=\"n\">weight_decay</span><span class=\"o\">=</span><span class=\"mf\">0.01</span>,</span><span class=\"param\">\t<span class=\"n\">learning_rate</span><span class=\"o\">=</span><span class=\"mf\">0.001</span>,</span><span class=\"param\">\t<span class=\"n\">betas</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mf\">0.9</span><span class=\"p\">,</span> <span class=\"mf\">0.999</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">full_batch</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">tolerance_change</span><span class=\"o\">=</span><span class=\"mf\">1e-08</span>,</span><span class=\"param\">\t<span class=\"n\">tolerance_grad</span><span class=\"o\">=</span><span class=\"mf\">1e-10</span>,</span><span class=\"param\">\t<span class=\"n\">history_size</span><span class=\"o\">=</span><span class=\"mi\">10</span>,</span><span class=\"param\">\t<span class=\"n\">accumulated_grad_batches</span><span class=\"o\">=</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">device</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">line_search_fn</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.utils.NDNutils.CPU_Unpickler": {"fullname": "NDNT.utils.NDNutils.CPU_Unpickler", "modulename": "NDNT.utils.NDNutils", "qualname": "CPU_Unpickler", "kind": "class", "doc": "<p>This takes a binary file for reading a pickle data stream.</p>\n\n<p>The protocol version of the pickle is detected automatically, so no\nprotocol argument is needed.  Bytes past the pickled object's\nrepresentation are ignored.</p>\n\n<p>The argument <em>file</em> must have two methods, a read() method that takes\nan integer argument, and a readline() method that requires no\narguments.  Both methods should return bytes.  Thus <em>file</em> can be a\nbinary file object opened for reading, an io.BytesIO object, or any\nother custom object that meets this interface.</p>\n\n<p>Optional keyword arguments are <em>fix_imports</em>, <em>encoding</em> and <em>errors</em>,\nwhich are used to control compatibility support for pickle stream\ngenerated by Python 2.  If <em>fix_imports</em> is True, pickle will try to\nmap the old Python 2 names to the new names used in Python 3.  The\n<em>encoding</em> and <em>errors</em> tell pickle how to decode 8-bit string\ninstances pickled by Python 2; these default to 'ASCII' and 'strict',\nrespectively.  The <em>encoding</em> can be 'bytes' to read these 8-bit\nstring instances as bytes objects.</p>\n", "bases": "_pickle.Unpickler"}, "NDNT.utils.NDNutils.CPU_Unpickler.find_class": {"fullname": "NDNT.utils.NDNutils.CPU_Unpickler.find_class", "modulename": "NDNT.utils.NDNutils", "qualname": "CPU_Unpickler.find_class", "kind": "function", "doc": "<p>Return an object from a specified module.</p>\n\n<p>If necessary, the module will be imported. Subclasses may override\nthis method (e.g. to restrict unpickling of arbitrary classes and\nfunctions).</p>\n\n<p>This method is called whenever a class or a function object is\nneeded.  Both arguments passed are str objects.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">module</span>, </span><span class=\"param\"><span class=\"n\">name</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.utils.NDNutils.default_save_dir": {"fullname": "NDNT.utils.NDNutils.default_save_dir", "modulename": "NDNT.utils.NDNutils", "qualname": "default_save_dir", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.utils.NDNutils.create_time_embedding": {"fullname": "NDNT.utils.NDNutils.create_time_embedding", "modulename": "NDNT.utils.NDNutils", "qualname": "create_time_embedding", "kind": "function", "doc": "<p>Takes a Txd stimulus matrix and creates a time-embedded matrix of size \nTx(d*L), where L is the desired number of time lags, included as last (folded) dimension. \nIf stim is a 3d array, its dimensions are folded into the 2nd dimension. </p>\n\n<p>Assumes zero-padding.</p>\n\n<p>Optional up-sampling of stimulus and tent-basis representation for filter \nestimation.</p>\n\n<p>Note that xmatrix is formatted so that adjacent time lags are adjacent \nwithin a time-slice of the xmatrix, thus x(t, 1:nLags) gives all time lags \nof the first spatial pixel at time t.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>stim (type):</strong>  simulus matrix (time must be in the first dim).</li>\n<li>num_lags</li>\n<li><strong>up_fac (type):</strong>  description</li>\n<li><strong>tent_spacing (type):</strong>  description</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>numpy array: time-embedded stim matrix</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">stim</span>, </span><span class=\"param\"><span class=\"n\">num_lags</span>, </span><span class=\"param\"><span class=\"n\">up_fac</span><span class=\"o\">=</span><span class=\"mi\">1</span>, </span><span class=\"param\"><span class=\"n\">tent_spacing</span><span class=\"o\">=</span><span class=\"mi\">1</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"fullname": "NDNT.utils.NDNutils.create_time_embedding_NIM", "modulename": "NDNT.utils.NDNutils", "qualname": "create_time_embedding_NIM", "kind": "function", "doc": "<p>All the arguments starting with a p are part of params structure which I \nwill fix later.</p>\n\n<p>Takes a Txd stimulus matrix and creates a time-embedded matrix of size \nTx(d*L), where L is the desired number of time lags. If stim is a 3d array, \nthe spatial dimensions are folded into the 2nd dimension. </p>\n\n<p>Assumes zero-padding.</p>\n\n<p>Optional up-sampling of stimulus and tent-basis representation for filter \nestimation.</p>\n\n<p>Note that xmatrix is formatted so that adjacent time lags are adjacent \nwithin a time-slice of the xmatrix, thus x(t, 1:nLags) gives all time lags \nof the first spatial pixel at time t.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>stim (type):</strong>  simulus matrix (time must be in the first dim).</li>\n<li><strong>pdims (list/array):</strong>  length(3) list of stimulus dimensions</li>\n<li><strong>up_fac (type):</strong>  description</li>\n<li><strong>tent_spacing (type):</strong>  description</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>numpy array: time-embedded stim matrix</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">stim</span>, </span><span class=\"param\"><span class=\"n\">pdims</span>, </span><span class=\"param\"><span class=\"n\">up_fac</span><span class=\"o\">=</span><span class=\"mi\">1</span>, </span><span class=\"param\"><span class=\"n\">tent_spacing</span><span class=\"o\">=</span><span class=\"mi\">1</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.utils.NDNutils.is_int": {"fullname": "NDNT.utils.NDNutils.is_int", "modulename": "NDNT.utils.NDNutils", "qualname": "is_int", "kind": "function", "doc": "<p>returns Boolean as to whether val is one of many types of integers</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">val</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"fullname": "NDNT.utils.NDNutils.design_matrix_tent_basis", "modulename": "NDNT.utils.NDNutils", "qualname": "design_matrix_tent_basis", "kind": "function", "doc": "<p>Produce a design matrix based on continuous data (s) and anchor points for a tent_basis.\nHere s is a continuous variable (e.g., a stimulus) that is function of time -- single dimension --\nand this will generate apply a tent basis set to s with a basis variable for each anchor point. \nThe end anchor points will be one-sided, but these can be dropped by changing \"zero_left\" and/or\n\"zero_right\" into \"True\".</p>\n\n<p>Inputs: \n    s: continuous one-dimensional variable with NT time points\n    anchors: list or array of anchor points for tent-basis set\n    zero_left, zero_right: boolean whether to drop the edge bases (default for both is False)</p>\n\n<h6 id=\"outputs\">Outputs:</h6>\n\n<blockquote>\n  <p>X: design matrix that will be NT x the number of anchors left after zeroing out left and right</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">s</span>, </span><span class=\"param\"><span class=\"n\">anchors</span>, </span><span class=\"param\"><span class=\"n\">zero_left</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">zero_right</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.utils.NDNutils.tent_basis_generate": {"fullname": "NDNT.utils.NDNutils.tent_basis_generate", "modulename": "NDNT.utils.NDNutils", "qualname": "tent_basis_generate", "kind": "function", "doc": "<p>Computes tent-bases over the range of 'xs', with center points at each value of 'xs'.\nAlternatively (if xs=None), will generate a list with init_space and doubling_time up to\nthe total number of parameters. Must specify xs OR num_params. \nNote this assumes discrete (binned) variables to be acted on.</p>\n\n<h6 id=\"defaults\">Defaults:</h6>\n\n<blockquote>\n  <p>doubling_time = num_params\n  init_space = 1</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">xs</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">num_params</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">doubling_time</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">init_spacing</span><span class=\"o\">=</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">first_lag</span><span class=\"o\">=</span><span class=\"mi\">0</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.utils.NDNutils.shift_mat_zpad": {"fullname": "NDNT.utils.NDNutils.shift_mat_zpad", "modulename": "NDNT.utils.NDNutils", "qualname": "shift_mat_zpad", "kind": "function", "doc": "<p>Takes a vector or matrix and shifts it along dimension dim by amount \nshift using zero-padding. Positive shifts move the matrix right or down.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>x (type):</strong>  description</li>\n<li><strong>shift (type):</strong>  description</li>\n<li><strong>dim (type):</strong>  description</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>type: description</p>\n</blockquote>\n\n<p>Raises:</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span>, </span><span class=\"param\"><span class=\"n\">shift</span>, </span><span class=\"param\"><span class=\"n\">dim</span><span class=\"o\">=</span><span class=\"mi\">0</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.utils.NDNutils.generate_xv_folds": {"fullname": "NDNT.utils.NDNutils.generate_xv_folds", "modulename": "NDNT.utils.NDNutils", "qualname": "generate_xv_folds", "kind": "function", "doc": "<p>Will generate unique and cross-validation indices, but subsample in each block\nNT = number of time steps\nnum_folds = fraction of data (1/fold) to set aside for cross-validation\nwhich_fold = which fraction of data to set aside for cross-validation (default: middle of each block)\nnum_blocks = how many blocks to sample fold validation from</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">nt</span>, </span><span class=\"param\"><span class=\"n\">num_folds</span><span class=\"o\">=</span><span class=\"mi\">5</span>, </span><span class=\"param\"><span class=\"n\">num_blocks</span><span class=\"o\">=</span><span class=\"mi\">3</span>, </span><span class=\"param\"><span class=\"n\">which_fold</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.utils.NDNutils.initialize_gaussian_envelope": {"fullname": "NDNT.utils.NDNutils.initialize_gaussian_envelope", "modulename": "NDNT.utils.NDNutils", "qualname": "initialize_gaussian_envelope", "kind": "function", "doc": "<p>This assumes a set of filters is passed in, and windows by Gaussian along each non-singleton dimension\nws is all filters (ndims x nfilters)\nwshape is individual filter shape</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">ws</span>, </span><span class=\"param\"><span class=\"n\">w_shape</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.utils.NDNutils.pixel2grid": {"fullname": "NDNT.utils.NDNutils.pixel2grid", "modulename": "NDNT.utils.NDNutils", "qualname": "pixel2grid", "kind": "function", "doc": "<p>Pixels are starting with number 0 up to L-1, converted to range of -1 to 1</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">p</span>, </span><span class=\"param\"><span class=\"n\">L</span><span class=\"o\">=</span><span class=\"mi\">60</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.utils.NDNutils.grid2pixel": {"fullname": "NDNT.utils.NDNutils.grid2pixel", "modulename": "NDNT.utils.NDNutils", "qualname": "grid2pixel", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span>, </span><span class=\"param\"><span class=\"n\">L</span><span class=\"o\">=</span><span class=\"mi\">60</span>, </span><span class=\"param\"><span class=\"n\">force_int</span><span class=\"o\">=</span><span class=\"kc\">True</span>, </span><span class=\"param\"><span class=\"n\">enforce_bounds</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.utils.NDNutils.save_checkpoint": {"fullname": "NDNT.utils.NDNutils.save_checkpoint", "modulename": "NDNT.utils.NDNutils", "qualname": "save_checkpoint", "kind": "function", "doc": "<p>Saves torch model to checkpoint file.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>state (torch model state):</strong>  State of a torch Neural Network (use model.state_dict() to get it)</li>\n<li><strong>save_path (str):</strong>  Destination path for saving checkpoint</li>\n<li><strong>is_best (bool):</strong>  If <code>True</code> creates additional copy\n<code>best_model.ckpt</code></li>\n<li><strong>max_keep (int):</strong>  Specifies the max amount of checkpoints to keep</li>\n</ul>\n\n<p>credit: pulled from <a href=\"https://github.com/IgorSusmelj/pytorch-styleguide\">https://github.com/IgorSusmelj/pytorch-styleguide</a></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">state</span>, </span><span class=\"param\"><span class=\"n\">save_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">is_best</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">max_keep</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.utils.NDNutils.load_checkpoint": {"fullname": "NDNT.utils.NDNutils.load_checkpoint", "modulename": "NDNT.utils.NDNutils", "qualname": "load_checkpoint", "kind": "function", "doc": "<p>Loads torch model from checkpoint file.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>ckpt_dir_or_file (str):</strong>  Path to checkpoint directory or filename</li>\n<li><strong>map_location:</strong>  Can be used to directly load to specific device</li>\n<li><strong>load_best (bool):</strong>  If True loads <code>best_model.ckpt</code> if exists.</li>\n</ul>\n\n<p>credit: pulled from <a href=\"https://github.com/IgorSusmelj/pytorch-styleguide\">https://github.com/IgorSusmelj/pytorch-styleguide</a></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">ckpt_dir_or_file</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">map_location</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">load_best</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.utils.NDNutils.ensure_dir": {"fullname": "NDNT.utils.NDNutils.ensure_dir", "modulename": "NDNT.utils.NDNutils", "qualname": "ensure_dir", "kind": "function", "doc": "<p>Creates folder if not exists.</p>\n\n<p>credit: pulled from <a href=\"https://github.com/IgorSusmelj/pytorch-styleguide\">https://github.com/IgorSusmelj/pytorch-styleguide</a></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">dir_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.utils.NDNutils.ModelSummary": {"fullname": "NDNT.utils.NDNutils.ModelSummary", "modulename": "NDNT.utils.NDNutils", "qualname": "ModelSummary", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">model</span>,</span><span class=\"param\">\t<span class=\"n\">input_size</span>,</span><span class=\"param\">\t<span class=\"n\">batch_size</span><span class=\"o\">=-</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">device</span><span class=\"o\">=</span><span class=\"n\">device</span><span class=\"p\">(</span><span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s1\">&#39;cuda&#39;</span><span class=\"p\">,</span> <span class=\"n\">index</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>,</span><span class=\"param\">\t<span class=\"n\">dtypes</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.utils.NDNutils.summary_string": {"fullname": "NDNT.utils.NDNutils.summary_string", "modulename": "NDNT.utils.NDNutils", "qualname": "summary_string", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">model</span>,</span><span class=\"param\">\t<span class=\"n\">input_size</span>,</span><span class=\"param\">\t<span class=\"n\">batch_size</span><span class=\"o\">=-</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">device</span><span class=\"o\">=</span><span class=\"n\">device</span><span class=\"p\">(</span><span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s1\">&#39;cuda&#39;</span><span class=\"p\">,</span> <span class=\"n\">index</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>,</span><span class=\"param\">\t<span class=\"n\">dtypes</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.utils.NDNutils.get_fit_versions": {"fullname": "NDNT.utils.NDNutils.get_fit_versions", "modulename": "NDNT.utils.NDNutils", "qualname": "get_fit_versions", "kind": "function", "doc": "<p>Find versions of the fit model</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>data_dir:</strong>  directory where the checkpoints are stored</li>\n<li><strong>model_name:</strong>  name of the model</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">data_dir</span>, </span><span class=\"param\"><span class=\"n\">model_name</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.utils.NDNutils.load_model": {"fullname": "NDNT.utils.NDNutils.load_model", "modulename": "NDNT.utils.NDNutils", "qualname": "load_model", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">checkpoint_path</span>, </span><span class=\"param\"><span class=\"n\">model_name</span><span class=\"o\">=</span><span class=\"s1\">&#39;&#39;</span>, </span><span class=\"param\"><span class=\"n\">version</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.utils.NDNutils.get_max_samples": {"fullname": "NDNT.utils.NDNutils.get_max_samples", "modulename": "NDNT.utils.NDNutils", "qualname": "get_max_samples", "kind": "function", "doc": "<p>get the maximum number of samples that fit in memory</p>\n\n<h6 id=\"inputs\">Inputs:</h6>\n\n<blockquote>\n  <p>dataset: the dataset to get the samples from\n  device: the device to put the samples on</p>\n</blockquote>\n\n<h6 id=\"optional\">Optional:</h6>\n\n<blockquote>\n  <p>history_size: the history size parameter for LBFGS (scales memory usage)\n  nquad: the number of quadratic kernels for a gqm (adds # parameters for every new quad filter)\n  num_cells: the number of cells in model (n cells * n parameters)\n  buffer: extra memory to keep free (in GB)</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">dataset</span>,</span><span class=\"param\">\t<span class=\"n\">device</span>,</span><span class=\"param\">\t<span class=\"n\">history_size</span><span class=\"o\">=</span><span class=\"mi\">10</span>,</span><span class=\"param\">\t<span class=\"n\">nquad</span><span class=\"o\">=</span><span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">num_cells</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">buffer</span><span class=\"o\">=</span><span class=\"mf\">1.2</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.utils.NDNutils.NpEncoder": {"fullname": "NDNT.utils.NDNutils.NpEncoder", "modulename": "NDNT.utils.NDNutils", "qualname": "NpEncoder", "kind": "class", "doc": "<p>Extensible JSON <a href=\"https://json.org\">https://json.org</a> encoder for Python data structures.</p>\n\n<p>Supports the following objects and types by default:</p>\n\n<p>+-------------------+---------------+\n| Python            | JSON          |\n+===================+===============+\n| dict              | object        |\n+-------------------+---------------+\n| list, tuple       | array         |\n+-------------------+---------------+\n| str               | string        |\n+-------------------+---------------+\n| int, float        | number        |\n+-------------------+---------------+\n| True              | true          |\n+-------------------+---------------+\n| False             | false         |\n+-------------------+---------------+\n| None              | null          |\n+-------------------+---------------+</p>\n\n<p>To extend this to recognize other objects, subclass and implement a\n<code>.default()</code> method with another method that returns a serializable\nobject for <code>o</code> if possible, otherwise it should call the superclass\nimplementation (to raise <code>TypeError</code>).</p>\n", "bases": "json.encoder.JSONEncoder"}, "NDNT.utils.NDNutils.NpEncoder.default": {"fullname": "NDNT.utils.NDNutils.NpEncoder.default", "modulename": "NDNT.utils.NDNutils", "qualname": "NpEncoder.default", "kind": "function", "doc": "<p>Implement this method in a subclass such that it returns\na serializable object for <code>o</code>, or calls the base implementation\n(to raise a <code>TypeError</code>).</p>\n\n<p>For example, to support arbitrary iterators, you could\nimplement default like this::</p>\n\n<pre><code>def default(self, o):\n    try:\n        iterable = iter(o)\n    except TypeError:\n        pass\n    else:\n        return list(iterable)\n    # Let the base class default method raise the TypeError\n    return JSONEncoder.default(self, o)\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">obj</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.utils.create_reg_matrices": {"fullname": "NDNT.utils.create_reg_matrices", "modulename": "NDNT.utils.create_reg_matrices", "kind": "module", "doc": "<p></p>\n"}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"fullname": "NDNT.utils.create_reg_matrices.create_tikhonov_matrix", "modulename": "NDNT.utils.create_reg_matrices", "qualname": "create_tikhonov_matrix", "kind": "function", "doc": "<p>Usage: Tmat = create_Tikhonov_matrix(stim_dims, reg_type, boundary_cond)</p>\n\n<p>Creates a matrix specifying a an L2-regularization operator of the form\n||T*k||^2, where T is a matrix and k is a vector of parameters. Currently \nonly supports second derivative/Laplacian operations</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>stim_dims (list of ints):</strong>  dimensions associated with the target \nstimulus, in the form [num_lags, num_x_pix, num_y_pix]</li>\n<li><strong>reg_type (str):</strong>  specify form of the regularization matrix\n'd2xt' | 'd2x' | 'd2t'</li>\n<li><strong>boundary_conditions (None):</strong>  is a list corresponding to all dimensions\n[default is [True,True,True]\nwould ideally be a dictionary with each reg\ntype listed; currently unused</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>scipy array: matrix specifying the desired Tikhonov operator</p>\n</blockquote>\n\n<h6 id=\"notes\">Notes:</h6>\n\n<blockquote>\n  <p>The method of computing sparse differencing matrices used here is \n  adapted from Bryan C. Smith's and Andrew V. Knyazev's function \n  \"laplacian\", available here: \n  <a href=\"http://www.mathworks.com/matlabcentral/fileexchange/27279-laplacian-in-1d-2d-or-3d\">http://www.mathworks.com/matlabcentral/fileexchange/27279-laplacian-in-1d-2d-or-3d</a>\n  Written in Matlab by James McFarland, adapted into python by Dan Butts</p>\n  \n  <p>Currently, the no-boundary condition case for all but temporal dimension alone is untested and possibly wrong\n  due to the fact that it <em>seems</em> that the indexing in python flips the first and second dimensions and a\n  transpose is thus necessary at the early stage. Not a problem (it seems) because boundary conditions are\n  currently applied by default, which makes the edges zero....</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">stim_dims</span>, </span><span class=\"param\"><span class=\"n\">reg_type</span>, </span><span class=\"param\"><span class=\"n\">boundary_conditions</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.utils.create_reg_matrices.create_maxpenalty_matrix": {"fullname": "NDNT.utils.create_reg_matrices.create_maxpenalty_matrix", "modulename": "NDNT.utils.create_reg_matrices", "qualname": "create_maxpenalty_matrix", "kind": "function", "doc": "<p>Usage: Tmat = create_maxpenalty_matrix(input_dims, reg_type)</p>\n\n<p>Creates a matrix specifying a an L2-regularization operator of the form\n||T*k||^2, where T is a matrix and k is a vector of parameters. Currently \nonly supports second derivative/Laplacian operations</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>input_dims (list of ints):</strong>  dimensions associated with the target input, \nin the form [num_lags, num_x_pix, num_y_pix]</li>\n<li><strong>reg_type (str):</strong>  specify form of the regularization matrix\n'max' | 'max_filt' | 'max_space'</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>numpy array: matrix specifying the desired Tikhonov operator</p>\n</blockquote>\n\n<h6 id=\"notes\">Notes:</h6>\n\n<blockquote>\n  <p>Adapted from create_Tikhonov_matrix function above.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">input_dims</span>, </span><span class=\"param\"><span class=\"n\">reg_type</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.utils.create_reg_matrices.create_localpenalty_matrix": {"fullname": "NDNT.utils.create_reg_matrices.create_localpenalty_matrix", "modulename": "NDNT.utils.create_reg_matrices", "qualname": "create_localpenalty_matrix", "kind": "function", "doc": "<p>Usage: Tmat = create_maxpenalty_matrix(input_dims, reg_type)</p>\n\n<p>Creates a matrix specifying a an L2-regularization operator of the form\n||T*k||^2, where T is a matrix and k is a vector of parameters. Currently\nonly supports second derivative/Laplacian operations</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>input_dims (list of ints):</strong>  dimensions associated with the target input,\nin the form [num_lags, num_x_pix, num_y_pix]</li>\n<li><strong>reg_type (str):</strong>  specify form of the regularization matrix\n'max' | 'max_filt' | 'max_space'</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>numpy array: matrix specifying the desired Tikhonov operator</p>\n</blockquote>\n\n<h6 id=\"notes\">Notes:</h6>\n\n<blockquote>\n  <p>Adapted from create_Tikhonov_matrix function above.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">input_dims</span>, </span><span class=\"param\"><span class=\"n\">separable</span><span class=\"o\">=</span><span class=\"kc\">True</span>, </span><span class=\"param\"><span class=\"n\">spatial_global</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.utils.ffnet_dicts": {"fullname": "NDNT.utils.ffnet_dicts", "modulename": "NDNT.utils.ffnet_dicts", "kind": "module", "doc": "<p></p>\n"}, "NDNT.utils.ffnet_dicts.layer_dict": {"fullname": "NDNT.utils.ffnet_dicts.layer_dict", "modulename": "NDNT.utils.ffnet_dicts", "qualname": "layer_dict", "kind": "function", "doc": "<p>input dims are [num_filters, space1, space2, num_lags]</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">input_dims</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">num_filters</span><span class=\"o\">=</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">NLtype</span><span class=\"o\">=</span><span class=\"s1\">&#39;relu&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">norm_type</span><span class=\"o\">=</span><span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">pos_constraint</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">num_inh</span><span class=\"o\">=</span><span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">output_norm</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">conv</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">conv_width</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">stride</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">dilation</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.utils.ffnet_dicts.ffnet_params_default": {"fullname": "NDNT.utils.ffnet_dicts.ffnet_params_default", "modulename": "NDNT.utils.ffnet_dicts", "qualname": "ffnet_params_default", "kind": "function", "doc": "<p>This creates a ffnetwork_params object that specifies details of ffnetwork\nffnetwork dicts have these fields:\n    ffnet_type: string specifying network type (default = 'normal')\n    layer_list: defaults to None, to be set in internal function\n    input_dims: defaults to None, but will be set when network made, if not sooner\n    xstim_n: external input (or None). Note can only be from one source\n    ffnet_n: list of internal network inputs (has to be a list, or None)\n    conv: [boolean] whether ffnetwork is convolutional or not, defaults to False but to be set</p>\n\n<p>-- Note xstim_n and ffnet_n are created/formatted here. \n-- If xstim_n is specified, it must specify input dimensions\n-- This should set all required fields as needed (even if none)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">xstim_n</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">ffnet_n</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">input_dims</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.utils.ffnet_dicts.ffnet_dict_NIM": {"fullname": "NDNT.utils.ffnet_dicts.ffnet_dict_NIM", "modulename": "NDNT.utils.ffnet_dicts", "qualname": "ffnet_dict_NIM", "kind": "function", "doc": "<p>This creates will make a list of layer dicts corresponding to a non-convolutional NIM].\nNote that input_dims can be set to none</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">input_dims</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">layer_sizes</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">layer_types</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">act_funcs</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">ei_layers</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">conv_widths</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">norm_list</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">reg_list</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">xstim_n</span><span class=\"o\">=</span><span class=\"s1\">&#39;stim&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">ffnet_n</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">ffnet_type</span><span class=\"o\">=</span><span class=\"s1\">&#39;normal&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.utils.ffnet_dicts.ffnet_dict_readout": {"fullname": "NDNT.utils.ffnet_dicts.ffnet_dict_readout", "modulename": "NDNT.utils.ffnet_dicts", "qualname": "ffnet_dict_readout", "kind": "function", "doc": "<p>This sets up dictionary parameters for readout ffnetwork, establishing all the relevant info. Note that the shifter\nis designated as the second of two ffnet_n inputs listed, so is not separately specified.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">ffnet_n</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">num_cells</span><span class=\"o\">=</span><span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">act_func</span><span class=\"o\">=</span><span class=\"s1\">&#39;softplus&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">bias</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">init_mu_range</span><span class=\"o\">=</span><span class=\"mf\">0.1</span>,</span><span class=\"param\">\t<span class=\"n\">init_sigma</span><span class=\"o\">=</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">batch_sample</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">align_corners</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">gauss_type</span><span class=\"o\">=</span><span class=\"s1\">&#39;uncorrelated&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">pos_constraint</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">reg_list</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.utils.ffnet_dicts.ffnet_dict_external": {"fullname": "NDNT.utils.ffnet_dicts.ffnet_dict_external", "modulename": "NDNT.utils.ffnet_dicts", "qualname": "ffnet_dict_external", "kind": "function", "doc": "<p>The network information passed in must simply be:</p>\n\n<ol>\n<li>The name of the network in the network dictionary that is passed into the constructor.</li>\n<li>The source of network input (external stim or otherwise).</li>\n<li>If external input, its input dims must also be specified.</li>\n<li>If the network takes input that needs to be reshaped, pass in 'input_dims_reshaped' that adds the \nbatch dimension and then reshapes before passing into external network. Note this will be the dimensionality\nthat the network takes as input, so does not need to be the NDN convention [CWHT]</li>\n<li>The output dims that are passed to the rest of the network (needs to be [CWHT]</li>\n</ol>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;external&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">xstim_n</span><span class=\"o\">=</span><span class=\"s1\">&#39;stim&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">ffnet_n</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">input_dims</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">input_dims_reshape</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">output_dims</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.utils.ffnet_dicts.list_complete": {"fullname": "NDNT.utils.ffnet_dicts.list_complete", "modulename": "NDNT.utils.ffnet_dicts", "qualname": "list_complete", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">fauxlist</span>, </span><span class=\"param\"><span class=\"n\">L</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">null_val</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.utils.plotting": {"fullname": "NDNT.utils.plotting", "modulename": "NDNT.utils.plotting", "kind": "module", "doc": "<p></p>\n"}, "NDNT.utils.plotting.plot_filters_1D": {"fullname": "NDNT.utils.plotting.plot_filters_1D", "modulename": "NDNT.utils.plotting", "qualname": "plot_filters_1D", "kind": "function", "doc": "<p>function to plot 1-D spatiotemporal filters (so, 2-d images) by passing in weights of multiple filters</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">ws</span>, </span><span class=\"param\"><span class=\"n\">num_cols</span><span class=\"o\">=</span><span class=\"mi\">8</span>, </span><span class=\"param\"><span class=\"n\">row_height</span><span class=\"o\">=</span><span class=\"mi\">2</span>, </span><span class=\"param\"><span class=\"n\">fix_scale</span><span class=\"o\">=</span><span class=\"kc\">True</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.utils.plotting.plot_filters_2D": {"fullname": "NDNT.utils.plotting.plot_filters_2D", "modulename": "NDNT.utils.plotting", "qualname": "plot_filters_2D", "kind": "function", "doc": "<p>function to plot 1-D spatiotemporal filters (so, 2-d images) by passing in weights of multiple filters</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">ws</span>,</span><span class=\"param\">\t<span class=\"n\">num_cols</span><span class=\"o\">=</span><span class=\"mi\">8</span>,</span><span class=\"param\">\t<span class=\"n\">row_height</span><span class=\"o\">=</span><span class=\"mi\">2</span>,</span><span class=\"param\">\t<span class=\"n\">fix_scale</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">cmap</span><span class=\"o\">=</span><span class=\"s1\">&#39;viridis&#39;</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.utils.plotting.plot_filters_ST1D": {"fullname": "NDNT.utils.plotting.plot_filters_ST1D", "modulename": "NDNT.utils.plotting", "qualname": "plot_filters_ST1D", "kind": "function", "doc": "<p>function to plot 1-D spatiotemporal filters (so, 2-d images) by passing in weights of multiple filters</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">ws</span>,</span><span class=\"param\">\t<span class=\"n\">cmap</span><span class=\"o\">=</span><span class=\"s1\">&#39;viridis&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">num_cols</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">row_height</span><span class=\"o\">=</span><span class=\"mi\">2</span>,</span><span class=\"param\">\t<span class=\"n\">fix_scale</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.utils.plotting.plot_filters_ST2D": {"fullname": "NDNT.utils.plotting.plot_filters_ST2D", "modulename": "NDNT.utils.plotting", "qualname": "plot_filters_ST2D", "kind": "function", "doc": "<p>Stolen directly from neureye -> core.plot_filters, and modified</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">ws</span>, </span><span class=\"param\"><span class=\"n\">sort</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.utils.plotting.plot_filters_ST3D": {"fullname": "NDNT.utils.plotting.plot_filters_ST3D", "modulename": "NDNT.utils.plotting", "qualname": "plot_filters_ST3D", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">ws</span>, </span><span class=\"param\"><span class=\"n\">sort</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.utils.plotting.plot_scatter": {"fullname": "NDNT.utils.plotting.plot_scatter", "modulename": "NDNT.utils.plotting", "qualname": "plot_scatter", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">xs</span>, </span><span class=\"param\"><span class=\"n\">ys</span>, </span><span class=\"param\"><span class=\"n\">clr</span><span class=\"o\">=</span><span class=\"s1\">&#39;g&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.utils.plotting.plot_internal_weights": {"fullname": "NDNT.utils.plotting.plot_internal_weights", "modulename": "NDNT.utils.plotting", "qualname": "plot_internal_weights", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">ws</span>, </span><span class=\"param\"><span class=\"n\">num_inh</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.version": {"fullname": "NDNT.version", "modulename": "NDNT.version", "kind": "module", "doc": "<p></p>\n"}, "NDNT.version.version": {"fullname": "NDNT.version.version", "modulename": "NDNT.version", "qualname": "version", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;0.1.0&#x27;"}, "NDNT.metrics": {"fullname": "NDNT.metrics", "modulename": "NDNT.metrics", "kind": "module", "doc": "<p></p>\n"}, "NDNT.metrics.mse_loss": {"fullname": "NDNT.metrics.mse_loss", "modulename": "NDNT.metrics.mse_loss", "kind": "module", "doc": "<p></p>\n"}, "NDNT.metrics.mse_loss.MseLoss_datafilter": {"fullname": "NDNT.metrics.mse_loss.MseLoss_datafilter", "modulename": "NDNT.metrics.mse_loss", "qualname": "MseLoss_datafilter", "kind": "class", "doc": "<p>This is initialized with default behavior that requires no knowledge of the dataset:\nunit_weighting = False, meaning no external weighting of units, such as by firing rate)\n    True corresponds to weighting being stored in buffer unit_weights <br />\nbatch_weighting = 0: 'batch_size', 1: 'data_filter', 2: 'av_batch_size', -1: \"unnormalized\"  default 0\n    Default requires no info from dataset: LL is normalized by time steps in batch, but otherwise\n    could use average batch size (for consistency across epoch), or datafilter (to get correct per-neuron) \nFor example using batch size and unit_weights corresponding to reciprocal of probability of spike per bin will\ngive standard LL/spk. \nNote that default is using batch_size, and info must be oassed in using 'set_loss_weighting' to alter behavior.</p>\n", "bases": "torch.nn.modules.module.Module"}, "NDNT.metrics.mse_loss.MseLoss_datafilter.__init__": {"fullname": "NDNT.metrics.mse_loss.MseLoss_datafilter.__init__", "modulename": "NDNT.metrics.mse_loss", "qualname": "MseLoss_datafilter.__init__", "kind": "function", "doc": "<p>Initializes internal Module state, shared by both nn.Module and ScriptModule.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "NDNT.metrics.mse_loss.MseLoss_datafilter.loss_name": {"fullname": "NDNT.metrics.mse_loss.MseLoss_datafilter.loss_name", "modulename": "NDNT.metrics.mse_loss", "qualname": "MseLoss_datafilter.loss_name", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.metrics.mse_loss.MseLoss_datafilter.loss": {"fullname": "NDNT.metrics.mse_loss.MseLoss_datafilter.loss", "modulename": "NDNT.metrics.mse_loss", "qualname": "MseLoss_datafilter.loss", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.metrics.mse_loss.MseLoss_datafilter.lossNR": {"fullname": "NDNT.metrics.mse_loss.MseLoss_datafilter.lossNR", "modulename": "NDNT.metrics.mse_loss", "qualname": "MseLoss_datafilter.lossNR", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.metrics.mse_loss.MseLoss_datafilter.unit_weighting": {"fullname": "NDNT.metrics.mse_loss.MseLoss_datafilter.unit_weighting", "modulename": "NDNT.metrics.mse_loss", "qualname": "MseLoss_datafilter.unit_weighting", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.metrics.mse_loss.MseLoss_datafilter.batch_weighting": {"fullname": "NDNT.metrics.mse_loss.MseLoss_datafilter.batch_weighting", "modulename": "NDNT.metrics.mse_loss", "qualname": "MseLoss_datafilter.batch_weighting", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"fullname": "NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting", "modulename": "NDNT.metrics.mse_loss", "qualname": "MseLoss_datafilter.set_loss_weighting", "kind": "function", "doc": "<h6 id=\"this-changes-default-loss-function-weights-to-adjust-for-the-dataset-by-setting-two-flags\">This changes default loss function weights to adjust for the dataset by setting two flags:</h6>\n\n<blockquote>\n  <p>unit_weighting: whether to weight neurons by different amounts in loss function (e.g., av spike rate)\n  batch_weighting: how much to weight each batch, dividing by following quantity\n      0 (default) 'batch\n      1 'data_filters': weight each neuron individually by the amount of data\n      2 'av_batch_size': weight by average batch size. Needs av_batch_size set/initialized from dataset info\n      -1 'unnormalized': no weighing at all. this will implicitly increase with batch size</p>\n</blockquote>\n\n<p>Args\n    batch_weighting (int): 0, 1, 2, -1\n    unit_weighting (bool): whether to weight units\n    unit_weights (torch.tensor): weights for each unit\n    av_batch_size (int): average batch size</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>None</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">batch_weighting</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">unit_weighting</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">unit_weights</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">av_batch_size</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.metrics.mse_loss.MseLoss_datafilter.forward": {"fullname": "NDNT.metrics.mse_loss.MseLoss_datafilter.forward", "modulename": "NDNT.metrics.mse_loss", "qualname": "MseLoss_datafilter.forward", "kind": "function", "doc": "<p>This is the forward function for the loss function. It calculates the loss based on the input and target data.\nThe loss is calculated as the mean squared error between the prediction and target data.</p>\n\n<p>Args\n    pred (torch.tensor): prediction data\n    target (torch.tensor): target data\n    data_filters (torch.tensor): data filters for each unit</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>loss (torch.tensor): loss value</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">pred</span>, </span><span class=\"param\"><span class=\"n\">target</span>, </span><span class=\"param\"><span class=\"n\">data_filters</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.metrics.mse_loss.MseLoss_datafilter.unit_loss": {"fullname": "NDNT.metrics.mse_loss.MseLoss_datafilter.unit_loss", "modulename": "NDNT.metrics.mse_loss", "qualname": "MseLoss_datafilter.unit_loss", "kind": "function", "doc": "<p>This should be equivalent of forward, without sum over units\nCurrently only true if batch_weighting = 'data_filter'.</p>\n\n<p>Args\n    pred (torch.tensor): prediction data\n    target (torch.tensor): target data\n    data_filters (torch.tensor): data filters for each unit\n    temporal_normalize (bool): whether to normalize by time steps</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>unitloss (torch.tensor): loss value</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">pred</span>, </span><span class=\"param\"><span class=\"n\">target</span>, </span><span class=\"param\"><span class=\"n\">data_filters</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">temporal_normalize</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.metrics.poisson_loss": {"fullname": "NDNT.metrics.poisson_loss", "modulename": "NDNT.metrics.poisson_loss", "kind": "module", "doc": "<p></p>\n"}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"fullname": "NDNT.metrics.poisson_loss.PoissonLoss_datafilter", "modulename": "NDNT.metrics.poisson_loss", "qualname": "PoissonLoss_datafilter", "kind": "class", "doc": "<p>This is initialized with default behavior that requires no knowledge of the dataset:\nunit_weighting = False, meaning no external weighting of units, such as by firing rate)\n    True corresponds to weighting being stored in buffer unit_weights <br />\nbatch_weighting = 0: 'batch_size', 1: 'data_filter', 2: 'av_batch_size', -1: \"unnormalized\"  default 0\n    Default requires no info from dataset: LL is normalized by time steps in batch, but otherwise\n    could use average batch size (for consistency across epoch), or datafilter (to get correct per-neuron) \nFor example using batch size and unit_weights corresponding to reciprocal of probability of spike per bin will\ngive standard LL/spk. \nNote that default is using batch_size, and info must be oassed in using 'set_loss_weighting' to alter behavior</p>\n", "bases": "torch.nn.modules.module.Module"}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.__init__": {"fullname": "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.__init__", "modulename": "NDNT.metrics.poisson_loss", "qualname": "PoissonLoss_datafilter.__init__", "kind": "function", "doc": "<p>Initializes internal Module state, shared by both nn.Module and ScriptModule.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.loss_name": {"fullname": "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.loss_name", "modulename": "NDNT.metrics.poisson_loss", "qualname": "PoissonLoss_datafilter.loss_name", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.loss": {"fullname": "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.loss", "modulename": "NDNT.metrics.poisson_loss", "qualname": "PoissonLoss_datafilter.loss", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.lossNR": {"fullname": "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.lossNR", "modulename": "NDNT.metrics.poisson_loss", "qualname": "PoissonLoss_datafilter.lossNR", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.unit_weighting": {"fullname": "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.unit_weighting", "modulename": "NDNT.metrics.poisson_loss", "qualname": "PoissonLoss_datafilter.unit_weighting", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.batch_weighting": {"fullname": "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.batch_weighting", "modulename": "NDNT.metrics.poisson_loss", "qualname": "PoissonLoss_datafilter.batch_weighting", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_log_epsilon": {"fullname": "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_log_epsilon", "modulename": "NDNT.metrics.poisson_loss", "qualname": "PoissonLoss_datafilter.set_log_epsilon", "kind": "function", "doc": "<p>Changes the floor of the poisson loss function (the epsilon in the logarithm). Leave epsilon\nblank or None if want to reset to default (1e-8).</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>epsilon (float):</strong>  floor of the poisson loss function</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>None</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">epsilon</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"fullname": "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting", "modulename": "NDNT.metrics.poisson_loss", "qualname": "PoissonLoss_datafilter.set_loss_weighting", "kind": "function", "doc": "<h6 id=\"this-changes-default-loss-function-weights-to-adjust-for-the-dataset-by-setting-two-flags\">This changes default loss function weights to adjust for the dataset by setting two flags:</h6>\n\n<blockquote>\n  <p>unit_weighting: whether to weight neurons by different amounts in loss function (e.g., av spike rate)\n  batch_weighting: how much to weight each batch, dividing by following quantity\n      0 (default) 'batch_size': weight by length of batch\n      1 'data_filters': weight each neuron individually by the amount of data\n      2 'av_batch_size': weight by average batch size. Needs av_batch_size set/initialized from dataset info\n      -1 'unnormalized': no weighing at all. this will implicitly increase with batch size</p>\n</blockquote>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>batch_weighting (int):</strong>  0, 1, 2, -1</li>\n<li><strong>unit_weighting (bool):</strong>  whether to weight units</li>\n<li><strong>unit_weights (torch.tensor):</strong>  weights for each unit</li>\n<li><strong>av_batch_size (int):</strong>  average batch size</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>None</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">batch_weighting</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">unit_weighting</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">unit_weights</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">av_batch_size</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.forward": {"fullname": "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.forward", "modulename": "NDNT.metrics.poisson_loss", "qualname": "PoissonLoss_datafilter.forward", "kind": "function", "doc": "<p>This is the forward function for the loss function. It calculates the loss based on the input and target data.\nThe loss is calculated as the Poisson negative log likelihood between the prediction and target data.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>pred (torch.tensor):</strong>  prediction data</li>\n<li><strong>target (torch.tensor):</strong>  target data</li>\n<li><strong>data_filters (torch.tensor):</strong>  data filters for each unit</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>loss (torch.tensor): loss value</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">pred</span>, </span><span class=\"param\"><span class=\"n\">target</span>, </span><span class=\"param\"><span class=\"n\">data_filters</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.unit_loss": {"fullname": "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.unit_loss", "modulename": "NDNT.metrics.poisson_loss", "qualname": "PoissonLoss_datafilter.unit_loss", "kind": "function", "doc": "<p>This should be equivalent of forward, without sum over units\nCurrently only true if batch_weighting = 'data_filter'.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>pred (torch.tensor):</strong>  prediction data</li>\n<li><strong>target (torch.tensor):</strong>  target data</li>\n<li><strong>data_filters (torch.tensor):</strong>  data filters for each unit</li>\n<li><strong>temporal_normalize (bool):</strong>  whether to normalize by time steps</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>unitloss (torch.tensor): loss value for each unit</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">pred</span>, </span><span class=\"param\"><span class=\"n\">target</span>, </span><span class=\"param\"><span class=\"n\">data_filters</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">temporal_normalize</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"fullname": "NDNT.metrics.poisson_loss.SimplePoissonLoss", "modulename": "NDNT.metrics.poisson_loss", "qualname": "SimplePoissonLoss", "kind": "class", "doc": "<p>Modified Poisson loss to involve minimal extra calcs\nThis is initialized with default behavior that requires no knowledge of the dataset:\nunit_weighting = False, meaning no external weighting of units, such as by firing rate)\n    True corresponds to weighting being stored in buffer unit_weights <br />\nbatch_weighting = 0: 'batch_size', 1: 'data_filter', 2: 'av_batch_size', -1: \"unnormalized\"  default 0\n    Default requires no info from dataset: LL is normalized by time steps in batch, but otherwise\n    could use average batch size (for consistency across epoch), or datafilter (to get correct per-neuron) \nFor example using batch size and unit_weights corresponding to reciprocal of probability of spike per bin will\ngive standard LL/spk. \nNote that default is using batch_size, and info must be oassed in using 'set_loss_weighting' to alter behavior</p>\n", "bases": "torch.nn.modules.module.Module"}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.__init__": {"fullname": "NDNT.metrics.poisson_loss.SimplePoissonLoss.__init__", "modulename": "NDNT.metrics.poisson_loss", "qualname": "SimplePoissonLoss.__init__", "kind": "function", "doc": "<p>Initializes internal Module state, shared by both nn.Module and ScriptModule.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.loss_name": {"fullname": "NDNT.metrics.poisson_loss.SimplePoissonLoss.loss_name", "modulename": "NDNT.metrics.poisson_loss", "qualname": "SimplePoissonLoss.loss_name", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.loss": {"fullname": "NDNT.metrics.poisson_loss.SimplePoissonLoss.loss", "modulename": "NDNT.metrics.poisson_loss", "qualname": "SimplePoissonLoss.loss", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.lossNR": {"fullname": "NDNT.metrics.poisson_loss.SimplePoissonLoss.lossNR", "modulename": "NDNT.metrics.poisson_loss", "qualname": "SimplePoissonLoss.lossNR", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.unit_weighting": {"fullname": "NDNT.metrics.poisson_loss.SimplePoissonLoss.unit_weighting", "modulename": "NDNT.metrics.poisson_loss", "qualname": "SimplePoissonLoss.unit_weighting", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.batch_weighting": {"fullname": "NDNT.metrics.poisson_loss.SimplePoissonLoss.batch_weighting", "modulename": "NDNT.metrics.poisson_loss", "qualname": "SimplePoissonLoss.batch_weighting", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"fullname": "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting", "modulename": "NDNT.metrics.poisson_loss", "qualname": "SimplePoissonLoss.set_loss_weighting", "kind": "function", "doc": "<h6 id=\"this-changes-default-loss-function-weights-to-adjust-for-the-dataset-by-setting-two-flags\">This changes default loss function weights to adjust for the dataset by setting two flags:</h6>\n\n<blockquote>\n  <p>unit_weighting: whether to weight neurons by different amounts in loss function (e.g., av spike rate)\n  batch_weighting: how much to weight each batch, dividing by following quantity\n      0 (default) 'batch_size': weight by length of batch\n      1 'data_filters': weight each neuron individually by the amount of data\n      2 'av_batch_size': weight by average batch size. Needs av_batch_size set/initialized from dataset info\n      -1 'unnormalized': no weighing at all. this will implicitly increase with batch size</p>\n</blockquote>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>batch_weighting (int):</strong>  0, 1, 2, -1</li>\n<li><strong>unit_weighting (bool):</strong>  whether to weight units</li>\n<li><strong>unit_weights (torch.tensor):</strong>  weights for each unit</li>\n<li><strong>av_batch_size (int):</strong>  average batch size</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>None</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">batch_weighting</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">unit_weighting</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">unit_weights</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">av_batch_size</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.forward": {"fullname": "NDNT.metrics.poisson_loss.SimplePoissonLoss.forward", "modulename": "NDNT.metrics.poisson_loss", "qualname": "SimplePoissonLoss.forward", "kind": "function", "doc": "<p>This is the forward function for the loss function. It calculates the loss based on the input and target data.\nThe loss is calculated as the Poisson negative log likelihood between the prediction and target data.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>pred (torch.tensor):</strong>  prediction data</li>\n<li><strong>target (torch.tensor):</strong>  target data</li>\n<li><strong>data_filters (torch.tensor):</strong>  data filters for each unit</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>loss (torch.tensor): loss value</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">pred</span>, </span><span class=\"param\"><span class=\"n\">target</span>, </span><span class=\"param\"><span class=\"n\">data_filters</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.unit_loss": {"fullname": "NDNT.metrics.poisson_loss.SimplePoissonLoss.unit_loss", "modulename": "NDNT.metrics.poisson_loss", "qualname": "SimplePoissonLoss.unit_loss", "kind": "function", "doc": "<p>This should be equivalent of forward, without sum over units\nCurrently only true if batch_weighting = 'data_filter'.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>pred (torch.tensor):</strong>  prediction data</li>\n<li><strong>target (torch.tensor):</strong>  target data</li>\n<li><strong>data_filters (torch.tensor):</strong>  data filters for each unit</li>\n<li><strong>temporal_normalize (bool):</strong>  whether to normalize by time steps</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>unitloss (torch.tensor): loss value for each unit</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">pred</span>, </span><span class=\"param\"><span class=\"n\">target</span>, </span><span class=\"param\"><span class=\"n\">data_filters</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">temporal_normalize</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.metrics.rmse_loss": {"fullname": "NDNT.metrics.rmse_loss", "modulename": "NDNT.metrics.rmse_loss", "kind": "module", "doc": "<p></p>\n"}, "NDNT.metrics.rmse_loss.RmseLoss": {"fullname": "NDNT.metrics.rmse_loss.RmseLoss", "modulename": "NDNT.metrics.rmse_loss", "qualname": "RmseLoss", "kind": "class", "doc": "<p>This is initialized with default behavior that requires no knowledge of the dataset:\nunit_weighting = False, meaning no external weighting of units, such as by firing rate)\n    True corresponds to weighting being stored in buffer unit_weights <br />\nbatch_weighting = 0: 'batch_size', 1: 'data_filter', 2: 'av_batch_size', -1: \"unnormalized\"  default 0\n    Default requires no info from dataset: LL is normalized by time steps in batch, but otherwise\n    could use average batch size (for consistency across epoch), or datafilter (to get correct per-neuron) \nFor example using batch size and unit_weights corresponding to reciprocal of probability of spike per bin will\ngive standard LL/spk. \nNote that default is using batch_size, and info must be oassed in using 'set_loss_weighting' to alter behavior</p>\n", "bases": "torch.nn.modules.module.Module"}, "NDNT.metrics.rmse_loss.RmseLoss.__init__": {"fullname": "NDNT.metrics.rmse_loss.RmseLoss.__init__", "modulename": "NDNT.metrics.rmse_loss", "qualname": "RmseLoss.__init__", "kind": "function", "doc": "<p>Initializes internal Module state, shared by both nn.Module and ScriptModule.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "NDNT.metrics.rmse_loss.RmseLoss.loss_name": {"fullname": "NDNT.metrics.rmse_loss.RmseLoss.loss_name", "modulename": "NDNT.metrics.rmse_loss", "qualname": "RmseLoss.loss_name", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.metrics.rmse_loss.RmseLoss.loss": {"fullname": "NDNT.metrics.rmse_loss.RmseLoss.loss", "modulename": "NDNT.metrics.rmse_loss", "qualname": "RmseLoss.loss", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.metrics.rmse_loss.RmseLoss.lossNR": {"fullname": "NDNT.metrics.rmse_loss.RmseLoss.lossNR", "modulename": "NDNT.metrics.rmse_loss", "qualname": "RmseLoss.lossNR", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.metrics.rmse_loss.RmseLoss.unit_weighting": {"fullname": "NDNT.metrics.rmse_loss.RmseLoss.unit_weighting", "modulename": "NDNT.metrics.rmse_loss", "qualname": "RmseLoss.unit_weighting", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.metrics.rmse_loss.RmseLoss.batch_weighting": {"fullname": "NDNT.metrics.rmse_loss.RmseLoss.batch_weighting", "modulename": "NDNT.metrics.rmse_loss", "qualname": "RmseLoss.batch_weighting", "kind": "variable", "doc": "<p></p>\n"}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"fullname": "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting", "modulename": "NDNT.metrics.rmse_loss", "qualname": "RmseLoss.set_loss_weighting", "kind": "function", "doc": "<h6 id=\"this-changes-default-loss-function-weights-to-adjust-for-the-dataset-by-setting-two-flags\">This changes default loss function weights to adjust for the dataset by setting two flags:</h6>\n\n<blockquote>\n  <p>unit_weighting: whether to weight neurons by different amounts in loss function (e.g., av spike rate)\n  batch_weighting: how much to weight each batch, dividing by following quantity\n      0 (default) 'batch\n      1 'data_filters': weight each neuron individually by the amount of data\n      2 'av_batch_size': weight by average batch size. Needs av_batch_size set/initialized from dataset info\n      -1 'unnormalized': no weighing at all. this will implicitly increase with batch size</p>\n</blockquote>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>batch_weighting (int):</strong>  0, 1, 2, -1</li>\n<li><strong>unit_weighting (bool):</strong>  whether to weight units</li>\n<li><strong>unit_weights (torch.tensor):</strong>  weights for each unit</li>\n<li><strong>av_batch_size (int):</strong>  average batch size</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>None</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">batch_weighting</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">unit_weighting</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">unit_weights</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">av_batch_size</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.metrics.rmse_loss.RmseLoss.forward": {"fullname": "NDNT.metrics.rmse_loss.RmseLoss.forward", "modulename": "NDNT.metrics.rmse_loss", "qualname": "RmseLoss.forward", "kind": "function", "doc": "<p>This is the forward function for the loss function. It calculates the loss based on the input and target data.\nThe loss is calculated as the mean squared error between the prediction and target data.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>pred (torch.tensor):</strong>  predicted data</li>\n<li><strong>target (torch.tensor):</strong>  target data</li>\n<li><strong>data_filters (torch.tensor):</strong>  data filters for each unit</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>loss (torch.tensor): mean squared error loss</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">pred</span>, </span><span class=\"param\"><span class=\"n\">target</span>, </span><span class=\"param\"><span class=\"n\">data_filters</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "NDNT.metrics.rmse_loss.RmseLoss.unit_loss": {"fullname": "NDNT.metrics.rmse_loss.RmseLoss.unit_loss", "modulename": "NDNT.metrics.rmse_loss", "qualname": "RmseLoss.unit_loss", "kind": "function", "doc": "<p>This should be equivalent of forward, without sum over units\nCurrently only true if batch_weighting = 'data_filter'.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>pred (torch.tensor):</strong>  predicted data</li>\n<li><strong>target (torch.tensor):</strong>  target data</li>\n<li><strong>data_filters (torch.tensor):</strong>  data filters for each unit</li>\n<li><strong>temporal_normalize (bool):</strong>  whether to normalize by time steps</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>unitloss (torch.tensor): mean squared error loss</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">pred</span>, </span><span class=\"param\"><span class=\"n\">target</span>, </span><span class=\"param\"><span class=\"n\">data_filters</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">temporal_normalize</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}}, "docInfo": {"NDNT": {"qualname": 0, "fullname": 1, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.NDN": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.NDN.FFnets": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 74, "signature": 0, "bases": 0, "doc": 3}, "NDNT.NDN.NDN": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 226}, "NDNT.NDN.NDN.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 119, "bases": 0, "doc": 14}, "NDNT.NDN.NDN.loss_type": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.NDN.NDN.ffnet_out": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.NDN.NDN.seed": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.NDN.NDN.ffnet_list": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.NDN.NDN.working_dir": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.NDN.NDN.loss": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.NDN.NDN.val_loss": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.NDN.NDN.trainer": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.NDN.NDN.block_sample": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.NDN.NDN.networks": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.NDN.NDN.opt_params": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.NDN.NDN.speckled_flag": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.NDN.NDN.assemble_ffnetworks": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 28, "bases": 0, "doc": 176}, "NDNT.NDN.NDN.compute_network_outputs": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 96}, "NDNT.NDN.NDN.forward": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 81}, "NDNT.NDN.NDN.training_step": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 27, "bases": 0, "doc": 73}, "NDNT.NDN.NDN.validation_step": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 27, "bases": 0, "doc": 72}, "NDNT.NDN.NDN.compute_reg_loss": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 35}, "NDNT.NDN.NDN.get_trainer": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 162, "bases": 0, "doc": 262}, "NDNT.NDN.NDN.get_dataloaders": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 122, "bases": 0, "doc": 197}, "NDNT.NDN.NDN.get_optimizer": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 161, "bases": 0, "doc": 169}, "NDNT.NDN.NDN.prepare_regularization": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 19}, "NDNT.NDN.NDN.fit": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 191, "bases": 0, "doc": 337}, "NDNT.NDN.NDN.fit_dl": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 170, "bases": 0, "doc": 315}, "NDNT.NDN.NDN.initialize_loss": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 71, "bases": 0, "doc": 178}, "NDNT.NDN.NDN.compute_average_responses": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 27, "bases": 0, "doc": 62}, "NDNT.NDN.NDN.initialize_biases": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 49, "bases": 0, "doc": 103}, "NDNT.NDN.NDN.eval_models": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 119, "bases": 0, "doc": 378}, "NDNT.NDN.NDN.generate_predictions": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 89, "bases": 0, "doc": 136}, "NDNT.NDN.NDN.change_loss": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 28, "bases": 0, "doc": 87}, "NDNT.NDN.NDN.get_weights": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 79}, "NDNT.NDN.NDN.get_readout_locations": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 51}, "NDNT.NDN.NDN.passive_readout": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 44}, "NDNT.NDN.NDN.list_parameters": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 33, "bases": 0, "doc": 51}, "NDNT.NDN.NDN.set_parameters": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 53, "bases": 0, "doc": 97}, "NDNT.NDN.NDN.set_reg_val": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 60, "bases": 0, "doc": 95}, "NDNT.NDN.NDN.plot_filters": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 48}, "NDNT.NDN.NDN.save_model_zip": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 86, "bases": 0, "doc": 115}, "NDNT.NDN.NDN.load_model_zip": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 61}, "NDNT.NDN.NDN.save_model": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 69}, "NDNT.NDN.NDN.save_model_chk": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 32, "bases": 0, "doc": 80}, "NDNT.NDN.NDN.get_null_adjusted_ll": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 59}, "NDNT.NDN.NDN.get_activations": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 48, "bases": 0, "doc": 95}, "NDNT.NDN.NDN.device": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.NDN.NDN.load_model": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 56}, "NDNT.NDN.NDN.load_model_chk": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 43, "bases": 0, "doc": 71}, "NDNT.NDN.NDN.model_string": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 21}, "NDNT.modules": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.activations": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.activations.adaptive_elu": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 78}, "NDNT.modules.activations.Square": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 6}, "NDNT.modules.activations.Square.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 14}, "NDNT.modules.activations.Square.forward": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 40}, "NDNT.modules.activations.AdaptiveELU": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 20}, "NDNT.modules.activations.AdaptiveELU.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 43, "bases": 0, "doc": 70}, "NDNT.modules.activations.AdaptiveELU.xshift": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.activations.AdaptiveELU.yshift": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.activations.AdaptiveELU.inplace": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.activations.AdaptiveELU.forward": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 40}, "NDNT.modules.activations.NLtypes": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 50, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.activity_regularization": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.activity_regularization.ActivityRegularization": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.activity_regularization.ActivityRegularization.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 3}, "NDNT.modules.activity_regularization.ActivityRegularization.reg_vals": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.activity_regularization.ActivityRegularization.activity": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 51}, "NDNT.modules.activity_regularization.ActivityRegularization.nonneg": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 52}, "NDNT.modules.activity_regularization.ActivityRegularization.regularize": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 40}, "NDNT.modules.experiment_sampler": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.experiment_sampler.ExperimentBatchGenerator": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 73}, "NDNT.modules.experiment_sampler.ExperimentBatchGenerator.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 57, "bases": 0, "doc": 3}, "NDNT.modules.experiment_sampler.ExperimentBatchGenerator.batches": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.experiment_sampler.ExperimentBatchGenerator.current_batch_index": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.experiment_sampler.ExperimentBatchGenerator.next": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 20}, "NDNT.modules.experiment_sampler.ExperimentBatchIterator": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 75}, "NDNT.modules.experiment_sampler.ExperimentBatchIterator.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 46, "bases": 0, "doc": 3}, "NDNT.modules.experiment_sampler.ExperimentBatchIterator.exp_batch_generators": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.experiment_sampler.construct_exp_to_time": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 41}, "NDNT.modules.experiment_sampler.ExperimentSampler": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 91}, "NDNT.modules.experiment_sampler.ExperimentSampler.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 113, "bases": 0, "doc": 3}, "NDNT.modules.experiment_sampler.ExperimentSampler.dataset": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.experiment_sampler.ExperimentSampler.batch_size": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.experiment_sampler.ExperimentSampler.shuffle": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.experiment_sampler.ExperimentSampler.random_seed": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.experiment_sampler.ExperimentSampler.num_exps": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.experiment_sampler.ExperimentSampler.exp_to_time": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.experiment_sampler.ExperimentSampler.exp_lengths": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.experiment_sampler.ExperimentSampler.exp_batch_sizes": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.experiment_sampler.ExperimentSampler.num_batches": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.bilayers": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.bilayers.BinocLayer1D": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 45}, "NDNT.modules.layers.bilayers.BinocLayer1D.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 43, "bases": 0, "doc": 60}, "NDNT.modules.layers.bilayers.BinocLayer1D.forward": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 47}, "NDNT.modules.layers.bilayers.BinocLayer1D.layer_dict": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 52}, "NDNT.modules.layers.bilayers.BiConvLayer1D": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 12}, "NDNT.modules.layers.bilayers.BiConvLayer1D.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 127}, "NDNT.modules.layers.bilayers.BiConvLayer1D.layer_dict": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 52}, "NDNT.modules.layers.bilayers.BiSTconv1D": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 60}, "NDNT.modules.layers.bilayers.BiSTconv1D.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 75, "bases": 0, "doc": 127}, "NDNT.modules.layers.bilayers.BiSTconv1D.output_dims": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.bilayers.BiSTconv1D.num_outputs": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.bilayers.BiSTconv1D.forward": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 48}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 254}, "NDNT.modules.layers.bilayers.ChannelConvLayer": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 117}, "NDNT.modules.layers.bilayers.ChannelConvLayer.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 84, "bases": 0, "doc": 102}, "NDNT.modules.layers.bilayers.ChannelConvLayer.weights_folded_dims": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.bilayers.ChannelConvLayer.layer_dict": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 52}, "NDNT.modules.layers.bilayers.ChannelConvLayer.forward": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 48}, "NDNT.modules.layers.convlayers": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.convlayers.ConvLayer": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 83}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 145, "bases": 0, "doc": 176}, "NDNT.modules.layers.convlayers.ConvLayer.window": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.convlayers.ConvLayer.tent_basis": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.convlayers.ConvLayer.is1D": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.convlayers.ConvLayer.res_layer": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.convlayers.ConvLayer.filter_dims": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.convlayers.ConvLayer.padding": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.convlayers.ConvLayer.folded_dims": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.convlayers.ConvLayer.batchnorm_clone": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 3}, "NDNT.modules.layers.convlayers.ConvLayer.batchnorm_convert": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 23}, "NDNT.modules.layers.convlayers.ConvLayer.layer_dict": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 82, "bases": 0, "doc": 52}, "NDNT.modules.layers.convlayers.ConvLayer.preprocess_weights": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 27}, "NDNT.modules.layers.convlayers.ConvLayer.forward": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 38}, "NDNT.modules.layers.convlayers.TconvLayer": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 88}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 87, "bases": 0, "doc": 176}, "NDNT.modules.layers.convlayers.TconvLayer.num_lags": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.convlayers.TconvLayer.is1D": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.convlayers.TconvLayer.padding": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.convlayers.TconvLayer.forward": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 38}, "NDNT.modules.layers.convlayers.TconvLayer.plot_filters": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 58, "bases": 0, "doc": 94}, "NDNT.modules.layers.convlayers.TconvLayer.layer_dict": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 43, "bases": 0, "doc": 52}, "NDNT.modules.layers.convlayers.STconvLayer": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 120}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 44, "bases": 0, "doc": 176}, "NDNT.modules.layers.convlayers.STconvLayer.num_lags": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.convlayers.STconvLayer.output_dims": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.convlayers.STconvLayer.forward": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 38}, "NDNT.modules.layers.convlayers.STconvLayer.plot_filters": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 58, "bases": 0, "doc": 94}, "NDNT.modules.layers.convlayers.STconvLayer.layer_dict": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 52}, "NDNT.modules.layers.dimlayers": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.dimlayers.Dim0Layer": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 12}, "NDNT.modules.layers.dimlayers.Dim0Layer.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 33, "bases": 0, "doc": 34}, "NDNT.modules.layers.dimlayers.Dim0Layer.output_dims": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.dimlayers.Dim0Layer.num_outputs": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.dimlayers.Dim0Layer.num_other_dims": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.dimlayers.Dim0Layer.forward": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 44}, "NDNT.modules.layers.dimlayers.Dim0Layer.dim_info": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 35, "bases": 0, "doc": 115}, "NDNT.modules.layers.dimlayers.Dim0Layer.layer_dict": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 52}, "NDNT.modules.layers.dimlayers.ChannelLayer": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 30}, "NDNT.modules.layers.dimlayers.ChannelLayer.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 33, "bases": 0, "doc": 34}, "NDNT.modules.layers.dimlayers.ChannelLayer.layer_dict": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 52}, "NDNT.modules.layers.dimlayers.ChannelLayer.forward": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 44}, "NDNT.modules.layers.dimlayers.DimSPLayer": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 22}, "NDNT.modules.layers.dimlayers.DimSPLayer.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 43, "bases": 0, "doc": 47}, "NDNT.modules.layers.dimlayers.DimSPLayer.transparent": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.dimlayers.DimSPLayer.num_outputs": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.dimlayers.DimSPLayer.num_sp_dims": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.dimlayers.DimSPLayer.forward": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 44}, "NDNT.modules.layers.dimlayers.DimSPLayer.layer_dict": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 28, "bases": 0, "doc": 52}, "NDNT.modules.layers.dimlayers.DimSPTLayer": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 13}, "NDNT.modules.layers.dimlayers.DimSPTLayer.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 43, "bases": 0, "doc": 47}, "NDNT.modules.layers.dimlayers.DimSPTLayer.output_dims": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.dimlayers.DimSPTLayer.num_outputs": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.dimlayers.DimSPTLayer.transparent": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.dimlayers.DimSPTLayer.num_spt_dims": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.dimlayers.DimSPTLayer.forward": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 44}, "NDNT.modules.layers.dimlayers.DimSPTLayer.layer_dict": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 28, "bases": 0, "doc": 52}, "NDNT.modules.layers.externallayer": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.externallayer.ExternalLayer": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 21}, "NDNT.modules.layers.externallayer.ExternalLayer.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 44, "bases": 0, "doc": 81}, "NDNT.modules.layers.externallayer.ExternalLayer.input_dims": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.externallayer.ExternalLayer.num_filters": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.externallayer.ExternalLayer.filter_dims": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.externallayer.ExternalLayer.output_dims": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.externallayer.ExternalLayer.reg": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.externallayer.ExternalLayer.forward": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 33}, "NDNT.modules.layers.laglayers": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.laglayers.LagLayer": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 119}, "NDNT.modules.layers.laglayers.LagLayer.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 44, "bases": 0, "doc": 67}, "NDNT.modules.layers.laglayers.LagLayer.num_lags": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.laglayers.LagLayer.num_folded_dims": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.laglayers.LagLayer.forward": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 52}, "NDNT.modules.layers.laglayers.LagLayer.plot_filters": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 58, "bases": 0, "doc": 98}, "NDNT.modules.layers.laglayers.LagLayer.layer_dict": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 100}, "NDNT.modules.layers.lvlayers": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.lvlayers.LVLayer": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 98}, "NDNT.modules.layers.lvlayers.LVLayer.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 77, "bases": 0, "doc": 109}, "NDNT.modules.layers.lvlayers.LVLayer.preprocess_weights": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 25}, "NDNT.modules.layers.lvlayers.LVLayer.forward": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 55}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 73, "bases": 0, "doc": 118}, "NDNT.modules.layers.lvlayers.LVLayerOLD": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 23}, "NDNT.modules.layers.lvlayers.LVLayerOLD.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 114, "bases": 0, "doc": 53}, "NDNT.modules.layers.lvlayers.LVLayerOLD.numLVs": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.lvlayers.LVLayerOLD.nt": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.lvlayers.LVLayerOLD.init_mu_range": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.lvlayers.LVLayerOLD.init_sigma": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.lvlayers.LVLayerOLD.sigma": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.lvlayers.LVLayerOLD.sm_skips": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.lvlayers.LVLayerOLD.sample": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.lvlayers.LVLayerOLD.weight_scale": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.lvlayers.LVLayerOLD.forward": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 42}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 87, "bases": 0, "doc": 142}, "NDNT.modules.layers.ndnlayer": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 299}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 228, "bases": 0, "doc": 176}, "NDNT.modules.layers.ndnlayer.NDNLayer.input_dims": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.ndnlayer.NDNLayer.num_filters": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.ndnlayer.NDNLayer.output_dims": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.ndnlayer.NDNLayer.norm_type": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.ndnlayer.NDNLayer.pos_constraint": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.ndnlayer.NDNLayer.conv": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.ndnlayer.NDNLayer.NL": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.ndnlayer.NDNLayer.shape": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.ndnlayer.NDNLayer.weight_scale": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.ndnlayer.NDNLayer.weight": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.ndnlayer.NDNLayer.reg": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.ndnlayer.NDNLayer.num_inh": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.ndnlayer.NDNLayer.reset_parameters": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 50, "bases": 0, "doc": 78}, "NDNT.modules.layers.ndnlayer.NDNLayer.initialize_gaussian_envelope": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 24}, "NDNT.modules.layers.ndnlayer.NDNLayer.preprocess_weights": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 27}, "NDNT.modules.layers.ndnlayer.NDNLayer.forward": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 38}, "NDNT.modules.layers.ndnlayer.NDNLayer.compute_reg_loss": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 25}, "NDNT.modules.layers.ndnlayer.NDNLayer.get_weights": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 44, "bases": 0, "doc": 80}, "NDNT.modules.layers.ndnlayer.NDNLayer.list_parameters": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "NDNT.modules.layers.ndnlayer.NDNLayer.set_parameters": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 19}, "NDNT.modules.layers.ndnlayer.NDNLayer.set_reg_val": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 28, "bases": 0, "doc": 54}, "NDNT.modules.layers.ndnlayer.NDNLayer.plot_filters": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 94}, "NDNT.modules.layers.ndnlayer.NDNLayer.dim_info": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 35, "bases": 0, "doc": 104}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 175, "bases": 0, "doc": 254}, "NDNT.modules.layers.normlayers": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.normlayers.DivNormLayer": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 9}, "NDNT.modules.layers.normlayers.DivNormLayer.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 71, "bases": 0, "doc": 88}, "NDNT.modules.layers.normlayers.DivNormLayer.output_dims": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.normlayers.DivNormLayer.num_outputs": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.normlayers.DivNormLayer.preprocess_weights": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 26}, "NDNT.modules.layers.normlayers.DivNormLayer.forward": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 41}, "NDNT.modules.layers.orilayers": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.orilayers.OriLayer": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 5}, "NDNT.modules.layers.orilayers.OriLayer.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 59, "bases": 0, "doc": 49}, "NDNT.modules.layers.orilayers.OriLayer.angles": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.orilayers.OriLayer.output_dims": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.orilayers.OriLayer.rotation_matrix_tensor": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 23, "bases": 0, "doc": 55}, "NDNT.modules.layers.orilayers.OriLayer.forward": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 52}, "NDNT.modules.layers.orilayers.OriLayer.layer_dict": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 28, "bases": 0, "doc": 54}, "NDNT.modules.layers.orilayers.OriConvLayer": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 5}, "NDNT.modules.layers.orilayers.OriConvLayer.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 98, "bases": 0, "doc": 49}, "NDNT.modules.layers.orilayers.OriConvLayer.angles": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.orilayers.OriConvLayer.folded_dims": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.orilayers.OriConvLayer.output_dims": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.orilayers.OriConvLayer.rotation_matrix_tensor": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 23, "bases": 0, "doc": 55}, "NDNT.modules.layers.orilayers.OriConvLayer.get_rot_mat": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 50}, "NDNT.modules.layers.orilayers.OriConvLayer.rotate_tensor": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 39}, "NDNT.modules.layers.orilayers.OriConvLayer.forward": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 52}, "NDNT.modules.layers.orilayers.OriConvLayer.layer_dict": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 28, "bases": 0, "doc": 54}, "NDNT.modules.layers.orilayers.ConvLayer3D": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 6}, "NDNT.modules.layers.orilayers.ConvLayer3D.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 108, "bases": 0, "doc": 57}, "NDNT.modules.layers.orilayers.ConvLayer3D.ori_padding": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.orilayers.ConvLayer3D.input_dims": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.orilayers.ConvLayer3D.output_dims": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.orilayers.ConvLayer3D.forward": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 52}, "NDNT.modules.layers.orilayers.ConvLayer3D.plot_filters": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 58, "bases": 0, "doc": 58}, "NDNT.modules.layers.orilayers.ConvLayer3D.layer_dict": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 41, "bases": 0, "doc": 77}, "NDNT.modules.layers.readouts": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.readouts.ReadoutLayer": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 7}, "NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 137, "bases": 0, "doc": 141}, "NDNT.modules.layers.readouts.ReadoutLayer.batch_sample": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_mode": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.readouts.ReadoutLayer.init_mu_range": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.readouts.ReadoutLayer.init_sigma": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.readouts.ReadoutLayer.align_corners": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.readouts.ReadoutLayer.grid_shape": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.readouts.ReadoutLayer.mu": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.readouts.ReadoutLayer.sigma": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.readouts.ReadoutLayer.sample": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.readouts.ReadoutLayer.features": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.readouts.ReadoutLayer.grid": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.readouts.ReadoutLayer.initialize_spatial_mapping": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 22}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 27, "bases": 0, "doc": 160}, "NDNT.modules.layers.readouts.ReadoutLayer.get_weights": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 44, "bases": 0, "doc": 81}, "NDNT.modules.layers.readouts.ReadoutLayer.forward": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 54}, "NDNT.modules.layers.readouts.ReadoutLayer.set_readout_locations": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 31}, "NDNT.modules.layers.readouts.ReadoutLayer.get_readout_locations": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 33}, "NDNT.modules.layers.readouts.ReadoutLayer.passive_readout": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 51}, "NDNT.modules.layers.readouts.ReadoutLayer.layer_dict": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 32, "bases": 0, "doc": 82}, "NDNT.modules.layers.readouts.ReadoutLayer3d": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 20}, "NDNT.modules.layers.readouts.ReadoutLayer3d.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 34}, "NDNT.modules.layers.readouts.ReadoutLayer3d.input_dims": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.readouts.ReadoutLayer3d.filter_dims": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.readouts.ReadoutLayer3d.reg": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.readouts.ReadoutLayer3d.forward": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 53}, "NDNT.modules.layers.readouts.ReadoutLayer3d.passive_readout": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 18}, "NDNT.modules.layers.readouts.ReadoutLayer3d.layer_dict": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 76}, "NDNT.modules.layers.readouts.FixationLayer": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 6}, "NDNT.modules.layers.readouts.FixationLayer.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 113, "bases": 0, "doc": 128}, "NDNT.modules.layers.readouts.FixationLayer.num_spatial_dims": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.readouts.FixationLayer.num_fixations": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.readouts.FixationLayer.batch_sample": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.readouts.FixationLayer.init_sigma": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.readouts.FixationLayer.single_sigma": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.readouts.FixationLayer.fix_n_index": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.readouts.FixationLayer.sample": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.readouts.FixationLayer.forward": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 53}, "NDNT.modules.layers.readouts.FixationLayer.initialize": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 9}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 70, "bases": 0, "doc": 126}, "NDNT.modules.layers.reslayers": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.reslayers.IterLayer": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 107}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 136, "bases": 0, "doc": 167}, "NDNT.modules.layers.reslayers.IterLayer.num_iter": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.reslayers.IterLayer.LN_reverse": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.reslayers.IterLayer.output_config": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.reslayers.IterLayer.res_layer": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 84, "bases": 0, "doc": 158}, "NDNT.modules.layers.reslayers.IterLayer.forward": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 38}, "NDNT.modules.layers.reslayers.IterTlayer": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 107}, "NDNT.modules.layers.reslayers.IterTlayer.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 112, "bases": 0, "doc": 135}, "NDNT.modules.layers.reslayers.IterTlayer.num_iter": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.reslayers.IterTlayer.output_config": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.reslayers.IterTlayer.res_layer": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.reslayers.IterTlayer.num_outputs": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 84, "bases": 0, "doc": 153}, "NDNT.modules.layers.reslayers.IterTlayer.forward": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 38}, "NDNT.modules.layers.reslayers.IterSTlayer": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 107}, "NDNT.modules.layers.reslayers.IterSTlayer.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 112, "bases": 0, "doc": 135}, "NDNT.modules.layers.reslayers.IterSTlayer.num_iter": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.reslayers.IterSTlayer.output_config": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.reslayers.IterSTlayer.res_layer": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.reslayers.IterSTlayer.num_outputs": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 84, "bases": 0, "doc": 153}, "NDNT.modules.layers.reslayers.IterSTlayer.forward": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 38}, "NDNT.modules.layers.specialtylayers": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.specialtylayers.Tlayer": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 93}, "NDNT.modules.layers.specialtylayers.Tlayer.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 85, "bases": 0, "doc": 111}, "NDNT.modules.layers.specialtylayers.Tlayer.tent_basis": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.specialtylayers.Tlayer.res_layer": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.specialtylayers.Tlayer.folded_dims": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.specialtylayers.Tlayer.forward": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 38}, "NDNT.modules.layers.specialtylayers.Tlayer.plot_filters": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 58, "bases": 0, "doc": 81}, "NDNT.modules.layers.specialtylayers.Tlayer.layer_dict": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 40, "bases": 0, "doc": 52}, "NDNT.modules.layers.specialtylayers.L1convLayer": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 18}, "NDNT.modules.layers.specialtylayers.L1convLayer.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 37}, "NDNT.modules.layers.specialtylayers.L1convLayer.weight_minus": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.specialtylayers.L1convLayer.window": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.specialtylayers.L1convLayer.tent_basis": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.specialtylayers.L1convLayer.preprocess_weights": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 21}, "NDNT.modules.layers.specialtylayers.L1convLayer.reset_parameters2": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 50, "bases": 0, "doc": 63}, "NDNT.modules.layers.specialtylayers.L1convLayer.layer_dict": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 52}, "NDNT.modules.layers.specialtylayers.OnOffLayer": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 11}, "NDNT.modules.layers.specialtylayers.OnOffLayer.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 85, "bases": 0, "doc": 68}, "NDNT.modules.layers.specialtylayers.OnOffLayer.plot_filters": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 52}, "NDNT.modules.layers.specialtylayers.OnOffLayer.forward": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 38}, "NDNT.modules.layers.specialtylayers.OnOffLayer.layer_dict": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 98}, "NDNT.modules.layers.specialtylayers.MaskLayer": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 12}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 227, "bases": 0, "doc": 185}, "NDNT.modules.layers.specialtylayers.MaskLayer.preprocess_weights": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 21}, "NDNT.modules.layers.specialtylayers.MaskLayer.layer_dict": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 28, "bases": 0, "doc": 98}, "NDNT.modules.layers.timelayers": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.timelayers.TimeLayer": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 12}, "NDNT.modules.layers.timelayers.TimeLayer.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 96, "bases": 0, "doc": 121}, "NDNT.modules.layers.timelayers.TimeLayer.output_dims": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.timelayers.TimeLayer.num_outputs": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.layers.timelayers.TimeLayer.forward": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 38}, "NDNT.modules.regularization": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.regularization.Regularization": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 171}, "NDNT.modules.regularization.Regularization.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 82, "bases": 0, "doc": 204}, "NDNT.modules.regularization.Regularization.input_dims": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.regularization.Regularization.vals": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.regularization.Regularization.reg_modules": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.regularization.Regularization.normalize": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.regularization.Regularization.unit_reg": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.regularization.Regularization.folded_lags": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.regularization.Regularization.num_outputs": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.regularization.Regularization.pos_constraint": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.regularization.Regularization.boundary_conditions": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.regularization.Regularization.activity_regmodule": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.regularization.Regularization.set_reg_val": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 28, "bases": 0, "doc": 122}, "NDNT.modules.regularization.Regularization.unit_reg_convert": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 33, "bases": 0, "doc": 17}, "NDNT.modules.regularization.Regularization.build_reg_modules": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 12}, "NDNT.modules.regularization.Regularization.compute_reg_loss": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "NDNT.modules.regularization.Regularization.compute_activity_regularization": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 3}, "NDNT.modules.regularization.Regularization.reg_copy": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 7}, "NDNT.modules.regularization.Regularization.get_reg_class": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 3}, "NDNT.modules.regularization.RegModule": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 7}, "NDNT.modules.regularization.RegModule.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 96, "bases": 0, "doc": 7}, "NDNT.modules.regularization.RegModule.reg_type": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.regularization.RegModule.unit_reg": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.regularization.RegModule.input_dims": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.regularization.RegModule.num_dims": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.regularization.RegModule.folded_lags": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.regularization.RegModule.pos_constraint": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.regularization.RegModule.forward": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 67}, "NDNT.modules.regularization.LocalityReg": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 10}, "NDNT.modules.regularization.LocalityReg.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 6}, "NDNT.modules.regularization.LocalityReg.compute_reg_penalty": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 7}, "NDNT.modules.regularization.LocalityReg.build_reg_mats": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "NDNT.modules.regularization.DiagonalReg": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 7}, "NDNT.modules.regularization.DiagonalReg.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 44, "bases": 0, "doc": 7}, "NDNT.modules.regularization.DiagonalReg.input_dims": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.regularization.DiagonalReg.compute_reg_penalty": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 5}, "NDNT.modules.regularization.DiagonalReg.build_reg_mats": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 3}, "NDNT.modules.regularization.InlineReg": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 7}, "NDNT.modules.regularization.InlineReg.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 44, "bases": 0, "doc": 7}, "NDNT.modules.regularization.InlineReg.compute_reg_penalty": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 9}, "NDNT.modules.regularization.ConvReg": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 7}, "NDNT.modules.regularization.ConvReg.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 7}, "NDNT.modules.regularization.ConvReg.BC": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.regularization.ConvReg.compute_reg_penalty": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 68}, "NDNT.modules.regularization.Tikhanov": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 7}, "NDNT.modules.regularization.Tikhanov.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 6}, "NDNT.modules.regularization.Tikhanov.input_dims": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.regularization.Tikhanov.compute_reg_penalty": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 9}, "NDNT.modules.regularization.TikhanovC": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 17}, "NDNT.modules.regularization.TikhanovC.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 6}, "NDNT.modules.regularization.TikhanovC.input_dims": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.regularization.TikhanovC.collapse_dims": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.regularization.TikhanovC.compute_reg_penalty": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 9}, "NDNT.modules.regularization.ActivityReg": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 23}, "NDNT.modules.regularization.ActivityReg.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 6}, "NDNT.modules.regularization.ActivityReg.acitivity_penalty": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.modules.regularization.ActivityReg.compute_activity_penalty": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 11}, "NDNT.modules.regularization.ActivityReg.compute_reg_penalty": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 7}, "NDNT.networks": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.networks.LayerTypes": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 380, "signature": 0, "bases": 0, "doc": 3}, "NDNT.networks.FFnetwork": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 181}, "NDNT.networks.FFnetwork.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 154, "bases": 0, "doc": 14}, "NDNT.networks.FFnetwork.network_type": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.networks.FFnetwork.layer_list": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.networks.FFnetwork.layer_types": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.networks.FFnetwork.xstim_n": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.networks.FFnetwork.ffnets_in": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.networks.FFnetwork.layers": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.networks.FFnetwork.output_dims": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.networks.FFnetwork.num_outputs": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.networks.FFnetwork.determine_input_dims": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 33, "bases": 0, "doc": 177}, "NDNT.networks.FFnetwork.preprocess_input": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 64}, "NDNT.networks.FFnetwork.forward": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 49}, "NDNT.networks.FFnetwork.prepare_regularization": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 47}, "NDNT.networks.FFnetwork.compute_reg_loss": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 34}, "NDNT.networks.FFnetwork.list_parameters": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 65}, "NDNT.networks.FFnetwork.set_parameters": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 42, "bases": 0, "doc": 98}, "NDNT.networks.FFnetwork.set_reg_val": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 44, "bases": 0, "doc": 100}, "NDNT.networks.FFnetwork.plot_filters": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 56}, "NDNT.networks.FFnetwork.get_weights": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 79}, "NDNT.networks.FFnetwork.ffnet_dict": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 101, "bases": 0, "doc": 138}, "NDNT.networks.ScaffoldNetwork": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 112}, "NDNT.networks.ScaffoldNetwork.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 14}, "NDNT.networks.ScaffoldNetwork.network_type": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.networks.ScaffoldNetwork.num_lags_out": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.networks.ScaffoldNetwork.spatial_dims": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.networks.ScaffoldNetwork.filter_count": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.networks.ScaffoldNetwork.forward": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 67}, "NDNT.networks.ScaffoldNetwork.ffnet_dict": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 41, "bases": 0, "doc": 94}, "NDNT.networks.ScaffoldNetwork3d": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 95}, "NDNT.networks.ScaffoldNetwork3d.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 23, "bases": 0, "doc": 14}, "NDNT.networks.ScaffoldNetwork3d.network_type": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.networks.ScaffoldNetwork3d.num_lags_out": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.networks.ScaffoldNetwork3d.forward": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 67}, "NDNT.networks.ScaffoldNetwork3d.ffnet_dict": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 46}, "NDNT.networks.ReadoutNetwork": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 323}, "NDNT.networks.ReadoutNetwork.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 14}, "NDNT.networks.ReadoutNetwork.network_type": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.networks.ReadoutNetwork.determine_input_dims": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 171}, "NDNT.networks.ReadoutNetwork.forward": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 58}, "NDNT.networks.ReadoutNetwork.get_readout_locations": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 30}, "NDNT.networks.ReadoutNetwork.set_readout_locations": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 33}, "NDNT.networks.ReadoutNetwork.ffnet_dict": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 49}, "NDNT.networks.FFnet_external": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 122}, "NDNT.networks.FFnet_external.__init__": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 51, "bases": 0, "doc": 14}, "NDNT.networks.FFnet_external.network_type": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.networks.FFnet_external.input_dims_reshape": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.networks.FFnet_external.forward": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 67}, "NDNT.networks.FFnet_external.compute_reg_loss": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 27}, "NDNT.networks.FFnet_external.list_params": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 65}, "NDNT.networks.FFnet_external.set_params": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 42, "bases": 0, "doc": 98}, "NDNT.networks.FFnet_external.ffnet_dict": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 46}, "NDNT.training": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.training.ada_hessian": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.training.ada_hessian.AdaHessian": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 193}, "NDNT.training.ada_hessian.AdaHessian.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 122, "bases": 0, "doc": 3}, "NDNT.training.ada_hessian.AdaHessian.n_samples": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.training.ada_hessian.AdaHessian.update_each": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.training.ada_hessian.AdaHessian.average_conv_kernel": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.training.ada_hessian.AdaHessian.generator": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.training.ada_hessian.AdaHessian.get_params": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 30}, "NDNT.training.ada_hessian.AdaHessian.zero_hessian": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 9}, "NDNT.training.ada_hessian.AdaHessian.set_hessian": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 18}, "NDNT.training.ada_hessian.AdaHessian.step": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 36}, "NDNT.training.earlystopping": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.training.earlystopping.EarlyStopping": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 99}, "NDNT.training.earlystopping.EarlyStopping.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 65, "bases": 0, "doc": 3}, "NDNT.training.earlystopping.EarlyStopping.patience": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.training.earlystopping.EarlyStopping.verbose": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.training.earlystopping.EarlyStopping.counter": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.training.earlystopping.EarlyStopping.best_score": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.training.earlystopping.EarlyStopping.early_stop": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.training.earlystopping.EarlyStopping.val_loss_min": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.training.earlystopping.EarlyStopping.delta": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.training.earlystopping.EarlyStopping.trace_func": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.training.lbfgs": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.training.lbfgs.is_legal": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 29}, "NDNT.training.lbfgs.polyinterp": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 45, "bases": 0, "doc": 175}, "NDNT.training.lbfgs.LBFGS": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 379}, "NDNT.training.lbfgs.LBFGS.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 77, "bases": 0, "doc": 3}, "NDNT.training.lbfgs.LBFGS.line_search": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 50}, "NDNT.training.lbfgs.LBFGS.two_loop_recursion": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 52}, "NDNT.training.lbfgs.LBFGS.curvature_update": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 38, "bases": 0, "doc": 68}, "NDNT.training.lbfgs.LBFGS.step": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 44, "bases": 0, "doc": 63}, "NDNT.training.lbfgs.FullBatchLBFGS": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 176}, "NDNT.training.lbfgs.FullBatchLBFGS.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 76, "bases": 0, "doc": 3}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 539}, "NDNT.training.lbfgsnew": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.training.lbfgsnew.be_verbose": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "NDNT.training.lbfgsnew.LBFGSNew": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 344}, "NDNT.training.lbfgsnew.LBFGSNew.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 108, "bases": 0, "doc": 3}, "NDNT.training.lbfgsnew.LBFGSNew.step": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 33}, "NDNT.training.trainer": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.training.trainer.Trainer": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 28}, "NDNT.training.trainer.Trainer.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 185, "bases": 0, "doc": 147}, "NDNT.training.trainer.Trainer.optimizer": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.training.trainer.Trainer.scheduler": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.training.trainer.Trainer.optimize_graph": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.training.trainer.Trainer.log_activations": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.training.trainer.Trainer.accumulate_grad_batches": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.training.trainer.Trainer.verbose": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.training.trainer.Trainer.set_to_none": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.training.trainer.Trainer.fullbatch": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.training.trainer.Trainer.dirpath": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.training.trainer.Trainer.early_stopping": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.training.trainer.Trainer.device": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.training.trainer.Trainer.logger": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.training.trainer.Trainer.version": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.training.trainer.Trainer.epoch": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.training.trainer.Trainer.max_epochs": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.training.trainer.Trainer.n_iter": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.training.trainer.Trainer.val_loss_min": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.training.trainer.Trainer.step_scheduler_after": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.training.trainer.Trainer.step_scheduler_metric": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.training.trainer.Trainer.fit": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 38, "bases": 0, "doc": 78}, "NDNT.training.trainer.Trainer.prepare_fit": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 79}, "NDNT.training.trainer.Trainer.fit_loop": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 33, "bases": 0, "doc": 83}, "NDNT.training.trainer.Trainer.validate_one_epoch": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 55}, "NDNT.training.trainer.Trainer.train_one_epoch": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 32, "bases": 0, "doc": 65}, "NDNT.training.trainer.Trainer.train_one_step": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 32, "bases": 0, "doc": 66}, "NDNT.training.trainer.Trainer.checkpoint_model": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 37, "bases": 0, "doc": 66}, "NDNT.training.trainer.Trainer.graceful_exit": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 53}, "NDNT.training.trainer.LBFGSTrainer": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 18}, "NDNT.training.trainer.LBFGSTrainer.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 22}, "NDNT.training.trainer.LBFGSTrainer.fullbatch": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.training.trainer.LBFGSTrainer.fit": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 43, "bases": 0, "doc": 78}, "NDNT.training.trainer.LBFGSTrainer.fit_data_dict": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 57}, "NDNT.training.trainer.LBFGSTrainer.train_one_epoch": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 32, "bases": 0, "doc": 65}, "NDNT.training.trainer.TemperatureCalibratedTrainer": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 17}, "NDNT.training.trainer.TemperatureCalibratedTrainer.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 10}, "NDNT.training.trainer.TemperatureCalibratedTrainer.validate_one_epoch": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 56}, "NDNT.utils": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.utils.DanUtils": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.utils.DanUtils.subplot_setup": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 50, "bases": 0, "doc": 3}, "NDNT.utils.DanUtils.ss": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 60, "bases": 0, "doc": 3}, "NDNT.utils.DanUtils.imagesc": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 90, "bases": 0, "doc": 10}, "NDNT.utils.DanUtils.find_peaks": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 43, "bases": 0, "doc": 19}, "NDNT.utils.DanUtils.filename_num2str": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 3}, "NDNT.utils.DanUtils.display_matrix": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 53, "bases": 0, "doc": 3}, "NDNT.utils.DanUtils.figure_export": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 37, "bases": 0, "doc": 27}, "NDNT.utils.DanUtils.matlab_export": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 9}, "NDNT.utils.DanUtils.save_python_data": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "NDNT.utils.DanUtils.load_python_data": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 3}, "NDNT.utils.DanUtils.fold_sample": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 44, "bases": 0, "doc": 24}, "NDNT.utils.DanUtils.time_embedding_simple": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 25}, "NDNT.utils.DanUtils.design_matrix_drift": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 66, "bases": 0, "doc": 141}, "NDNT.utils.DanUtils.max_multiD": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "NDNT.utils.DanUtils.iterate_lbfgs": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 84, "bases": 0, "doc": 3}, "NDNT.utils.DanUtils.binocular_data_import": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 157}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 23, "bases": 0, "doc": 296}, "NDNT.utils.DanUtils.monocular_data_import": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 38, "bases": 0, "doc": 47}, "NDNT.utils.MattUtils": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.utils.MattUtils.load_losses": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 12, "bases": 0, "doc": 3}, "NDNT.utils.MattUtils.smooth_ema": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 41, "bases": 0, "doc": 14}, "NDNT.utils.MattUtils.smooth_conv": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "NDNT.utils.MattUtils.plot_losses": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 44, "bases": 0, "doc": 3}, "NDNT.utils.NDNutils": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.utils.NDNutils.fit_lbfgs": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 141, "bases": 0, "doc": 26}, "NDNT.utils.NDNutils.create_optimizer_params": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 294, "bases": 0, "doc": 3}, "NDNT.utils.NDNutils.CPU_Unpickler": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 202}, "NDNT.utils.NDNutils.CPU_Unpickler.find_class": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 57}, "NDNT.utils.NDNutils.default_save_dir": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 3}, "NDNT.utils.NDNutils.create_time_embedding": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 39, "bases": 0, "doc": 166}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 38, "bases": 0, "doc": 191}, "NDNT.utils.NDNutils.is_int": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 15}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 38, "bases": 0, "doc": 145}, "NDNT.utils.NDNutils.tent_basis_generate": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 65, "bases": 0, "doc": 72}, "NDNT.utils.NDNutils.shift_mat_zpad": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 73}, "NDNT.utils.NDNutils.generate_xv_folds": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 44, "bases": 0, "doc": 58}, "NDNT.utils.NDNutils.initialize_gaussian_envelope": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 32}, "NDNT.utils.NDNutils.pixel2grid": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 19}, "NDNT.utils.NDNutils.grid2pixel": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 43, "bases": 0, "doc": 3}, "NDNT.utils.NDNutils.save_checkpoint": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 58, "bases": 0, "doc": 98}, "NDNT.utils.NDNutils.load_checkpoint": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 41, "bases": 0, "doc": 76}, "NDNT.utils.NDNutils.ensure_dir": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 18}, "NDNT.utils.NDNutils.ModelSummary": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 81, "bases": 0, "doc": 3}, "NDNT.utils.NDNutils.summary_string": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 81, "bases": 0, "doc": 3}, "NDNT.utils.NDNutils.get_fit_versions": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 37}, "NDNT.utils.NDNutils.load_model": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 46, "bases": 0, "doc": 3}, "NDNT.utils.NDNutils.get_max_samples": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 65, "bases": 0, "doc": 96}, "NDNT.utils.NDNutils.NpEncoder": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 141}, "NDNT.utils.NDNutils.NpEncoder.default": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 81}, "NDNT.utils.create_reg_matrices": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 275}, "NDNT.utils.create_reg_matrices.create_maxpenalty_matrix": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 135}, "NDNT.utils.create_reg_matrices.create_localpenalty_matrix": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 33, "bases": 0, "doc": 135}, "NDNT.utils.ffnet_dicts": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.utils.ffnet_dicts.layer_dict": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 138, "bases": 0, "doc": 11}, "NDNT.utils.ffnet_dicts.ffnet_params_default": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 39, "bases": 0, "doc": 128}, "NDNT.utils.ffnet_dicts.ffnet_dict_NIM": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 146, "bases": 0, "doc": 26}, "NDNT.utils.ffnet_dicts.ffnet_dict_readout": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 147, "bases": 0, "doc": 36}, "NDNT.utils.ffnet_dicts.ffnet_dict_external": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 86, "bases": 0, "doc": 127}, "NDNT.utils.ffnet_dicts.list_complete": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 32, "bases": 0, "doc": 3}, "NDNT.utils.plotting": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.utils.plotting.plot_filters_1D": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 51, "bases": 0, "doc": 20}, "NDNT.utils.plotting.plot_filters_2D": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 71, "bases": 0, "doc": 20}, "NDNT.utils.plotting.plot_filters_ST1D": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 71, "bases": 0, "doc": 20}, "NDNT.utils.plotting.plot_filters_ST2D": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 28, "bases": 0, "doc": 12}, "NDNT.utils.plotting.plot_filters_ST3D": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 28, "bases": 0, "doc": 3}, "NDNT.utils.plotting.plot_scatter": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 30, "bases": 0, "doc": 3}, "NDNT.utils.plotting.plot_internal_weights": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 3}, "NDNT.version": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.version.version": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 7, "signature": 0, "bases": 0, "doc": 3}, "NDNT.metrics": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.metrics.mse_loss": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.metrics.mse_loss.MseLoss_datafilter": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 131}, "NDNT.metrics.mse_loss.MseLoss_datafilter.__init__": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 14}, "NDNT.metrics.mse_loss.MseLoss_datafilter.loss_name": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.metrics.mse_loss.MseLoss_datafilter.loss": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.metrics.mse_loss.MseLoss_datafilter.lossNR": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.metrics.mse_loss.MseLoss_datafilter.unit_weighting": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.metrics.mse_loss.MseLoss_datafilter.batch_weighting": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"qualname": 5, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 61, "bases": 0, "doc": 146}, "NDNT.metrics.mse_loss.MseLoss_datafilter.forward": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 32, "bases": 0, "doc": 78}, "NDNT.metrics.mse_loss.MseLoss_datafilter.unit_loss": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 43, "bases": 0, "doc": 71}, "NDNT.metrics.poisson_loss": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 130}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.__init__": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 14}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.loss_name": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.loss": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.lossNR": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.unit_weighting": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.batch_weighting": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_log_epsilon": {"qualname": 5, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 59}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"qualname": 5, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 61, "bases": 0, "doc": 173}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.forward": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 32, "bases": 0, "doc": 95}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.unit_loss": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 43, "bases": 0, "doc": 94}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 138}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 14}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.loss_name": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.loss": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.lossNR": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.unit_weighting": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.batch_weighting": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 61, "bases": 0, "doc": 173}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.forward": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 32, "bases": 0, "doc": 95}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.unit_loss": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 43, "bases": 0, "doc": 94}, "NDNT.metrics.rmse_loss": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.metrics.rmse_loss.RmseLoss": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 130}, "NDNT.metrics.rmse_loss.RmseLoss.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 14}, "NDNT.metrics.rmse_loss.RmseLoss.loss_name": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.metrics.rmse_loss.RmseLoss.loss": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.metrics.rmse_loss.RmseLoss.lossNR": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.metrics.rmse_loss.RmseLoss.unit_weighting": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.metrics.rmse_loss.RmseLoss.batch_weighting": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 61, "bases": 0, "doc": 166}, "NDNT.metrics.rmse_loss.RmseLoss.forward": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 32, "bases": 0, "doc": 96}, "NDNT.metrics.rmse_loss.RmseLoss.unit_loss": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 43, "bases": 0, "doc": 93}}, "length": 674, "save": true}, "index": {"qualname": {"root": {"1": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.utils.plotting.plot_filters_1D": {"tf": 1}}, "df": 1}}, "2": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.utils.plotting.plot_filters_2D": {"tf": 1}}, "df": 1}}, "docs": {"NDNT.NDN.NDN.__init__": {"tf": 1}, "NDNT.modules.activations.Square.__init__": {"tf": 1}, "NDNT.modules.activations.AdaptiveELU.__init__": {"tf": 1}, "NDNT.modules.activity_regularization.ActivityRegularization.__init__": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchGenerator.__init__": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchIterator.__init__": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.__init__": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.__init__": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.__init__": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.__init__": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.__init__": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.__init__": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.__init__": {"tf": 1}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1}, "NDNT.modules.regularization.RegModule.__init__": {"tf": 1}, "NDNT.modules.regularization.LocalityReg.__init__": {"tf": 1}, "NDNT.modules.regularization.DiagonalReg.__init__": {"tf": 1}, "NDNT.modules.regularization.InlineReg.__init__": {"tf": 1}, "NDNT.modules.regularization.ConvReg.__init__": {"tf": 1}, "NDNT.modules.regularization.Tikhanov.__init__": {"tf": 1}, "NDNT.modules.regularization.TikhanovC.__init__": {"tf": 1}, "NDNT.modules.regularization.ActivityReg.__init__": {"tf": 1}, "NDNT.networks.FFnetwork.__init__": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.__init__": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d.__init__": {"tf": 1}, "NDNT.networks.ReadoutNetwork.__init__": {"tf": 1}, "NDNT.networks.FFnet_external.__init__": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.__init__": {"tf": 1}, "NDNT.training.earlystopping.EarlyStopping.__init__": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.__init__": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.__init__": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew.__init__": {"tf": 1}, "NDNT.training.trainer.Trainer.__init__": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.__init__": {"tf": 1}, "NDNT.training.trainer.TemperatureCalibratedTrainer.__init__": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.__init__": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.__init__": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.__init__": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.__init__": {"tf": 1}}, "df": 64, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.NDN.NDN.ffnet_out": {"tf": 1}, "NDNT.NDN.NDN.ffnet_list": {"tf": 1}, "NDNT.networks.FFnetwork.ffnet_dict": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.ffnet_dict": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d.ffnet_dict": {"tf": 1}, "NDNT.networks.ReadoutNetwork.ffnet_dict": {"tf": 1}, "NDNT.networks.FFnet_external": {"tf": 1}, "NDNT.networks.FFnet_external.__init__": {"tf": 1}, "NDNT.networks.FFnet_external.network_type": {"tf": 1}, "NDNT.networks.FFnet_external.input_dims_reshape": {"tf": 1}, "NDNT.networks.FFnet_external.forward": {"tf": 1}, "NDNT.networks.FFnet_external.compute_reg_loss": {"tf": 1}, "NDNT.networks.FFnet_external.list_params": {"tf": 1}, "NDNT.networks.FFnet_external.set_params": {"tf": 1}, "NDNT.networks.FFnet_external.ffnet_dict": {"tf": 1.4142135623730951}, "NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_NIM": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_readout": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_external": {"tf": 1}}, "df": 19, "s": {"docs": {"NDNT.NDN.FFnets": {"tf": 1}, "NDNT.networks.FFnetwork.ffnets_in": {"tf": 1}}, "df": 2}, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"NDNT.networks.FFnetwork": {"tf": 1}, "NDNT.networks.FFnetwork.__init__": {"tf": 1}, "NDNT.networks.FFnetwork.network_type": {"tf": 1}, "NDNT.networks.FFnetwork.layer_list": {"tf": 1}, "NDNT.networks.FFnetwork.layer_types": {"tf": 1}, "NDNT.networks.FFnetwork.xstim_n": {"tf": 1}, "NDNT.networks.FFnetwork.ffnets_in": {"tf": 1}, "NDNT.networks.FFnetwork.layers": {"tf": 1}, "NDNT.networks.FFnetwork.output_dims": {"tf": 1}, "NDNT.networks.FFnetwork.num_outputs": {"tf": 1}, "NDNT.networks.FFnetwork.determine_input_dims": {"tf": 1}, "NDNT.networks.FFnetwork.preprocess_input": {"tf": 1}, "NDNT.networks.FFnetwork.forward": {"tf": 1}, "NDNT.networks.FFnetwork.prepare_regularization": {"tf": 1}, "NDNT.networks.FFnetwork.compute_reg_loss": {"tf": 1}, "NDNT.networks.FFnetwork.list_parameters": {"tf": 1}, "NDNT.networks.FFnetwork.set_parameters": {"tf": 1}, "NDNT.networks.FFnetwork.set_reg_val": {"tf": 1}, "NDNT.networks.FFnetwork.plot_filters": {"tf": 1}, "NDNT.networks.FFnetwork.get_weights": {"tf": 1}, "NDNT.networks.FFnetwork.ffnet_dict": {"tf": 1}}, "df": 21, "s": {"docs": {"NDNT.NDN.NDN.assemble_ffnetworks": {"tf": 1}}, "df": 1}}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.NDN.NDN.speckled_flag": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.NDN.NDN.forward": {"tf": 1}, "NDNT.modules.activations.Square.forward": {"tf": 1}, "NDNT.modules.activations.AdaptiveELU.forward": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D.forward": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.forward": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.forward": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.forward": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.forward": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.forward": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.forward": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.forward": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.forward": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.forward": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.forward": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.forward": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.forward": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.forward": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.forward": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.forward": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.forward": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.forward": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.forward": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.forward": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.forward": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.forward": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.forward": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.forward": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.forward": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.forward": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.forward": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.forward": {"tf": 1}, "NDNT.modules.regularization.RegModule.forward": {"tf": 1}, "NDNT.networks.FFnetwork.forward": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.forward": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d.forward": {"tf": 1}, "NDNT.networks.ReadoutNetwork.forward": {"tf": 1}, "NDNT.networks.FFnet_external.forward": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.forward": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.forward": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.forward": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.forward": {"tf": 1}}, "df": 41}}}}}, "l": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.utils.DanUtils.fold_sample": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.modules.layers.bilayers.ChannelConvLayer.weights_folded_dims": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.folded_dims": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.num_folded_dims": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.folded_dims": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.folded_dims": {"tf": 1}, "NDNT.modules.regularization.Regularization.folded_lags": {"tf": 1}, "NDNT.modules.regularization.RegModule.folded_lags": {"tf": 1}}, "df": 7}}, "s": {"docs": {"NDNT.utils.NDNutils.generate_xv_folds": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.NDN.NDN.fit": {"tf": 1}, "NDNT.NDN.NDN.fit_dl": {"tf": 1}, "NDNT.training.trainer.Trainer.fit": {"tf": 1}, "NDNT.training.trainer.Trainer.prepare_fit": {"tf": 1}, "NDNT.training.trainer.Trainer.fit_loop": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.fit": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.fit_data_dict": {"tf": 1}, "NDNT.utils.NDNutils.fit_lbfgs": {"tf": 1}, "NDNT.utils.NDNutils.get_fit_versions": {"tf": 1}}, "df": 9}, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.layers.convlayers.ConvLayer.filter_dims": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.filter_dims": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.filter_dims": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.filter_count": {"tf": 1}}, "df": 4, "s": {"docs": {"NDNT.NDN.NDN.plot_filters": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.num_filters": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.num_filters": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.plot_filters": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.plot_filters": {"tf": 1}, "NDNT.networks.FFnetwork.plot_filters": {"tf": 1}, "NDNT.utils.plotting.plot_filters_1D": {"tf": 1}, "NDNT.utils.plotting.plot_filters_2D": {"tf": 1}, "NDNT.utils.plotting.plot_filters_ST1D": {"tf": 1}, "NDNT.utils.plotting.plot_filters_ST2D": {"tf": 1}, "NDNT.utils.plotting.plot_filters_ST3D": {"tf": 1}}, "df": 16}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.utils.DanUtils.filename_num2str": {"tf": 1}}, "df": 1}}}}}}, "x": {"docs": {"NDNT.modules.layers.readouts.FixationLayer.fix_n_index": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.layers.readouts.FixationLayer": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.num_spatial_dims": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.num_fixations": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.batch_sample": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.init_sigma": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.single_sigma": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.fix_n_index": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.sample": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.forward": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.initialize": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 1}}, "df": 12}}}}}, "s": {"docs": {"NDNT.modules.layers.readouts.FixationLayer.num_fixations": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.utils.DanUtils.find_peaks": {"tf": 1}, "NDNT.utils.NDNutils.CPU_Unpickler.find_class": {"tf": 1}}, "df": 2}}, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.utils.DanUtils.figure_export": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer.features": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"NDNT.training.earlystopping.EarlyStopping.trace_func": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"NDNT.training.trainer.Trainer.fullbatch": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.fullbatch": {"tf": 1}}, "df": 2, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.__init__": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}, "n": {"docs": {"NDNT.modules.layers.readouts.FixationLayer.fix_n_index": {"tf": 1}, "NDNT.networks.FFnetwork.xstim_n": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.n_samples": {"tf": 1}, "NDNT.training.trainer.Trainer.n_iter": {"tf": 1}}, "df": 4, "d": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.NDN.NDN": {"tf": 1}, "NDNT.NDN.NDN.__init__": {"tf": 1}, "NDNT.NDN.NDN.loss_type": {"tf": 1}, "NDNT.NDN.NDN.ffnet_out": {"tf": 1}, "NDNT.NDN.NDN.seed": {"tf": 1}, "NDNT.NDN.NDN.ffnet_list": {"tf": 1}, "NDNT.NDN.NDN.working_dir": {"tf": 1}, "NDNT.NDN.NDN.loss": {"tf": 1}, "NDNT.NDN.NDN.val_loss": {"tf": 1}, "NDNT.NDN.NDN.trainer": {"tf": 1}, "NDNT.NDN.NDN.block_sample": {"tf": 1}, "NDNT.NDN.NDN.networks": {"tf": 1}, "NDNT.NDN.NDN.opt_params": {"tf": 1}, "NDNT.NDN.NDN.speckled_flag": {"tf": 1}, "NDNT.NDN.NDN.assemble_ffnetworks": {"tf": 1}, "NDNT.NDN.NDN.compute_network_outputs": {"tf": 1}, "NDNT.NDN.NDN.forward": {"tf": 1}, "NDNT.NDN.NDN.training_step": {"tf": 1}, "NDNT.NDN.NDN.validation_step": {"tf": 1}, "NDNT.NDN.NDN.compute_reg_loss": {"tf": 1}, "NDNT.NDN.NDN.get_trainer": {"tf": 1}, "NDNT.NDN.NDN.get_dataloaders": {"tf": 1}, "NDNT.NDN.NDN.get_optimizer": {"tf": 1}, "NDNT.NDN.NDN.prepare_regularization": {"tf": 1}, "NDNT.NDN.NDN.fit": {"tf": 1}, "NDNT.NDN.NDN.fit_dl": {"tf": 1}, "NDNT.NDN.NDN.initialize_loss": {"tf": 1}, "NDNT.NDN.NDN.compute_average_responses": {"tf": 1}, "NDNT.NDN.NDN.initialize_biases": {"tf": 1}, "NDNT.NDN.NDN.eval_models": {"tf": 1}, "NDNT.NDN.NDN.generate_predictions": {"tf": 1}, "NDNT.NDN.NDN.change_loss": {"tf": 1}, "NDNT.NDN.NDN.get_weights": {"tf": 1}, "NDNT.NDN.NDN.get_readout_locations": {"tf": 1}, "NDNT.NDN.NDN.passive_readout": {"tf": 1}, "NDNT.NDN.NDN.list_parameters": {"tf": 1}, "NDNT.NDN.NDN.set_parameters": {"tf": 1}, "NDNT.NDN.NDN.set_reg_val": {"tf": 1}, "NDNT.NDN.NDN.plot_filters": {"tf": 1}, "NDNT.NDN.NDN.save_model_zip": {"tf": 1}, "NDNT.NDN.NDN.load_model_zip": {"tf": 1}, "NDNT.NDN.NDN.save_model": {"tf": 1}, "NDNT.NDN.NDN.save_model_chk": {"tf": 1}, "NDNT.NDN.NDN.get_null_adjusted_ll": {"tf": 1}, "NDNT.NDN.NDN.get_activations": {"tf": 1}, "NDNT.NDN.NDN.device": {"tf": 1}, "NDNT.NDN.NDN.load_model": {"tf": 1}, "NDNT.NDN.NDN.load_model_chk": {"tf": 1}, "NDNT.NDN.NDN.model_string": {"tf": 1}}, "df": 49, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.input_dims": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.num_filters": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.output_dims": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.norm_type": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.pos_constraint": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.conv": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.NL": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.shape": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.weight_scale": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.weight": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.reg": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.num_inh": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.reset_parameters": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.initialize_gaussian_envelope": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.forward": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.compute_reg_loss": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.get_weights": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.list_parameters": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.set_parameters": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.set_reg_val": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.dim_info": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}}, "df": 26}}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"NDNT.NDN.NDN.compute_network_outputs": {"tf": 1}, "NDNT.networks.FFnetwork.network_type": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.network_type": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d.network_type": {"tf": 1}, "NDNT.networks.ReadoutNetwork.network_type": {"tf": 1}, "NDNT.networks.FFnet_external.network_type": {"tf": 1}}, "df": 6, "s": {"docs": {"NDNT.NDN.NDN.networks": {"tf": 1}}, "df": 1}}}}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.modules.experiment_sampler.ExperimentBatchGenerator.next": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.NDN.NDN.get_null_adjusted_ll": {"tf": 1}}, "df": 1}}, "m": {"2": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.utils.DanUtils.filename_num2str": {"tf": 1}}, "df": 1}}}}, "docs": {"NDNT.modules.experiment_sampler.ExperimentSampler.num_exps": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.num_batches": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.num_outputs": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.num_lags": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.num_lags": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.num_outputs": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.num_other_dims": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.num_outputs": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.num_sp_dims": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.num_outputs": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.num_spt_dims": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.num_filters": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.num_lags": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.num_folded_dims": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.num_filters": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.num_inh": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.num_outputs": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.num_spatial_dims": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.num_fixations": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.num_iter": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.num_iter": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.num_outputs": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.num_iter": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.num_outputs": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.num_outputs": {"tf": 1}, "NDNT.modules.regularization.Regularization.num_outputs": {"tf": 1}, "NDNT.modules.regularization.RegModule.num_dims": {"tf": 1}, "NDNT.networks.FFnetwork.num_outputs": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.num_lags_out": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d.num_lags_out": {"tf": 1}}, "df": 30, "l": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.layers.lvlayers.LVLayerOLD.numLVs": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {"NDNT.modules.layers.ndnlayer.NDNLayer.NL": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.activations.NLtypes": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.modules.activity_regularization.ActivityRegularization.nonneg": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"NDNT.training.trainer.Trainer.set_to_none": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "m": {"docs": {"NDNT.modules.layers.ndnlayer.NDNLayer.norm_type": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.regularization.Regularization.normalize": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {"NDNT.modules.layers.lvlayers.LVLayerOLD.nt": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "m": {"docs": {"NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_NIM": {"tf": 1}}, "df": 2}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.utils.NDNutils.NpEncoder": {"tf": 1}, "NDNT.utils.NDNutils.NpEncoder.default": {"tf": 1}}, "df": 2}}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.metrics.mse_loss.MseLoss_datafilter.loss_name": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.loss_name": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.loss_name": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.loss_name": {"tf": 1}}, "df": 4}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.networks.FFnetwork.ffnets_in": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.NDN.NDN.__init__": {"tf": 1}, "NDNT.modules.activations.Square.__init__": {"tf": 1}, "NDNT.modules.activations.AdaptiveELU.__init__": {"tf": 1}, "NDNT.modules.activity_regularization.ActivityRegularization.__init__": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchGenerator.__init__": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchIterator.__init__": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.__init__": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.__init__": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.__init__": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.__init__": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.__init__": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.init_mu_range": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.init_sigma": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.__init__": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.__init__": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.init_mu_range": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.init_sigma": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.init_sigma": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.__init__": {"tf": 1}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1}, "NDNT.modules.regularization.RegModule.__init__": {"tf": 1}, "NDNT.modules.regularization.LocalityReg.__init__": {"tf": 1}, "NDNT.modules.regularization.DiagonalReg.__init__": {"tf": 1}, "NDNT.modules.regularization.InlineReg.__init__": {"tf": 1}, "NDNT.modules.regularization.ConvReg.__init__": {"tf": 1}, "NDNT.modules.regularization.Tikhanov.__init__": {"tf": 1}, "NDNT.modules.regularization.TikhanovC.__init__": {"tf": 1}, "NDNT.modules.regularization.ActivityReg.__init__": {"tf": 1}, "NDNT.networks.FFnetwork.__init__": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.__init__": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d.__init__": {"tf": 1}, "NDNT.networks.ReadoutNetwork.__init__": {"tf": 1}, "NDNT.networks.FFnet_external.__init__": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.__init__": {"tf": 1}, "NDNT.training.earlystopping.EarlyStopping.__init__": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.__init__": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.__init__": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew.__init__": {"tf": 1}, "NDNT.training.trainer.Trainer.__init__": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.__init__": {"tf": 1}, "NDNT.training.trainer.TemperatureCalibratedTrainer.__init__": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.__init__": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.__init__": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.__init__": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.__init__": {"tf": 1}}, "df": 69, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.NDN.NDN.initialize_loss": {"tf": 1}, "NDNT.NDN.NDN.initialize_biases": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.initialize_gaussian_envelope": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.initialize_spatial_mapping": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.initialize": {"tf": 1}, "NDNT.utils.NDNutils.initialize_gaussian_envelope": {"tf": 1}}, "df": 6}}}}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.activations.AdaptiveELU.inplace": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.modules.layers.externallayer.ExternalLayer.input_dims": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.input_dims": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.input_dims": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.input_dims": {"tf": 1}, "NDNT.modules.regularization.Regularization.input_dims": {"tf": 1}, "NDNT.modules.regularization.RegModule.input_dims": {"tf": 1}, "NDNT.modules.regularization.DiagonalReg.input_dims": {"tf": 1}, "NDNT.modules.regularization.Tikhanov.input_dims": {"tf": 1}, "NDNT.modules.regularization.TikhanovC.input_dims": {"tf": 1}, "NDNT.networks.FFnetwork.determine_input_dims": {"tf": 1}, "NDNT.networks.FFnetwork.preprocess_input": {"tf": 1}, "NDNT.networks.ReadoutNetwork.determine_input_dims": {"tf": 1}, "NDNT.networks.FFnet_external.input_dims_reshape": {"tf": 1}}, "df": 13}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"NDNT.modules.experiment_sampler.ExperimentBatchGenerator.current_batch_index": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.fix_n_index": {"tf": 1}}, "df": 2}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {"NDNT.modules.layers.dimlayers.Dim0Layer.dim_info": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.dim_info": {"tf": 1}}, "df": 2}}, "h": {"docs": {"NDNT.modules.layers.ndnlayer.NDNLayer.num_inh": {"tf": 1}}, "df": 1}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.modules.regularization.InlineReg": {"tf": 1}, "NDNT.modules.regularization.InlineReg.__init__": {"tf": 1}, "NDNT.modules.regularization.InlineReg.compute_reg_penalty": {"tf": 1}}, "df": 3}}}}}}}, "t": {"docs": {"NDNT.utils.NDNutils.is_int": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.utils.plotting.plot_internal_weights": {"tf": 1}}, "df": 1}}}}}}}, "s": {"1": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.modules.layers.convlayers.ConvLayer.is1D": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.is1D": {"tf": 1}}, "df": 2}}, "docs": {"NDNT.training.lbfgs.is_legal": {"tf": 1}, "NDNT.utils.NDNutils.is_int": {"tf": 1}}, "df": 2}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.layers.reslayers.IterLayer.num_iter": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.num_iter": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.num_iter": {"tf": 1}, "NDNT.training.trainer.Trainer.n_iter": {"tf": 1}}, "df": 4, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.layers.reslayers.IterLayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.num_iter": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.LN_reverse": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.output_config": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.res_layer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.forward": {"tf": 1}}, "df": 8}}}}}, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.layers.reslayers.IterTlayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.num_iter": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.output_config": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.res_layer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.num_outputs": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.forward": {"tf": 1}}, "df": 8}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.layers.reslayers.IterSTlayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.num_iter": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.output_config": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.res_layer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.num_outputs": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.forward": {"tf": 1}}, "df": 8}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.utils.DanUtils.iterate_lbfgs": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {"NDNT.utils.DanUtils.imagesc": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.utils.DanUtils.binocular_data_import": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}, "NDNT.utils.DanUtils.monocular_data_import": {"tf": 1}}, "df": 3}}}}}}, "l": {"1": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.layers.specialtylayers.L1convLayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.weight_minus": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.window": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.tent_basis": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.reset_parameters2": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.layer_dict": {"tf": 1}}, "df": 8}}}}}}}}}}, "docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.NDN.NDN.loss_type": {"tf": 1}, "NDNT.NDN.NDN.loss": {"tf": 1}, "NDNT.NDN.NDN.val_loss": {"tf": 1}, "NDNT.NDN.NDN.compute_reg_loss": {"tf": 1}, "NDNT.NDN.NDN.initialize_loss": {"tf": 1}, "NDNT.NDN.NDN.change_loss": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.compute_reg_loss": {"tf": 1}, "NDNT.modules.regularization.Regularization.compute_reg_loss": {"tf": 1}, "NDNT.networks.FFnetwork.compute_reg_loss": {"tf": 1}, "NDNT.networks.FFnet_external.compute_reg_loss": {"tf": 1}, "NDNT.training.earlystopping.EarlyStopping.val_loss_min": {"tf": 1}, "NDNT.training.trainer.Trainer.val_loss_min": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.loss_name": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.loss": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.loss_name": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.loss": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.loss_name": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.loss": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.unit_loss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.loss_name": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.loss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.unit_loss": {"tf": 1}}, "df": 28, "e": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.utils.MattUtils.load_losses": {"tf": 1}, "NDNT.utils.MattUtils.plot_losses": {"tf": 1}}, "df": 2}}, "n": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.metrics.mse_loss.MseLoss_datafilter.lossNR": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.lossNR": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.lossNR": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.lossNR": {"tf": 1}}, "df": 4}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.NDN.NDN.get_readout_locations": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.set_readout_locations": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.get_readout_locations": {"tf": 1}, "NDNT.networks.ReadoutNetwork.get_readout_locations": {"tf": 1}, "NDNT.networks.ReadoutNetwork.set_readout_locations": {"tf": 1}}, "df": 5}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.modules.regularization.LocalityReg": {"tf": 1}, "NDNT.modules.regularization.LocalityReg.__init__": {"tf": 1}, "NDNT.modules.regularization.LocalityReg.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.LocalityReg.build_reg_mats": {"tf": 1}}, "df": 4}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.utils.create_reg_matrices.create_localpenalty_matrix": {"tf": 1}}, "df": 1}}}}}}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.NDN.NDN.load_model_zip": {"tf": 1}, "NDNT.NDN.NDN.load_model": {"tf": 1}, "NDNT.NDN.NDN.load_model_chk": {"tf": 1}, "NDNT.utils.DanUtils.load_python_data": {"tf": 1}, "NDNT.utils.MattUtils.load_losses": {"tf": 1}, "NDNT.utils.NDNutils.load_checkpoint": {"tf": 1}, "NDNT.utils.NDNutils.load_model": {"tf": 1}}, "df": 7}}, "o": {"docs": {}, "df": 0, "p": {"docs": {"NDNT.training.lbfgs.LBFGS.two_loop_recursion": {"tf": 1}, "NDNT.training.trainer.Trainer.fit_loop": {"tf": 1}}, "df": 2}}, "g": {"docs": {"NDNT.training.trainer.Trainer.log_activations": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_log_epsilon": {"tf": 1}}, "df": 2, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.training.trainer.Trainer.logger": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.NDN.NDN.ffnet_list": {"tf": 1}, "NDNT.NDN.NDN.list_parameters": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.list_parameters": {"tf": 1}, "NDNT.networks.FFnetwork.layer_list": {"tf": 1}, "NDNT.networks.FFnetwork.list_parameters": {"tf": 1}, "NDNT.networks.FFnet_external.list_params": {"tf": 1}, "NDNT.utils.ffnet_dicts.list_complete": {"tf": 1}}, "df": 7}}, "n": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.training.lbfgs.LBFGS.line_search": {"tf": 1}}, "df": 1}}}, "l": {"docs": {"NDNT.NDN.NDN.get_null_adjusted_ll": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.experiment_sampler.ExperimentSampler.exp_lengths": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.training.lbfgs.is_legal": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.layers.bilayers.BinocLayer1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.res_layer": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.res_layer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.res_layer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.res_layer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.res_layer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.layer_dict": {"tf": 1}, "NDNT.networks.FFnetwork.layer_list": {"tf": 1}, "NDNT.networks.FFnetwork.layer_types": {"tf": 1}, "NDNT.utils.ffnet_dicts.layer_dict": {"tf": 1}}, "df": 36, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.networks.LayerTypes": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {"NDNT.networks.FFnetwork.layers": {"tf": 1}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.layers.convlayers.TconvLayer.num_lags": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.num_lags": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.num_lags": {"tf": 1}, "NDNT.modules.regularization.Regularization.folded_lags": {"tf": 1}, "NDNT.modules.regularization.RegModule.folded_lags": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.num_lags_out": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d.num_lags_out": {"tf": 1}}, "df": 7}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.layers.laglayers.LagLayer": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.__init__": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.num_lags": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.num_folded_dims": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.forward": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.layer_dict": {"tf": 1}}, "df": 7}}}}}}}, "v": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.layers.lvlayers.LVLayer": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.__init__": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.forward": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"tf": 1}}, "df": 5, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.modules.layers.lvlayers.LVLayerOLD": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.__init__": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.numLVs": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.nt": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.init_mu_range": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.init_sigma": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.sigma": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.sm_skips": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.sample": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.weight_scale": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.forward": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1}}, "df": 12}}}}}}}}}, "n": {"docs": {"NDNT.modules.layers.reslayers.IterLayer.LN_reverse": {"tf": 1}}, "df": 1}, "b": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.__init__": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.line_search": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.two_loop_recursion": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.curvature_update": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.step": {"tf": 1}, "NDNT.utils.DanUtils.iterate_lbfgs": {"tf": 1}, "NDNT.utils.NDNutils.fit_lbfgs": {"tf": 1}}, "df": 8, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew.__init__": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew.step": {"tf": 1}}, "df": 3}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.training.trainer.LBFGSTrainer": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.__init__": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.fullbatch": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.fit": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.fit_data_dict": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.train_one_epoch": {"tf": 1}}, "df": 6}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.NDN.NDN.loss_type": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.norm_type": {"tf": 1}, "NDNT.modules.regularization.RegModule.reg_type": {"tf": 1}, "NDNT.networks.FFnetwork.network_type": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.network_type": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d.network_type": {"tf": 1}, "NDNT.networks.ReadoutNetwork.network_type": {"tf": 1}, "NDNT.networks.FFnet_external.network_type": {"tf": 1}}, "df": 8, "s": {"docs": {"NDNT.networks.FFnetwork.layer_types": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.training.trainer.Trainer.train_one_epoch": {"tf": 1}, "NDNT.training.trainer.Trainer.train_one_step": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.train_one_epoch": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.NDN.NDN.trainer": {"tf": 1}, "NDNT.NDN.NDN.get_trainer": {"tf": 1}, "NDNT.training.trainer.Trainer": {"tf": 1}, "NDNT.training.trainer.Trainer.__init__": {"tf": 1}, "NDNT.training.trainer.Trainer.optimizer": {"tf": 1}, "NDNT.training.trainer.Trainer.scheduler": {"tf": 1}, "NDNT.training.trainer.Trainer.optimize_graph": {"tf": 1}, "NDNT.training.trainer.Trainer.log_activations": {"tf": 1}, "NDNT.training.trainer.Trainer.accumulate_grad_batches": {"tf": 1}, "NDNT.training.trainer.Trainer.verbose": {"tf": 1}, "NDNT.training.trainer.Trainer.set_to_none": {"tf": 1}, "NDNT.training.trainer.Trainer.fullbatch": {"tf": 1}, "NDNT.training.trainer.Trainer.dirpath": {"tf": 1}, "NDNT.training.trainer.Trainer.early_stopping": {"tf": 1}, "NDNT.training.trainer.Trainer.device": {"tf": 1}, "NDNT.training.trainer.Trainer.logger": {"tf": 1}, "NDNT.training.trainer.Trainer.version": {"tf": 1}, "NDNT.training.trainer.Trainer.epoch": {"tf": 1}, "NDNT.training.trainer.Trainer.max_epochs": {"tf": 1}, "NDNT.training.trainer.Trainer.n_iter": {"tf": 1}, "NDNT.training.trainer.Trainer.val_loss_min": {"tf": 1}, "NDNT.training.trainer.Trainer.step_scheduler_after": {"tf": 1}, "NDNT.training.trainer.Trainer.step_scheduler_metric": {"tf": 1}, "NDNT.training.trainer.Trainer.fit": {"tf": 1}, "NDNT.training.trainer.Trainer.prepare_fit": {"tf": 1}, "NDNT.training.trainer.Trainer.fit_loop": {"tf": 1}, "NDNT.training.trainer.Trainer.validate_one_epoch": {"tf": 1}, "NDNT.training.trainer.Trainer.train_one_epoch": {"tf": 1}, "NDNT.training.trainer.Trainer.train_one_step": {"tf": 1}, "NDNT.training.trainer.Trainer.checkpoint_model": {"tf": 1}, "NDNT.training.trainer.Trainer.graceful_exit": {"tf": 1}}, "df": 31}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.NDN.NDN.training_step": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.modules.layers.dimlayers.DimSPLayer.transparent": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.transparent": {"tf": 1}}, "df": 2}}}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.training.earlystopping.EarlyStopping.trace_func": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {"NDNT.modules.experiment_sampler.construct_exp_to_time": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.exp_to_time": {"tf": 1}, "NDNT.training.trainer.Trainer.set_to_none": {"tf": 1}}, "df": 3}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.experiment_sampler.construct_exp_to_time": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.exp_to_time": {"tf": 1}, "NDNT.utils.DanUtils.time_embedding_simple": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1}}, "df": 5, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.layers.timelayers.TimeLayer": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.__init__": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.output_dims": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.num_outputs": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.forward": {"tf": 1}}, "df": 5}}}}}}}, "k": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {"NDNT.modules.regularization.Tikhanov": {"tf": 1}, "NDNT.modules.regularization.Tikhanov.__init__": {"tf": 1}, "NDNT.modules.regularization.Tikhanov.input_dims": {"tf": 1}, "NDNT.modules.regularization.Tikhanov.compute_reg_penalty": {"tf": 1}}, "df": 4, "c": {"docs": {"NDNT.modules.regularization.TikhanovC": {"tf": 1}, "NDNT.modules.regularization.TikhanovC.__init__": {"tf": 1}, "NDNT.modules.regularization.TikhanovC.input_dims": {"tf": 1}, "NDNT.modules.regularization.TikhanovC.collapse_dims": {"tf": 1}, "NDNT.modules.regularization.TikhanovC.compute_reg_penalty": {"tf": 1}}, "df": 5}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {"NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.modules.layers.convlayers.ConvLayer.tent_basis": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.tent_basis": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.tent_basis": {"tf": 1}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 1}, "NDNT.utils.NDNutils.tent_basis_generate": {"tf": 1}}, "df": 5}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.layers.orilayers.OriLayer.rotation_matrix_tensor": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.rotation_matrix_tensor": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.rotate_tensor": {"tf": 1}}, "df": 3}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.training.trainer.TemperatureCalibratedTrainer": {"tf": 1}, "NDNT.training.trainer.TemperatureCalibratedTrainer.__init__": {"tf": 1}, "NDNT.training.trainer.TemperatureCalibratedTrainer.validate_one_epoch": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.layers.convlayers.TconvLayer": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.num_lags": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.is1D": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.padding": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.forward": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.layer_dict": {"tf": 1}}, "df": 8}}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.layers.specialtylayers.Tlayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.tent_basis": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.res_layer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.folded_dims": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.forward": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.layer_dict": {"tf": 1}}, "df": 8}}}}}, "w": {"docs": {}, "df": 0, "o": {"docs": {"NDNT.training.lbfgs.LBFGS.two_loop_recursion": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.NDN.NDN.ffnet_out": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.num_lags_out": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d.num_lags_out": {"tf": 1}}, "df": 3, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.modules.layers.bilayers.BiSTconv1D.output_dims": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.output_dims": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.output_dims": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.output_dims": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.output_dims": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.output_dims": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.output_dims": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.output_dims": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.output_dims": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.output_dims": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.output_config": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.output_config": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.output_config": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.output_dims": {"tf": 1}, "NDNT.networks.FFnetwork.output_dims": {"tf": 1}}, "df": 15, "s": {"docs": {"NDNT.NDN.NDN.compute_network_outputs": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.num_outputs": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.num_outputs": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.num_outputs": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.num_outputs": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.num_outputs": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.num_outputs": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.num_outputs": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.num_outputs": {"tf": 1}, "NDNT.modules.regularization.Regularization.num_outputs": {"tf": 1}, "NDNT.networks.FFnetwork.num_outputs": {"tf": 1}}, "df": 11}}}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.NDN.NDN.opt_params": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.training.trainer.Trainer.optimize_graph": {"tf": 1}}, "df": 1, "r": {"docs": {"NDNT.NDN.NDN.get_optimizer": {"tf": 1}, "NDNT.training.trainer.Trainer.optimizer": {"tf": 1}, "NDNT.utils.NDNutils.create_optimizer_params": {"tf": 1}}, "df": 3}}}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.layers.dimlayers.Dim0Layer.num_other_dims": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {"NDNT.modules.layers.orilayers.ConvLayer3D.ori_padding": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.layers.orilayers.OriLayer": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.__init__": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.angles": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.output_dims": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.rotation_matrix_tensor": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.forward": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.layer_dict": {"tf": 1}}, "df": 7}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.layers.orilayers.OriConvLayer": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.angles": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.folded_dims": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.output_dims": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.rotation_matrix_tensor": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.get_rot_mat": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.rotate_tensor": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.forward": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.layer_dict": {"tf": 1}}, "df": 10}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.layers.specialtylayers.OnOffLayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.forward": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.layer_dict": {"tf": 1}}, "df": 5}}}}}}}}, "e": {"docs": {"NDNT.training.trainer.Trainer.validate_one_epoch": {"tf": 1}, "NDNT.training.trainer.Trainer.train_one_epoch": {"tf": 1}, "NDNT.training.trainer.Trainer.train_one_step": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.train_one_epoch": {"tf": 1}, "NDNT.training.trainer.TemperatureCalibratedTrainer.validate_one_epoch": {"tf": 1}}, "df": 5}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.NDN.NDN.seed": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.random_seed": {"tf": 1}}, "df": 2}}, "t": {"docs": {"NDNT.NDN.NDN.set_parameters": {"tf": 1}, "NDNT.NDN.NDN.set_reg_val": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.set_parameters": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.set_reg_val": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.set_readout_locations": {"tf": 1}, "NDNT.modules.regularization.Regularization.set_reg_val": {"tf": 1}, "NDNT.networks.FFnetwork.set_parameters": {"tf": 1}, "NDNT.networks.FFnetwork.set_reg_val": {"tf": 1}, "NDNT.networks.ReadoutNetwork.set_readout_locations": {"tf": 1}, "NDNT.networks.FFnet_external.set_params": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.set_hessian": {"tf": 1}, "NDNT.training.trainer.Trainer.set_to_none": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_log_epsilon": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"tf": 1}}, "df": 17, "u": {"docs": {}, "df": 0, "p": {"docs": {"NDNT.utils.DanUtils.subplot_setup": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"NDNT.training.lbfgs.LBFGS.line_search": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.NDN.NDN.block_sample": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.sample": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.batch_sample": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_mode": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.sample": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.batch_sample": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.sample": {"tf": 1}, "NDNT.utils.DanUtils.fold_sample": {"tf": 1}}, "df": 9, "s": {"docs": {"NDNT.training.ada_hessian.AdaHessian.n_samples": {"tf": 1}, "NDNT.utils.NDNutils.get_max_samples": {"tf": 1}}, "df": 2}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.NDN.NDN.save_model_zip": {"tf": 1}, "NDNT.NDN.NDN.save_model": {"tf": 1}, "NDNT.NDN.NDN.save_model_chk": {"tf": 1}, "NDNT.utils.DanUtils.save_python_data": {"tf": 1}, "NDNT.utils.NDNutils.default_save_dir": {"tf": 1}, "NDNT.utils.NDNutils.save_checkpoint": {"tf": 1}}, "df": 6}}}, "p": {"docs": {"NDNT.modules.layers.dimlayers.DimSPLayer.num_sp_dims": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.NDN.NDN.speckled_flag": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {"NDNT.modules.layers.dimlayers.DimSPTLayer.num_spt_dims": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer.initialize_spatial_mapping": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.num_spatial_dims": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.spatial_dims": {"tf": 1}}, "df": 3}}}}}}, "t": {"1": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.utils.plotting.plot_filters_ST1D": {"tf": 1}}, "df": 1}}, "2": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.utils.plotting.plot_filters_ST2D": {"tf": 1}}, "df": 1}}, "3": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.utils.plotting.plot_filters_ST3D": {"tf": 1}}, "df": 1}}, "docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {"NDNT.NDN.NDN.training_step": {"tf": 1}, "NDNT.NDN.NDN.validation_step": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.step": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.step": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew.step": {"tf": 1}, "NDNT.training.trainer.Trainer.step_scheduler_after": {"tf": 1}, "NDNT.training.trainer.Trainer.step_scheduler_metric": {"tf": 1}, "NDNT.training.trainer.Trainer.train_one_step": {"tf": 1}}, "df": 9}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.NDN.NDN.model_string": {"tf": 1}, "NDNT.utils.NDNutils.summary_string": {"tf": 1}}, "df": 2}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.layers.convlayers.STconvLayer": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.num_lags": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.output_dims": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.forward": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.layer_dict": {"tf": 1}}, "df": 7}}}}}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {"NDNT.training.earlystopping.EarlyStopping.early_stop": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.training.trainer.Trainer.early_stopping": {"tf": 1}}, "df": 1}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.activations.Square": {"tf": 1}, "NDNT.modules.activations.Square.__init__": {"tf": 1}, "NDNT.modules.activations.Square.forward": {"tf": 1}}, "df": 3}}}}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.experiment_sampler.ExperimentSampler.batch_size": {"tf": 1}}, "df": 1, "s": {"docs": {"NDNT.modules.experiment_sampler.ExperimentSampler.exp_batch_sizes": {"tf": 1}}, "df": 1}}}, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"NDNT.modules.layers.lvlayers.LVLayerOLD.init_sigma": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.sigma": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.init_sigma": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.sigma": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.init_sigma": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.single_sigma": {"tf": 1}}, "df": 6}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.layers.readouts.FixationLayer.single_sigma": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.utils.DanUtils.time_embedding_simple": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.__init__": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.loss_name": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.loss": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.lossNR": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.unit_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.batch_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.forward": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.unit_loss": {"tf": 1}}, "df": 10}}}}}}}}}}}}}}}}, "h": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.experiment_sampler.ExperimentSampler.shuffle": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.layers.ndnlayer.NDNLayer.shape": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.grid_shape": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.utils.NDNutils.shift_mat_zpad": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {"NDNT.modules.layers.lvlayers.LVLayerOLD.sm_skips": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"NDNT.utils.MattUtils.smooth_ema": {"tf": 1}, "NDNT.utils.MattUtils.smooth_conv": {"tf": 1}}, "df": 2}}}}}, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.layers.lvlayers.LVLayerOLD.sm_skips": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.layers.lvlayers.LVLayerOLD.weight_scale": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.weight_scale": {"tf": 1}}, "df": 2}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"3": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.networks.ScaffoldNetwork3d": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d.__init__": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d.network_type": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d.num_lags_out": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d.forward": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d.ffnet_dict": {"tf": 1}}, "df": 6}}, "docs": {"NDNT.networks.ScaffoldNetwork": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.__init__": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.network_type": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.num_lags_out": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.spatial_dims": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.filter_count": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.forward": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.ffnet_dict": {"tf": 1}}, "df": 8}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.utils.plotting.plot_scatter": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.training.earlystopping.EarlyStopping.best_score": {"tf": 1}}, "df": 1}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.training.trainer.Trainer.scheduler": {"tf": 1}, "NDNT.training.trainer.Trainer.step_scheduler_after": {"tf": 1}, "NDNT.training.trainer.Trainer.step_scheduler_metric": {"tf": 1}}, "df": 3}}}}}}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.utils.DanUtils.subplot_setup": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.utils.NDNutils.summary_string": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {"NDNT.utils.DanUtils.ss": {"tf": 1}}, "df": 1}}, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.NDN.NDN.working_dir": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.modules.layers.lvlayers.LVLayerOLD.weight_scale": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.weight_scale": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.weight": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.weight_minus": {"tf": 1}}, "df": 4, "s": {"docs": {"NDNT.NDN.NDN.get_weights": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.weights_folded_dims": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.get_weights": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.get_weights": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.preprocess_weights": {"tf": 1}, "NDNT.networks.FFnetwork.get_weights": {"tf": 1}, "NDNT.utils.plotting.plot_internal_weights": {"tf": 1}}, "df": 12}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.metrics.mse_loss.MseLoss_datafilter.unit_weighting": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.batch_weighting": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.unit_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.batch_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.unit_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.batch_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.unit_weighting": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.batch_weighting": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"tf": 1}}, "df": 12}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"NDNT.modules.layers.convlayers.ConvLayer.window": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.window": {"tf": 1}}, "df": 2}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.NDN.NDN.working_dir": {"tf": 1}, "NDNT.utils.NDNutils.default_save_dir": {"tf": 1}, "NDNT.utils.NDNutils.ensure_dir": {"tf": 1}}, "df": 3, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"NDNT.training.trainer.Trainer.dirpath": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.modules.layers.bilayers.BinocLayer1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.layer_dict": {"tf": 1}, "NDNT.networks.FFnetwork.ffnet_dict": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.ffnet_dict": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d.ffnet_dict": {"tf": 1}, "NDNT.networks.ReadoutNetwork.ffnet_dict": {"tf": 1}, "NDNT.networks.FFnet_external.ffnet_dict": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.fit_data_dict": {"tf": 1}, "NDNT.utils.ffnet_dicts.layer_dict": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_NIM": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_readout": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_external": {"tf": 1}}, "df": 38}}, "m": {"0": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.layers.dimlayers.Dim0Layer": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.output_dims": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.num_outputs": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.num_other_dims": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.forward": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.dim_info": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.layer_dict": {"tf": 1}}, "df": 8}}}}}}, "docs": {"NDNT.modules.layers.dimlayers.Dim0Layer.dim_info": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.dim_info": {"tf": 1}}, "df": 2, "s": {"docs": {"NDNT.modules.layers.bilayers.BiSTconv1D.output_dims": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.weights_folded_dims": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.filter_dims": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.folded_dims": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.output_dims": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.output_dims": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.num_other_dims": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.num_sp_dims": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.output_dims": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.num_spt_dims": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.input_dims": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.filter_dims": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.output_dims": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.num_folded_dims": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.input_dims": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.output_dims": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.output_dims": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.output_dims": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.folded_dims": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.output_dims": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.input_dims": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.output_dims": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.input_dims": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.filter_dims": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.num_spatial_dims": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.folded_dims": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.output_dims": {"tf": 1}, "NDNT.modules.regularization.Regularization.input_dims": {"tf": 1}, "NDNT.modules.regularization.RegModule.input_dims": {"tf": 1}, "NDNT.modules.regularization.RegModule.num_dims": {"tf": 1}, "NDNT.modules.regularization.DiagonalReg.input_dims": {"tf": 1}, "NDNT.modules.regularization.Tikhanov.input_dims": {"tf": 1}, "NDNT.modules.regularization.TikhanovC.input_dims": {"tf": 1}, "NDNT.modules.regularization.TikhanovC.collapse_dims": {"tf": 1}, "NDNT.networks.FFnetwork.output_dims": {"tf": 1}, "NDNT.networks.FFnetwork.determine_input_dims": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.spatial_dims": {"tf": 1}, "NDNT.networks.ReadoutNetwork.determine_input_dims": {"tf": 1}, "NDNT.networks.FFnet_external.input_dims_reshape": {"tf": 1}}, "df": 39, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.layers.dimlayers.DimSPLayer": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.transparent": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.num_outputs": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.num_sp_dims": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.forward": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.layer_dict": {"tf": 1}}, "df": 7}}}}}, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.layers.dimlayers.DimSPTLayer": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.output_dims": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.num_outputs": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.transparent": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.num_spt_dims": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.forward": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.layer_dict": {"tf": 1}}, "df": 8}}}}}}}}}, "v": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.layers.normlayers.DivNormLayer": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.__init__": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.output_dims": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.num_outputs": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.forward": {"tf": 1}}, "df": 6}}}}}}}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.modules.regularization.DiagonalReg": {"tf": 1}, "NDNT.modules.regularization.DiagonalReg.__init__": {"tf": 1}, "NDNT.modules.regularization.DiagonalReg.input_dims": {"tf": 1}, "NDNT.modules.regularization.DiagonalReg.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.DiagonalReg.build_reg_mats": {"tf": 1}}, "df": 5}}}}}}}}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.utils.DanUtils.display_matrix": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"NDNT.training.trainer.LBFGSTrainer.fit_data_dict": {"tf": 1}, "NDNT.utils.DanUtils.save_python_data": {"tf": 1}, "NDNT.utils.DanUtils.load_python_data": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}, "NDNT.utils.DanUtils.monocular_data_import": {"tf": 1}}, "df": 6, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.NDN.NDN.get_dataloaders": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.modules.experiment_sampler.ExperimentSampler.dataset": {"tf": 1}}, "df": 1}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.__init__": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.loss_name": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.loss": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.lossNR": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.unit_weighting": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.batch_weighting": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.forward": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.__init__": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.loss_name": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.loss": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.lossNR": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.unit_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.batch_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_log_epsilon": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.forward": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.unit_loss": {"tf": 1}}, "df": 21}}}}}}}}}, "l": {"docs": {"NDNT.NDN.NDN.fit_dl": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.NDN.NDN.device": {"tf": 1}, "NDNT.training.trainer.Trainer.device": {"tf": 1}}, "df": 2}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.networks.FFnetwork.determine_input_dims": {"tf": 1}, "NDNT.networks.ReadoutNetwork.determine_input_dims": {"tf": 1}}, "df": 2}}}}}}}, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"NDNT.training.earlystopping.EarlyStopping.delta": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.utils.DanUtils.design_matrix_drift": {"tf": 1}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 1}}, "df": 2}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.utils.NDNutils.default_save_dir": {"tf": 1}, "NDNT.utils.NDNutils.NpEncoder.default": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 1}}, "df": 3}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.utils.DanUtils.design_matrix_drift": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.NDN.NDN.val_loss": {"tf": 1}, "NDNT.NDN.NDN.set_reg_val": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.set_reg_val": {"tf": 1}, "NDNT.modules.regularization.Regularization.set_reg_val": {"tf": 1}, "NDNT.networks.FFnetwork.set_reg_val": {"tf": 1}, "NDNT.training.earlystopping.EarlyStopping.val_loss_min": {"tf": 1}, "NDNT.training.trainer.Trainer.val_loss_min": {"tf": 1}}, "df": 7, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.NDN.NDN.validation_step": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"NDNT.training.trainer.Trainer.validate_one_epoch": {"tf": 1}, "NDNT.training.trainer.TemperatureCalibratedTrainer.validate_one_epoch": {"tf": 1}}, "df": 2}}}}}, "s": {"docs": {"NDNT.modules.activity_regularization.ActivityRegularization.reg_vals": {"tf": 1}, "NDNT.modules.regularization.Regularization.vals": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.training.earlystopping.EarlyStopping.verbose": {"tf": 1}, "NDNT.training.lbfgsnew.be_verbose": {"tf": 1}, "NDNT.training.trainer.Trainer.verbose": {"tf": 1}}, "df": 3}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.training.trainer.Trainer.version": {"tf": 1}, "NDNT.version.version": {"tf": 1}}, "df": 2, "s": {"docs": {"NDNT.utils.NDNutils.get_fit_versions": {"tf": 1}}, "df": 1}}}}}}}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"NDNT.NDN.NDN.block_sample": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.NDN.NDN.initialize_biases": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"1": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.modules.layers.bilayers.BinocLayer1D": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D.forward": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D.layer_dict": {"tf": 1}}, "df": 4}}, "docs": {}, "df": 0}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.utils.DanUtils.binocular_data_import": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}}, "df": 2}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"1": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.modules.layers.bilayers.BiConvLayer1D": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D.layer_dict": {"tf": 1}}, "df": 3}}, "docs": {}, "df": 0}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"1": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.modules.layers.bilayers.BiSTconv1D": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.output_dims": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.num_outputs": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.forward": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1}}, "df": 6}}, "docs": {}, "df": 0}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"NDNT.modules.experiment_sampler.ExperimentBatchGenerator.current_batch_index": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchIterator.exp_batch_generators": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.batch_size": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.exp_batch_sizes": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.batch_sample": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.batch_sample": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.batch_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.batch_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.batch_weighting": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.batch_weighting": {"tf": 1}}, "df": 10, "e": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.experiment_sampler.ExperimentBatchGenerator.batches": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.num_batches": {"tf": 1}, "NDNT.training.trainer.Trainer.accumulate_grad_batches": {"tf": 1}}, "df": 3}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"NDNT.modules.layers.convlayers.ConvLayer.batchnorm_clone": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.batchnorm_convert": {"tf": 1}}, "df": 2}}}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.layers.convlayers.ConvLayer.tent_basis": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.tent_basis": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.tent_basis": {"tf": 1}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 1}, "NDNT.utils.NDNutils.tent_basis_generate": {"tf": 1}}, "df": 5}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.modules.regularization.Regularization.boundary_conditions": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.modules.regularization.Regularization.build_reg_modules": {"tf": 1}, "NDNT.modules.regularization.LocalityReg.build_reg_mats": {"tf": 1}, "NDNT.modules.regularization.DiagonalReg.build_reg_mats": {"tf": 1}}, "df": 3}}}}, "c": {"docs": {"NDNT.modules.regularization.ConvReg.BC": {"tf": 1}}, "df": 1}, "e": {"docs": {"NDNT.training.lbfgsnew.be_verbose": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.training.earlystopping.EarlyStopping.best_score": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.NDN.NDN.opt_params": {"tf": 1}, "NDNT.networks.FFnet_external.list_params": {"tf": 1}, "NDNT.networks.FFnet_external.set_params": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.get_params": {"tf": 1}, "NDNT.utils.NDNutils.create_optimizer_params": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 1}}, "df": 6}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"2": {"docs": {"NDNT.modules.layers.specialtylayers.L1convLayer.reset_parameters2": {"tf": 1}}, "df": 1}, "docs": {"NDNT.NDN.NDN.list_parameters": {"tf": 1}, "NDNT.NDN.NDN.set_parameters": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.reset_parameters": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.list_parameters": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.set_parameters": {"tf": 1}, "NDNT.networks.FFnetwork.list_parameters": {"tf": 1}, "NDNT.networks.FFnetwork.set_parameters": {"tf": 1}}, "df": 7}}}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.NDN.NDN.passive_readout": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.passive_readout": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.passive_readout": {"tf": 1}}, "df": 3}}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.modules.layers.convlayers.ConvLayer.padding": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.padding": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.ori_padding": {"tf": 1}}, "df": 3}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.training.earlystopping.EarlyStopping.patience": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.NDN.NDN.prepare_regularization": {"tf": 1}, "NDNT.networks.FFnetwork.prepare_regularization": {"tf": 1}, "NDNT.training.trainer.Trainer.prepare_fit": {"tf": 1}}, "df": 3}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.layers.convlayers.ConvLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.preprocess_weights": {"tf": 1}, "NDNT.networks.FFnetwork.preprocess_input": {"tf": 1}}, "df": 7}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.NDN.NDN.generate_predictions": {"tf": 1}}, "df": 1}}}}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.NDN.NDN.plot_filters": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.plot_filters": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.plot_filters": {"tf": 1}, "NDNT.networks.FFnetwork.plot_filters": {"tf": 1}, "NDNT.utils.MattUtils.plot_losses": {"tf": 1}, "NDNT.utils.plotting.plot_filters_1D": {"tf": 1}, "NDNT.utils.plotting.plot_filters_2D": {"tf": 1}, "NDNT.utils.plotting.plot_filters_ST1D": {"tf": 1}, "NDNT.utils.plotting.plot_filters_ST2D": {"tf": 1}, "NDNT.utils.plotting.plot_filters_ST3D": {"tf": 1}, "NDNT.utils.plotting.plot_scatter": {"tf": 1}, "NDNT.utils.plotting.plot_internal_weights": {"tf": 1}}, "df": 17}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.layers.ndnlayer.NDNLayer.pos_constraint": {"tf": 1}, "NDNT.modules.regularization.Regularization.pos_constraint": {"tf": 1}, "NDNT.modules.regularization.RegModule.pos_constraint": {"tf": 1}}, "df": 3}, "l": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "p": {"docs": {"NDNT.training.lbfgs.polyinterp": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.__init__": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.loss_name": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.loss": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.lossNR": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.unit_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.batch_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_log_epsilon": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.forward": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.unit_loss": {"tf": 1}}, "df": 11}}}}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.modules.regularization.LocalityReg.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.DiagonalReg.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.InlineReg.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.ConvReg.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.Tikhanov.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.TikhanovC.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.ActivityReg.acitivity_penalty": {"tf": 1}, "NDNT.modules.regularization.ActivityReg.compute_activity_penalty": {"tf": 1}, "NDNT.modules.regularization.ActivityReg.compute_reg_penalty": {"tf": 1}}, "df": 9}}}}}, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.utils.DanUtils.find_peaks": {"tf": 1}}, "df": 1}}}}, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.utils.DanUtils.save_python_data": {"tf": 1}, "NDNT.utils.DanUtils.load_python_data": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"2": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.utils.NDNutils.pixel2grid": {"tf": 1}}, "df": 1}}}}}, "docs": {}, "df": 0}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.NDN.NDN.assemble_ffnetworks": {"tf": 1}}, "df": 1}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.NDN.NDN.compute_average_responses": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.average_conv_kernel": {"tf": 1}}, "df": 2}}}}}}, "d": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.NDN.NDN.get_null_adjusted_ll": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.activations.adaptive_elu": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {"NDNT.modules.activations.AdaptiveELU": {"tf": 1}, "NDNT.modules.activations.AdaptiveELU.__init__": {"tf": 1}, "NDNT.modules.activations.AdaptiveELU.xshift": {"tf": 1}, "NDNT.modules.activations.AdaptiveELU.yshift": {"tf": 1}, "NDNT.modules.activations.AdaptiveELU.inplace": {"tf": 1}, "NDNT.modules.activations.AdaptiveELU.forward": {"tf": 1}}, "df": 6}}}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.training.ada_hessian.AdaHessian": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.__init__": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.n_samples": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.update_each": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.average_conv_kernel": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.generator": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.get_params": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.zero_hessian": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.set_hessian": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.step": {"tf": 1}}, "df": 10}}}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.NDN.NDN.get_activations": {"tf": 1}, "NDNT.training.trainer.Trainer.log_activations": {"tf": 1}}, "df": 2}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.modules.activity_regularization.ActivityRegularization.activity": {"tf": 1}, "NDNT.modules.regularization.Regularization.activity_regmodule": {"tf": 1}, "NDNT.modules.regularization.Regularization.compute_activity_regularization": {"tf": 1}, "NDNT.modules.regularization.ActivityReg.compute_activity_penalty": {"tf": 1}}, "df": 4, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.modules.regularization.ActivityReg": {"tf": 1}, "NDNT.modules.regularization.ActivityReg.__init__": {"tf": 1}, "NDNT.modules.regularization.ActivityReg.acitivity_penalty": {"tf": 1}, "NDNT.modules.regularization.ActivityReg.compute_activity_penalty": {"tf": 1}, "NDNT.modules.regularization.ActivityReg.compute_reg_penalty": {"tf": 1}}, "df": 5, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.modules.activity_regularization.ActivityRegularization": {"tf": 1}, "NDNT.modules.activity_regularization.ActivityRegularization.__init__": {"tf": 1}, "NDNT.modules.activity_regularization.ActivityRegularization.reg_vals": {"tf": 1}, "NDNT.modules.activity_regularization.ActivityRegularization.activity": {"tf": 1}, "NDNT.modules.activity_regularization.ActivityRegularization.nonneg": {"tf": 1}, "NDNT.modules.activity_regularization.ActivityRegularization.regularize": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.modules.regularization.ActivityReg.acitivity_penalty": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.training.trainer.Trainer.accumulate_grad_batches": {"tf": 1}}, "df": 1}}}}}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.layers.orilayers.OriLayer.angles": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.angles": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer.align_corners": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.training.trainer.Trainer.step_scheduler_after": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.NDN.NDN.compute_network_outputs": {"tf": 1}, "NDNT.NDN.NDN.compute_reg_loss": {"tf": 1}, "NDNT.NDN.NDN.compute_average_responses": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.compute_reg_loss": {"tf": 1}, "NDNT.modules.regularization.Regularization.compute_reg_loss": {"tf": 1}, "NDNT.modules.regularization.Regularization.compute_activity_regularization": {"tf": 1}, "NDNT.modules.regularization.LocalityReg.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.DiagonalReg.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.InlineReg.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.ConvReg.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.Tikhanov.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.TikhanovC.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.ActivityReg.compute_activity_penalty": {"tf": 1}, "NDNT.modules.regularization.ActivityReg.compute_reg_penalty": {"tf": 1}, "NDNT.networks.FFnetwork.compute_reg_loss": {"tf": 1}, "NDNT.networks.FFnet_external.compute_reg_loss": {"tf": 1}}, "df": 16}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.utils.ffnet_dicts.list_complete": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.modules.experiment_sampler.construct_exp_to_time": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.modules.layers.ndnlayer.NDNLayer.pos_constraint": {"tf": 1}, "NDNT.modules.regularization.Regularization.pos_constraint": {"tf": 1}, "NDNT.modules.regularization.RegModule.pos_constraint": {"tf": 1}}, "df": 3}}}}}}}, "v": {"docs": {"NDNT.modules.layers.ndnlayer.NDNLayer.conv": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.average_conv_kernel": {"tf": 1}, "NDNT.utils.MattUtils.smooth_conv": {"tf": 1}}, "df": 3, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"3": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.modules.layers.orilayers.ConvLayer3D": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.__init__": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.ori_padding": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.input_dims": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.output_dims": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.forward": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.plot_filters": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.layer_dict": {"tf": 1}}, "df": 8}}, "docs": {"NDNT.modules.layers.convlayers.ConvLayer": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.window": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.tent_basis": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.is1D": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.res_layer": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.filter_dims": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.padding": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.folded_dims": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.batchnorm_clone": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.batchnorm_convert": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.forward": {"tf": 1}}, "df": 14}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.modules.layers.convlayers.ConvLayer.batchnorm_convert": {"tf": 1}, "NDNT.modules.regularization.Regularization.unit_reg_convert": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.modules.regularization.ConvReg": {"tf": 1}, "NDNT.modules.regularization.ConvReg.__init__": {"tf": 1}, "NDNT.modules.regularization.ConvReg.BC": {"tf": 1}, "NDNT.modules.regularization.ConvReg.compute_reg_penalty": {"tf": 1}}, "df": 4}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.modules.layers.reslayers.IterLayer.output_config": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.output_config": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.output_config": {"tf": 1}}, "df": 3}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.regularization.Regularization.boundary_conditions": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer.align_corners": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.modules.regularization.Regularization.reg_copy": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.regularization.TikhanovC.collapse_dims": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.networks.ScaffoldNetwork.filter_count": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.training.earlystopping.EarlyStopping.counter": {"tf": 1}}, "df": 1}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.NDN.NDN.change_loss": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.layers.bilayers.ChannelConvLayer": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.weights_folded_dims": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.forward": {"tf": 1}}, "df": 5}}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.layers.dimlayers.ChannelLayer": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.forward": {"tf": 1}}, "df": 4}}}}}}}}}}, "k": {"docs": {"NDNT.NDN.NDN.save_model_chk": {"tf": 1}, "NDNT.NDN.NDN.load_model_chk": {"tf": 1}}, "df": 2}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.training.trainer.Trainer.checkpoint_model": {"tf": 1}, "NDNT.utils.NDNutils.save_checkpoint": {"tf": 1}, "NDNT.utils.NDNutils.load_checkpoint": {"tf": 1}}, "df": 3}}}}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.modules.experiment_sampler.ExperimentBatchGenerator.current_batch_index": {"tf": 1}}, "df": 1}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.training.lbfgs.LBFGS.curvature_update": {"tf": 1}}, "df": 1}}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.layers.convlayers.ConvLayer.batchnorm_clone": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.regularization.Regularization.get_reg_class": {"tf": 1}, "NDNT.utils.NDNutils.CPU_Unpickler.find_class": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.utils.NDNutils.create_optimizer_params": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_maxpenalty_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_localpenalty_matrix": {"tf": 1}}, "df": 6}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {"NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1}, "NDNT.utils.NDNutils.CPU_Unpickler.find_class": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.NDN.NDN.compute_reg_loss": {"tf": 1}, "NDNT.NDN.NDN.set_reg_val": {"tf": 1}, "NDNT.modules.activity_regularization.ActivityRegularization.reg_vals": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.reg": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.reg": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.compute_reg_loss": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.set_reg_val": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.reg": {"tf": 1}, "NDNT.modules.regularization.Regularization.reg_modules": {"tf": 1}, "NDNT.modules.regularization.Regularization.unit_reg": {"tf": 1}, "NDNT.modules.regularization.Regularization.set_reg_val": {"tf": 1}, "NDNT.modules.regularization.Regularization.unit_reg_convert": {"tf": 1}, "NDNT.modules.regularization.Regularization.build_reg_modules": {"tf": 1}, "NDNT.modules.regularization.Regularization.compute_reg_loss": {"tf": 1}, "NDNT.modules.regularization.Regularization.reg_copy": {"tf": 1}, "NDNT.modules.regularization.Regularization.get_reg_class": {"tf": 1}, "NDNT.modules.regularization.RegModule.reg_type": {"tf": 1}, "NDNT.modules.regularization.RegModule.unit_reg": {"tf": 1}, "NDNT.modules.regularization.LocalityReg.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.LocalityReg.build_reg_mats": {"tf": 1}, "NDNT.modules.regularization.DiagonalReg.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.DiagonalReg.build_reg_mats": {"tf": 1}, "NDNT.modules.regularization.InlineReg.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.ConvReg.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.Tikhanov.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.TikhanovC.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.ActivityReg.compute_reg_penalty": {"tf": 1}, "NDNT.networks.FFnetwork.compute_reg_loss": {"tf": 1}, "NDNT.networks.FFnetwork.set_reg_val": {"tf": 1}, "NDNT.networks.FFnet_external.compute_reg_loss": {"tf": 1}}, "df": 30, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.NDN.NDN.prepare_regularization": {"tf": 1}, "NDNT.modules.regularization.Regularization": {"tf": 1}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1}, "NDNT.modules.regularization.Regularization.input_dims": {"tf": 1}, "NDNT.modules.regularization.Regularization.vals": {"tf": 1}, "NDNT.modules.regularization.Regularization.reg_modules": {"tf": 1}, "NDNT.modules.regularization.Regularization.normalize": {"tf": 1}, "NDNT.modules.regularization.Regularization.unit_reg": {"tf": 1}, "NDNT.modules.regularization.Regularization.folded_lags": {"tf": 1}, "NDNT.modules.regularization.Regularization.num_outputs": {"tf": 1}, "NDNT.modules.regularization.Regularization.pos_constraint": {"tf": 1}, "NDNT.modules.regularization.Regularization.boundary_conditions": {"tf": 1}, "NDNT.modules.regularization.Regularization.activity_regmodule": {"tf": 1}, "NDNT.modules.regularization.Regularization.set_reg_val": {"tf": 1}, "NDNT.modules.regularization.Regularization.unit_reg_convert": {"tf": 1}, "NDNT.modules.regularization.Regularization.build_reg_modules": {"tf": 1}, "NDNT.modules.regularization.Regularization.compute_reg_loss": {"tf": 1}, "NDNT.modules.regularization.Regularization.compute_activity_regularization": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.Regularization.reg_copy": {"tf": 1}, "NDNT.modules.regularization.Regularization.get_reg_class": {"tf": 1}, "NDNT.networks.FFnetwork.prepare_regularization": {"tf": 1}}, "df": 21}}}}}, "e": {"docs": {"NDNT.modules.activity_regularization.ActivityRegularization.regularize": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.regularization.Regularization.activity_regmodule": {"tf": 1}, "NDNT.modules.regularization.RegModule": {"tf": 1}, "NDNT.modules.regularization.RegModule.__init__": {"tf": 1}, "NDNT.modules.regularization.RegModule.reg_type": {"tf": 1}, "NDNT.modules.regularization.RegModule.unit_reg": {"tf": 1}, "NDNT.modules.regularization.RegModule.input_dims": {"tf": 1}, "NDNT.modules.regularization.RegModule.num_dims": {"tf": 1}, "NDNT.modules.regularization.RegModule.folded_lags": {"tf": 1}, "NDNT.modules.regularization.RegModule.pos_constraint": {"tf": 1}, "NDNT.modules.regularization.RegModule.forward": {"tf": 1}}, "df": 10}}}}}}}, "s": {"docs": {"NDNT.modules.layers.convlayers.ConvLayer.res_layer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.res_layer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.res_layer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.res_layer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.res_layer": {"tf": 1}}, "df": 5, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.NDN.NDN.compute_average_responses": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.modules.layers.ndnlayer.NDNLayer.reset_parameters": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.reset_parameters2": {"tf": 1}}, "df": 2}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.networks.FFnet_external.input_dims_reshape": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.NDN.NDN.get_readout_locations": {"tf": 1}, "NDNT.NDN.NDN.passive_readout": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.set_readout_locations": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.get_readout_locations": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.passive_readout": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.passive_readout": {"tf": 1}, "NDNT.networks.ReadoutNetwork.get_readout_locations": {"tf": 1}, "NDNT.networks.ReadoutNetwork.set_readout_locations": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_readout": {"tf": 1}}, "df": 9, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"3": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer3d": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.input_dims": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.filter_dims": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.reg": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.forward": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.passive_readout": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.layer_dict": {"tf": 1}}, "df": 8}}, "docs": {"NDNT.modules.layers.readouts.ReadoutLayer": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.batch_sample": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_mode": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.init_mu_range": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.init_sigma": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.align_corners": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.grid_shape": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.mu": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.sigma": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.sample": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.features": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.grid": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.initialize_spatial_mapping": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.get_weights": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.forward": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.set_readout_locations": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.get_readout_locations": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.passive_readout": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.layer_dict": {"tf": 1}}, "df": 21}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"NDNT.networks.ReadoutNetwork": {"tf": 1}, "NDNT.networks.ReadoutNetwork.__init__": {"tf": 1}, "NDNT.networks.ReadoutNetwork.network_type": {"tf": 1}, "NDNT.networks.ReadoutNetwork.determine_input_dims": {"tf": 1}, "NDNT.networks.ReadoutNetwork.forward": {"tf": 1}, "NDNT.networks.ReadoutNetwork.get_readout_locations": {"tf": 1}, "NDNT.networks.ReadoutNetwork.set_readout_locations": {"tf": 1}, "NDNT.networks.ReadoutNetwork.ffnet_dict": {"tf": 1}}, "df": 8}}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.layers.reslayers.IterLayer.LN_reverse": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.training.lbfgs.LBFGS.two_loop_recursion": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"NDNT.modules.experiment_sampler.ExperimentSampler.random_seed": {"tf": 1}}, "df": 1}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.layers.lvlayers.LVLayerOLD.init_mu_range": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.init_mu_range": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.modules.layers.orilayers.OriConvLayer.get_rot_mat": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.modules.layers.orilayers.OriLayer.rotation_matrix_tensor": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.rotation_matrix_tensor": {"tf": 1}}, "df": 2}}}, "e": {"docs": {"NDNT.modules.layers.orilayers.OriConvLayer.rotate_tensor": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.metrics.rmse_loss.RmseLoss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.__init__": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.loss_name": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.loss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.lossNR": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.unit_weighting": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.batch_weighting": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.forward": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.unit_loss": {"tf": 1}}, "df": 10}}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.NDN.NDN.get_trainer": {"tf": 1}, "NDNT.NDN.NDN.get_dataloaders": {"tf": 1}, "NDNT.NDN.NDN.get_optimizer": {"tf": 1}, "NDNT.NDN.NDN.get_weights": {"tf": 1}, "NDNT.NDN.NDN.get_readout_locations": {"tf": 1}, "NDNT.NDN.NDN.get_null_adjusted_ll": {"tf": 1}, "NDNT.NDN.NDN.get_activations": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.get_weights": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.get_rot_mat": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.get_weights": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.get_readout_locations": {"tf": 1}, "NDNT.modules.regularization.Regularization.get_reg_class": {"tf": 1}, "NDNT.networks.FFnetwork.get_weights": {"tf": 1}, "NDNT.networks.ReadoutNetwork.get_readout_locations": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.get_params": {"tf": 1}, "NDNT.utils.NDNutils.get_fit_versions": {"tf": 1}, "NDNT.utils.NDNutils.get_max_samples": {"tf": 1}}, "df": 17}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.NDN.NDN.generate_predictions": {"tf": 1}, "NDNT.utils.NDNutils.tent_basis_generate": {"tf": 1}, "NDNT.utils.NDNutils.generate_xv_folds": {"tf": 1}}, "df": 3}, "o": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.training.ada_hessian.AdaHessian.generator": {"tf": 1}}, "df": 1, "s": {"docs": {"NDNT.modules.experiment_sampler.ExperimentBatchIterator.exp_batch_generators": {"tf": 1}}, "df": 1}}}}}}}}}, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.modules.layers.ndnlayer.NDNLayer.initialize_gaussian_envelope": {"tf": 1}, "NDNT.utils.NDNutils.initialize_gaussian_envelope": {"tf": 1}}, "df": 2}}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"2": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.utils.NDNutils.grid2pixel": {"tf": 1}}, "df": 1}}}}}}, "docs": {"NDNT.modules.layers.readouts.ReadoutLayer.grid_shape": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.grid": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1}}, "df": 3}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {"NDNT.training.trainer.Trainer.optimize_graph": {"tf": 1}}, "df": 1}}, "d": {"docs": {"NDNT.training.trainer.Trainer.accumulate_grad_batches": {"tf": 1}}, "df": 1}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.training.trainer.Trainer.graceful_exit": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.NDN.NDN.eval_models": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {"NDNT.modules.activations.adaptive_elu": {"tf": 1}}, "df": 1}}, "x": {"docs": {}, "df": 0, "p": {"docs": {"NDNT.modules.experiment_sampler.ExperimentBatchIterator.exp_batch_generators": {"tf": 1}, "NDNT.modules.experiment_sampler.construct_exp_to_time": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.exp_to_time": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.exp_lengths": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.exp_batch_sizes": {"tf": 1}}, "df": 5, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.experiment_sampler.ExperimentBatchGenerator": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchGenerator.__init__": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchGenerator.batches": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchGenerator.current_batch_index": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchGenerator.next": {"tf": 1}}, "df": 5}}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.experiment_sampler.ExperimentBatchIterator": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchIterator.__init__": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchIterator.exp_batch_generators": {"tf": 1}}, "df": 3}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.experiment_sampler.ExperimentSampler": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.__init__": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.dataset": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.batch_size": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.shuffle": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.random_seed": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.num_exps": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.exp_to_time": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.exp_lengths": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.exp_batch_sizes": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.num_batches": {"tf": 1}}, "df": 11}}}}}}}}}}}}}}, "s": {"docs": {"NDNT.modules.experiment_sampler.ExperimentSampler.num_exps": {"tf": 1}}, "df": 1}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.utils.DanUtils.figure_export": {"tf": 1}, "NDNT.utils.DanUtils.matlab_export": {"tf": 1}}, "df": 2}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.networks.FFnet_external": {"tf": 1}, "NDNT.networks.FFnet_external.__init__": {"tf": 1}, "NDNT.networks.FFnet_external.network_type": {"tf": 1}, "NDNT.networks.FFnet_external.input_dims_reshape": {"tf": 1}, "NDNT.networks.FFnet_external.forward": {"tf": 1}, "NDNT.networks.FFnet_external.compute_reg_loss": {"tf": 1}, "NDNT.networks.FFnet_external.list_params": {"tf": 1}, "NDNT.networks.FFnet_external.set_params": {"tf": 1}, "NDNT.networks.FFnet_external.ffnet_dict": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_external": {"tf": 1}}, "df": 10, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.layers.externallayer.ExternalLayer": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.__init__": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.input_dims": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.num_filters": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.filter_dims": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.output_dims": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.reg": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.forward": {"tf": 1}}, "df": 8}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.training.trainer.Trainer.graceful_exit": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.layers.ndnlayer.NDNLayer.initialize_gaussian_envelope": {"tf": 1}, "NDNT.utils.NDNutils.initialize_gaussian_envelope": {"tf": 1}}, "df": 2}}}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.utils.NDNutils.ensure_dir": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"NDNT.training.ada_hessian.AdaHessian.update_each": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.training.earlystopping.EarlyStopping.early_stop": {"tf": 1}, "NDNT.training.trainer.Trainer.early_stopping": {"tf": 1}}, "df": 2, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.training.earlystopping.EarlyStopping": {"tf": 1}, "NDNT.training.earlystopping.EarlyStopping.__init__": {"tf": 1}, "NDNT.training.earlystopping.EarlyStopping.patience": {"tf": 1}, "NDNT.training.earlystopping.EarlyStopping.verbose": {"tf": 1}, "NDNT.training.earlystopping.EarlyStopping.counter": {"tf": 1}, "NDNT.training.earlystopping.EarlyStopping.best_score": {"tf": 1}, "NDNT.training.earlystopping.EarlyStopping.early_stop": {"tf": 1}, "NDNT.training.earlystopping.EarlyStopping.val_loss_min": {"tf": 1}, "NDNT.training.earlystopping.EarlyStopping.delta": {"tf": 1}, "NDNT.training.earlystopping.EarlyStopping.trace_func": {"tf": 1}}, "df": 10}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"NDNT.training.trainer.Trainer.epoch": {"tf": 1}, "NDNT.training.trainer.Trainer.validate_one_epoch": {"tf": 1}, "NDNT.training.trainer.Trainer.train_one_epoch": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.train_one_epoch": {"tf": 1}, "NDNT.training.trainer.TemperatureCalibratedTrainer.validate_one_epoch": {"tf": 1}}, "df": 5, "s": {"docs": {"NDNT.training.trainer.Trainer.max_epochs": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_log_epsilon": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.utils.DanUtils.time_embedding_simple": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1}}, "df": 3}}}}}}}, "a": {"docs": {"NDNT.utils.MattUtils.smooth_ema": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer.sample_mode": {"tf": 1}}, "df": 1, "l": {"docs": {"NDNT.NDN.NDN.save_model_zip": {"tf": 1}, "NDNT.NDN.NDN.load_model_zip": {"tf": 1}, "NDNT.NDN.NDN.save_model": {"tf": 1}, "NDNT.NDN.NDN.save_model_chk": {"tf": 1}, "NDNT.NDN.NDN.load_model": {"tf": 1}, "NDNT.NDN.NDN.load_model_chk": {"tf": 1}, "NDNT.NDN.NDN.model_string": {"tf": 1}, "NDNT.training.trainer.Trainer.checkpoint_model": {"tf": 1}, "NDNT.utils.NDNutils.load_model": {"tf": 1}}, "df": 9, "s": {"docs": {"NDNT.NDN.NDN.eval_models": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.utils.NDNutils.ModelSummary": {"tf": 1}}, "df": 1}}}}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.regularization.Regularization.reg_modules": {"tf": 1}, "NDNT.modules.regularization.Regularization.build_reg_modules": {"tf": 1}}, "df": 2}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.utils.DanUtils.monocular_data_import": {"tf": 1}}, "df": 1}}}}}}}}, "u": {"docs": {"NDNT.modules.layers.lvlayers.LVLayerOLD.init_mu_range": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.init_mu_range": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.mu": {"tf": 1}}, "df": 3, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.utils.DanUtils.max_multiD": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.modules.layers.orilayers.OriConvLayer.get_rot_mat": {"tf": 1}, "NDNT.utils.NDNutils.shift_mat_zpad": {"tf": 1}}, "df": 2, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"NDNT.modules.layers.orilayers.OriLayer.rotation_matrix_tensor": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.rotation_matrix_tensor": {"tf": 1}, "NDNT.utils.DanUtils.display_matrix": {"tf": 1}, "NDNT.utils.DanUtils.design_matrix_drift": {"tf": 1}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_maxpenalty_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_localpenalty_matrix": {"tf": 1}}, "df": 8}}}, "s": {"docs": {"NDNT.modules.regularization.LocalityReg.build_reg_mats": {"tf": 1}, "NDNT.modules.regularization.DiagonalReg.build_reg_mats": {"tf": 1}}, "df": 2}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {"NDNT.utils.DanUtils.matlab_export": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer.initialize_spatial_mapping": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.layers.specialtylayers.MaskLayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.layer_dict": {"tf": 1}}, "df": 4}}}}}}}, "x": {"docs": {"NDNT.training.trainer.Trainer.max_epochs": {"tf": 1}, "NDNT.utils.DanUtils.max_multiD": {"tf": 1}, "NDNT.utils.NDNutils.get_max_samples": {"tf": 1}}, "df": 3, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.utils.create_reg_matrices.create_maxpenalty_matrix": {"tf": 1}}, "df": 1}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.training.earlystopping.EarlyStopping.val_loss_min": {"tf": 1}, "NDNT.training.trainer.Trainer.val_loss_min": {"tf": 1}}, "df": 2, "u": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.layers.specialtylayers.L1convLayer.weight_minus": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"NDNT.training.trainer.Trainer.step_scheduler_metric": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.__init__": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.loss_name": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.loss": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.lossNR": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.unit_weighting": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.batch_weighting": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.forward": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.unit_loss": {"tf": 1}}, "df": 10}}}}}}}, "z": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {"NDNT.NDN.NDN.save_model_zip": {"tf": 1}, "NDNT.NDN.NDN.load_model_zip": {"tf": 1}}, "df": 2}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {"NDNT.training.ada_hessian.AdaHessian.zero_hessian": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.utils.NDNutils.shift_mat_zpad": {"tf": 1}}, "df": 1}}}}, "x": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.modules.activations.AdaptiveELU.xshift": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {"NDNT.networks.FFnetwork.xstim_n": {"tf": 1}}, "df": 1}}}}, "v": {"docs": {"NDNT.utils.NDNutils.generate_xv_folds": {"tf": 1}}, "df": 1}}, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.modules.activations.AdaptiveELU.yshift": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.modules.regularization.Regularization.unit_reg": {"tf": 1}, "NDNT.modules.regularization.Regularization.unit_reg_convert": {"tf": 1}, "NDNT.modules.regularization.RegModule.unit_reg": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.unit_weighting": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.unit_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.unit_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.unit_loss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.unit_weighting": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.unit_loss": {"tf": 1}}, "df": 11}}, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1}, "NDNT.utils.NDNutils.CPU_Unpickler.find_class": {"tf": 1}}, "df": 2}}}}}}}}, "p": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.training.ada_hessian.AdaHessian.update_each": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.curvature_update": {"tf": 1}}, "df": 2}}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.training.ada_hessian.AdaHessian.average_conv_kernel": {"tf": 1}}, "df": 1}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.training.ada_hessian.AdaHessian.zero_hessian": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.set_hessian": {"tf": 1}}, "df": 2}}}}}}}}}, "fullname": {"root": {"1": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.utils.plotting.plot_filters_1D": {"tf": 1}}, "df": 1}}, "2": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.utils.plotting.plot_filters_2D": {"tf": 1}}, "df": 1}}, "docs": {"NDNT.NDN.NDN.__init__": {"tf": 1}, "NDNT.modules.activations.Square.__init__": {"tf": 1}, "NDNT.modules.activations.AdaptiveELU.__init__": {"tf": 1}, "NDNT.modules.activity_regularization.ActivityRegularization.__init__": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchGenerator.__init__": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchIterator.__init__": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.__init__": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.__init__": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.__init__": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.__init__": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.__init__": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.__init__": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.__init__": {"tf": 1}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1}, "NDNT.modules.regularization.RegModule.__init__": {"tf": 1}, "NDNT.modules.regularization.LocalityReg.__init__": {"tf": 1}, "NDNT.modules.regularization.DiagonalReg.__init__": {"tf": 1}, "NDNT.modules.regularization.InlineReg.__init__": {"tf": 1}, "NDNT.modules.regularization.ConvReg.__init__": {"tf": 1}, "NDNT.modules.regularization.Tikhanov.__init__": {"tf": 1}, "NDNT.modules.regularization.TikhanovC.__init__": {"tf": 1}, "NDNT.modules.regularization.ActivityReg.__init__": {"tf": 1}, "NDNT.networks.FFnetwork.__init__": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.__init__": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d.__init__": {"tf": 1}, "NDNT.networks.ReadoutNetwork.__init__": {"tf": 1}, "NDNT.networks.FFnet_external.__init__": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.__init__": {"tf": 1}, "NDNT.training.earlystopping.EarlyStopping.__init__": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.__init__": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.__init__": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew.__init__": {"tf": 1}, "NDNT.training.trainer.Trainer.__init__": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.__init__": {"tf": 1}, "NDNT.training.trainer.TemperatureCalibratedTrainer.__init__": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.__init__": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.__init__": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.__init__": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.__init__": {"tf": 1}}, "df": 64, "n": {"docs": {"NDNT.modules.layers.readouts.FixationLayer.fix_n_index": {"tf": 1}, "NDNT.networks.FFnetwork.xstim_n": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.n_samples": {"tf": 1}, "NDNT.training.trainer.Trainer.n_iter": {"tf": 1}}, "df": 4, "d": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.NDN": {"tf": 1}, "NDNT.NDN.FFnets": {"tf": 1}, "NDNT.NDN.NDN": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.__init__": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.loss_type": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.ffnet_out": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.seed": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.ffnet_list": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.working_dir": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.loss": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.val_loss": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.trainer": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.block_sample": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.networks": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.opt_params": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.speckled_flag": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.assemble_ffnetworks": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.compute_network_outputs": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.forward": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.training_step": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.validation_step": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.compute_reg_loss": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.get_trainer": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.get_dataloaders": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.get_optimizer": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.prepare_regularization": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.fit": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.fit_dl": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.initialize_loss": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.compute_average_responses": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.initialize_biases": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.eval_models": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.generate_predictions": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.change_loss": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.get_weights": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.get_readout_locations": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.passive_readout": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.list_parameters": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.set_parameters": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.set_reg_val": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.plot_filters": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.save_model_zip": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.load_model_zip": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.save_model": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.save_model_chk": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.get_null_adjusted_ll": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.get_activations": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.device": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.load_model": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.load_model_chk": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.model_string": {"tf": 1.4142135623730951}}, "df": 51, "t": {"docs": {"NDNT": {"tf": 1}, "NDNT.NDN": {"tf": 1}, "NDNT.NDN.FFnets": {"tf": 1}, "NDNT.NDN.NDN": {"tf": 1}, "NDNT.NDN.NDN.__init__": {"tf": 1}, "NDNT.NDN.NDN.loss_type": {"tf": 1}, "NDNT.NDN.NDN.ffnet_out": {"tf": 1}, "NDNT.NDN.NDN.seed": {"tf": 1}, "NDNT.NDN.NDN.ffnet_list": {"tf": 1}, "NDNT.NDN.NDN.working_dir": {"tf": 1}, "NDNT.NDN.NDN.loss": {"tf": 1}, "NDNT.NDN.NDN.val_loss": {"tf": 1}, "NDNT.NDN.NDN.trainer": {"tf": 1}, "NDNT.NDN.NDN.block_sample": {"tf": 1}, "NDNT.NDN.NDN.networks": {"tf": 1}, "NDNT.NDN.NDN.opt_params": {"tf": 1}, "NDNT.NDN.NDN.speckled_flag": {"tf": 1}, "NDNT.NDN.NDN.assemble_ffnetworks": {"tf": 1}, "NDNT.NDN.NDN.compute_network_outputs": {"tf": 1}, "NDNT.NDN.NDN.forward": {"tf": 1}, "NDNT.NDN.NDN.training_step": {"tf": 1}, "NDNT.NDN.NDN.validation_step": {"tf": 1}, "NDNT.NDN.NDN.compute_reg_loss": {"tf": 1}, "NDNT.NDN.NDN.get_trainer": {"tf": 1}, "NDNT.NDN.NDN.get_dataloaders": {"tf": 1}, "NDNT.NDN.NDN.get_optimizer": {"tf": 1}, "NDNT.NDN.NDN.prepare_regularization": {"tf": 1}, "NDNT.NDN.NDN.fit": {"tf": 1}, "NDNT.NDN.NDN.fit_dl": {"tf": 1}, "NDNT.NDN.NDN.initialize_loss": {"tf": 1}, "NDNT.NDN.NDN.compute_average_responses": {"tf": 1}, "NDNT.NDN.NDN.initialize_biases": {"tf": 1}, "NDNT.NDN.NDN.eval_models": {"tf": 1}, "NDNT.NDN.NDN.generate_predictions": {"tf": 1}, "NDNT.NDN.NDN.change_loss": {"tf": 1}, "NDNT.NDN.NDN.get_weights": {"tf": 1}, "NDNT.NDN.NDN.get_readout_locations": {"tf": 1}, "NDNT.NDN.NDN.passive_readout": {"tf": 1}, "NDNT.NDN.NDN.list_parameters": {"tf": 1}, "NDNT.NDN.NDN.set_parameters": {"tf": 1}, "NDNT.NDN.NDN.set_reg_val": {"tf": 1}, "NDNT.NDN.NDN.plot_filters": {"tf": 1}, "NDNT.NDN.NDN.save_model_zip": {"tf": 1}, "NDNT.NDN.NDN.load_model_zip": {"tf": 1}, "NDNT.NDN.NDN.save_model": {"tf": 1}, "NDNT.NDN.NDN.save_model_chk": {"tf": 1}, "NDNT.NDN.NDN.get_null_adjusted_ll": {"tf": 1}, "NDNT.NDN.NDN.get_activations": {"tf": 1}, "NDNT.NDN.NDN.device": {"tf": 1}, "NDNT.NDN.NDN.load_model": {"tf": 1}, "NDNT.NDN.NDN.load_model_chk": {"tf": 1}, "NDNT.NDN.NDN.model_string": {"tf": 1}, "NDNT.modules": {"tf": 1}, "NDNT.modules.activations": {"tf": 1}, "NDNT.modules.activations.adaptive_elu": {"tf": 1}, "NDNT.modules.activations.Square": {"tf": 1}, "NDNT.modules.activations.Square.__init__": {"tf": 1}, "NDNT.modules.activations.Square.forward": {"tf": 1}, "NDNT.modules.activations.AdaptiveELU": {"tf": 1}, "NDNT.modules.activations.AdaptiveELU.__init__": {"tf": 1}, "NDNT.modules.activations.AdaptiveELU.xshift": {"tf": 1}, "NDNT.modules.activations.AdaptiveELU.yshift": {"tf": 1}, "NDNT.modules.activations.AdaptiveELU.inplace": {"tf": 1}, "NDNT.modules.activations.AdaptiveELU.forward": {"tf": 1}, "NDNT.modules.activations.NLtypes": {"tf": 1}, "NDNT.modules.activity_regularization": {"tf": 1}, "NDNT.modules.activity_regularization.ActivityRegularization": {"tf": 1}, "NDNT.modules.activity_regularization.ActivityRegularization.__init__": {"tf": 1}, "NDNT.modules.activity_regularization.ActivityRegularization.reg_vals": {"tf": 1}, "NDNT.modules.activity_regularization.ActivityRegularization.activity": {"tf": 1}, "NDNT.modules.activity_regularization.ActivityRegularization.nonneg": {"tf": 1}, "NDNT.modules.activity_regularization.ActivityRegularization.regularize": {"tf": 1}, "NDNT.modules.experiment_sampler": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchGenerator": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchGenerator.__init__": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchGenerator.batches": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchGenerator.current_batch_index": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchGenerator.next": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchIterator": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchIterator.__init__": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchIterator.exp_batch_generators": {"tf": 1}, "NDNT.modules.experiment_sampler.construct_exp_to_time": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.__init__": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.dataset": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.batch_size": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.shuffle": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.random_seed": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.num_exps": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.exp_to_time": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.exp_lengths": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.exp_batch_sizes": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.num_batches": {"tf": 1}, "NDNT.modules.layers": {"tf": 1}, "NDNT.modules.layers.bilayers": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D.forward": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.output_dims": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.num_outputs": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.forward": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.weights_folded_dims": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.forward": {"tf": 1}, "NDNT.modules.layers.convlayers": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.window": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.tent_basis": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.is1D": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.res_layer": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.filter_dims": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.padding": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.folded_dims": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.batchnorm_clone": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.batchnorm_convert": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.forward": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.num_lags": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.is1D": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.padding": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.forward": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.num_lags": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.output_dims": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.forward": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.output_dims": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.num_outputs": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.num_other_dims": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.forward": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.dim_info": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.forward": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.transparent": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.num_outputs": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.num_sp_dims": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.forward": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.output_dims": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.num_outputs": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.transparent": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.num_spt_dims": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.forward": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.externallayer": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.__init__": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.input_dims": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.num_filters": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.filter_dims": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.output_dims": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.reg": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.forward": {"tf": 1}, "NDNT.modules.layers.laglayers": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.__init__": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.num_lags": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.num_folded_dims": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.forward": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.__init__": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.forward": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.__init__": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.numLVs": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.nt": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.init_mu_range": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.init_sigma": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.sigma": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.sm_skips": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.sample": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.weight_scale": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.forward": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1}, "NDNT.modules.layers.ndnlayer": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.input_dims": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.num_filters": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.output_dims": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.norm_type": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.pos_constraint": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.conv": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.NL": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.shape": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.weight_scale": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.weight": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.reg": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.num_inh": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.reset_parameters": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.initialize_gaussian_envelope": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.forward": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.compute_reg_loss": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.get_weights": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.list_parameters": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.set_parameters": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.set_reg_val": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.dim_info": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.normlayers": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.__init__": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.output_dims": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.num_outputs": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.forward": {"tf": 1}, "NDNT.modules.layers.orilayers": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.__init__": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.angles": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.output_dims": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.rotation_matrix_tensor": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.forward": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.angles": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.folded_dims": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.output_dims": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.rotation_matrix_tensor": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.get_rot_mat": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.rotate_tensor": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.forward": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.__init__": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.ori_padding": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.input_dims": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.output_dims": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.forward": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.plot_filters": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.batch_sample": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_mode": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.init_mu_range": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.init_sigma": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.align_corners": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.grid_shape": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.mu": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.sigma": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.sample": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.features": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.grid": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.initialize_spatial_mapping": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.get_weights": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.forward": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.set_readout_locations": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.get_readout_locations": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.passive_readout": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.input_dims": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.filter_dims": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.reg": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.forward": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.passive_readout": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.num_spatial_dims": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.num_fixations": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.batch_sample": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.init_sigma": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.single_sigma": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.fix_n_index": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.sample": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.forward": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.initialize": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.num_iter": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.LN_reverse": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.output_config": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.res_layer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.forward": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.num_iter": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.output_config": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.res_layer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.num_outputs": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.forward": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.num_iter": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.output_config": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.res_layer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.num_outputs": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.forward": {"tf": 1}, "NDNT.modules.layers.specialtylayers": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.tent_basis": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.res_layer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.folded_dims": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.forward": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.weight_minus": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.window": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.tent_basis": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.reset_parameters2": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.forward": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.timelayers": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.__init__": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.output_dims": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.num_outputs": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.forward": {"tf": 1}, "NDNT.modules.regularization": {"tf": 1}, "NDNT.modules.regularization.Regularization": {"tf": 1}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1}, "NDNT.modules.regularization.Regularization.input_dims": {"tf": 1}, "NDNT.modules.regularization.Regularization.vals": {"tf": 1}, "NDNT.modules.regularization.Regularization.reg_modules": {"tf": 1}, "NDNT.modules.regularization.Regularization.normalize": {"tf": 1}, "NDNT.modules.regularization.Regularization.unit_reg": {"tf": 1}, "NDNT.modules.regularization.Regularization.folded_lags": {"tf": 1}, "NDNT.modules.regularization.Regularization.num_outputs": {"tf": 1}, "NDNT.modules.regularization.Regularization.pos_constraint": {"tf": 1}, "NDNT.modules.regularization.Regularization.boundary_conditions": {"tf": 1}, "NDNT.modules.regularization.Regularization.activity_regmodule": {"tf": 1}, "NDNT.modules.regularization.Regularization.set_reg_val": {"tf": 1}, "NDNT.modules.regularization.Regularization.unit_reg_convert": {"tf": 1}, "NDNT.modules.regularization.Regularization.build_reg_modules": {"tf": 1}, "NDNT.modules.regularization.Regularization.compute_reg_loss": {"tf": 1}, "NDNT.modules.regularization.Regularization.compute_activity_regularization": {"tf": 1}, "NDNT.modules.regularization.Regularization.reg_copy": {"tf": 1}, "NDNT.modules.regularization.Regularization.get_reg_class": {"tf": 1}, "NDNT.modules.regularization.RegModule": {"tf": 1}, "NDNT.modules.regularization.RegModule.__init__": {"tf": 1}, "NDNT.modules.regularization.RegModule.reg_type": {"tf": 1}, "NDNT.modules.regularization.RegModule.unit_reg": {"tf": 1}, "NDNT.modules.regularization.RegModule.input_dims": {"tf": 1}, "NDNT.modules.regularization.RegModule.num_dims": {"tf": 1}, "NDNT.modules.regularization.RegModule.folded_lags": {"tf": 1}, "NDNT.modules.regularization.RegModule.pos_constraint": {"tf": 1}, "NDNT.modules.regularization.RegModule.forward": {"tf": 1}, "NDNT.modules.regularization.LocalityReg": {"tf": 1}, "NDNT.modules.regularization.LocalityReg.__init__": {"tf": 1}, "NDNT.modules.regularization.LocalityReg.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.LocalityReg.build_reg_mats": {"tf": 1}, "NDNT.modules.regularization.DiagonalReg": {"tf": 1}, "NDNT.modules.regularization.DiagonalReg.__init__": {"tf": 1}, "NDNT.modules.regularization.DiagonalReg.input_dims": {"tf": 1}, "NDNT.modules.regularization.DiagonalReg.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.DiagonalReg.build_reg_mats": {"tf": 1}, "NDNT.modules.regularization.InlineReg": {"tf": 1}, "NDNT.modules.regularization.InlineReg.__init__": {"tf": 1}, "NDNT.modules.regularization.InlineReg.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.ConvReg": {"tf": 1}, "NDNT.modules.regularization.ConvReg.__init__": {"tf": 1}, "NDNT.modules.regularization.ConvReg.BC": {"tf": 1}, "NDNT.modules.regularization.ConvReg.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.Tikhanov": {"tf": 1}, "NDNT.modules.regularization.Tikhanov.__init__": {"tf": 1}, "NDNT.modules.regularization.Tikhanov.input_dims": {"tf": 1}, "NDNT.modules.regularization.Tikhanov.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.TikhanovC": {"tf": 1}, "NDNT.modules.regularization.TikhanovC.__init__": {"tf": 1}, "NDNT.modules.regularization.TikhanovC.input_dims": {"tf": 1}, "NDNT.modules.regularization.TikhanovC.collapse_dims": {"tf": 1}, "NDNT.modules.regularization.TikhanovC.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.ActivityReg": {"tf": 1}, "NDNT.modules.regularization.ActivityReg.__init__": {"tf": 1}, "NDNT.modules.regularization.ActivityReg.acitivity_penalty": {"tf": 1}, "NDNT.modules.regularization.ActivityReg.compute_activity_penalty": {"tf": 1}, "NDNT.modules.regularization.ActivityReg.compute_reg_penalty": {"tf": 1}, "NDNT.networks": {"tf": 1}, "NDNT.networks.LayerTypes": {"tf": 1}, "NDNT.networks.FFnetwork": {"tf": 1}, "NDNT.networks.FFnetwork.__init__": {"tf": 1}, "NDNT.networks.FFnetwork.network_type": {"tf": 1}, "NDNT.networks.FFnetwork.layer_list": {"tf": 1}, "NDNT.networks.FFnetwork.layer_types": {"tf": 1}, "NDNT.networks.FFnetwork.xstim_n": {"tf": 1}, "NDNT.networks.FFnetwork.ffnets_in": {"tf": 1}, "NDNT.networks.FFnetwork.layers": {"tf": 1}, "NDNT.networks.FFnetwork.output_dims": {"tf": 1}, "NDNT.networks.FFnetwork.num_outputs": {"tf": 1}, "NDNT.networks.FFnetwork.determine_input_dims": {"tf": 1}, "NDNT.networks.FFnetwork.preprocess_input": {"tf": 1}, "NDNT.networks.FFnetwork.forward": {"tf": 1}, "NDNT.networks.FFnetwork.prepare_regularization": {"tf": 1}, "NDNT.networks.FFnetwork.compute_reg_loss": {"tf": 1}, "NDNT.networks.FFnetwork.list_parameters": {"tf": 1}, "NDNT.networks.FFnetwork.set_parameters": {"tf": 1}, "NDNT.networks.FFnetwork.set_reg_val": {"tf": 1}, "NDNT.networks.FFnetwork.plot_filters": {"tf": 1}, "NDNT.networks.FFnetwork.get_weights": {"tf": 1}, "NDNT.networks.FFnetwork.ffnet_dict": {"tf": 1}, "NDNT.networks.ScaffoldNetwork": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.__init__": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.network_type": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.num_lags_out": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.spatial_dims": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.filter_count": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.forward": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.ffnet_dict": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d.__init__": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d.network_type": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d.num_lags_out": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d.forward": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d.ffnet_dict": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1}, "NDNT.networks.ReadoutNetwork.__init__": {"tf": 1}, "NDNT.networks.ReadoutNetwork.network_type": {"tf": 1}, "NDNT.networks.ReadoutNetwork.determine_input_dims": {"tf": 1}, "NDNT.networks.ReadoutNetwork.forward": {"tf": 1}, "NDNT.networks.ReadoutNetwork.get_readout_locations": {"tf": 1}, "NDNT.networks.ReadoutNetwork.set_readout_locations": {"tf": 1}, "NDNT.networks.ReadoutNetwork.ffnet_dict": {"tf": 1}, "NDNT.networks.FFnet_external": {"tf": 1}, "NDNT.networks.FFnet_external.__init__": {"tf": 1}, "NDNT.networks.FFnet_external.network_type": {"tf": 1}, "NDNT.networks.FFnet_external.input_dims_reshape": {"tf": 1}, "NDNT.networks.FFnet_external.forward": {"tf": 1}, "NDNT.networks.FFnet_external.compute_reg_loss": {"tf": 1}, "NDNT.networks.FFnet_external.list_params": {"tf": 1}, "NDNT.networks.FFnet_external.set_params": {"tf": 1}, "NDNT.networks.FFnet_external.ffnet_dict": {"tf": 1}, "NDNT.training": {"tf": 1}, "NDNT.training.ada_hessian": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.__init__": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.n_samples": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.update_each": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.average_conv_kernel": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.generator": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.get_params": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.zero_hessian": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.set_hessian": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.step": {"tf": 1}, "NDNT.training.earlystopping": {"tf": 1}, "NDNT.training.earlystopping.EarlyStopping": {"tf": 1}, "NDNT.training.earlystopping.EarlyStopping.__init__": {"tf": 1}, "NDNT.training.earlystopping.EarlyStopping.patience": {"tf": 1}, "NDNT.training.earlystopping.EarlyStopping.verbose": {"tf": 1}, "NDNT.training.earlystopping.EarlyStopping.counter": {"tf": 1}, "NDNT.training.earlystopping.EarlyStopping.best_score": {"tf": 1}, "NDNT.training.earlystopping.EarlyStopping.early_stop": {"tf": 1}, "NDNT.training.earlystopping.EarlyStopping.val_loss_min": {"tf": 1}, "NDNT.training.earlystopping.EarlyStopping.delta": {"tf": 1}, "NDNT.training.earlystopping.EarlyStopping.trace_func": {"tf": 1}, "NDNT.training.lbfgs": {"tf": 1}, "NDNT.training.lbfgs.is_legal": {"tf": 1}, "NDNT.training.lbfgs.polyinterp": {"tf": 1}, "NDNT.training.lbfgs.LBFGS": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.__init__": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.line_search": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.two_loop_recursion": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.curvature_update": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.step": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.__init__": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1}, "NDNT.training.lbfgsnew": {"tf": 1}, "NDNT.training.lbfgsnew.be_verbose": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew.__init__": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew.step": {"tf": 1}, "NDNT.training.trainer": {"tf": 1}, "NDNT.training.trainer.Trainer": {"tf": 1}, "NDNT.training.trainer.Trainer.__init__": {"tf": 1}, "NDNT.training.trainer.Trainer.optimizer": {"tf": 1}, "NDNT.training.trainer.Trainer.scheduler": {"tf": 1}, "NDNT.training.trainer.Trainer.optimize_graph": {"tf": 1}, "NDNT.training.trainer.Trainer.log_activations": {"tf": 1}, "NDNT.training.trainer.Trainer.accumulate_grad_batches": {"tf": 1}, "NDNT.training.trainer.Trainer.verbose": {"tf": 1}, "NDNT.training.trainer.Trainer.set_to_none": {"tf": 1}, "NDNT.training.trainer.Trainer.fullbatch": {"tf": 1}, "NDNT.training.trainer.Trainer.dirpath": {"tf": 1}, "NDNT.training.trainer.Trainer.early_stopping": {"tf": 1}, "NDNT.training.trainer.Trainer.device": {"tf": 1}, "NDNT.training.trainer.Trainer.logger": {"tf": 1}, "NDNT.training.trainer.Trainer.version": {"tf": 1}, "NDNT.training.trainer.Trainer.epoch": {"tf": 1}, "NDNT.training.trainer.Trainer.max_epochs": {"tf": 1}, "NDNT.training.trainer.Trainer.n_iter": {"tf": 1}, "NDNT.training.trainer.Trainer.val_loss_min": {"tf": 1}, "NDNT.training.trainer.Trainer.step_scheduler_after": {"tf": 1}, "NDNT.training.trainer.Trainer.step_scheduler_metric": {"tf": 1}, "NDNT.training.trainer.Trainer.fit": {"tf": 1}, "NDNT.training.trainer.Trainer.prepare_fit": {"tf": 1}, "NDNT.training.trainer.Trainer.fit_loop": {"tf": 1}, "NDNT.training.trainer.Trainer.validate_one_epoch": {"tf": 1}, "NDNT.training.trainer.Trainer.train_one_epoch": {"tf": 1}, "NDNT.training.trainer.Trainer.train_one_step": {"tf": 1}, "NDNT.training.trainer.Trainer.checkpoint_model": {"tf": 1}, "NDNT.training.trainer.Trainer.graceful_exit": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.__init__": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.fullbatch": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.fit": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.fit_data_dict": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.train_one_epoch": {"tf": 1}, "NDNT.training.trainer.TemperatureCalibratedTrainer": {"tf": 1}, "NDNT.training.trainer.TemperatureCalibratedTrainer.__init__": {"tf": 1}, "NDNT.training.trainer.TemperatureCalibratedTrainer.validate_one_epoch": {"tf": 1}, "NDNT.utils": {"tf": 1}, "NDNT.utils.DanUtils": {"tf": 1}, "NDNT.utils.DanUtils.subplot_setup": {"tf": 1}, "NDNT.utils.DanUtils.ss": {"tf": 1}, "NDNT.utils.DanUtils.imagesc": {"tf": 1}, "NDNT.utils.DanUtils.find_peaks": {"tf": 1}, "NDNT.utils.DanUtils.filename_num2str": {"tf": 1}, "NDNT.utils.DanUtils.display_matrix": {"tf": 1}, "NDNT.utils.DanUtils.figure_export": {"tf": 1}, "NDNT.utils.DanUtils.matlab_export": {"tf": 1}, "NDNT.utils.DanUtils.save_python_data": {"tf": 1}, "NDNT.utils.DanUtils.load_python_data": {"tf": 1}, "NDNT.utils.DanUtils.fold_sample": {"tf": 1}, "NDNT.utils.DanUtils.time_embedding_simple": {"tf": 1}, "NDNT.utils.DanUtils.design_matrix_drift": {"tf": 1}, "NDNT.utils.DanUtils.max_multiD": {"tf": 1}, "NDNT.utils.DanUtils.iterate_lbfgs": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}, "NDNT.utils.DanUtils.monocular_data_import": {"tf": 1}, "NDNT.utils.MattUtils": {"tf": 1}, "NDNT.utils.MattUtils.load_losses": {"tf": 1}, "NDNT.utils.MattUtils.smooth_ema": {"tf": 1}, "NDNT.utils.MattUtils.smooth_conv": {"tf": 1}, "NDNT.utils.MattUtils.plot_losses": {"tf": 1}, "NDNT.utils.NDNutils": {"tf": 1}, "NDNT.utils.NDNutils.fit_lbfgs": {"tf": 1}, "NDNT.utils.NDNutils.create_optimizer_params": {"tf": 1}, "NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1}, "NDNT.utils.NDNutils.CPU_Unpickler.find_class": {"tf": 1}, "NDNT.utils.NDNutils.default_save_dir": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1}, "NDNT.utils.NDNutils.is_int": {"tf": 1}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 1}, "NDNT.utils.NDNutils.tent_basis_generate": {"tf": 1}, "NDNT.utils.NDNutils.shift_mat_zpad": {"tf": 1}, "NDNT.utils.NDNutils.generate_xv_folds": {"tf": 1}, "NDNT.utils.NDNutils.initialize_gaussian_envelope": {"tf": 1}, "NDNT.utils.NDNutils.pixel2grid": {"tf": 1}, "NDNT.utils.NDNutils.grid2pixel": {"tf": 1}, "NDNT.utils.NDNutils.save_checkpoint": {"tf": 1}, "NDNT.utils.NDNutils.load_checkpoint": {"tf": 1}, "NDNT.utils.NDNutils.ensure_dir": {"tf": 1}, "NDNT.utils.NDNutils.ModelSummary": {"tf": 1}, "NDNT.utils.NDNutils.summary_string": {"tf": 1}, "NDNT.utils.NDNutils.get_fit_versions": {"tf": 1}, "NDNT.utils.NDNutils.load_model": {"tf": 1}, "NDNT.utils.NDNutils.get_max_samples": {"tf": 1}, "NDNT.utils.NDNutils.NpEncoder": {"tf": 1}, "NDNT.utils.NDNutils.NpEncoder.default": {"tf": 1}, "NDNT.utils.create_reg_matrices": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_maxpenalty_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_localpenalty_matrix": {"tf": 1}, "NDNT.utils.ffnet_dicts": {"tf": 1}, "NDNT.utils.ffnet_dicts.layer_dict": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_NIM": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_readout": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_external": {"tf": 1}, "NDNT.utils.ffnet_dicts.list_complete": {"tf": 1}, "NDNT.utils.plotting": {"tf": 1}, "NDNT.utils.plotting.plot_filters_1D": {"tf": 1}, "NDNT.utils.plotting.plot_filters_2D": {"tf": 1}, "NDNT.utils.plotting.plot_filters_ST1D": {"tf": 1}, "NDNT.utils.plotting.plot_filters_ST2D": {"tf": 1}, "NDNT.utils.plotting.plot_filters_ST3D": {"tf": 1}, "NDNT.utils.plotting.plot_scatter": {"tf": 1}, "NDNT.utils.plotting.plot_internal_weights": {"tf": 1}, "NDNT.version": {"tf": 1}, "NDNT.version.version": {"tf": 1}, "NDNT.metrics": {"tf": 1}, "NDNT.metrics.mse_loss": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.__init__": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.loss_name": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.loss": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.lossNR": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.unit_weighting": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.batch_weighting": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.forward": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.__init__": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.loss_name": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.loss": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.lossNR": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.unit_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.batch_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_log_epsilon": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.forward": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.__init__": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.loss_name": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.loss": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.lossNR": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.unit_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.batch_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.forward": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.unit_loss": {"tf": 1}, "NDNT.metrics.rmse_loss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.__init__": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.loss_name": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.loss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.lossNR": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.unit_weighting": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.batch_weighting": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.forward": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.unit_loss": {"tf": 1}}, "df": 674}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.layers.ndnlayer": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.input_dims": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.num_filters": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.output_dims": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.norm_type": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.pos_constraint": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.conv": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.NL": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.shape": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.weight_scale": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.weight": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.reg": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.num_inh": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.reset_parameters": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.initialize_gaussian_envelope": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.preprocess_weights": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.compute_reg_loss": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.get_weights": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.list_parameters": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.set_parameters": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.set_reg_val": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.plot_filters": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.dim_info": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1.4142135623730951}}, "df": 27}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.utils.NDNutils": {"tf": 1}, "NDNT.utils.NDNutils.fit_lbfgs": {"tf": 1}, "NDNT.utils.NDNutils.create_optimizer_params": {"tf": 1}, "NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1}, "NDNT.utils.NDNutils.CPU_Unpickler.find_class": {"tf": 1}, "NDNT.utils.NDNutils.default_save_dir": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1}, "NDNT.utils.NDNutils.is_int": {"tf": 1}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 1}, "NDNT.utils.NDNutils.tent_basis_generate": {"tf": 1}, "NDNT.utils.NDNutils.shift_mat_zpad": {"tf": 1}, "NDNT.utils.NDNutils.generate_xv_folds": {"tf": 1}, "NDNT.utils.NDNutils.initialize_gaussian_envelope": {"tf": 1}, "NDNT.utils.NDNutils.pixel2grid": {"tf": 1}, "NDNT.utils.NDNutils.grid2pixel": {"tf": 1}, "NDNT.utils.NDNutils.save_checkpoint": {"tf": 1}, "NDNT.utils.NDNutils.load_checkpoint": {"tf": 1}, "NDNT.utils.NDNutils.ensure_dir": {"tf": 1}, "NDNT.utils.NDNutils.ModelSummary": {"tf": 1}, "NDNT.utils.NDNutils.summary_string": {"tf": 1}, "NDNT.utils.NDNutils.get_fit_versions": {"tf": 1}, "NDNT.utils.NDNutils.load_model": {"tf": 1}, "NDNT.utils.NDNutils.get_max_samples": {"tf": 1}, "NDNT.utils.NDNutils.NpEncoder": {"tf": 1}, "NDNT.utils.NDNutils.NpEncoder.default": {"tf": 1}}, "df": 26}}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"NDNT.NDN.NDN.compute_network_outputs": {"tf": 1}, "NDNT.networks.FFnetwork.network_type": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.network_type": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d.network_type": {"tf": 1}, "NDNT.networks.ReadoutNetwork.network_type": {"tf": 1}, "NDNT.networks.FFnet_external.network_type": {"tf": 1}}, "df": 6, "s": {"docs": {"NDNT.NDN.NDN.networks": {"tf": 1}, "NDNT.networks": {"tf": 1}, "NDNT.networks.LayerTypes": {"tf": 1}, "NDNT.networks.FFnetwork": {"tf": 1}, "NDNT.networks.FFnetwork.__init__": {"tf": 1}, "NDNT.networks.FFnetwork.network_type": {"tf": 1}, "NDNT.networks.FFnetwork.layer_list": {"tf": 1}, "NDNT.networks.FFnetwork.layer_types": {"tf": 1}, "NDNT.networks.FFnetwork.xstim_n": {"tf": 1}, "NDNT.networks.FFnetwork.ffnets_in": {"tf": 1}, "NDNT.networks.FFnetwork.layers": {"tf": 1}, "NDNT.networks.FFnetwork.output_dims": {"tf": 1}, "NDNT.networks.FFnetwork.num_outputs": {"tf": 1}, "NDNT.networks.FFnetwork.determine_input_dims": {"tf": 1}, "NDNT.networks.FFnetwork.preprocess_input": {"tf": 1}, "NDNT.networks.FFnetwork.forward": {"tf": 1}, "NDNT.networks.FFnetwork.prepare_regularization": {"tf": 1}, "NDNT.networks.FFnetwork.compute_reg_loss": {"tf": 1}, "NDNT.networks.FFnetwork.list_parameters": {"tf": 1}, "NDNT.networks.FFnetwork.set_parameters": {"tf": 1}, "NDNT.networks.FFnetwork.set_reg_val": {"tf": 1}, "NDNT.networks.FFnetwork.plot_filters": {"tf": 1}, "NDNT.networks.FFnetwork.get_weights": {"tf": 1}, "NDNT.networks.FFnetwork.ffnet_dict": {"tf": 1}, "NDNT.networks.ScaffoldNetwork": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.__init__": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.network_type": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.num_lags_out": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.spatial_dims": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.filter_count": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.forward": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.ffnet_dict": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d.__init__": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d.network_type": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d.num_lags_out": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d.forward": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d.ffnet_dict": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1}, "NDNT.networks.ReadoutNetwork.__init__": {"tf": 1}, "NDNT.networks.ReadoutNetwork.network_type": {"tf": 1}, "NDNT.networks.ReadoutNetwork.determine_input_dims": {"tf": 1}, "NDNT.networks.ReadoutNetwork.forward": {"tf": 1}, "NDNT.networks.ReadoutNetwork.get_readout_locations": {"tf": 1}, "NDNT.networks.ReadoutNetwork.set_readout_locations": {"tf": 1}, "NDNT.networks.ReadoutNetwork.ffnet_dict": {"tf": 1}, "NDNT.networks.FFnet_external": {"tf": 1}, "NDNT.networks.FFnet_external.__init__": {"tf": 1}, "NDNT.networks.FFnet_external.network_type": {"tf": 1}, "NDNT.networks.FFnet_external.input_dims_reshape": {"tf": 1}, "NDNT.networks.FFnet_external.forward": {"tf": 1}, "NDNT.networks.FFnet_external.compute_reg_loss": {"tf": 1}, "NDNT.networks.FFnet_external.list_params": {"tf": 1}, "NDNT.networks.FFnet_external.set_params": {"tf": 1}, "NDNT.networks.FFnet_external.ffnet_dict": {"tf": 1}}, "df": 55}}}}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.modules.experiment_sampler.ExperimentBatchGenerator.next": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.NDN.NDN.get_null_adjusted_ll": {"tf": 1}}, "df": 1}}, "m": {"2": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.utils.DanUtils.filename_num2str": {"tf": 1}}, "df": 1}}}}, "docs": {"NDNT.modules.experiment_sampler.ExperimentSampler.num_exps": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.num_batches": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.num_outputs": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.num_lags": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.num_lags": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.num_outputs": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.num_other_dims": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.num_outputs": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.num_sp_dims": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.num_outputs": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.num_spt_dims": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.num_filters": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.num_lags": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.num_folded_dims": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.num_filters": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.num_inh": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.num_outputs": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.num_spatial_dims": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.num_fixations": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.num_iter": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.num_iter": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.num_outputs": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.num_iter": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.num_outputs": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.num_outputs": {"tf": 1}, "NDNT.modules.regularization.Regularization.num_outputs": {"tf": 1}, "NDNT.modules.regularization.RegModule.num_dims": {"tf": 1}, "NDNT.networks.FFnetwork.num_outputs": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.num_lags_out": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d.num_lags_out": {"tf": 1}}, "df": 30, "l": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.layers.lvlayers.LVLayerOLD.numLVs": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {"NDNT.modules.layers.ndnlayer.NDNLayer.NL": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.activations.NLtypes": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.modules.activity_regularization.ActivityRegularization.nonneg": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"NDNT.training.trainer.Trainer.set_to_none": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "m": {"docs": {"NDNT.modules.layers.ndnlayer.NDNLayer.norm_type": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.layers.normlayers": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.__init__": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.output_dims": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.num_outputs": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.forward": {"tf": 1}}, "df": 7}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.regularization.Regularization.normalize": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {"NDNT.modules.layers.lvlayers.LVLayerOLD.nt": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "m": {"docs": {"NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_NIM": {"tf": 1}}, "df": 2}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.utils.NDNutils.NpEncoder": {"tf": 1}, "NDNT.utils.NDNutils.NpEncoder.default": {"tf": 1}}, "df": 2}}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.metrics.mse_loss.MseLoss_datafilter.loss_name": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.loss_name": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.loss_name": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.loss_name": {"tf": 1}}, "df": 4}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.NDN.NDN.ffnet_out": {"tf": 1}, "NDNT.NDN.NDN.ffnet_list": {"tf": 1}, "NDNT.networks.FFnetwork.ffnet_dict": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.ffnet_dict": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d.ffnet_dict": {"tf": 1}, "NDNT.networks.ReadoutNetwork.ffnet_dict": {"tf": 1}, "NDNT.networks.FFnet_external": {"tf": 1}, "NDNT.networks.FFnet_external.__init__": {"tf": 1}, "NDNT.networks.FFnet_external.network_type": {"tf": 1}, "NDNT.networks.FFnet_external.input_dims_reshape": {"tf": 1}, "NDNT.networks.FFnet_external.forward": {"tf": 1}, "NDNT.networks.FFnet_external.compute_reg_loss": {"tf": 1}, "NDNT.networks.FFnet_external.list_params": {"tf": 1}, "NDNT.networks.FFnet_external.set_params": {"tf": 1}, "NDNT.networks.FFnet_external.ffnet_dict": {"tf": 1.4142135623730951}, "NDNT.utils.ffnet_dicts": {"tf": 1}, "NDNT.utils.ffnet_dicts.layer_dict": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 1.4142135623730951}, "NDNT.utils.ffnet_dicts.ffnet_dict_NIM": {"tf": 1.4142135623730951}, "NDNT.utils.ffnet_dicts.ffnet_dict_readout": {"tf": 1.4142135623730951}, "NDNT.utils.ffnet_dicts.ffnet_dict_external": {"tf": 1.4142135623730951}, "NDNT.utils.ffnet_dicts.list_complete": {"tf": 1}}, "df": 22, "s": {"docs": {"NDNT.NDN.FFnets": {"tf": 1}, "NDNT.networks.FFnetwork.ffnets_in": {"tf": 1}}, "df": 2}, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"NDNT.networks.FFnetwork": {"tf": 1}, "NDNT.networks.FFnetwork.__init__": {"tf": 1}, "NDNT.networks.FFnetwork.network_type": {"tf": 1}, "NDNT.networks.FFnetwork.layer_list": {"tf": 1}, "NDNT.networks.FFnetwork.layer_types": {"tf": 1}, "NDNT.networks.FFnetwork.xstim_n": {"tf": 1}, "NDNT.networks.FFnetwork.ffnets_in": {"tf": 1}, "NDNT.networks.FFnetwork.layers": {"tf": 1}, "NDNT.networks.FFnetwork.output_dims": {"tf": 1}, "NDNT.networks.FFnetwork.num_outputs": {"tf": 1}, "NDNT.networks.FFnetwork.determine_input_dims": {"tf": 1}, "NDNT.networks.FFnetwork.preprocess_input": {"tf": 1}, "NDNT.networks.FFnetwork.forward": {"tf": 1}, "NDNT.networks.FFnetwork.prepare_regularization": {"tf": 1}, "NDNT.networks.FFnetwork.compute_reg_loss": {"tf": 1}, "NDNT.networks.FFnetwork.list_parameters": {"tf": 1}, "NDNT.networks.FFnetwork.set_parameters": {"tf": 1}, "NDNT.networks.FFnetwork.set_reg_val": {"tf": 1}, "NDNT.networks.FFnetwork.plot_filters": {"tf": 1}, "NDNT.networks.FFnetwork.get_weights": {"tf": 1}, "NDNT.networks.FFnetwork.ffnet_dict": {"tf": 1}}, "df": 21, "s": {"docs": {"NDNT.NDN.NDN.assemble_ffnetworks": {"tf": 1}}, "df": 1}}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.NDN.NDN.speckled_flag": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.NDN.NDN.forward": {"tf": 1}, "NDNT.modules.activations.Square.forward": {"tf": 1}, "NDNT.modules.activations.AdaptiveELU.forward": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D.forward": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.forward": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.forward": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.forward": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.forward": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.forward": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.forward": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.forward": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.forward": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.forward": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.forward": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.forward": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.forward": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.forward": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.forward": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.forward": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.forward": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.forward": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.forward": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.forward": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.forward": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.forward": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.forward": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.forward": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.forward": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.forward": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.forward": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.forward": {"tf": 1}, "NDNT.modules.regularization.RegModule.forward": {"tf": 1}, "NDNT.networks.FFnetwork.forward": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.forward": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d.forward": {"tf": 1}, "NDNT.networks.ReadoutNetwork.forward": {"tf": 1}, "NDNT.networks.FFnet_external.forward": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.forward": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.forward": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.forward": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.forward": {"tf": 1}}, "df": 41}}}}}, "l": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.utils.DanUtils.fold_sample": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.modules.layers.bilayers.ChannelConvLayer.weights_folded_dims": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.folded_dims": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.num_folded_dims": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.folded_dims": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.folded_dims": {"tf": 1}, "NDNT.modules.regularization.Regularization.folded_lags": {"tf": 1}, "NDNT.modules.regularization.RegModule.folded_lags": {"tf": 1}}, "df": 7}}, "s": {"docs": {"NDNT.utils.NDNutils.generate_xv_folds": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.NDN.NDN.fit": {"tf": 1}, "NDNT.NDN.NDN.fit_dl": {"tf": 1}, "NDNT.training.trainer.Trainer.fit": {"tf": 1}, "NDNT.training.trainer.Trainer.prepare_fit": {"tf": 1}, "NDNT.training.trainer.Trainer.fit_loop": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.fit": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.fit_data_dict": {"tf": 1}, "NDNT.utils.NDNutils.fit_lbfgs": {"tf": 1}, "NDNT.utils.NDNutils.get_fit_versions": {"tf": 1}}, "df": 9}, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.layers.convlayers.ConvLayer.filter_dims": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.filter_dims": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.filter_dims": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.filter_count": {"tf": 1}}, "df": 4, "s": {"docs": {"NDNT.NDN.NDN.plot_filters": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.num_filters": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.num_filters": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.plot_filters": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.plot_filters": {"tf": 1}, "NDNT.networks.FFnetwork.plot_filters": {"tf": 1}, "NDNT.utils.plotting.plot_filters_1D": {"tf": 1}, "NDNT.utils.plotting.plot_filters_2D": {"tf": 1}, "NDNT.utils.plotting.plot_filters_ST1D": {"tf": 1}, "NDNT.utils.plotting.plot_filters_ST2D": {"tf": 1}, "NDNT.utils.plotting.plot_filters_ST3D": {"tf": 1}}, "df": 16}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.utils.DanUtils.filename_num2str": {"tf": 1}}, "df": 1}}}}}}, "x": {"docs": {"NDNT.modules.layers.readouts.FixationLayer.fix_n_index": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.layers.readouts.FixationLayer": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.num_spatial_dims": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.num_fixations": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.batch_sample": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.init_sigma": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.single_sigma": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.fix_n_index": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.sample": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.forward": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.initialize": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 1}}, "df": 12}}}}}, "s": {"docs": {"NDNT.modules.layers.readouts.FixationLayer.num_fixations": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.utils.DanUtils.find_peaks": {"tf": 1}, "NDNT.utils.NDNutils.CPU_Unpickler.find_class": {"tf": 1}}, "df": 2}}, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.utils.DanUtils.figure_export": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer.features": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"NDNT.training.earlystopping.EarlyStopping.trace_func": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"NDNT.training.trainer.Trainer.fullbatch": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.fullbatch": {"tf": 1}}, "df": 2, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.__init__": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.networks.FFnetwork.ffnets_in": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.NDN.NDN.__init__": {"tf": 1}, "NDNT.modules.activations.Square.__init__": {"tf": 1}, "NDNT.modules.activations.AdaptiveELU.__init__": {"tf": 1}, "NDNT.modules.activity_regularization.ActivityRegularization.__init__": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchGenerator.__init__": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchIterator.__init__": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.__init__": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.__init__": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.__init__": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.__init__": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.__init__": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.init_mu_range": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.init_sigma": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.__init__": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.__init__": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.init_mu_range": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.init_sigma": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.init_sigma": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.__init__": {"tf": 1}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1}, "NDNT.modules.regularization.RegModule.__init__": {"tf": 1}, "NDNT.modules.regularization.LocalityReg.__init__": {"tf": 1}, "NDNT.modules.regularization.DiagonalReg.__init__": {"tf": 1}, "NDNT.modules.regularization.InlineReg.__init__": {"tf": 1}, "NDNT.modules.regularization.ConvReg.__init__": {"tf": 1}, "NDNT.modules.regularization.Tikhanov.__init__": {"tf": 1}, "NDNT.modules.regularization.TikhanovC.__init__": {"tf": 1}, "NDNT.modules.regularization.ActivityReg.__init__": {"tf": 1}, "NDNT.networks.FFnetwork.__init__": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.__init__": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d.__init__": {"tf": 1}, "NDNT.networks.ReadoutNetwork.__init__": {"tf": 1}, "NDNT.networks.FFnet_external.__init__": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.__init__": {"tf": 1}, "NDNT.training.earlystopping.EarlyStopping.__init__": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.__init__": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.__init__": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew.__init__": {"tf": 1}, "NDNT.training.trainer.Trainer.__init__": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.__init__": {"tf": 1}, "NDNT.training.trainer.TemperatureCalibratedTrainer.__init__": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.__init__": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.__init__": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.__init__": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.__init__": {"tf": 1}}, "df": 69, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.NDN.NDN.initialize_loss": {"tf": 1}, "NDNT.NDN.NDN.initialize_biases": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.initialize_gaussian_envelope": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.initialize_spatial_mapping": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.initialize": {"tf": 1}, "NDNT.utils.NDNutils.initialize_gaussian_envelope": {"tf": 1}}, "df": 6}}}}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.activations.AdaptiveELU.inplace": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.modules.layers.externallayer.ExternalLayer.input_dims": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.input_dims": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.input_dims": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.input_dims": {"tf": 1}, "NDNT.modules.regularization.Regularization.input_dims": {"tf": 1}, "NDNT.modules.regularization.RegModule.input_dims": {"tf": 1}, "NDNT.modules.regularization.DiagonalReg.input_dims": {"tf": 1}, "NDNT.modules.regularization.Tikhanov.input_dims": {"tf": 1}, "NDNT.modules.regularization.TikhanovC.input_dims": {"tf": 1}, "NDNT.networks.FFnetwork.determine_input_dims": {"tf": 1}, "NDNT.networks.FFnetwork.preprocess_input": {"tf": 1}, "NDNT.networks.ReadoutNetwork.determine_input_dims": {"tf": 1}, "NDNT.networks.FFnet_external.input_dims_reshape": {"tf": 1}}, "df": 13}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"NDNT.modules.experiment_sampler.ExperimentBatchGenerator.current_batch_index": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.fix_n_index": {"tf": 1}}, "df": 2}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {"NDNT.modules.layers.dimlayers.Dim0Layer.dim_info": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.dim_info": {"tf": 1}}, "df": 2}}, "h": {"docs": {"NDNT.modules.layers.ndnlayer.NDNLayer.num_inh": {"tf": 1}}, "df": 1}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.modules.regularization.InlineReg": {"tf": 1}, "NDNT.modules.regularization.InlineReg.__init__": {"tf": 1}, "NDNT.modules.regularization.InlineReg.compute_reg_penalty": {"tf": 1}}, "df": 3}}}}}}}, "t": {"docs": {"NDNT.utils.NDNutils.is_int": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.utils.plotting.plot_internal_weights": {"tf": 1}}, "df": 1}}}}}}}, "s": {"1": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.modules.layers.convlayers.ConvLayer.is1D": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.is1D": {"tf": 1}}, "df": 2}}, "docs": {"NDNT.training.lbfgs.is_legal": {"tf": 1}, "NDNT.utils.NDNutils.is_int": {"tf": 1}}, "df": 2}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.layers.reslayers.IterLayer.num_iter": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.num_iter": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.num_iter": {"tf": 1}, "NDNT.training.trainer.Trainer.n_iter": {"tf": 1}}, "df": 4, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.layers.reslayers.IterLayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.num_iter": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.LN_reverse": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.output_config": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.res_layer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.forward": {"tf": 1}}, "df": 8}}}}}, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.layers.reslayers.IterTlayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.num_iter": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.output_config": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.res_layer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.num_outputs": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.forward": {"tf": 1}}, "df": 8}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.layers.reslayers.IterSTlayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.num_iter": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.output_config": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.res_layer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.num_outputs": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.forward": {"tf": 1}}, "df": 8}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.utils.DanUtils.iterate_lbfgs": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {"NDNT.utils.DanUtils.imagesc": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.utils.DanUtils.binocular_data_import": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}, "NDNT.utils.DanUtils.monocular_data_import": {"tf": 1}}, "df": 3}}}}}}, "l": {"1": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.layers.specialtylayers.L1convLayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.weight_minus": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.window": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.tent_basis": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.reset_parameters2": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.layer_dict": {"tf": 1}}, "df": 8}}}}}}}}}}, "docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.NDN.NDN.loss_type": {"tf": 1}, "NDNT.NDN.NDN.loss": {"tf": 1}, "NDNT.NDN.NDN.val_loss": {"tf": 1}, "NDNT.NDN.NDN.compute_reg_loss": {"tf": 1}, "NDNT.NDN.NDN.initialize_loss": {"tf": 1}, "NDNT.NDN.NDN.change_loss": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.compute_reg_loss": {"tf": 1}, "NDNT.modules.regularization.Regularization.compute_reg_loss": {"tf": 1}, "NDNT.networks.FFnetwork.compute_reg_loss": {"tf": 1}, "NDNT.networks.FFnet_external.compute_reg_loss": {"tf": 1}, "NDNT.training.earlystopping.EarlyStopping.val_loss_min": {"tf": 1}, "NDNT.training.trainer.Trainer.val_loss_min": {"tf": 1}, "NDNT.metrics.mse_loss": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.__init__": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.loss_name": {"tf": 1.4142135623730951}, "NDNT.metrics.mse_loss.MseLoss_datafilter.loss": {"tf": 1.4142135623730951}, "NDNT.metrics.mse_loss.MseLoss_datafilter.lossNR": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.unit_weighting": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.batch_weighting": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 1.4142135623730951}, "NDNT.metrics.mse_loss.MseLoss_datafilter.forward": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.unit_loss": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.__init__": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.loss_name": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.loss": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.lossNR": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.unit_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.batch_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_log_epsilon": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.forward": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.unit_loss": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.__init__": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.loss_name": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.loss": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.lossNR": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.unit_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.batch_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.forward": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.unit_loss": {"tf": 1.4142135623730951}, "NDNT.metrics.rmse_loss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.__init__": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.loss_name": {"tf": 1.4142135623730951}, "NDNT.metrics.rmse_loss.RmseLoss.loss": {"tf": 1.4142135623730951}, "NDNT.metrics.rmse_loss.RmseLoss.lossNR": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.unit_weighting": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.batch_weighting": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"tf": 1.4142135623730951}, "NDNT.metrics.rmse_loss.RmseLoss.forward": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.unit_loss": {"tf": 1.4142135623730951}}, "df": 56, "e": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.utils.MattUtils.load_losses": {"tf": 1}, "NDNT.utils.MattUtils.plot_losses": {"tf": 1}}, "df": 2}}, "n": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.metrics.mse_loss.MseLoss_datafilter.lossNR": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.lossNR": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.lossNR": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.lossNR": {"tf": 1}}, "df": 4}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.NDN.NDN.get_readout_locations": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.set_readout_locations": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.get_readout_locations": {"tf": 1}, "NDNT.networks.ReadoutNetwork.get_readout_locations": {"tf": 1}, "NDNT.networks.ReadoutNetwork.set_readout_locations": {"tf": 1}}, "df": 5}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.modules.regularization.LocalityReg": {"tf": 1}, "NDNT.modules.regularization.LocalityReg.__init__": {"tf": 1}, "NDNT.modules.regularization.LocalityReg.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.LocalityReg.build_reg_mats": {"tf": 1}}, "df": 4}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.utils.create_reg_matrices.create_localpenalty_matrix": {"tf": 1}}, "df": 1}}}}}}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.NDN.NDN.load_model_zip": {"tf": 1}, "NDNT.NDN.NDN.load_model": {"tf": 1}, "NDNT.NDN.NDN.load_model_chk": {"tf": 1}, "NDNT.utils.DanUtils.load_python_data": {"tf": 1}, "NDNT.utils.MattUtils.load_losses": {"tf": 1}, "NDNT.utils.NDNutils.load_checkpoint": {"tf": 1}, "NDNT.utils.NDNutils.load_model": {"tf": 1}}, "df": 7}}, "o": {"docs": {}, "df": 0, "p": {"docs": {"NDNT.training.lbfgs.LBFGS.two_loop_recursion": {"tf": 1}, "NDNT.training.trainer.Trainer.fit_loop": {"tf": 1}}, "df": 2}}, "g": {"docs": {"NDNT.training.trainer.Trainer.log_activations": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_log_epsilon": {"tf": 1}}, "df": 2, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.training.trainer.Trainer.logger": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.NDN.NDN.ffnet_list": {"tf": 1}, "NDNT.NDN.NDN.list_parameters": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.list_parameters": {"tf": 1}, "NDNT.networks.FFnetwork.layer_list": {"tf": 1}, "NDNT.networks.FFnetwork.list_parameters": {"tf": 1}, "NDNT.networks.FFnet_external.list_params": {"tf": 1}, "NDNT.utils.ffnet_dicts.list_complete": {"tf": 1}}, "df": 7}}, "n": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.training.lbfgs.LBFGS.line_search": {"tf": 1}}, "df": 1}}}, "l": {"docs": {"NDNT.NDN.NDN.get_null_adjusted_ll": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.experiment_sampler.ExperimentSampler.exp_lengths": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.training.lbfgs.is_legal": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.layers.bilayers.BinocLayer1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.res_layer": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.res_layer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.res_layer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.res_layer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.res_layer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.layer_dict": {"tf": 1}, "NDNT.networks.FFnetwork.layer_list": {"tf": 1}, "NDNT.networks.FFnetwork.layer_types": {"tf": 1}, "NDNT.utils.ffnet_dicts.layer_dict": {"tf": 1}}, "df": 36, "s": {"docs": {"NDNT.modules.layers": {"tf": 1}, "NDNT.modules.layers.bilayers": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D.forward": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.output_dims": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.num_outputs": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.forward": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.weights_folded_dims": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.forward": {"tf": 1}, "NDNT.modules.layers.convlayers": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.window": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.tent_basis": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.is1D": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.res_layer": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.filter_dims": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.padding": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.folded_dims": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.batchnorm_clone": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.batchnorm_convert": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.forward": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.num_lags": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.is1D": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.padding": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.forward": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.num_lags": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.output_dims": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.forward": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.output_dims": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.num_outputs": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.num_other_dims": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.forward": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.dim_info": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.forward": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.transparent": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.num_outputs": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.num_sp_dims": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.forward": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.output_dims": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.num_outputs": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.transparent": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.num_spt_dims": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.forward": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.externallayer": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.__init__": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.input_dims": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.num_filters": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.filter_dims": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.output_dims": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.reg": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.forward": {"tf": 1}, "NDNT.modules.layers.laglayers": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.__init__": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.num_lags": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.num_folded_dims": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.forward": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.__init__": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.forward": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.__init__": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.numLVs": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.nt": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.init_mu_range": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.init_sigma": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.sigma": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.sm_skips": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.sample": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.weight_scale": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.forward": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1}, "NDNT.modules.layers.ndnlayer": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.input_dims": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.num_filters": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.output_dims": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.norm_type": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.pos_constraint": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.conv": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.NL": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.shape": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.weight_scale": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.weight": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.reg": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.num_inh": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.reset_parameters": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.initialize_gaussian_envelope": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.forward": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.compute_reg_loss": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.get_weights": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.list_parameters": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.set_parameters": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.set_reg_val": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.dim_info": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.normlayers": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.__init__": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.output_dims": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.num_outputs": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.forward": {"tf": 1}, "NDNT.modules.layers.orilayers": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.__init__": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.angles": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.output_dims": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.rotation_matrix_tensor": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.forward": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.angles": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.folded_dims": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.output_dims": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.rotation_matrix_tensor": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.get_rot_mat": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.rotate_tensor": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.forward": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.__init__": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.ori_padding": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.input_dims": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.output_dims": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.forward": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.plot_filters": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.batch_sample": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_mode": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.init_mu_range": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.init_sigma": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.align_corners": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.grid_shape": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.mu": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.sigma": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.sample": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.features": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.grid": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.initialize_spatial_mapping": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.get_weights": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.forward": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.set_readout_locations": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.get_readout_locations": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.passive_readout": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.input_dims": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.filter_dims": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.reg": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.forward": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.passive_readout": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.num_spatial_dims": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.num_fixations": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.batch_sample": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.init_sigma": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.single_sigma": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.fix_n_index": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.sample": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.forward": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.initialize": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.num_iter": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.LN_reverse": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.output_config": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.res_layer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.forward": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.num_iter": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.output_config": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.res_layer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.num_outputs": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.forward": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.num_iter": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.output_config": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.res_layer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.num_outputs": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.forward": {"tf": 1}, "NDNT.modules.layers.specialtylayers": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.tent_basis": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.res_layer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.folded_dims": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.forward": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.weight_minus": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.window": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.tent_basis": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.reset_parameters2": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.forward": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.timelayers": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.__init__": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.output_dims": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.num_outputs": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.forward": {"tf": 1}, "NDNT.networks.FFnetwork.layers": {"tf": 1}}, "df": 273}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.networks.LayerTypes": {"tf": 1}}, "df": 1}}}}}}}}, "g": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.layers.convlayers.TconvLayer.num_lags": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.num_lags": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.num_lags": {"tf": 1}, "NDNT.modules.regularization.Regularization.folded_lags": {"tf": 1}, "NDNT.modules.regularization.RegModule.folded_lags": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.num_lags_out": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d.num_lags_out": {"tf": 1}}, "df": 7}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.layers.laglayers.LagLayer": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.__init__": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.num_lags": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.num_folded_dims": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.forward": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.layer_dict": {"tf": 1}}, "df": 7, "s": {"docs": {"NDNT.modules.layers.laglayers": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.__init__": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.num_lags": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.num_folded_dims": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.forward": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.layer_dict": {"tf": 1}}, "df": 8}}}}}}}}, "v": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.layers.lvlayers.LVLayer": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.__init__": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.forward": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"tf": 1}}, "df": 5, "s": {"docs": {"NDNT.modules.layers.lvlayers": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.__init__": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.forward": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.__init__": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.numLVs": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.nt": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.init_mu_range": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.init_sigma": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.sigma": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.sm_skips": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.sample": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.weight_scale": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.forward": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1}}, "df": 18}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.modules.layers.lvlayers.LVLayerOLD": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.__init__": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.numLVs": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.nt": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.init_mu_range": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.init_sigma": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.sigma": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.sm_skips": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.sample": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.weight_scale": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.forward": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1}}, "df": 12}}}}}}}}}, "n": {"docs": {"NDNT.modules.layers.reslayers.IterLayer.LN_reverse": {"tf": 1}}, "df": 1}, "b": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.training.lbfgs": {"tf": 1}, "NDNT.training.lbfgs.is_legal": {"tf": 1}, "NDNT.training.lbfgs.polyinterp": {"tf": 1}, "NDNT.training.lbfgs.LBFGS": {"tf": 1.4142135623730951}, "NDNT.training.lbfgs.LBFGS.__init__": {"tf": 1.4142135623730951}, "NDNT.training.lbfgs.LBFGS.line_search": {"tf": 1.4142135623730951}, "NDNT.training.lbfgs.LBFGS.two_loop_recursion": {"tf": 1.4142135623730951}, "NDNT.training.lbfgs.LBFGS.curvature_update": {"tf": 1.4142135623730951}, "NDNT.training.lbfgs.LBFGS.step": {"tf": 1.4142135623730951}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.__init__": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1}, "NDNT.utils.DanUtils.iterate_lbfgs": {"tf": 1}, "NDNT.utils.NDNutils.fit_lbfgs": {"tf": 1}}, "df": 14, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"NDNT.training.lbfgsnew": {"tf": 1}, "NDNT.training.lbfgsnew.be_verbose": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1.4142135623730951}, "NDNT.training.lbfgsnew.LBFGSNew.__init__": {"tf": 1.4142135623730951}, "NDNT.training.lbfgsnew.LBFGSNew.step": {"tf": 1.4142135623730951}}, "df": 5}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.training.trainer.LBFGSTrainer": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.__init__": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.fullbatch": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.fit": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.fit_data_dict": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.train_one_epoch": {"tf": 1}}, "df": 6}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.NDN.NDN.loss_type": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.norm_type": {"tf": 1}, "NDNT.modules.regularization.RegModule.reg_type": {"tf": 1}, "NDNT.networks.FFnetwork.network_type": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.network_type": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d.network_type": {"tf": 1}, "NDNT.networks.ReadoutNetwork.network_type": {"tf": 1}, "NDNT.networks.FFnet_external.network_type": {"tf": 1}}, "df": 8, "s": {"docs": {"NDNT.networks.FFnetwork.layer_types": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.training.trainer.Trainer.train_one_epoch": {"tf": 1}, "NDNT.training.trainer.Trainer.train_one_step": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.train_one_epoch": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.NDN.NDN.trainer": {"tf": 1}, "NDNT.NDN.NDN.get_trainer": {"tf": 1}, "NDNT.training.trainer": {"tf": 1}, "NDNT.training.trainer.Trainer": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer.__init__": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer.optimizer": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer.scheduler": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer.optimize_graph": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer.log_activations": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer.accumulate_grad_batches": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer.verbose": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer.set_to_none": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer.fullbatch": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer.dirpath": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer.early_stopping": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer.device": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer.logger": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer.version": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer.epoch": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer.max_epochs": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer.n_iter": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer.val_loss_min": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer.step_scheduler_after": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer.step_scheduler_metric": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer.fit": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer.prepare_fit": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer.fit_loop": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer.validate_one_epoch": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer.train_one_epoch": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer.train_one_step": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer.checkpoint_model": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer.graceful_exit": {"tf": 1.4142135623730951}, "NDNT.training.trainer.LBFGSTrainer": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.__init__": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.fullbatch": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.fit": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.fit_data_dict": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.train_one_epoch": {"tf": 1}, "NDNT.training.trainer.TemperatureCalibratedTrainer": {"tf": 1}, "NDNT.training.trainer.TemperatureCalibratedTrainer.__init__": {"tf": 1}, "NDNT.training.trainer.TemperatureCalibratedTrainer.validate_one_epoch": {"tf": 1}}, "df": 41}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.NDN.NDN.training_step": {"tf": 1}, "NDNT.training": {"tf": 1}, "NDNT.training.ada_hessian": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.__init__": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.n_samples": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.update_each": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.average_conv_kernel": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.generator": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.get_params": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.zero_hessian": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.set_hessian": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.step": {"tf": 1}, "NDNT.training.earlystopping": {"tf": 1}, "NDNT.training.earlystopping.EarlyStopping": {"tf": 1}, "NDNT.training.earlystopping.EarlyStopping.__init__": {"tf": 1}, "NDNT.training.earlystopping.EarlyStopping.patience": {"tf": 1}, "NDNT.training.earlystopping.EarlyStopping.verbose": {"tf": 1}, "NDNT.training.earlystopping.EarlyStopping.counter": {"tf": 1}, "NDNT.training.earlystopping.EarlyStopping.best_score": {"tf": 1}, "NDNT.training.earlystopping.EarlyStopping.early_stop": {"tf": 1}, "NDNT.training.earlystopping.EarlyStopping.val_loss_min": {"tf": 1}, "NDNT.training.earlystopping.EarlyStopping.delta": {"tf": 1}, "NDNT.training.earlystopping.EarlyStopping.trace_func": {"tf": 1}, "NDNT.training.lbfgs": {"tf": 1}, "NDNT.training.lbfgs.is_legal": {"tf": 1}, "NDNT.training.lbfgs.polyinterp": {"tf": 1}, "NDNT.training.lbfgs.LBFGS": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.__init__": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.line_search": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.two_loop_recursion": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.curvature_update": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.step": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.__init__": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1}, "NDNT.training.lbfgsnew": {"tf": 1}, "NDNT.training.lbfgsnew.be_verbose": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew.__init__": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew.step": {"tf": 1}, "NDNT.training.trainer": {"tf": 1}, "NDNT.training.trainer.Trainer": {"tf": 1}, "NDNT.training.trainer.Trainer.__init__": {"tf": 1}, "NDNT.training.trainer.Trainer.optimizer": {"tf": 1}, "NDNT.training.trainer.Trainer.scheduler": {"tf": 1}, "NDNT.training.trainer.Trainer.optimize_graph": {"tf": 1}, "NDNT.training.trainer.Trainer.log_activations": {"tf": 1}, "NDNT.training.trainer.Trainer.accumulate_grad_batches": {"tf": 1}, "NDNT.training.trainer.Trainer.verbose": {"tf": 1}, "NDNT.training.trainer.Trainer.set_to_none": {"tf": 1}, "NDNT.training.trainer.Trainer.fullbatch": {"tf": 1}, "NDNT.training.trainer.Trainer.dirpath": {"tf": 1}, "NDNT.training.trainer.Trainer.early_stopping": {"tf": 1}, "NDNT.training.trainer.Trainer.device": {"tf": 1}, "NDNT.training.trainer.Trainer.logger": {"tf": 1}, "NDNT.training.trainer.Trainer.version": {"tf": 1}, "NDNT.training.trainer.Trainer.epoch": {"tf": 1}, "NDNT.training.trainer.Trainer.max_epochs": {"tf": 1}, "NDNT.training.trainer.Trainer.n_iter": {"tf": 1}, "NDNT.training.trainer.Trainer.val_loss_min": {"tf": 1}, "NDNT.training.trainer.Trainer.step_scheduler_after": {"tf": 1}, "NDNT.training.trainer.Trainer.step_scheduler_metric": {"tf": 1}, "NDNT.training.trainer.Trainer.fit": {"tf": 1}, "NDNT.training.trainer.Trainer.prepare_fit": {"tf": 1}, "NDNT.training.trainer.Trainer.fit_loop": {"tf": 1}, "NDNT.training.trainer.Trainer.validate_one_epoch": {"tf": 1}, "NDNT.training.trainer.Trainer.train_one_epoch": {"tf": 1}, "NDNT.training.trainer.Trainer.train_one_step": {"tf": 1}, "NDNT.training.trainer.Trainer.checkpoint_model": {"tf": 1}, "NDNT.training.trainer.Trainer.graceful_exit": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.__init__": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.fullbatch": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.fit": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.fit_data_dict": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.train_one_epoch": {"tf": 1}, "NDNT.training.trainer.TemperatureCalibratedTrainer": {"tf": 1}, "NDNT.training.trainer.TemperatureCalibratedTrainer.__init__": {"tf": 1}, "NDNT.training.trainer.TemperatureCalibratedTrainer.validate_one_epoch": {"tf": 1}}, "df": 80}}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.modules.layers.dimlayers.DimSPLayer.transparent": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.transparent": {"tf": 1}}, "df": 2}}}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.training.earlystopping.EarlyStopping.trace_func": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {"NDNT.modules.experiment_sampler.construct_exp_to_time": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.exp_to_time": {"tf": 1}, "NDNT.training.trainer.Trainer.set_to_none": {"tf": 1}}, "df": 3}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.experiment_sampler.construct_exp_to_time": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.exp_to_time": {"tf": 1}, "NDNT.utils.DanUtils.time_embedding_simple": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1}}, "df": 5, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.layers.timelayers.TimeLayer": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.__init__": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.output_dims": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.num_outputs": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.forward": {"tf": 1}}, "df": 5, "s": {"docs": {"NDNT.modules.layers.timelayers": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.__init__": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.output_dims": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.num_outputs": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.forward": {"tf": 1}}, "df": 6}}}}}}}}, "k": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {"NDNT.modules.regularization.Tikhanov": {"tf": 1}, "NDNT.modules.regularization.Tikhanov.__init__": {"tf": 1}, "NDNT.modules.regularization.Tikhanov.input_dims": {"tf": 1}, "NDNT.modules.regularization.Tikhanov.compute_reg_penalty": {"tf": 1}}, "df": 4, "c": {"docs": {"NDNT.modules.regularization.TikhanovC": {"tf": 1}, "NDNT.modules.regularization.TikhanovC.__init__": {"tf": 1}, "NDNT.modules.regularization.TikhanovC.input_dims": {"tf": 1}, "NDNT.modules.regularization.TikhanovC.collapse_dims": {"tf": 1}, "NDNT.modules.regularization.TikhanovC.compute_reg_penalty": {"tf": 1}}, "df": 5}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {"NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.modules.layers.convlayers.ConvLayer.tent_basis": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.tent_basis": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.tent_basis": {"tf": 1}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 1}, "NDNT.utils.NDNutils.tent_basis_generate": {"tf": 1}}, "df": 5}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.layers.orilayers.OriLayer.rotation_matrix_tensor": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.rotation_matrix_tensor": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.rotate_tensor": {"tf": 1}}, "df": 3}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.training.trainer.TemperatureCalibratedTrainer": {"tf": 1}, "NDNT.training.trainer.TemperatureCalibratedTrainer.__init__": {"tf": 1}, "NDNT.training.trainer.TemperatureCalibratedTrainer.validate_one_epoch": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.layers.convlayers.TconvLayer": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.num_lags": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.is1D": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.padding": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.forward": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.layer_dict": {"tf": 1}}, "df": 8}}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.layers.specialtylayers.Tlayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.tent_basis": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.res_layer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.folded_dims": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.forward": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.layer_dict": {"tf": 1}}, "df": 8}}}}}, "w": {"docs": {}, "df": 0, "o": {"docs": {"NDNT.training.lbfgs.LBFGS.two_loop_recursion": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.NDN.NDN.ffnet_out": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.num_lags_out": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d.num_lags_out": {"tf": 1}}, "df": 3, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.modules.layers.bilayers.BiSTconv1D.output_dims": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.output_dims": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.output_dims": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.output_dims": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.output_dims": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.output_dims": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.output_dims": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.output_dims": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.output_dims": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.output_dims": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.output_config": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.output_config": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.output_config": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.output_dims": {"tf": 1}, "NDNT.networks.FFnetwork.output_dims": {"tf": 1}}, "df": 15, "s": {"docs": {"NDNT.NDN.NDN.compute_network_outputs": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.num_outputs": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.num_outputs": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.num_outputs": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.num_outputs": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.num_outputs": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.num_outputs": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.num_outputs": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.num_outputs": {"tf": 1}, "NDNT.modules.regularization.Regularization.num_outputs": {"tf": 1}, "NDNT.networks.FFnetwork.num_outputs": {"tf": 1}}, "df": 11}}}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.NDN.NDN.opt_params": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.training.trainer.Trainer.optimize_graph": {"tf": 1}}, "df": 1, "r": {"docs": {"NDNT.NDN.NDN.get_optimizer": {"tf": 1}, "NDNT.training.trainer.Trainer.optimizer": {"tf": 1}, "NDNT.utils.NDNutils.create_optimizer_params": {"tf": 1}}, "df": 3}}}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.layers.dimlayers.Dim0Layer.num_other_dims": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {"NDNT.modules.layers.orilayers.ConvLayer3D.ori_padding": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.layers.orilayers.OriLayer": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.__init__": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.angles": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.output_dims": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.rotation_matrix_tensor": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.forward": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.layer_dict": {"tf": 1}}, "df": 7, "s": {"docs": {"NDNT.modules.layers.orilayers": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.__init__": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.angles": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.output_dims": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.rotation_matrix_tensor": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.forward": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.angles": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.folded_dims": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.output_dims": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.rotation_matrix_tensor": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.get_rot_mat": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.rotate_tensor": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.forward": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.__init__": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.ori_padding": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.input_dims": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.output_dims": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.forward": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.plot_filters": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.layer_dict": {"tf": 1}}, "df": 26}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.layers.orilayers.OriConvLayer": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.angles": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.folded_dims": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.output_dims": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.rotation_matrix_tensor": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.get_rot_mat": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.rotate_tensor": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.forward": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.layer_dict": {"tf": 1}}, "df": 10}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.layers.specialtylayers.OnOffLayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.forward": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.layer_dict": {"tf": 1}}, "df": 5}}}}}}}}, "e": {"docs": {"NDNT.training.trainer.Trainer.validate_one_epoch": {"tf": 1}, "NDNT.training.trainer.Trainer.train_one_epoch": {"tf": 1}, "NDNT.training.trainer.Trainer.train_one_step": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.train_one_epoch": {"tf": 1}, "NDNT.training.trainer.TemperatureCalibratedTrainer.validate_one_epoch": {"tf": 1}}, "df": 5}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.NDN.NDN.seed": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.random_seed": {"tf": 1}}, "df": 2}}, "t": {"docs": {"NDNT.NDN.NDN.set_parameters": {"tf": 1}, "NDNT.NDN.NDN.set_reg_val": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.set_parameters": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.set_reg_val": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.set_readout_locations": {"tf": 1}, "NDNT.modules.regularization.Regularization.set_reg_val": {"tf": 1}, "NDNT.networks.FFnetwork.set_parameters": {"tf": 1}, "NDNT.networks.FFnetwork.set_reg_val": {"tf": 1}, "NDNT.networks.ReadoutNetwork.set_readout_locations": {"tf": 1}, "NDNT.networks.FFnet_external.set_params": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.set_hessian": {"tf": 1}, "NDNT.training.trainer.Trainer.set_to_none": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_log_epsilon": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"tf": 1}}, "df": 17, "u": {"docs": {}, "df": 0, "p": {"docs": {"NDNT.utils.DanUtils.subplot_setup": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"NDNT.training.lbfgs.LBFGS.line_search": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.NDN.NDN.block_sample": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.sample": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.batch_sample": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_mode": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.sample": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.batch_sample": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.sample": {"tf": 1}, "NDNT.utils.DanUtils.fold_sample": {"tf": 1}}, "df": 9, "r": {"docs": {"NDNT.modules.experiment_sampler": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchGenerator": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchGenerator.__init__": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchGenerator.batches": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchGenerator.current_batch_index": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchGenerator.next": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchIterator": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchIterator.__init__": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchIterator.exp_batch_generators": {"tf": 1}, "NDNT.modules.experiment_sampler.construct_exp_to_time": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.__init__": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.dataset": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.batch_size": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.shuffle": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.random_seed": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.num_exps": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.exp_to_time": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.exp_lengths": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.exp_batch_sizes": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.num_batches": {"tf": 1}}, "df": 21}, "s": {"docs": {"NDNT.training.ada_hessian.AdaHessian.n_samples": {"tf": 1}, "NDNT.utils.NDNutils.get_max_samples": {"tf": 1}}, "df": 2}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.NDN.NDN.save_model_zip": {"tf": 1}, "NDNT.NDN.NDN.save_model": {"tf": 1}, "NDNT.NDN.NDN.save_model_chk": {"tf": 1}, "NDNT.utils.DanUtils.save_python_data": {"tf": 1}, "NDNT.utils.NDNutils.default_save_dir": {"tf": 1}, "NDNT.utils.NDNutils.save_checkpoint": {"tf": 1}}, "df": 6}}}, "p": {"docs": {"NDNT.modules.layers.dimlayers.DimSPLayer.num_sp_dims": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.NDN.NDN.speckled_flag": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.layers.specialtylayers": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.tent_basis": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.res_layer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.folded_dims": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.forward": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.weight_minus": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.window": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.tent_basis": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.reset_parameters2": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.forward": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.layer_dict": {"tf": 1}}, "df": 26}}}}}}}}}}}}}, "t": {"docs": {"NDNT.modules.layers.dimlayers.DimSPTLayer.num_spt_dims": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer.initialize_spatial_mapping": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.num_spatial_dims": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.spatial_dims": {"tf": 1}}, "df": 3}}}}}}, "t": {"1": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.utils.plotting.plot_filters_ST1D": {"tf": 1}}, "df": 1}}, "2": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.utils.plotting.plot_filters_ST2D": {"tf": 1}}, "df": 1}}, "3": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.utils.plotting.plot_filters_ST3D": {"tf": 1}}, "df": 1}}, "docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {"NDNT.NDN.NDN.training_step": {"tf": 1}, "NDNT.NDN.NDN.validation_step": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.step": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.step": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew.step": {"tf": 1}, "NDNT.training.trainer.Trainer.step_scheduler_after": {"tf": 1}, "NDNT.training.trainer.Trainer.step_scheduler_metric": {"tf": 1}, "NDNT.training.trainer.Trainer.train_one_step": {"tf": 1}}, "df": 9}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.NDN.NDN.model_string": {"tf": 1}, "NDNT.utils.NDNutils.summary_string": {"tf": 1}}, "df": 2}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.layers.convlayers.STconvLayer": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.num_lags": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.output_dims": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.forward": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.layer_dict": {"tf": 1}}, "df": 7}}}}}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {"NDNT.training.earlystopping.EarlyStopping.early_stop": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.training.trainer.Trainer.early_stopping": {"tf": 1}}, "df": 1}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.activations.Square": {"tf": 1}, "NDNT.modules.activations.Square.__init__": {"tf": 1}, "NDNT.modules.activations.Square.forward": {"tf": 1}}, "df": 3}}}}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.experiment_sampler.ExperimentSampler.batch_size": {"tf": 1}}, "df": 1, "s": {"docs": {"NDNT.modules.experiment_sampler.ExperimentSampler.exp_batch_sizes": {"tf": 1}}, "df": 1}}}, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"NDNT.modules.layers.lvlayers.LVLayerOLD.init_sigma": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.sigma": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.init_sigma": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.sigma": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.init_sigma": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.single_sigma": {"tf": 1}}, "df": 6}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.layers.readouts.FixationLayer.single_sigma": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.utils.DanUtils.time_embedding_simple": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.__init__": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.loss_name": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.loss": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.lossNR": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.unit_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.batch_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.forward": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.unit_loss": {"tf": 1}}, "df": 10}}}}}}}}}}}}}}}}, "h": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.experiment_sampler.ExperimentSampler.shuffle": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.layers.ndnlayer.NDNLayer.shape": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.grid_shape": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.utils.NDNutils.shift_mat_zpad": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {"NDNT.modules.layers.lvlayers.LVLayerOLD.sm_skips": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"NDNT.utils.MattUtils.smooth_ema": {"tf": 1}, "NDNT.utils.MattUtils.smooth_conv": {"tf": 1}}, "df": 2}}}}}, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.layers.lvlayers.LVLayerOLD.sm_skips": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.layers.lvlayers.LVLayerOLD.weight_scale": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.weight_scale": {"tf": 1}}, "df": 2}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"3": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.networks.ScaffoldNetwork3d": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d.__init__": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d.network_type": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d.num_lags_out": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d.forward": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d.ffnet_dict": {"tf": 1}}, "df": 6}}, "docs": {"NDNT.networks.ScaffoldNetwork": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.__init__": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.network_type": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.num_lags_out": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.spatial_dims": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.filter_count": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.forward": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.ffnet_dict": {"tf": 1}}, "df": 8}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.utils.plotting.plot_scatter": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.training.earlystopping.EarlyStopping.best_score": {"tf": 1}}, "df": 1}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.training.trainer.Trainer.scheduler": {"tf": 1}, "NDNT.training.trainer.Trainer.step_scheduler_after": {"tf": 1}, "NDNT.training.trainer.Trainer.step_scheduler_metric": {"tf": 1}}, "df": 3}}}}}}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.utils.DanUtils.subplot_setup": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.utils.NDNutils.summary_string": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {"NDNT.utils.DanUtils.ss": {"tf": 1}}, "df": 1}}, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.NDN.NDN.working_dir": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.modules.layers.lvlayers.LVLayerOLD.weight_scale": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.weight_scale": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.weight": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.weight_minus": {"tf": 1}}, "df": 4, "s": {"docs": {"NDNT.NDN.NDN.get_weights": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.weights_folded_dims": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.get_weights": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.get_weights": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.preprocess_weights": {"tf": 1}, "NDNT.networks.FFnetwork.get_weights": {"tf": 1}, "NDNT.utils.plotting.plot_internal_weights": {"tf": 1}}, "df": 12}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.metrics.mse_loss.MseLoss_datafilter.unit_weighting": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.batch_weighting": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.unit_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.batch_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.unit_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.batch_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.unit_weighting": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.batch_weighting": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"tf": 1}}, "df": 12}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"NDNT.modules.layers.convlayers.ConvLayer.window": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.window": {"tf": 1}}, "df": 2}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.NDN.NDN.working_dir": {"tf": 1}, "NDNT.utils.NDNutils.default_save_dir": {"tf": 1}, "NDNT.utils.NDNutils.ensure_dir": {"tf": 1}}, "df": 3, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"NDNT.training.trainer.Trainer.dirpath": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.modules.layers.bilayers.BinocLayer1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.layer_dict": {"tf": 1}, "NDNT.networks.FFnetwork.ffnet_dict": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.ffnet_dict": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d.ffnet_dict": {"tf": 1}, "NDNT.networks.ReadoutNetwork.ffnet_dict": {"tf": 1}, "NDNT.networks.FFnet_external.ffnet_dict": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.fit_data_dict": {"tf": 1}, "NDNT.utils.ffnet_dicts.layer_dict": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_NIM": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_readout": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_external": {"tf": 1}}, "df": 38, "s": {"docs": {"NDNT.utils.ffnet_dicts": {"tf": 1}, "NDNT.utils.ffnet_dicts.layer_dict": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_NIM": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_readout": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_external": {"tf": 1}, "NDNT.utils.ffnet_dicts.list_complete": {"tf": 1}}, "df": 7}}}, "m": {"0": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.layers.dimlayers.Dim0Layer": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.output_dims": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.num_outputs": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.num_other_dims": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.forward": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.dim_info": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.layer_dict": {"tf": 1}}, "df": 8}}}}}}, "docs": {"NDNT.modules.layers.dimlayers.Dim0Layer.dim_info": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.dim_info": {"tf": 1}}, "df": 2, "s": {"docs": {"NDNT.modules.layers.bilayers.BiSTconv1D.output_dims": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.weights_folded_dims": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.filter_dims": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.folded_dims": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.output_dims": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.output_dims": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.num_other_dims": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.num_sp_dims": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.output_dims": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.num_spt_dims": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.input_dims": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.filter_dims": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.output_dims": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.num_folded_dims": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.input_dims": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.output_dims": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.output_dims": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.output_dims": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.folded_dims": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.output_dims": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.input_dims": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.output_dims": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.input_dims": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.filter_dims": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.num_spatial_dims": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.folded_dims": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.output_dims": {"tf": 1}, "NDNT.modules.regularization.Regularization.input_dims": {"tf": 1}, "NDNT.modules.regularization.RegModule.input_dims": {"tf": 1}, "NDNT.modules.regularization.RegModule.num_dims": {"tf": 1}, "NDNT.modules.regularization.DiagonalReg.input_dims": {"tf": 1}, "NDNT.modules.regularization.Tikhanov.input_dims": {"tf": 1}, "NDNT.modules.regularization.TikhanovC.input_dims": {"tf": 1}, "NDNT.modules.regularization.TikhanovC.collapse_dims": {"tf": 1}, "NDNT.networks.FFnetwork.output_dims": {"tf": 1}, "NDNT.networks.FFnetwork.determine_input_dims": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.spatial_dims": {"tf": 1}, "NDNT.networks.ReadoutNetwork.determine_input_dims": {"tf": 1}, "NDNT.networks.FFnet_external.input_dims_reshape": {"tf": 1}}, "df": 39, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.layers.dimlayers.DimSPLayer": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.transparent": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.num_outputs": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.num_sp_dims": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.forward": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.layer_dict": {"tf": 1}}, "df": 7}}}}}, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.layers.dimlayers.DimSPTLayer": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.output_dims": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.num_outputs": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.transparent": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.num_spt_dims": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.forward": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.layer_dict": {"tf": 1}}, "df": 8}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.layers.dimlayers": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.output_dims": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.num_outputs": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.num_other_dims": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.forward": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.dim_info": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.forward": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.transparent": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.num_outputs": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.num_sp_dims": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.forward": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.output_dims": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.num_outputs": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.transparent": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.num_spt_dims": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.forward": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.layer_dict": {"tf": 1}}, "df": 28}}}}}}}, "v": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.layers.normlayers.DivNormLayer": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.__init__": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.output_dims": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.num_outputs": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.forward": {"tf": 1}}, "df": 6}}}}}}}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.modules.regularization.DiagonalReg": {"tf": 1}, "NDNT.modules.regularization.DiagonalReg.__init__": {"tf": 1}, "NDNT.modules.regularization.DiagonalReg.input_dims": {"tf": 1}, "NDNT.modules.regularization.DiagonalReg.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.DiagonalReg.build_reg_mats": {"tf": 1}}, "df": 5}}}}}}}}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.utils.DanUtils.display_matrix": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"NDNT.training.trainer.LBFGSTrainer.fit_data_dict": {"tf": 1}, "NDNT.utils.DanUtils.save_python_data": {"tf": 1}, "NDNT.utils.DanUtils.load_python_data": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}, "NDNT.utils.DanUtils.monocular_data_import": {"tf": 1}}, "df": 6, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.NDN.NDN.get_dataloaders": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.modules.experiment_sampler.ExperimentSampler.dataset": {"tf": 1}}, "df": 1}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.__init__": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.loss_name": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.loss": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.lossNR": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.unit_weighting": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.batch_weighting": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.forward": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.__init__": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.loss_name": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.loss": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.lossNR": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.unit_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.batch_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_log_epsilon": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.forward": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.unit_loss": {"tf": 1}}, "df": 21}}}}}}}}, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.utils.DanUtils": {"tf": 1}, "NDNT.utils.DanUtils.subplot_setup": {"tf": 1}, "NDNT.utils.DanUtils.ss": {"tf": 1}, "NDNT.utils.DanUtils.imagesc": {"tf": 1}, "NDNT.utils.DanUtils.find_peaks": {"tf": 1}, "NDNT.utils.DanUtils.filename_num2str": {"tf": 1}, "NDNT.utils.DanUtils.display_matrix": {"tf": 1}, "NDNT.utils.DanUtils.figure_export": {"tf": 1}, "NDNT.utils.DanUtils.matlab_export": {"tf": 1}, "NDNT.utils.DanUtils.save_python_data": {"tf": 1}, "NDNT.utils.DanUtils.load_python_data": {"tf": 1}, "NDNT.utils.DanUtils.fold_sample": {"tf": 1}, "NDNT.utils.DanUtils.time_embedding_simple": {"tf": 1}, "NDNT.utils.DanUtils.design_matrix_drift": {"tf": 1}, "NDNT.utils.DanUtils.max_multiD": {"tf": 1}, "NDNT.utils.DanUtils.iterate_lbfgs": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}, "NDNT.utils.DanUtils.monocular_data_import": {"tf": 1}}, "df": 19}}}}}}}, "l": {"docs": {"NDNT.NDN.NDN.fit_dl": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.NDN.NDN.device": {"tf": 1}, "NDNT.training.trainer.Trainer.device": {"tf": 1}}, "df": 2}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.networks.FFnetwork.determine_input_dims": {"tf": 1}, "NDNT.networks.ReadoutNetwork.determine_input_dims": {"tf": 1}}, "df": 2}}}}}}}, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"NDNT.training.earlystopping.EarlyStopping.delta": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.utils.DanUtils.design_matrix_drift": {"tf": 1}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 1}}, "df": 2}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.utils.NDNutils.default_save_dir": {"tf": 1}, "NDNT.utils.NDNutils.NpEncoder.default": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 1}}, "df": 3}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.utils.DanUtils.design_matrix_drift": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.NDN.NDN.val_loss": {"tf": 1}, "NDNT.NDN.NDN.set_reg_val": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.set_reg_val": {"tf": 1}, "NDNT.modules.regularization.Regularization.set_reg_val": {"tf": 1}, "NDNT.networks.FFnetwork.set_reg_val": {"tf": 1}, "NDNT.training.earlystopping.EarlyStopping.val_loss_min": {"tf": 1}, "NDNT.training.trainer.Trainer.val_loss_min": {"tf": 1}}, "df": 7, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.NDN.NDN.validation_step": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"NDNT.training.trainer.Trainer.validate_one_epoch": {"tf": 1}, "NDNT.training.trainer.TemperatureCalibratedTrainer.validate_one_epoch": {"tf": 1}}, "df": 2}}}}}, "s": {"docs": {"NDNT.modules.activity_regularization.ActivityRegularization.reg_vals": {"tf": 1}, "NDNT.modules.regularization.Regularization.vals": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.training.earlystopping.EarlyStopping.verbose": {"tf": 1}, "NDNT.training.lbfgsnew.be_verbose": {"tf": 1}, "NDNT.training.trainer.Trainer.verbose": {"tf": 1}}, "df": 3}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.training.trainer.Trainer.version": {"tf": 1}, "NDNT.version": {"tf": 1}, "NDNT.version.version": {"tf": 1.4142135623730951}}, "df": 3, "s": {"docs": {"NDNT.utils.NDNutils.get_fit_versions": {"tf": 1}}, "df": 1}}}}}}}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"NDNT.NDN.NDN.block_sample": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.NDN.NDN.initialize_biases": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.layers.bilayers": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D.forward": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.output_dims": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.num_outputs": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.forward": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.weights_folded_dims": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.forward": {"tf": 1}}, "df": 19}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"1": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.modules.layers.bilayers.BinocLayer1D": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D.forward": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D.layer_dict": {"tf": 1}}, "df": 4}}, "docs": {}, "df": 0}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.utils.DanUtils.binocular_data_import": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}}, "df": 2}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"1": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.modules.layers.bilayers.BiConvLayer1D": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D.layer_dict": {"tf": 1}}, "df": 3}}, "docs": {}, "df": 0}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"1": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.modules.layers.bilayers.BiSTconv1D": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.output_dims": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.num_outputs": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.forward": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1}}, "df": 6}}, "docs": {}, "df": 0}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"NDNT.modules.experiment_sampler.ExperimentBatchGenerator.current_batch_index": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchIterator.exp_batch_generators": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.batch_size": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.exp_batch_sizes": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.batch_sample": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.batch_sample": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.batch_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.batch_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.batch_weighting": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.batch_weighting": {"tf": 1}}, "df": 10, "e": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.experiment_sampler.ExperimentBatchGenerator.batches": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.num_batches": {"tf": 1}, "NDNT.training.trainer.Trainer.accumulate_grad_batches": {"tf": 1}}, "df": 3}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"NDNT.modules.layers.convlayers.ConvLayer.batchnorm_clone": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.batchnorm_convert": {"tf": 1}}, "df": 2}}}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.layers.convlayers.ConvLayer.tent_basis": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.tent_basis": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.tent_basis": {"tf": 1}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 1}, "NDNT.utils.NDNutils.tent_basis_generate": {"tf": 1}}, "df": 5}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.modules.regularization.Regularization.boundary_conditions": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.modules.regularization.Regularization.build_reg_modules": {"tf": 1}, "NDNT.modules.regularization.LocalityReg.build_reg_mats": {"tf": 1}, "NDNT.modules.regularization.DiagonalReg.build_reg_mats": {"tf": 1}}, "df": 3}}}}, "c": {"docs": {"NDNT.modules.regularization.ConvReg.BC": {"tf": 1}}, "df": 1}, "e": {"docs": {"NDNT.training.lbfgsnew.be_verbose": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.training.earlystopping.EarlyStopping.best_score": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.NDN.NDN.opt_params": {"tf": 1}, "NDNT.networks.FFnet_external.list_params": {"tf": 1}, "NDNT.networks.FFnet_external.set_params": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.get_params": {"tf": 1}, "NDNT.utils.NDNutils.create_optimizer_params": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 1}}, "df": 6}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"2": {"docs": {"NDNT.modules.layers.specialtylayers.L1convLayer.reset_parameters2": {"tf": 1}}, "df": 1}, "docs": {"NDNT.NDN.NDN.list_parameters": {"tf": 1}, "NDNT.NDN.NDN.set_parameters": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.reset_parameters": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.list_parameters": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.set_parameters": {"tf": 1}, "NDNT.networks.FFnetwork.list_parameters": {"tf": 1}, "NDNT.networks.FFnetwork.set_parameters": {"tf": 1}}, "df": 7}}}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.NDN.NDN.passive_readout": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.passive_readout": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.passive_readout": {"tf": 1}}, "df": 3}}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.modules.layers.convlayers.ConvLayer.padding": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.padding": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.ori_padding": {"tf": 1}}, "df": 3}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.training.earlystopping.EarlyStopping.patience": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.NDN.NDN.prepare_regularization": {"tf": 1}, "NDNT.networks.FFnetwork.prepare_regularization": {"tf": 1}, "NDNT.training.trainer.Trainer.prepare_fit": {"tf": 1}}, "df": 3}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.layers.convlayers.ConvLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.preprocess_weights": {"tf": 1}, "NDNT.networks.FFnetwork.preprocess_input": {"tf": 1}}, "df": 7}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.NDN.NDN.generate_predictions": {"tf": 1}}, "df": 1}}}}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.NDN.NDN.plot_filters": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.plot_filters": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.plot_filters": {"tf": 1}, "NDNT.networks.FFnetwork.plot_filters": {"tf": 1}, "NDNT.utils.MattUtils.plot_losses": {"tf": 1}, "NDNT.utils.plotting.plot_filters_1D": {"tf": 1}, "NDNT.utils.plotting.plot_filters_2D": {"tf": 1}, "NDNT.utils.plotting.plot_filters_ST1D": {"tf": 1}, "NDNT.utils.plotting.plot_filters_ST2D": {"tf": 1}, "NDNT.utils.plotting.plot_filters_ST3D": {"tf": 1}, "NDNT.utils.plotting.plot_scatter": {"tf": 1}, "NDNT.utils.plotting.plot_internal_weights": {"tf": 1}}, "df": 17, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.utils.plotting": {"tf": 1}, "NDNT.utils.plotting.plot_filters_1D": {"tf": 1}, "NDNT.utils.plotting.plot_filters_2D": {"tf": 1}, "NDNT.utils.plotting.plot_filters_ST1D": {"tf": 1}, "NDNT.utils.plotting.plot_filters_ST2D": {"tf": 1}, "NDNT.utils.plotting.plot_filters_ST3D": {"tf": 1}, "NDNT.utils.plotting.plot_scatter": {"tf": 1}, "NDNT.utils.plotting.plot_internal_weights": {"tf": 1}}, "df": 8}}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.layers.ndnlayer.NDNLayer.pos_constraint": {"tf": 1}, "NDNT.modules.regularization.Regularization.pos_constraint": {"tf": 1}, "NDNT.modules.regularization.RegModule.pos_constraint": {"tf": 1}}, "df": 3}, "l": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "p": {"docs": {"NDNT.training.lbfgs.polyinterp": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.metrics.poisson_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.__init__": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.loss_name": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.loss": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.lossNR": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.unit_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.batch_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_log_epsilon": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.forward": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.__init__": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.loss_name": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.loss": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.lossNR": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.unit_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.batch_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.forward": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.unit_loss": {"tf": 1}}, "df": 22, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.__init__": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.loss_name": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.loss": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.lossNR": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.unit_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.batch_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_log_epsilon": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.forward": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.unit_loss": {"tf": 1}}, "df": 11}}}}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.modules.regularization.LocalityReg.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.DiagonalReg.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.InlineReg.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.ConvReg.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.Tikhanov.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.TikhanovC.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.ActivityReg.acitivity_penalty": {"tf": 1}, "NDNT.modules.regularization.ActivityReg.compute_activity_penalty": {"tf": 1}, "NDNT.modules.regularization.ActivityReg.compute_reg_penalty": {"tf": 1}}, "df": 9}}}}}, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.utils.DanUtils.find_peaks": {"tf": 1}}, "df": 1}}}}, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.utils.DanUtils.save_python_data": {"tf": 1}, "NDNT.utils.DanUtils.load_python_data": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"2": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.utils.NDNutils.pixel2grid": {"tf": 1}}, "df": 1}}}}}, "docs": {}, "df": 0}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.NDN.NDN.assemble_ffnetworks": {"tf": 1}}, "df": 1}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.NDN.NDN.compute_average_responses": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.average_conv_kernel": {"tf": 1}}, "df": 2}}}}}}, "d": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.NDN.NDN.get_null_adjusted_ll": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {"NDNT.training.ada_hessian": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.__init__": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.n_samples": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.update_each": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.average_conv_kernel": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.generator": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.get_params": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.zero_hessian": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.set_hessian": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.step": {"tf": 1}}, "df": 11, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.activations.adaptive_elu": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {"NDNT.modules.activations.AdaptiveELU": {"tf": 1}, "NDNT.modules.activations.AdaptiveELU.__init__": {"tf": 1}, "NDNT.modules.activations.AdaptiveELU.xshift": {"tf": 1}, "NDNT.modules.activations.AdaptiveELU.yshift": {"tf": 1}, "NDNT.modules.activations.AdaptiveELU.inplace": {"tf": 1}, "NDNT.modules.activations.AdaptiveELU.forward": {"tf": 1}}, "df": 6}}}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.training.ada_hessian.AdaHessian": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.__init__": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.n_samples": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.update_each": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.average_conv_kernel": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.generator": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.get_params": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.zero_hessian": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.set_hessian": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.step": {"tf": 1}}, "df": 10}}}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.NDN.NDN.get_activations": {"tf": 1}, "NDNT.modules.activations": {"tf": 1}, "NDNT.modules.activations.adaptive_elu": {"tf": 1}, "NDNT.modules.activations.Square": {"tf": 1}, "NDNT.modules.activations.Square.__init__": {"tf": 1}, "NDNT.modules.activations.Square.forward": {"tf": 1}, "NDNT.modules.activations.AdaptiveELU": {"tf": 1}, "NDNT.modules.activations.AdaptiveELU.__init__": {"tf": 1}, "NDNT.modules.activations.AdaptiveELU.xshift": {"tf": 1}, "NDNT.modules.activations.AdaptiveELU.yshift": {"tf": 1}, "NDNT.modules.activations.AdaptiveELU.inplace": {"tf": 1}, "NDNT.modules.activations.AdaptiveELU.forward": {"tf": 1}, "NDNT.modules.activations.NLtypes": {"tf": 1}, "NDNT.training.trainer.Trainer.log_activations": {"tf": 1}}, "df": 14}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.modules.activity_regularization": {"tf": 1}, "NDNT.modules.activity_regularization.ActivityRegularization": {"tf": 1}, "NDNT.modules.activity_regularization.ActivityRegularization.__init__": {"tf": 1}, "NDNT.modules.activity_regularization.ActivityRegularization.reg_vals": {"tf": 1}, "NDNT.modules.activity_regularization.ActivityRegularization.activity": {"tf": 1.4142135623730951}, "NDNT.modules.activity_regularization.ActivityRegularization.nonneg": {"tf": 1}, "NDNT.modules.activity_regularization.ActivityRegularization.regularize": {"tf": 1}, "NDNT.modules.regularization.Regularization.activity_regmodule": {"tf": 1}, "NDNT.modules.regularization.Regularization.compute_activity_regularization": {"tf": 1}, "NDNT.modules.regularization.ActivityReg.compute_activity_penalty": {"tf": 1}}, "df": 10, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.modules.regularization.ActivityReg": {"tf": 1}, "NDNT.modules.regularization.ActivityReg.__init__": {"tf": 1}, "NDNT.modules.regularization.ActivityReg.acitivity_penalty": {"tf": 1}, "NDNT.modules.regularization.ActivityReg.compute_activity_penalty": {"tf": 1}, "NDNT.modules.regularization.ActivityReg.compute_reg_penalty": {"tf": 1}}, "df": 5, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.modules.activity_regularization.ActivityRegularization": {"tf": 1}, "NDNT.modules.activity_regularization.ActivityRegularization.__init__": {"tf": 1}, "NDNT.modules.activity_regularization.ActivityRegularization.reg_vals": {"tf": 1}, "NDNT.modules.activity_regularization.ActivityRegularization.activity": {"tf": 1}, "NDNT.modules.activity_regularization.ActivityRegularization.nonneg": {"tf": 1}, "NDNT.modules.activity_regularization.ActivityRegularization.regularize": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.modules.regularization.ActivityReg.acitivity_penalty": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.training.trainer.Trainer.accumulate_grad_batches": {"tf": 1}}, "df": 1}}}}}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.layers.orilayers.OriLayer.angles": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.angles": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer.align_corners": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.training.trainer.Trainer.step_scheduler_after": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.NDN.NDN.compute_network_outputs": {"tf": 1}, "NDNT.NDN.NDN.compute_reg_loss": {"tf": 1}, "NDNT.NDN.NDN.compute_average_responses": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.compute_reg_loss": {"tf": 1}, "NDNT.modules.regularization.Regularization.compute_reg_loss": {"tf": 1}, "NDNT.modules.regularization.Regularization.compute_activity_regularization": {"tf": 1}, "NDNT.modules.regularization.LocalityReg.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.DiagonalReg.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.InlineReg.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.ConvReg.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.Tikhanov.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.TikhanovC.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.ActivityReg.compute_activity_penalty": {"tf": 1}, "NDNT.modules.regularization.ActivityReg.compute_reg_penalty": {"tf": 1}, "NDNT.networks.FFnetwork.compute_reg_loss": {"tf": 1}, "NDNT.networks.FFnet_external.compute_reg_loss": {"tf": 1}}, "df": 16}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.utils.ffnet_dicts.list_complete": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.modules.experiment_sampler.construct_exp_to_time": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.modules.layers.ndnlayer.NDNLayer.pos_constraint": {"tf": 1}, "NDNT.modules.regularization.Regularization.pos_constraint": {"tf": 1}, "NDNT.modules.regularization.RegModule.pos_constraint": {"tf": 1}}, "df": 3}}}}}}}, "v": {"docs": {"NDNT.modules.layers.ndnlayer.NDNLayer.conv": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.average_conv_kernel": {"tf": 1}, "NDNT.utils.MattUtils.smooth_conv": {"tf": 1}}, "df": 3, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"3": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.modules.layers.orilayers.ConvLayer3D": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.__init__": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.ori_padding": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.input_dims": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.output_dims": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.forward": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.plot_filters": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.layer_dict": {"tf": 1}}, "df": 8}}, "docs": {"NDNT.modules.layers.convlayers.ConvLayer": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.window": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.tent_basis": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.is1D": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.res_layer": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.filter_dims": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.padding": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.folded_dims": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.batchnorm_clone": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.batchnorm_convert": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.forward": {"tf": 1}}, "df": 14, "s": {"docs": {"NDNT.modules.layers.convlayers": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.window": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.tent_basis": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.is1D": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.res_layer": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.filter_dims": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.padding": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.folded_dims": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.batchnorm_clone": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.batchnorm_convert": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.forward": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.num_lags": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.is1D": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.padding": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.forward": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.num_lags": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.output_dims": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.forward": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.layer_dict": {"tf": 1}}, "df": 30}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.modules.layers.convlayers.ConvLayer.batchnorm_convert": {"tf": 1}, "NDNT.modules.regularization.Regularization.unit_reg_convert": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.modules.regularization.ConvReg": {"tf": 1}, "NDNT.modules.regularization.ConvReg.__init__": {"tf": 1}, "NDNT.modules.regularization.ConvReg.BC": {"tf": 1}, "NDNT.modules.regularization.ConvReg.compute_reg_penalty": {"tf": 1}}, "df": 4}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.modules.layers.reslayers.IterLayer.output_config": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.output_config": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.output_config": {"tf": 1}}, "df": 3}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.regularization.Regularization.boundary_conditions": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer.align_corners": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.modules.regularization.Regularization.reg_copy": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.regularization.TikhanovC.collapse_dims": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.networks.ScaffoldNetwork.filter_count": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.training.earlystopping.EarlyStopping.counter": {"tf": 1}}, "df": 1}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.NDN.NDN.change_loss": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.layers.bilayers.ChannelConvLayer": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.weights_folded_dims": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.forward": {"tf": 1}}, "df": 5}}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.layers.dimlayers.ChannelLayer": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.forward": {"tf": 1}}, "df": 4}}}}}}}}}}, "k": {"docs": {"NDNT.NDN.NDN.save_model_chk": {"tf": 1}, "NDNT.NDN.NDN.load_model_chk": {"tf": 1}}, "df": 2}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.training.trainer.Trainer.checkpoint_model": {"tf": 1}, "NDNT.utils.NDNutils.save_checkpoint": {"tf": 1}, "NDNT.utils.NDNutils.load_checkpoint": {"tf": 1}}, "df": 3}}}}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.modules.experiment_sampler.ExperimentBatchGenerator.current_batch_index": {"tf": 1}}, "df": 1}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.training.lbfgs.LBFGS.curvature_update": {"tf": 1}}, "df": 1}}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.layers.convlayers.ConvLayer.batchnorm_clone": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.regularization.Regularization.get_reg_class": {"tf": 1}, "NDNT.utils.NDNutils.CPU_Unpickler.find_class": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.utils.NDNutils.create_optimizer_params": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1}, "NDNT.utils.create_reg_matrices": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1.4142135623730951}, "NDNT.utils.create_reg_matrices.create_maxpenalty_matrix": {"tf": 1.4142135623730951}, "NDNT.utils.create_reg_matrices.create_localpenalty_matrix": {"tf": 1.4142135623730951}}, "df": 7}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {"NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1}, "NDNT.utils.NDNutils.CPU_Unpickler.find_class": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.NDN.NDN.compute_reg_loss": {"tf": 1}, "NDNT.NDN.NDN.set_reg_val": {"tf": 1}, "NDNT.modules.activity_regularization.ActivityRegularization.reg_vals": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.reg": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.reg": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.compute_reg_loss": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.set_reg_val": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.reg": {"tf": 1}, "NDNT.modules.regularization.Regularization.reg_modules": {"tf": 1}, "NDNT.modules.regularization.Regularization.unit_reg": {"tf": 1}, "NDNT.modules.regularization.Regularization.set_reg_val": {"tf": 1}, "NDNT.modules.regularization.Regularization.unit_reg_convert": {"tf": 1}, "NDNT.modules.regularization.Regularization.build_reg_modules": {"tf": 1}, "NDNT.modules.regularization.Regularization.compute_reg_loss": {"tf": 1}, "NDNT.modules.regularization.Regularization.reg_copy": {"tf": 1}, "NDNT.modules.regularization.Regularization.get_reg_class": {"tf": 1}, "NDNT.modules.regularization.RegModule.reg_type": {"tf": 1}, "NDNT.modules.regularization.RegModule.unit_reg": {"tf": 1}, "NDNT.modules.regularization.LocalityReg.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.LocalityReg.build_reg_mats": {"tf": 1}, "NDNT.modules.regularization.DiagonalReg.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.DiagonalReg.build_reg_mats": {"tf": 1}, "NDNT.modules.regularization.InlineReg.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.ConvReg.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.Tikhanov.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.TikhanovC.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.ActivityReg.compute_reg_penalty": {"tf": 1}, "NDNT.networks.FFnetwork.compute_reg_loss": {"tf": 1}, "NDNT.networks.FFnetwork.set_reg_val": {"tf": 1}, "NDNT.networks.FFnet_external.compute_reg_loss": {"tf": 1}, "NDNT.utils.create_reg_matrices": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_maxpenalty_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_localpenalty_matrix": {"tf": 1}}, "df": 34, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.NDN.NDN.prepare_regularization": {"tf": 1}, "NDNT.modules.activity_regularization": {"tf": 1}, "NDNT.modules.activity_regularization.ActivityRegularization": {"tf": 1}, "NDNT.modules.activity_regularization.ActivityRegularization.__init__": {"tf": 1}, "NDNT.modules.activity_regularization.ActivityRegularization.reg_vals": {"tf": 1}, "NDNT.modules.activity_regularization.ActivityRegularization.activity": {"tf": 1}, "NDNT.modules.activity_regularization.ActivityRegularization.nonneg": {"tf": 1}, "NDNT.modules.activity_regularization.ActivityRegularization.regularize": {"tf": 1}, "NDNT.modules.regularization": {"tf": 1}, "NDNT.modules.regularization.Regularization": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.Regularization.input_dims": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.Regularization.vals": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.Regularization.reg_modules": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.Regularization.normalize": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.Regularization.unit_reg": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.Regularization.folded_lags": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.Regularization.num_outputs": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.Regularization.pos_constraint": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.Regularization.boundary_conditions": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.Regularization.activity_regmodule": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.Regularization.set_reg_val": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.Regularization.unit_reg_convert": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.Regularization.build_reg_modules": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.Regularization.compute_reg_loss": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.Regularization.compute_activity_regularization": {"tf": 1.7320508075688772}, "NDNT.modules.regularization.Regularization.reg_copy": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.Regularization.get_reg_class": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.RegModule": {"tf": 1}, "NDNT.modules.regularization.RegModule.__init__": {"tf": 1}, "NDNT.modules.regularization.RegModule.reg_type": {"tf": 1}, "NDNT.modules.regularization.RegModule.unit_reg": {"tf": 1}, "NDNT.modules.regularization.RegModule.input_dims": {"tf": 1}, "NDNT.modules.regularization.RegModule.num_dims": {"tf": 1}, "NDNT.modules.regularization.RegModule.folded_lags": {"tf": 1}, "NDNT.modules.regularization.RegModule.pos_constraint": {"tf": 1}, "NDNT.modules.regularization.RegModule.forward": {"tf": 1}, "NDNT.modules.regularization.LocalityReg": {"tf": 1}, "NDNT.modules.regularization.LocalityReg.__init__": {"tf": 1}, "NDNT.modules.regularization.LocalityReg.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.LocalityReg.build_reg_mats": {"tf": 1}, "NDNT.modules.regularization.DiagonalReg": {"tf": 1}, "NDNT.modules.regularization.DiagonalReg.__init__": {"tf": 1}, "NDNT.modules.regularization.DiagonalReg.input_dims": {"tf": 1}, "NDNT.modules.regularization.DiagonalReg.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.DiagonalReg.build_reg_mats": {"tf": 1}, "NDNT.modules.regularization.InlineReg": {"tf": 1}, "NDNT.modules.regularization.InlineReg.__init__": {"tf": 1}, "NDNT.modules.regularization.InlineReg.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.ConvReg": {"tf": 1}, "NDNT.modules.regularization.ConvReg.__init__": {"tf": 1}, "NDNT.modules.regularization.ConvReg.BC": {"tf": 1}, "NDNT.modules.regularization.ConvReg.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.Tikhanov": {"tf": 1}, "NDNT.modules.regularization.Tikhanov.__init__": {"tf": 1}, "NDNT.modules.regularization.Tikhanov.input_dims": {"tf": 1}, "NDNT.modules.regularization.Tikhanov.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.TikhanovC": {"tf": 1}, "NDNT.modules.regularization.TikhanovC.__init__": {"tf": 1}, "NDNT.modules.regularization.TikhanovC.input_dims": {"tf": 1}, "NDNT.modules.regularization.TikhanovC.collapse_dims": {"tf": 1}, "NDNT.modules.regularization.TikhanovC.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.ActivityReg": {"tf": 1}, "NDNT.modules.regularization.ActivityReg.__init__": {"tf": 1}, "NDNT.modules.regularization.ActivityReg.acitivity_penalty": {"tf": 1}, "NDNT.modules.regularization.ActivityReg.compute_activity_penalty": {"tf": 1}, "NDNT.modules.regularization.ActivityReg.compute_reg_penalty": {"tf": 1}, "NDNT.networks.FFnetwork.prepare_regularization": {"tf": 1}}, "df": 68}}}}}, "e": {"docs": {"NDNT.modules.activity_regularization.ActivityRegularization.regularize": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.regularization.Regularization.activity_regmodule": {"tf": 1}, "NDNT.modules.regularization.RegModule": {"tf": 1}, "NDNT.modules.regularization.RegModule.__init__": {"tf": 1}, "NDNT.modules.regularization.RegModule.reg_type": {"tf": 1}, "NDNT.modules.regularization.RegModule.unit_reg": {"tf": 1}, "NDNT.modules.regularization.RegModule.input_dims": {"tf": 1}, "NDNT.modules.regularization.RegModule.num_dims": {"tf": 1}, "NDNT.modules.regularization.RegModule.folded_lags": {"tf": 1}, "NDNT.modules.regularization.RegModule.pos_constraint": {"tf": 1}, "NDNT.modules.regularization.RegModule.forward": {"tf": 1}}, "df": 10}}}}}}}, "s": {"docs": {"NDNT.modules.layers.convlayers.ConvLayer.res_layer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.res_layer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.res_layer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.res_layer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.res_layer": {"tf": 1}}, "df": 5, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.NDN.NDN.compute_average_responses": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.modules.layers.ndnlayer.NDNLayer.reset_parameters": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.reset_parameters2": {"tf": 1}}, "df": 2}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.layers.reslayers": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.num_iter": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.LN_reverse": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.output_config": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.res_layer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.forward": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.num_iter": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.output_config": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.res_layer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.num_outputs": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.forward": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.num_iter": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.output_config": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.res_layer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.num_outputs": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.forward": {"tf": 1}}, "df": 25}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.networks.FFnet_external.input_dims_reshape": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.NDN.NDN.get_readout_locations": {"tf": 1}, "NDNT.NDN.NDN.passive_readout": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.set_readout_locations": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.get_readout_locations": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.passive_readout": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.passive_readout": {"tf": 1}, "NDNT.networks.ReadoutNetwork.get_readout_locations": {"tf": 1}, "NDNT.networks.ReadoutNetwork.set_readout_locations": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_readout": {"tf": 1}}, "df": 9, "s": {"docs": {"NDNT.modules.layers.readouts": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.batch_sample": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_mode": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.init_mu_range": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.init_sigma": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.align_corners": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.grid_shape": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.mu": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.sigma": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.sample": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.features": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.grid": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.initialize_spatial_mapping": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.get_weights": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.forward": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.set_readout_locations": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.get_readout_locations": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.passive_readout": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.input_dims": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.filter_dims": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.reg": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.forward": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.passive_readout": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.num_spatial_dims": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.num_fixations": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.batch_sample": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.init_sigma": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.single_sigma": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.fix_n_index": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.sample": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.forward": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.initialize": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 1}}, "df": 42}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"3": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer3d": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.input_dims": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.filter_dims": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.reg": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.forward": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.passive_readout": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.layer_dict": {"tf": 1}}, "df": 8}}, "docs": {"NDNT.modules.layers.readouts.ReadoutLayer": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.batch_sample": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_mode": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.init_mu_range": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.init_sigma": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.align_corners": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.grid_shape": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.mu": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.sigma": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.sample": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.features": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.grid": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.initialize_spatial_mapping": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.get_weights": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.forward": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.set_readout_locations": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.get_readout_locations": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.passive_readout": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.layer_dict": {"tf": 1}}, "df": 21}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"NDNT.networks.ReadoutNetwork": {"tf": 1}, "NDNT.networks.ReadoutNetwork.__init__": {"tf": 1}, "NDNT.networks.ReadoutNetwork.network_type": {"tf": 1}, "NDNT.networks.ReadoutNetwork.determine_input_dims": {"tf": 1}, "NDNT.networks.ReadoutNetwork.forward": {"tf": 1}, "NDNT.networks.ReadoutNetwork.get_readout_locations": {"tf": 1}, "NDNT.networks.ReadoutNetwork.set_readout_locations": {"tf": 1}, "NDNT.networks.ReadoutNetwork.ffnet_dict": {"tf": 1}}, "df": 8}}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.layers.reslayers.IterLayer.LN_reverse": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.training.lbfgs.LBFGS.two_loop_recursion": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"NDNT.modules.experiment_sampler.ExperimentSampler.random_seed": {"tf": 1}}, "df": 1}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.layers.lvlayers.LVLayerOLD.init_mu_range": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.init_mu_range": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.modules.layers.orilayers.OriConvLayer.get_rot_mat": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.modules.layers.orilayers.OriLayer.rotation_matrix_tensor": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.rotation_matrix_tensor": {"tf": 1}}, "df": 2}}}, "e": {"docs": {"NDNT.modules.layers.orilayers.OriConvLayer.rotate_tensor": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.metrics.rmse_loss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.__init__": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.loss_name": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.loss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.lossNR": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.unit_weighting": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.batch_weighting": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.forward": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.unit_loss": {"tf": 1}}, "df": 11, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.metrics.rmse_loss.RmseLoss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.__init__": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.loss_name": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.loss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.lossNR": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.unit_weighting": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.batch_weighting": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.forward": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.unit_loss": {"tf": 1}}, "df": 10}}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.NDN.NDN.get_trainer": {"tf": 1}, "NDNT.NDN.NDN.get_dataloaders": {"tf": 1}, "NDNT.NDN.NDN.get_optimizer": {"tf": 1}, "NDNT.NDN.NDN.get_weights": {"tf": 1}, "NDNT.NDN.NDN.get_readout_locations": {"tf": 1}, "NDNT.NDN.NDN.get_null_adjusted_ll": {"tf": 1}, "NDNT.NDN.NDN.get_activations": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.get_weights": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.get_rot_mat": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.get_weights": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.get_readout_locations": {"tf": 1}, "NDNT.modules.regularization.Regularization.get_reg_class": {"tf": 1}, "NDNT.networks.FFnetwork.get_weights": {"tf": 1}, "NDNT.networks.ReadoutNetwork.get_readout_locations": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.get_params": {"tf": 1}, "NDNT.utils.NDNutils.get_fit_versions": {"tf": 1}, "NDNT.utils.NDNutils.get_max_samples": {"tf": 1}}, "df": 17}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.NDN.NDN.generate_predictions": {"tf": 1}, "NDNT.utils.NDNutils.tent_basis_generate": {"tf": 1}, "NDNT.utils.NDNutils.generate_xv_folds": {"tf": 1}}, "df": 3}, "o": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.training.ada_hessian.AdaHessian.generator": {"tf": 1}}, "df": 1, "s": {"docs": {"NDNT.modules.experiment_sampler.ExperimentBatchIterator.exp_batch_generators": {"tf": 1}}, "df": 1}}}}}}}}}, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.modules.layers.ndnlayer.NDNLayer.initialize_gaussian_envelope": {"tf": 1}, "NDNT.utils.NDNutils.initialize_gaussian_envelope": {"tf": 1}}, "df": 2}}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"2": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.utils.NDNutils.grid2pixel": {"tf": 1}}, "df": 1}}}}}}, "docs": {"NDNT.modules.layers.readouts.ReadoutLayer.grid_shape": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.grid": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1}}, "df": 3}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {"NDNT.training.trainer.Trainer.optimize_graph": {"tf": 1}}, "df": 1}}, "d": {"docs": {"NDNT.training.trainer.Trainer.accumulate_grad_batches": {"tf": 1}}, "df": 1}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.training.trainer.Trainer.graceful_exit": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.NDN.NDN.eval_models": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {"NDNT.modules.activations.adaptive_elu": {"tf": 1}}, "df": 1}}, "x": {"docs": {}, "df": 0, "p": {"docs": {"NDNT.modules.experiment_sampler.ExperimentBatchIterator.exp_batch_generators": {"tf": 1}, "NDNT.modules.experiment_sampler.construct_exp_to_time": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.exp_to_time": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.exp_lengths": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.exp_batch_sizes": {"tf": 1}}, "df": 5, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.modules.experiment_sampler": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchGenerator": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchGenerator.__init__": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchGenerator.batches": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchGenerator.current_batch_index": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchGenerator.next": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchIterator": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchIterator.__init__": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchIterator.exp_batch_generators": {"tf": 1}, "NDNT.modules.experiment_sampler.construct_exp_to_time": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.__init__": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.dataset": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.batch_size": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.shuffle": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.random_seed": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.num_exps": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.exp_to_time": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.exp_lengths": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.exp_batch_sizes": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.num_batches": {"tf": 1}}, "df": 21, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.experiment_sampler.ExperimentBatchGenerator": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchGenerator.__init__": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchGenerator.batches": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchGenerator.current_batch_index": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchGenerator.next": {"tf": 1}}, "df": 5}}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.experiment_sampler.ExperimentBatchIterator": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchIterator.__init__": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchIterator.exp_batch_generators": {"tf": 1}}, "df": 3}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.experiment_sampler.ExperimentSampler": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.__init__": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.dataset": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.batch_size": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.shuffle": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.random_seed": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.num_exps": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.exp_to_time": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.exp_lengths": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.exp_batch_sizes": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.num_batches": {"tf": 1}}, "df": 11}}}}}}}}}}}}}}, "s": {"docs": {"NDNT.modules.experiment_sampler.ExperimentSampler.num_exps": {"tf": 1}}, "df": 1}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.utils.DanUtils.figure_export": {"tf": 1}, "NDNT.utils.DanUtils.matlab_export": {"tf": 1}}, "df": 2}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.networks.FFnet_external": {"tf": 1}, "NDNT.networks.FFnet_external.__init__": {"tf": 1}, "NDNT.networks.FFnet_external.network_type": {"tf": 1}, "NDNT.networks.FFnet_external.input_dims_reshape": {"tf": 1}, "NDNT.networks.FFnet_external.forward": {"tf": 1}, "NDNT.networks.FFnet_external.compute_reg_loss": {"tf": 1}, "NDNT.networks.FFnet_external.list_params": {"tf": 1}, "NDNT.networks.FFnet_external.set_params": {"tf": 1}, "NDNT.networks.FFnet_external.ffnet_dict": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_external": {"tf": 1}}, "df": 10, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.layers.externallayer": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.externallayer.ExternalLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.externallayer.ExternalLayer.input_dims": {"tf": 1.4142135623730951}, "NDNT.modules.layers.externallayer.ExternalLayer.num_filters": {"tf": 1.4142135623730951}, "NDNT.modules.layers.externallayer.ExternalLayer.filter_dims": {"tf": 1.4142135623730951}, "NDNT.modules.layers.externallayer.ExternalLayer.output_dims": {"tf": 1.4142135623730951}, "NDNT.modules.layers.externallayer.ExternalLayer.reg": {"tf": 1.4142135623730951}, "NDNT.modules.layers.externallayer.ExternalLayer.forward": {"tf": 1.4142135623730951}}, "df": 9}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.training.trainer.Trainer.graceful_exit": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.layers.ndnlayer.NDNLayer.initialize_gaussian_envelope": {"tf": 1}, "NDNT.utils.NDNutils.initialize_gaussian_envelope": {"tf": 1}}, "df": 2}}}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.utils.NDNutils.ensure_dir": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"NDNT.training.ada_hessian.AdaHessian.update_each": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.training.earlystopping.EarlyStopping.early_stop": {"tf": 1}, "NDNT.training.trainer.Trainer.early_stopping": {"tf": 1}}, "df": 2, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.training.earlystopping": {"tf": 1}, "NDNT.training.earlystopping.EarlyStopping": {"tf": 1.4142135623730951}, "NDNT.training.earlystopping.EarlyStopping.__init__": {"tf": 1.4142135623730951}, "NDNT.training.earlystopping.EarlyStopping.patience": {"tf": 1.4142135623730951}, "NDNT.training.earlystopping.EarlyStopping.verbose": {"tf": 1.4142135623730951}, "NDNT.training.earlystopping.EarlyStopping.counter": {"tf": 1.4142135623730951}, "NDNT.training.earlystopping.EarlyStopping.best_score": {"tf": 1.4142135623730951}, "NDNT.training.earlystopping.EarlyStopping.early_stop": {"tf": 1.4142135623730951}, "NDNT.training.earlystopping.EarlyStopping.val_loss_min": {"tf": 1.4142135623730951}, "NDNT.training.earlystopping.EarlyStopping.delta": {"tf": 1.4142135623730951}, "NDNT.training.earlystopping.EarlyStopping.trace_func": {"tf": 1.4142135623730951}}, "df": 11}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"NDNT.training.trainer.Trainer.epoch": {"tf": 1}, "NDNT.training.trainer.Trainer.validate_one_epoch": {"tf": 1}, "NDNT.training.trainer.Trainer.train_one_epoch": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.train_one_epoch": {"tf": 1}, "NDNT.training.trainer.TemperatureCalibratedTrainer.validate_one_epoch": {"tf": 1}}, "df": 5, "s": {"docs": {"NDNT.training.trainer.Trainer.max_epochs": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_log_epsilon": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.utils.DanUtils.time_embedding_simple": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1}}, "df": 3}}}}}}}, "a": {"docs": {"NDNT.utils.MattUtils.smooth_ema": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer.sample_mode": {"tf": 1}}, "df": 1, "l": {"docs": {"NDNT.NDN.NDN.save_model_zip": {"tf": 1}, "NDNT.NDN.NDN.load_model_zip": {"tf": 1}, "NDNT.NDN.NDN.save_model": {"tf": 1}, "NDNT.NDN.NDN.save_model_chk": {"tf": 1}, "NDNT.NDN.NDN.load_model": {"tf": 1}, "NDNT.NDN.NDN.load_model_chk": {"tf": 1}, "NDNT.NDN.NDN.model_string": {"tf": 1}, "NDNT.training.trainer.Trainer.checkpoint_model": {"tf": 1}, "NDNT.utils.NDNutils.load_model": {"tf": 1}}, "df": 9, "s": {"docs": {"NDNT.NDN.NDN.eval_models": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.utils.NDNutils.ModelSummary": {"tf": 1}}, "df": 1}}}}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules": {"tf": 1}, "NDNT.modules.activations": {"tf": 1}, "NDNT.modules.activations.adaptive_elu": {"tf": 1}, "NDNT.modules.activations.Square": {"tf": 1}, "NDNT.modules.activations.Square.__init__": {"tf": 1}, "NDNT.modules.activations.Square.forward": {"tf": 1}, "NDNT.modules.activations.AdaptiveELU": {"tf": 1}, "NDNT.modules.activations.AdaptiveELU.__init__": {"tf": 1}, "NDNT.modules.activations.AdaptiveELU.xshift": {"tf": 1}, "NDNT.modules.activations.AdaptiveELU.yshift": {"tf": 1}, "NDNT.modules.activations.AdaptiveELU.inplace": {"tf": 1}, "NDNT.modules.activations.AdaptiveELU.forward": {"tf": 1}, "NDNT.modules.activations.NLtypes": {"tf": 1}, "NDNT.modules.activity_regularization": {"tf": 1}, "NDNT.modules.activity_regularization.ActivityRegularization": {"tf": 1}, "NDNT.modules.activity_regularization.ActivityRegularization.__init__": {"tf": 1}, "NDNT.modules.activity_regularization.ActivityRegularization.reg_vals": {"tf": 1}, "NDNT.modules.activity_regularization.ActivityRegularization.activity": {"tf": 1}, "NDNT.modules.activity_regularization.ActivityRegularization.nonneg": {"tf": 1}, "NDNT.modules.activity_regularization.ActivityRegularization.regularize": {"tf": 1}, "NDNT.modules.experiment_sampler": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchGenerator": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchGenerator.__init__": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchGenerator.batches": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchGenerator.current_batch_index": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchGenerator.next": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchIterator": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchIterator.__init__": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchIterator.exp_batch_generators": {"tf": 1}, "NDNT.modules.experiment_sampler.construct_exp_to_time": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.__init__": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.dataset": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.batch_size": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.shuffle": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.random_seed": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.num_exps": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.exp_to_time": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.exp_lengths": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.exp_batch_sizes": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.num_batches": {"tf": 1}, "NDNT.modules.layers": {"tf": 1}, "NDNT.modules.layers.bilayers": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D.forward": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.output_dims": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.num_outputs": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.forward": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.weights_folded_dims": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.forward": {"tf": 1}, "NDNT.modules.layers.convlayers": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.window": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.tent_basis": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.is1D": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.res_layer": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.filter_dims": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.padding": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.folded_dims": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.batchnorm_clone": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.batchnorm_convert": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.forward": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.num_lags": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.is1D": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.padding": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.forward": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.num_lags": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.output_dims": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.forward": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.output_dims": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.num_outputs": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.num_other_dims": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.forward": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.dim_info": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.forward": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.transparent": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.num_outputs": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.num_sp_dims": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.forward": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.output_dims": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.num_outputs": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.transparent": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.num_spt_dims": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.forward": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.externallayer": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.__init__": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.input_dims": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.num_filters": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.filter_dims": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.output_dims": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.reg": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.forward": {"tf": 1}, "NDNT.modules.layers.laglayers": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.__init__": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.num_lags": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.num_folded_dims": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.forward": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.__init__": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.forward": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.__init__": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.numLVs": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.nt": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.init_mu_range": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.init_sigma": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.sigma": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.sm_skips": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.sample": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.weight_scale": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.forward": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1}, "NDNT.modules.layers.ndnlayer": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.input_dims": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.num_filters": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.output_dims": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.norm_type": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.pos_constraint": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.conv": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.NL": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.shape": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.weight_scale": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.weight": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.reg": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.num_inh": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.reset_parameters": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.initialize_gaussian_envelope": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.forward": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.compute_reg_loss": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.get_weights": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.list_parameters": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.set_parameters": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.set_reg_val": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.dim_info": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.normlayers": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.__init__": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.output_dims": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.num_outputs": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.forward": {"tf": 1}, "NDNT.modules.layers.orilayers": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.__init__": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.angles": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.output_dims": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.rotation_matrix_tensor": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.forward": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.angles": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.folded_dims": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.output_dims": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.rotation_matrix_tensor": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.get_rot_mat": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.rotate_tensor": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.forward": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.__init__": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.ori_padding": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.input_dims": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.output_dims": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.forward": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.plot_filters": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.batch_sample": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_mode": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.init_mu_range": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.init_sigma": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.align_corners": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.grid_shape": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.mu": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.sigma": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.sample": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.features": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.grid": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.initialize_spatial_mapping": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.get_weights": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.forward": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.set_readout_locations": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.get_readout_locations": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.passive_readout": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.input_dims": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.filter_dims": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.reg": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.forward": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.passive_readout": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.num_spatial_dims": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.num_fixations": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.batch_sample": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.init_sigma": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.single_sigma": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.fix_n_index": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.sample": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.forward": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.initialize": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.num_iter": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.LN_reverse": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.output_config": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.res_layer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.forward": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.num_iter": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.output_config": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.res_layer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.num_outputs": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.forward": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.num_iter": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.output_config": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.res_layer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.num_outputs": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.forward": {"tf": 1}, "NDNT.modules.layers.specialtylayers": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.tent_basis": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.res_layer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.folded_dims": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.forward": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.weight_minus": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.window": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.tent_basis": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.reset_parameters2": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.forward": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.timelayers": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.__init__": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.output_dims": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.num_outputs": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.forward": {"tf": 1}, "NDNT.modules.regularization": {"tf": 1}, "NDNT.modules.regularization.Regularization": {"tf": 1}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1}, "NDNT.modules.regularization.Regularization.input_dims": {"tf": 1}, "NDNT.modules.regularization.Regularization.vals": {"tf": 1}, "NDNT.modules.regularization.Regularization.reg_modules": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.Regularization.normalize": {"tf": 1}, "NDNT.modules.regularization.Regularization.unit_reg": {"tf": 1}, "NDNT.modules.regularization.Regularization.folded_lags": {"tf": 1}, "NDNT.modules.regularization.Regularization.num_outputs": {"tf": 1}, "NDNT.modules.regularization.Regularization.pos_constraint": {"tf": 1}, "NDNT.modules.regularization.Regularization.boundary_conditions": {"tf": 1}, "NDNT.modules.regularization.Regularization.activity_regmodule": {"tf": 1}, "NDNT.modules.regularization.Regularization.set_reg_val": {"tf": 1}, "NDNT.modules.regularization.Regularization.unit_reg_convert": {"tf": 1}, "NDNT.modules.regularization.Regularization.build_reg_modules": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.Regularization.compute_reg_loss": {"tf": 1}, "NDNT.modules.regularization.Regularization.compute_activity_regularization": {"tf": 1}, "NDNT.modules.regularization.Regularization.reg_copy": {"tf": 1}, "NDNT.modules.regularization.Regularization.get_reg_class": {"tf": 1}, "NDNT.modules.regularization.RegModule": {"tf": 1}, "NDNT.modules.regularization.RegModule.__init__": {"tf": 1}, "NDNT.modules.regularization.RegModule.reg_type": {"tf": 1}, "NDNT.modules.regularization.RegModule.unit_reg": {"tf": 1}, "NDNT.modules.regularization.RegModule.input_dims": {"tf": 1}, "NDNT.modules.regularization.RegModule.num_dims": {"tf": 1}, "NDNT.modules.regularization.RegModule.folded_lags": {"tf": 1}, "NDNT.modules.regularization.RegModule.pos_constraint": {"tf": 1}, "NDNT.modules.regularization.RegModule.forward": {"tf": 1}, "NDNT.modules.regularization.LocalityReg": {"tf": 1}, "NDNT.modules.regularization.LocalityReg.__init__": {"tf": 1}, "NDNT.modules.regularization.LocalityReg.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.LocalityReg.build_reg_mats": {"tf": 1}, "NDNT.modules.regularization.DiagonalReg": {"tf": 1}, "NDNT.modules.regularization.DiagonalReg.__init__": {"tf": 1}, "NDNT.modules.regularization.DiagonalReg.input_dims": {"tf": 1}, "NDNT.modules.regularization.DiagonalReg.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.DiagonalReg.build_reg_mats": {"tf": 1}, "NDNT.modules.regularization.InlineReg": {"tf": 1}, "NDNT.modules.regularization.InlineReg.__init__": {"tf": 1}, "NDNT.modules.regularization.InlineReg.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.ConvReg": {"tf": 1}, "NDNT.modules.regularization.ConvReg.__init__": {"tf": 1}, "NDNT.modules.regularization.ConvReg.BC": {"tf": 1}, "NDNT.modules.regularization.ConvReg.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.Tikhanov": {"tf": 1}, "NDNT.modules.regularization.Tikhanov.__init__": {"tf": 1}, "NDNT.modules.regularization.Tikhanov.input_dims": {"tf": 1}, "NDNT.modules.regularization.Tikhanov.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.TikhanovC": {"tf": 1}, "NDNT.modules.regularization.TikhanovC.__init__": {"tf": 1}, "NDNT.modules.regularization.TikhanovC.input_dims": {"tf": 1}, "NDNT.modules.regularization.TikhanovC.collapse_dims": {"tf": 1}, "NDNT.modules.regularization.TikhanovC.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.ActivityReg": {"tf": 1}, "NDNT.modules.regularization.ActivityReg.__init__": {"tf": 1}, "NDNT.modules.regularization.ActivityReg.acitivity_penalty": {"tf": 1}, "NDNT.modules.regularization.ActivityReg.compute_activity_penalty": {"tf": 1}, "NDNT.modules.regularization.ActivityReg.compute_reg_penalty": {"tf": 1}}, "df": 372}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.utils.DanUtils.monocular_data_import": {"tf": 1}}, "df": 1}}}}}}}}, "u": {"docs": {"NDNT.modules.layers.lvlayers.LVLayerOLD.init_mu_range": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.init_mu_range": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.mu": {"tf": 1}}, "df": 3, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.utils.DanUtils.max_multiD": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.modules.layers.orilayers.OriConvLayer.get_rot_mat": {"tf": 1}, "NDNT.utils.NDNutils.shift_mat_zpad": {"tf": 1}}, "df": 2, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"NDNT.modules.layers.orilayers.OriLayer.rotation_matrix_tensor": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.rotation_matrix_tensor": {"tf": 1}, "NDNT.utils.DanUtils.display_matrix": {"tf": 1}, "NDNT.utils.DanUtils.design_matrix_drift": {"tf": 1}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_maxpenalty_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_localpenalty_matrix": {"tf": 1}}, "df": 8}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.utils.create_reg_matrices": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_maxpenalty_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_localpenalty_matrix": {"tf": 1}}, "df": 4}}}}}, "s": {"docs": {"NDNT.modules.regularization.LocalityReg.build_reg_mats": {"tf": 1}, "NDNT.modules.regularization.DiagonalReg.build_reg_mats": {"tf": 1}}, "df": 2}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {"NDNT.utils.DanUtils.matlab_export": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.utils.MattUtils": {"tf": 1}, "NDNT.utils.MattUtils.load_losses": {"tf": 1}, "NDNT.utils.MattUtils.smooth_ema": {"tf": 1}, "NDNT.utils.MattUtils.smooth_conv": {"tf": 1}, "NDNT.utils.MattUtils.plot_losses": {"tf": 1}}, "df": 5}}}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer.initialize_spatial_mapping": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.layers.specialtylayers.MaskLayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.layer_dict": {"tf": 1}}, "df": 4}}}}}}}, "x": {"docs": {"NDNT.training.trainer.Trainer.max_epochs": {"tf": 1}, "NDNT.utils.DanUtils.max_multiD": {"tf": 1}, "NDNT.utils.NDNutils.get_max_samples": {"tf": 1}}, "df": 3, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.utils.create_reg_matrices.create_maxpenalty_matrix": {"tf": 1}}, "df": 1}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.training.earlystopping.EarlyStopping.val_loss_min": {"tf": 1}, "NDNT.training.trainer.Trainer.val_loss_min": {"tf": 1}}, "df": 2, "u": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.layers.specialtylayers.L1convLayer.weight_minus": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"NDNT.training.trainer.Trainer.step_scheduler_metric": {"tf": 1}}, "df": 1, "s": {"docs": {"NDNT.metrics": {"tf": 1}, "NDNT.metrics.mse_loss": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.__init__": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.loss_name": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.loss": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.lossNR": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.unit_weighting": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.batch_weighting": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.forward": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.__init__": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.loss_name": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.loss": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.lossNR": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.unit_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.batch_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_log_epsilon": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.forward": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.__init__": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.loss_name": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.loss": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.lossNR": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.unit_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.batch_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.forward": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.unit_loss": {"tf": 1}, "NDNT.metrics.rmse_loss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.__init__": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.loss_name": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.loss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.lossNR": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.unit_weighting": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.batch_weighting": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.forward": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.unit_loss": {"tf": 1}}, "df": 45}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.metrics.mse_loss": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.__init__": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.loss_name": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.loss": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.lossNR": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.unit_weighting": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.batch_weighting": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.forward": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.unit_loss": {"tf": 1}}, "df": 11, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.__init__": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.loss_name": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.loss": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.lossNR": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.unit_weighting": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.batch_weighting": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.forward": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.unit_loss": {"tf": 1}}, "df": 10}}}}}}}, "z": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {"NDNT.NDN.NDN.save_model_zip": {"tf": 1}, "NDNT.NDN.NDN.load_model_zip": {"tf": 1}}, "df": 2}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {"NDNT.training.ada_hessian.AdaHessian.zero_hessian": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.utils.NDNutils.shift_mat_zpad": {"tf": 1}}, "df": 1}}}}, "x": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.modules.activations.AdaptiveELU.xshift": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {"NDNT.networks.FFnetwork.xstim_n": {"tf": 1}}, "df": 1}}}}, "v": {"docs": {"NDNT.utils.NDNutils.generate_xv_folds": {"tf": 1}}, "df": 1}}, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.modules.activations.AdaptiveELU.yshift": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.modules.regularization.Regularization.unit_reg": {"tf": 1}, "NDNT.modules.regularization.Regularization.unit_reg_convert": {"tf": 1}, "NDNT.modules.regularization.RegModule.unit_reg": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.unit_weighting": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.unit_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.unit_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.unit_loss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.unit_weighting": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.unit_loss": {"tf": 1}}, "df": 11}}, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1}, "NDNT.utils.NDNutils.CPU_Unpickler.find_class": {"tf": 1}}, "df": 2}}}}}}}}, "p": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.training.ada_hessian.AdaHessian.update_each": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.curvature_update": {"tf": 1}}, "df": 2}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.utils": {"tf": 1}, "NDNT.utils.DanUtils": {"tf": 1}, "NDNT.utils.DanUtils.subplot_setup": {"tf": 1}, "NDNT.utils.DanUtils.ss": {"tf": 1}, "NDNT.utils.DanUtils.imagesc": {"tf": 1}, "NDNT.utils.DanUtils.find_peaks": {"tf": 1}, "NDNT.utils.DanUtils.filename_num2str": {"tf": 1}, "NDNT.utils.DanUtils.display_matrix": {"tf": 1}, "NDNT.utils.DanUtils.figure_export": {"tf": 1}, "NDNT.utils.DanUtils.matlab_export": {"tf": 1}, "NDNT.utils.DanUtils.save_python_data": {"tf": 1}, "NDNT.utils.DanUtils.load_python_data": {"tf": 1}, "NDNT.utils.DanUtils.fold_sample": {"tf": 1}, "NDNT.utils.DanUtils.time_embedding_simple": {"tf": 1}, "NDNT.utils.DanUtils.design_matrix_drift": {"tf": 1}, "NDNT.utils.DanUtils.max_multiD": {"tf": 1}, "NDNT.utils.DanUtils.iterate_lbfgs": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}, "NDNT.utils.DanUtils.monocular_data_import": {"tf": 1}, "NDNT.utils.MattUtils": {"tf": 1}, "NDNT.utils.MattUtils.load_losses": {"tf": 1}, "NDNT.utils.MattUtils.smooth_ema": {"tf": 1}, "NDNT.utils.MattUtils.smooth_conv": {"tf": 1}, "NDNT.utils.MattUtils.plot_losses": {"tf": 1}, "NDNT.utils.NDNutils": {"tf": 1}, "NDNT.utils.NDNutils.fit_lbfgs": {"tf": 1}, "NDNT.utils.NDNutils.create_optimizer_params": {"tf": 1}, "NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1}, "NDNT.utils.NDNutils.CPU_Unpickler.find_class": {"tf": 1}, "NDNT.utils.NDNutils.default_save_dir": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1}, "NDNT.utils.NDNutils.is_int": {"tf": 1}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 1}, "NDNT.utils.NDNutils.tent_basis_generate": {"tf": 1}, "NDNT.utils.NDNutils.shift_mat_zpad": {"tf": 1}, "NDNT.utils.NDNutils.generate_xv_folds": {"tf": 1}, "NDNT.utils.NDNutils.initialize_gaussian_envelope": {"tf": 1}, "NDNT.utils.NDNutils.pixel2grid": {"tf": 1}, "NDNT.utils.NDNutils.grid2pixel": {"tf": 1}, "NDNT.utils.NDNutils.save_checkpoint": {"tf": 1}, "NDNT.utils.NDNutils.load_checkpoint": {"tf": 1}, "NDNT.utils.NDNutils.ensure_dir": {"tf": 1}, "NDNT.utils.NDNutils.ModelSummary": {"tf": 1}, "NDNT.utils.NDNutils.summary_string": {"tf": 1}, "NDNT.utils.NDNutils.get_fit_versions": {"tf": 1}, "NDNT.utils.NDNutils.load_model": {"tf": 1}, "NDNT.utils.NDNutils.get_max_samples": {"tf": 1}, "NDNT.utils.NDNutils.NpEncoder": {"tf": 1}, "NDNT.utils.NDNutils.NpEncoder.default": {"tf": 1}, "NDNT.utils.create_reg_matrices": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_maxpenalty_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_localpenalty_matrix": {"tf": 1}, "NDNT.utils.ffnet_dicts": {"tf": 1}, "NDNT.utils.ffnet_dicts.layer_dict": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_NIM": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_readout": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_external": {"tf": 1}, "NDNT.utils.ffnet_dicts.list_complete": {"tf": 1}, "NDNT.utils.plotting": {"tf": 1}, "NDNT.utils.plotting.plot_filters_1D": {"tf": 1}, "NDNT.utils.plotting.plot_filters_2D": {"tf": 1}, "NDNT.utils.plotting.plot_filters_ST1D": {"tf": 1}, "NDNT.utils.plotting.plot_filters_ST2D": {"tf": 1}, "NDNT.utils.plotting.plot_filters_ST3D": {"tf": 1}, "NDNT.utils.plotting.plot_scatter": {"tf": 1}, "NDNT.utils.plotting.plot_internal_weights": {"tf": 1}}, "df": 70}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.training.ada_hessian": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.__init__": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.n_samples": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.update_each": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.average_conv_kernel": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.generator": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.get_params": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.zero_hessian": {"tf": 1.4142135623730951}, "NDNT.training.ada_hessian.AdaHessian.set_hessian": {"tf": 1.4142135623730951}, "NDNT.training.ada_hessian.AdaHessian.step": {"tf": 1}}, "df": 11}}}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.training.ada_hessian.AdaHessian.average_conv_kernel": {"tf": 1}}, "df": 1}}}}}}}}, "annotation": {"root": {"docs": {}, "df": 0}}, "default_value": {"root": {"0": {"docs": {"NDNT.version.version": {"tf": 1.4142135623730951}}, "df": 1}, "1": {"docs": {"NDNT.modules.activations.NLtypes": {"tf": 1}, "NDNT.version.version": {"tf": 1}}, "df": 2}, "2": {"0": {"docs": {"NDNT.modules.activations.NLtypes": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"NDNT.NDN.FFnets": {"tf": 2.8284271247461903}, "NDNT.modules.activations.NLtypes": {"tf": 3.1622776601683795}, "NDNT.networks.LayerTypes": {"tf": 5.385164807134504}, "NDNT.version.version": {"tf": 1.4142135623730951}}, "df": 4, "x": {"2": {"7": {"docs": {"NDNT.NDN.FFnets": {"tf": 4.898979485566356}, "NDNT.modules.activations.NLtypes": {"tf": 4.242640687119285}, "NDNT.networks.LayerTypes": {"tf": 10.392304845413264}, "NDNT.version.version": {"tf": 1.4142135623730951}}, "df": 4}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.NDN.FFnets": {"tf": 1}, "NDNT.networks.LayerTypes": {"tf": 1}}, "df": 2}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.networks.LayerTypes": {"tf": 1}}, "df": 1}}}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.activations.NLtypes": {"tf": 1.4142135623730951}}, "df": 1}}}, "d": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.NDN.FFnets": {"tf": 2.449489742783178}, "NDNT.networks.LayerTypes": {"tf": 5.196152422706632}}, "df": 2}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.networks.LayerTypes": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.NDN.FFnets": {"tf": 2.449489742783178}}, "df": 1}}}}}}}}, "l": {"1": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.networks.LayerTypes": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.networks.LayerTypes": {"tf": 1}}, "df": 1}}}}}}}}}}, "docs": {}, "df": 0, "t": {"docs": {"NDNT.NDN.FFnets": {"tf": 2.449489742783178}, "NDNT.networks.LayerTypes": {"tf": 5.196152422706632}}, "df": 2}, "i": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.modules.activations.NLtypes": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.networks.LayerTypes": {"tf": 5.196152422706632}}, "df": 1}}}}, "g": {"docs": {"NDNT.networks.LayerTypes": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.networks.LayerTypes": {"tf": 1}}, "df": 1, "s": {"docs": {"NDNT.networks.LayerTypes": {"tf": 1}}, "df": 1}}}}}}}}, "v": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.networks.LayerTypes": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"NDNT.networks.LayerTypes": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.NDN.FFnets": {"tf": 2.449489742783178}, "NDNT.networks.LayerTypes": {"tf": 5.196152422706632}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"3": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.networks.LayerTypes": {"tf": 1}}, "df": 1}}, "docs": {"NDNT.networks.LayerTypes": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"3": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.networks.LayerTypes": {"tf": 1}}, "df": 1}}, "docs": {"NDNT.networks.LayerTypes": {"tf": 1}}, "df": 1, "s": {"docs": {"NDNT.networks.LayerTypes": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.networks.LayerTypes": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.networks.LayerTypes": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"NDNT.NDN.FFnets": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.networks.LayerTypes": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.networks.LayerTypes": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.training.lbfgsnew.be_verbose": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.NDN.FFnets": {"tf": 2.449489742783178}, "NDNT.networks.LayerTypes": {"tf": 5.196152422706632}}, "df": 2}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {"NDNT.modules.activations.NLtypes": {"tf": 1.4142135623730951}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.NDN.FFnets": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {"NDNT.modules.activations.NLtypes": {"tf": 1}}, "df": 1}}}}}}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.activations.NLtypes": {"tf": 1}}, "df": 1}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.NDN.FFnets": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.networks.LayerTypes": {"tf": 5.196152422706632}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.networks.LayerTypes": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"3": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.NDN.FFnets": {"tf": 1}}, "df": 1}}, "docs": {"NDNT.NDN.FFnets": {"tf": 1}}, "df": 1, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"3": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.NDN.FFnets": {"tf": 1}}, "df": 1}}, "docs": {"NDNT.NDN.FFnets": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.activations.NLtypes": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.activations.NLtypes": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.modules.activations.NLtypes": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {"NDNT.networks.LayerTypes": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.networks.LayerTypes": {"tf": 1}}, "df": 1}}}}}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.networks.LayerTypes": {"tf": 2}}, "df": 1}}}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"3": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.networks.LayerTypes": {"tf": 1}}, "df": 1}}, "docs": {"NDNT.NDN.FFnets": {"tf": 1}, "NDNT.networks.LayerTypes": {"tf": 1}}, "df": 2, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"NDNT.NDN.FFnets": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {"NDNT.networks.LayerTypes": {"tf": 1.7320508075688772}}, "df": 1}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"3": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.networks.LayerTypes": {"tf": 1}}, "df": 1}}, "docs": {"NDNT.networks.LayerTypes": {"tf": 1}}, "df": 1}}}}}}}}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {"NDNT.modules.activations.NLtypes": {"tf": 1.4142135623730951}}, "df": 1}}, "s": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.networks.LayerTypes": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {"NDNT.modules.activations.NLtypes": {"tf": 1}}, "df": 1}}}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"NDNT.modules.activations.NLtypes": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {"NDNT.networks.LayerTypes": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"1": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.networks.LayerTypes": {"tf": 1}}, "df": 1}}, "docs": {}, "df": 0}}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.networks.LayerTypes": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"1": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.networks.LayerTypes": {"tf": 1}}, "df": 1}}, "docs": {"NDNT.networks.LayerTypes": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.modules.activations.NLtypes": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "h": {"docs": {"NDNT.modules.activations.NLtypes": {"tf": 1.4142135623730951}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {"NDNT.networks.LayerTypes": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.networks.LayerTypes": {"tf": 1}}, "df": 1}}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.networks.LayerTypes": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.networks.LayerTypes": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.networks.LayerTypes": {"tf": 1}}, "df": 1, "s": {"docs": {"NDNT.networks.LayerTypes": {"tf": 1}}, "df": 1}}}}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"NDNT.networks.LayerTypes": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.networks.LayerTypes": {"tf": 1}}, "df": 1}}}}}}}}}}, "m": {"0": {"docs": {"NDNT.networks.LayerTypes": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.networks.LayerTypes": {"tf": 1}}, "df": 1}}}}}}, "docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.networks.LayerTypes": {"tf": 2}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "p": {"docs": {"NDNT.networks.LayerTypes": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.networks.LayerTypes": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {"NDNT.networks.LayerTypes": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.networks.LayerTypes": {"tf": 1}}, "df": 1}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {"NDNT.networks.LayerTypes": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.networks.LayerTypes": {"tf": 1}}, "df": 1, "s": {"docs": {"NDNT.networks.LayerTypes": {"tf": 1.7320508075688772}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {"NDNT.networks.LayerTypes": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.networks.LayerTypes": {"tf": 1}}, "df": 1}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.networks.LayerTypes": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.networks.LayerTypes": {"tf": 1}}, "df": 1}}}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.networks.LayerTypes": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.networks.LayerTypes": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {"NDNT.networks.LayerTypes": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.networks.LayerTypes": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.networks.LayerTypes": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.networks.LayerTypes": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "signature": {"root": {"0": {"0": {"0": {"1": {"docs": {"NDNT.NDN.NDN.get_optimizer": {"tf": 1}, "NDNT.utils.DanUtils.iterate_lbfgs": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "1": {"docs": {"NDNT.NDN.NDN.get_optimizer": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.create_optimizer_params": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "1": {"docs": {"NDNT.NDN.NDN.get_optimizer": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.curvature_update": {"tf": 1}, "NDNT.utils.NDNutils.create_optimizer_params": {"tf": 1}}, "df": 3}, "5": {"docs": {"NDNT.training.lbfgsnew.LBFGSNew.__init__": {"tf": 1}}, "df": 1}, "7": {"docs": {"NDNT.utils.NDNutils.fit_lbfgs": {"tf": 1.4142135623730951}}, "df": 1}, "8": {"docs": {"NDNT.training.ada_hessian.AdaHessian.__init__": {"tf": 1}, "NDNT.utils.NDNutils.create_optimizer_params": {"tf": 1}}, "df": 2}, "9": {"docs": {"NDNT.training.lbfgsnew.LBFGSNew.__init__": {"tf": 1}}, "df": 1}, "docs": {"NDNT.NDN.NDN.get_trainer": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.get_dataloaders": {"tf": 1}, "NDNT.NDN.NDN.get_optimizer": {"tf": 2.449489742783178}, "NDNT.NDN.NDN.fit_dl": {"tf": 1}, "NDNT.NDN.NDN.eval_models": {"tf": 1}, "NDNT.NDN.NDN.generate_predictions": {"tf": 1}, "NDNT.NDN.NDN.get_weights": {"tf": 1}, "NDNT.NDN.NDN.plot_filters": {"tf": 1}, "NDNT.NDN.NDN.get_activations": {"tf": 1.4142135623730951}, "NDNT.modules.activations.AdaptiveELU.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.layers.lvlayers.LVLayer.__init__": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.layers.ndnlayer.NDNLayer.get_weights": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.FixationLayer.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.layers.timelayers.TimeLayer.__init__": {"tf": 1}, "NDNT.modules.regularization.RegModule.__init__": {"tf": 1}, "NDNT.modules.regularization.LocalityReg.__init__": {"tf": 1}, "NDNT.modules.regularization.Tikhanov.__init__": {"tf": 1}, "NDNT.modules.regularization.TikhanovC.__init__": {"tf": 1}, "NDNT.modules.regularization.ActivityReg.__init__": {"tf": 1}, "NDNT.networks.FFnetwork.plot_filters": {"tf": 1}, "NDNT.networks.FFnetwork.get_weights": {"tf": 1}, "NDNT.networks.ReadoutNetwork.ffnet_dict": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.__init__": {"tf": 2.449489742783178}, "NDNT.training.earlystopping.EarlyStopping.__init__": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.__init__": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.curvature_update": {"tf": 1}, "NDNT.training.trainer.Trainer.train_one_epoch": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.train_one_epoch": {"tf": 1}, "NDNT.utils.DanUtils.find_peaks": {"tf": 1}, "NDNT.utils.DanUtils.iterate_lbfgs": {"tf": 1}, "NDNT.utils.NDNutils.create_optimizer_params": {"tf": 2.6457513110645907}, "NDNT.utils.NDNutils.tent_basis_generate": {"tf": 1}, "NDNT.utils.NDNutils.shift_mat_zpad": {"tf": 1}, "NDNT.utils.NDNutils.ModelSummary": {"tf": 1}, "NDNT.utils.NDNutils.summary_string": {"tf": 1}, "NDNT.utils.NDNutils.get_max_samples": {"tf": 1}, "NDNT.utils.ffnet_dicts.layer_dict": {"tf": 1.4142135623730951}, "NDNT.utils.ffnet_dicts.ffnet_dict_readout": {"tf": 1.4142135623730951}}, "df": 45}, "1": {"0": {"0": {"0": {"docs": {"NDNT.NDN.NDN.eval_models": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.__init__": {"tf": 1}, "NDNT.utils.NDNutils.fit_lbfgs": {"tf": 1}, "NDNT.utils.NDNutils.create_optimizer_params": {"tf": 1}}, "df": 4}, "docs": {"NDNT.training.trainer.Trainer.__init__": {"tf": 1}, "NDNT.utils.NDNutils.fit_lbfgs": {"tf": 1}}, "df": 2}, "docs": {"NDNT.NDN.NDN.get_dataloaders": {"tf": 1}, "NDNT.NDN.NDN.get_optimizer": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.__init__": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.__init__": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew.__init__": {"tf": 1}, "NDNT.utils.DanUtils.find_peaks": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.create_optimizer_params": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.get_max_samples": {"tf": 1}}, "df": 8}, "3": {"docs": {"NDNT.utils.DanUtils.find_peaks": {"tf": 1}}, "df": 1}, "6": {"docs": {"NDNT.utils.DanUtils.subplot_setup": {"tf": 1}}, "df": 1}, "docs": {"NDNT.NDN.NDN.initialize_biases": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.eval_models": {"tf": 1}, "NDNT.modules.activations.AdaptiveELU.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.__init__": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.__init__": {"tf": 2.449489742783178}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.orilayers.ConvLayer3D.__init__": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterSTlayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.ConvReg.__init__": {"tf": 1}, "NDNT.networks.FFnetwork.ffnet_dict": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.__init__": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.ffnet_dict": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.__init__": {"tf": 2}, "NDNT.training.lbfgs.LBFGS.__init__": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.__init__": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew.__init__": {"tf": 1}, "NDNT.training.trainer.Trainer.__init__": {"tf": 1}, "NDNT.utils.DanUtils.ss": {"tf": 1.4142135623730951}, "NDNT.utils.DanUtils.monocular_data_import": {"tf": 1}, "NDNT.utils.NDNutils.fit_lbfgs": {"tf": 1}, "NDNT.utils.NDNutils.create_optimizer_params": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.create_time_embedding": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.tent_basis_generate": {"tf": 1}, "NDNT.utils.NDNutils.ModelSummary": {"tf": 1}, "NDNT.utils.NDNutils.summary_string": {"tf": 1}, "NDNT.utils.NDNutils.get_max_samples": {"tf": 1}, "NDNT.utils.ffnet_dicts.layer_dict": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_readout": {"tf": 1.4142135623730951}}, "df": 38, "e": {"docs": {"NDNT.training.ada_hessian.AdaHessian.__init__": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew.__init__": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.fit_lbfgs": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.create_optimizer_params": {"tf": 1.4142135623730951}}, "df": 4}}, "2": {"0": {"docs": {"NDNT.utils.DanUtils.iterate_lbfgs": {"tf": 1}, "NDNT.utils.DanUtils.monocular_data_import": {"tf": 1}, "NDNT.utils.MattUtils.plot_losses": {"tf": 1}, "NDNT.utils.NDNutils.create_optimizer_params": {"tf": 1}}, "df": 4}, "5": {"docs": {"NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 1}}, "df": 1}, "docs": {"NDNT.modules.layers.convlayers.TconvLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.plot_filters": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.plot_filters": {"tf": 1}, "NDNT.utils.DanUtils.subplot_setup": {"tf": 1}, "NDNT.utils.DanUtils.ss": {"tf": 1}, "NDNT.utils.DanUtils.filename_num2str": {"tf": 1}, "NDNT.utils.NDNutils.get_max_samples": {"tf": 1}, "NDNT.utils.plotting.plot_filters_1D": {"tf": 1}, "NDNT.utils.plotting.plot_filters_2D": {"tf": 1}, "NDNT.utils.plotting.plot_filters_ST1D": {"tf": 1}}, "df": 15}, "3": {"0": {"0": {"docs": {"NDNT.utils.DanUtils.figure_export": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "9": {"docs": {"NDNT.NDN.NDN.__init__": {"tf": 2}, "NDNT.NDN.NDN.get_trainer": {"tf": 2.449489742783178}, "NDNT.NDN.NDN.get_optimizer": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.save_model_zip": {"tf": 2}, "NDNT.modules.layers.bilayers.BiSTconv1D.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.ConvLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.TconvLayer.plot_filters": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.TconvLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.STconvLayer.plot_filters": {"tf": 1.4142135623730951}, "NDNT.modules.layers.laglayers.LagLayer.plot_filters": {"tf": 1.4142135623730951}, "NDNT.modules.layers.lvlayers.LVLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.lvlayers.LVLayerOLD.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 2.449489742783178}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 2.449489742783178}, "NDNT.modules.layers.orilayers.OriConvLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.orilayers.ConvLayer3D.plot_filters": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 2}, "NDNT.modules.layers.readouts.ReadoutLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.FixationLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterTlayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterSTlayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.Tlayer.plot_filters": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 2.449489742783178}, "NDNT.networks.FFnetwork.__init__": {"tf": 2}, "NDNT.networks.FFnetwork.determine_input_dims": {"tf": 1.4142135623730951}, "NDNT.networks.FFnetwork.ffnet_dict": {"tf": 2}, "NDNT.training.lbfgs.LBFGS.__init__": {"tf": 1.4142135623730951}, "NDNT.training.lbfgs.FullBatchLBFGS.__init__": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer.__init__": {"tf": 2}, "NDNT.utils.NDNutils.fit_lbfgs": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.create_optimizer_params": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.ModelSummary": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.summary_string": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.load_model": {"tf": 1.4142135623730951}, "NDNT.utils.ffnet_dicts.layer_dict": {"tf": 1.4142135623730951}, "NDNT.utils.ffnet_dicts.ffnet_dict_NIM": {"tf": 2}, "NDNT.utils.ffnet_dicts.ffnet_dict_readout": {"tf": 2}, "NDNT.utils.ffnet_dicts.ffnet_dict_external": {"tf": 2}, "NDNT.utils.plotting.plot_filters_2D": {"tf": 1.4142135623730951}, "NDNT.utils.plotting.plot_filters_ST1D": {"tf": 1.4142135623730951}, "NDNT.utils.plotting.plot_scatter": {"tf": 1.4142135623730951}}, "df": 49}, "docs": {"NDNT.modules.layers.readouts.FixationLayer.__init__": {"tf": 1}, "NDNT.utils.DanUtils.display_matrix": {"tf": 1}, "NDNT.utils.NDNutils.generate_xv_folds": {"tf": 1}}, "df": 3}, "4": {"docs": {"NDNT.NDN.NDN.get_optimizer": {"tf": 1}, "NDNT.utils.DanUtils.display_matrix": {"tf": 1}, "NDNT.utils.NDNutils.create_optimizer_params": {"tf": 1}}, "df": 3}, "5": {"docs": {"NDNT.NDN.NDN.get_trainer": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.__init__": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1}, "NDNT.utils.DanUtils.ss": {"tf": 1}, "NDNT.utils.DanUtils.fold_sample": {"tf": 1}, "NDNT.utils.NDNutils.generate_xv_folds": {"tf": 1}}, "df": 6}, "6": {"0": {"docs": {"NDNT.utils.NDNutils.pixel2grid": {"tf": 1}, "NDNT.utils.NDNutils.grid2pixel": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "7": {"docs": {"NDNT.training.earlystopping.EarlyStopping.__init__": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew.__init__": {"tf": 1}}, "df": 2}, "8": {"docs": {"NDNT.modules.layers.convlayers.TconvLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.plot_filters": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.plot_filters": {"tf": 1}, "NDNT.utils.MattUtils.plot_losses": {"tf": 1}, "NDNT.utils.plotting.plot_filters_1D": {"tf": 1}, "NDNT.utils.plotting.plot_filters_2D": {"tf": 1}}, "df": 8}, "9": {"9": {"9": {"docs": {"NDNT.NDN.NDN.get_optimizer": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.__init__": {"tf": 1}, "NDNT.utils.NDNutils.create_optimizer_params": {"tf": 1}}, "df": 3}, "docs": {}, "df": 0}, "docs": {"NDNT.NDN.NDN.get_optimizer": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.__init__": {"tf": 1}, "NDNT.utils.NDNutils.create_optimizer_params": {"tf": 1}}, "df": 3}, "docs": {"NDNT.NDN.NDN.__init__": {"tf": 9.433981132056603}, "NDNT.NDN.NDN.assemble_ffnetworks": {"tf": 4.69041575982343}, "NDNT.NDN.NDN.compute_network_outputs": {"tf": 3.7416573867739413}, "NDNT.NDN.NDN.forward": {"tf": 3.7416573867739413}, "NDNT.NDN.NDN.training_step": {"tf": 4.69041575982343}, "NDNT.NDN.NDN.validation_step": {"tf": 4.69041575982343}, "NDNT.NDN.NDN.compute_reg_loss": {"tf": 3.1622776601683795}, "NDNT.NDN.NDN.get_trainer": {"tf": 11.090536506409418}, "NDNT.NDN.NDN.get_dataloaders": {"tf": 9.746794344808963}, "NDNT.NDN.NDN.get_optimizer": {"tf": 11}, "NDNT.NDN.NDN.prepare_regularization": {"tf": 3.1622776601683795}, "NDNT.NDN.NDN.fit": {"tf": 12.328828005937952}, "NDNT.NDN.NDN.fit_dl": {"tf": 11.661903789690601}, "NDNT.NDN.NDN.initialize_loss": {"tf": 7.483314773547883}, "NDNT.NDN.NDN.compute_average_responses": {"tf": 4.69041575982343}, "NDNT.NDN.NDN.initialize_biases": {"tf": 6.164414002968976}, "NDNT.NDN.NDN.eval_models": {"tf": 9.746794344808963}, "NDNT.NDN.NDN.generate_predictions": {"tf": 8.366600265340756}, "NDNT.NDN.NDN.change_loss": {"tf": 4.69041575982343}, "NDNT.NDN.NDN.get_weights": {"tf": 4.898979485566356}, "NDNT.NDN.NDN.get_readout_locations": {"tf": 3.1622776601683795}, "NDNT.NDN.NDN.passive_readout": {"tf": 3.1622776601683795}, "NDNT.NDN.NDN.list_parameters": {"tf": 5.0990195135927845}, "NDNT.NDN.NDN.set_parameters": {"tf": 6.48074069840786}, "NDNT.NDN.NDN.set_reg_val": {"tf": 6.855654600401044}, "NDNT.NDN.NDN.plot_filters": {"tf": 4.898979485566356}, "NDNT.NDN.NDN.save_model_zip": {"tf": 8.06225774829855}, "NDNT.NDN.NDN.load_model_zip": {"tf": 3.7416573867739413}, "NDNT.NDN.NDN.save_model": {"tf": 5.0990195135927845}, "NDNT.NDN.NDN.save_model_chk": {"tf": 5.0990195135927845}, "NDNT.NDN.NDN.get_null_adjusted_ll": {"tf": 4.69041575982343}, "NDNT.NDN.NDN.get_activations": {"tf": 6.164414002968976}, "NDNT.NDN.NDN.load_model": {"tf": 5.0990195135927845}, "NDNT.NDN.NDN.load_model_chk": {"tf": 5.830951894845301}, "NDNT.NDN.NDN.model_string": {"tf": 3.1622776601683795}, "NDNT.modules.activations.adaptive_elu": {"tf": 5.0990195135927845}, "NDNT.modules.activations.Square.__init__": {"tf": 2}, "NDNT.modules.activations.Square.forward": {"tf": 3.7416573867739413}, "NDNT.modules.activations.AdaptiveELU.__init__": {"tf": 5.830951894845301}, "NDNT.modules.activations.AdaptiveELU.forward": {"tf": 3.7416573867739413}, "NDNT.modules.activity_regularization.ActivityRegularization.__init__": {"tf": 2.8284271247461903}, "NDNT.modules.activity_regularization.ActivityRegularization.activity": {"tf": 4.242640687119285}, "NDNT.modules.activity_regularization.ActivityRegularization.nonneg": {"tf": 4.242640687119285}, "NDNT.modules.activity_regularization.ActivityRegularization.regularize": {"tf": 3.7416573867739413}, "NDNT.modules.experiment_sampler.ExperimentBatchGenerator.__init__": {"tf": 6.782329983125268}, "NDNT.modules.experiment_sampler.ExperimentBatchGenerator.next": {"tf": 3.4641016151377544}, "NDNT.modules.experiment_sampler.ExperimentBatchIterator.__init__": {"tf": 5.830951894845301}, "NDNT.modules.experiment_sampler.construct_exp_to_time": {"tf": 4.47213595499958}, "NDNT.modules.experiment_sampler.ExperimentSampler.__init__": {"tf": 9.591663046625438}, "NDNT.modules.layers.bilayers.BinocLayer1D.__init__": {"tf": 5.830951894845301}, "NDNT.modules.layers.bilayers.BinocLayer1D.forward": {"tf": 3.7416573867739413}, "NDNT.modules.layers.bilayers.BinocLayer1D.layer_dict": {"tf": 4}, "NDNT.modules.layers.bilayers.BiConvLayer1D.__init__": {"tf": 3.1622776601683795}, "NDNT.modules.layers.bilayers.BiConvLayer1D.layer_dict": {"tf": 4}, "NDNT.modules.layers.bilayers.BiSTconv1D.__init__": {"tf": 7.615773105863909}, "NDNT.modules.layers.bilayers.BiSTconv1D.forward": {"tf": 3.7416573867739413}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 4}, "NDNT.modules.layers.bilayers.ChannelConvLayer.__init__": {"tf": 8.06225774829855}, "NDNT.modules.layers.bilayers.ChannelConvLayer.layer_dict": {"tf": 4.898979485566356}, "NDNT.modules.layers.bilayers.ChannelConvLayer.forward": {"tf": 3.7416573867739413}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 10.583005244258363}, "NDNT.modules.layers.convlayers.ConvLayer.batchnorm_clone": {"tf": 3.7416573867739413}, "NDNT.modules.layers.convlayers.ConvLayer.batchnorm_convert": {"tf": 3.1622776601683795}, "NDNT.modules.layers.convlayers.ConvLayer.layer_dict": {"tf": 8.06225774829855}, "NDNT.modules.layers.convlayers.ConvLayer.preprocess_weights": {"tf": 3.1622776601683795}, "NDNT.modules.layers.convlayers.ConvLayer.forward": {"tf": 3.7416573867739413}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 8.18535277187245}, "NDNT.modules.layers.convlayers.TconvLayer.forward": {"tf": 3.7416573867739413}, "NDNT.modules.layers.convlayers.TconvLayer.plot_filters": {"tf": 6.6332495807108}, "NDNT.modules.layers.convlayers.TconvLayer.layer_dict": {"tf": 5.830951894845301}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 5.830951894845301}, "NDNT.modules.layers.convlayers.STconvLayer.forward": {"tf": 3.7416573867739413}, "NDNT.modules.layers.convlayers.STconvLayer.plot_filters": {"tf": 6.6332495807108}, "NDNT.modules.layers.convlayers.STconvLayer.layer_dict": {"tf": 4}, "NDNT.modules.layers.dimlayers.Dim0Layer.__init__": {"tf": 5.0990195135927845}, "NDNT.modules.layers.dimlayers.Dim0Layer.forward": {"tf": 3.7416573867739413}, "NDNT.modules.layers.dimlayers.Dim0Layer.dim_info": {"tf": 5.291502622129181}, "NDNT.modules.layers.dimlayers.Dim0Layer.layer_dict": {"tf": 4}, "NDNT.modules.layers.dimlayers.ChannelLayer.__init__": {"tf": 5.0990195135927845}, "NDNT.modules.layers.dimlayers.ChannelLayer.layer_dict": {"tf": 4}, "NDNT.modules.layers.dimlayers.ChannelLayer.forward": {"tf": 3.7416573867739413}, "NDNT.modules.layers.dimlayers.DimSPLayer.__init__": {"tf": 5.830951894845301}, "NDNT.modules.layers.dimlayers.DimSPLayer.forward": {"tf": 3.7416573867739413}, "NDNT.modules.layers.dimlayers.DimSPLayer.layer_dict": {"tf": 4.898979485566356}, "NDNT.modules.layers.dimlayers.DimSPTLayer.__init__": {"tf": 5.830951894845301}, "NDNT.modules.layers.dimlayers.DimSPTLayer.forward": {"tf": 3.7416573867739413}, "NDNT.modules.layers.dimlayers.DimSPTLayer.layer_dict": {"tf": 4.898979485566356}, "NDNT.modules.layers.externallayer.ExternalLayer.__init__": {"tf": 5.830951894845301}, "NDNT.modules.layers.externallayer.ExternalLayer.forward": {"tf": 3.7416573867739413}, "NDNT.modules.layers.laglayers.LagLayer.__init__": {"tf": 5.830951894845301}, "NDNT.modules.layers.laglayers.LagLayer.forward": {"tf": 3.7416573867739413}, "NDNT.modules.layers.laglayers.LagLayer.plot_filters": {"tf": 6.6332495807108}, "NDNT.modules.layers.laglayers.LagLayer.layer_dict": {"tf": 4.898979485566356}, "NDNT.modules.layers.lvlayers.LVLayer.__init__": {"tf": 7.615773105863909}, "NDNT.modules.layers.lvlayers.LVLayer.preprocess_weights": {"tf": 3.1622776601683795}, "NDNT.modules.layers.lvlayers.LVLayer.forward": {"tf": 3.7416573867739413}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"tf": 7.483314773547883}, "NDNT.modules.layers.lvlayers.LVLayerOLD.__init__": {"tf": 9.273618495495704}, "NDNT.modules.layers.lvlayers.LVLayerOLD.forward": {"tf": 3.7416573867739413}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 8.06225774829855}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 13.2664991614216}, "NDNT.modules.layers.ndnlayer.NDNLayer.reset_parameters": {"tf": 6.324555320336759}, "NDNT.modules.layers.ndnlayer.NDNLayer.initialize_gaussian_envelope": {"tf": 3.1622776601683795}, "NDNT.modules.layers.ndnlayer.NDNLayer.preprocess_weights": {"tf": 3.1622776601683795}, "NDNT.modules.layers.ndnlayer.NDNLayer.forward": {"tf": 3.7416573867739413}, "NDNT.modules.layers.ndnlayer.NDNLayer.compute_reg_loss": {"tf": 3.1622776601683795}, "NDNT.modules.layers.ndnlayer.NDNLayer.get_weights": {"tf": 5.830951894845301}, "NDNT.modules.layers.ndnlayer.NDNLayer.list_parameters": {"tf": 3.1622776601683795}, "NDNT.modules.layers.ndnlayer.NDNLayer.set_parameters": {"tf": 5.0990195135927845}, "NDNT.modules.layers.ndnlayer.NDNLayer.set_reg_val": {"tf": 4.69041575982343}, "NDNT.modules.layers.ndnlayer.NDNLayer.plot_filters": {"tf": 4.898979485566356}, "NDNT.modules.layers.ndnlayer.NDNLayer.dim_info": {"tf": 5.291502622129181}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 11.532562594670797}, "NDNT.modules.layers.normlayers.DivNormLayer.__init__": {"tf": 7.483314773547883}, "NDNT.modules.layers.normlayers.DivNormLayer.preprocess_weights": {"tf": 3.1622776601683795}, "NDNT.modules.layers.normlayers.DivNormLayer.forward": {"tf": 3.7416573867739413}, "NDNT.modules.layers.orilayers.OriLayer.__init__": {"tf": 6.855654600401044}, "NDNT.modules.layers.orilayers.OriLayer.rotation_matrix_tensor": {"tf": 4.242640687119285}, "NDNT.modules.layers.orilayers.OriLayer.forward": {"tf": 3.7416573867739413}, "NDNT.modules.layers.orilayers.OriLayer.layer_dict": {"tf": 4.898979485566356}, "NDNT.modules.layers.orilayers.OriConvLayer.__init__": {"tf": 8.717797887081348}, "NDNT.modules.layers.orilayers.OriConvLayer.rotation_matrix_tensor": {"tf": 4.242640687119285}, "NDNT.modules.layers.orilayers.OriConvLayer.get_rot_mat": {"tf": 4.242640687119285}, "NDNT.modules.layers.orilayers.OriConvLayer.rotate_tensor": {"tf": 4.69041575982343}, "NDNT.modules.layers.orilayers.OriConvLayer.forward": {"tf": 3.7416573867739413}, "NDNT.modules.layers.orilayers.OriConvLayer.layer_dict": {"tf": 4.898979485566356}, "NDNT.modules.layers.orilayers.ConvLayer3D.__init__": {"tf": 9.273618495495704}, "NDNT.modules.layers.orilayers.ConvLayer3D.forward": {"tf": 3.7416573867739413}, "NDNT.modules.layers.orilayers.ConvLayer3D.plot_filters": {"tf": 6.6332495807108}, "NDNT.modules.layers.orilayers.ConvLayer3D.layer_dict": {"tf": 5.656854249492381}, "NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 10.099504938362077}, "NDNT.modules.layers.readouts.ReadoutLayer.initialize_spatial_mapping": {"tf": 3.1622776601683795}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 4.69041575982343}, "NDNT.modules.layers.readouts.ReadoutLayer.get_weights": {"tf": 5.830951894845301}, "NDNT.modules.layers.readouts.ReadoutLayer.forward": {"tf": 4.69041575982343}, "NDNT.modules.layers.readouts.ReadoutLayer.set_readout_locations": {"tf": 3.7416573867739413}, "NDNT.modules.layers.readouts.ReadoutLayer.get_readout_locations": {"tf": 3.1622776601683795}, "NDNT.modules.layers.readouts.ReadoutLayer.passive_readout": {"tf": 3.1622776601683795}, "NDNT.modules.layers.readouts.ReadoutLayer.layer_dict": {"tf": 5.0990195135927845}, "NDNT.modules.layers.readouts.ReadoutLayer3d.__init__": {"tf": 4.242640687119285}, "NDNT.modules.layers.readouts.ReadoutLayer3d.forward": {"tf": 4.69041575982343}, "NDNT.modules.layers.readouts.ReadoutLayer3d.passive_readout": {"tf": 3.1622776601683795}, "NDNT.modules.layers.readouts.ReadoutLayer3d.layer_dict": {"tf": 4}, "NDNT.modules.layers.readouts.FixationLayer.__init__": {"tf": 9.219544457292887}, "NDNT.modules.layers.readouts.FixationLayer.forward": {"tf": 4.69041575982343}, "NDNT.modules.layers.readouts.FixationLayer.initialize": {"tf": 4.69041575982343}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 7.3484692283495345}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 10.14889156509222}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 8.06225774829855}, "NDNT.modules.layers.reslayers.IterLayer.forward": {"tf": 3.7416573867739413}, "NDNT.modules.layers.reslayers.IterTlayer.__init__": {"tf": 9.219544457292887}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 8.06225774829855}, "NDNT.modules.layers.reslayers.IterTlayer.forward": {"tf": 3.7416573867739413}, "NDNT.modules.layers.reslayers.IterSTlayer.__init__": {"tf": 9.219544457292887}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 8.06225774829855}, "NDNT.modules.layers.reslayers.IterSTlayer.forward": {"tf": 3.7416573867739413}, "NDNT.modules.layers.specialtylayers.Tlayer.__init__": {"tf": 8.06225774829855}, "NDNT.modules.layers.specialtylayers.Tlayer.forward": {"tf": 3.7416573867739413}, "NDNT.modules.layers.specialtylayers.Tlayer.plot_filters": {"tf": 6.6332495807108}, "NDNT.modules.layers.specialtylayers.Tlayer.layer_dict": {"tf": 5.656854249492381}, "NDNT.modules.layers.specialtylayers.L1convLayer.__init__": {"tf": 3.1622776601683795}, "NDNT.modules.layers.specialtylayers.L1convLayer.preprocess_weights": {"tf": 3.1622776601683795}, "NDNT.modules.layers.specialtylayers.L1convLayer.reset_parameters2": {"tf": 6.324555320336759}, "NDNT.modules.layers.specialtylayers.L1convLayer.layer_dict": {"tf": 4}, "NDNT.modules.layers.specialtylayers.OnOffLayer.__init__": {"tf": 8.06225774829855}, "NDNT.modules.layers.specialtylayers.OnOffLayer.plot_filters": {"tf": 4.898979485566356}, "NDNT.modules.layers.specialtylayers.OnOffLayer.forward": {"tf": 3.7416573867739413}, "NDNT.modules.layers.specialtylayers.OnOffLayer.layer_dict": {"tf": 4.898979485566356}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 13.2664991614216}, "NDNT.modules.layers.specialtylayers.MaskLayer.preprocess_weights": {"tf": 3.1622776601683795}, "NDNT.modules.layers.specialtylayers.MaskLayer.layer_dict": {"tf": 4.898979485566356}, "NDNT.modules.layers.timelayers.TimeLayer.__init__": {"tf": 8.602325267042627}, "NDNT.modules.layers.timelayers.TimeLayer.forward": {"tf": 3.7416573867739413}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 8.06225774829855}, "NDNT.modules.regularization.Regularization.set_reg_val": {"tf": 4.69041575982343}, "NDNT.modules.regularization.Regularization.unit_reg_convert": {"tf": 5.0990195135927845}, "NDNT.modules.regularization.Regularization.build_reg_modules": {"tf": 4.242640687119285}, "NDNT.modules.regularization.Regularization.compute_reg_loss": {"tf": 3.7416573867739413}, "NDNT.modules.regularization.Regularization.compute_activity_regularization": {"tf": 3.7416573867739413}, "NDNT.modules.regularization.Regularization.reg_copy": {"tf": 3.1622776601683795}, "NDNT.modules.regularization.Regularization.get_reg_class": {"tf": 3.7416573867739413}, "NDNT.modules.regularization.RegModule.__init__": {"tf": 8.602325267042627}, "NDNT.modules.regularization.RegModule.forward": {"tf": 3.7416573867739413}, "NDNT.modules.regularization.LocalityReg.__init__": {"tf": 6.48074069840786}, "NDNT.modules.regularization.LocalityReg.compute_reg_penalty": {"tf": 3.7416573867739413}, "NDNT.modules.regularization.LocalityReg.build_reg_mats": {"tf": 3.1622776601683795}, "NDNT.modules.regularization.DiagonalReg.__init__": {"tf": 5.830951894845301}, "NDNT.modules.regularization.DiagonalReg.compute_reg_penalty": {"tf": 3.7416573867739413}, "NDNT.modules.regularization.DiagonalReg.build_reg_mats": {"tf": 3.7416573867739413}, "NDNT.modules.regularization.InlineReg.__init__": {"tf": 5.830951894845301}, "NDNT.modules.regularization.InlineReg.compute_reg_penalty": {"tf": 3.7416573867739413}, "NDNT.modules.regularization.ConvReg.__init__": {"tf": 6.48074069840786}, "NDNT.modules.regularization.ConvReg.compute_reg_penalty": {"tf": 3.7416573867739413}, "NDNT.modules.regularization.Tikhanov.__init__": {"tf": 6.48074069840786}, "NDNT.modules.regularization.Tikhanov.compute_reg_penalty": {"tf": 3.7416573867739413}, "NDNT.modules.regularization.TikhanovC.__init__": {"tf": 6.48074069840786}, "NDNT.modules.regularization.TikhanovC.compute_reg_penalty": {"tf": 3.7416573867739413}, "NDNT.modules.regularization.ActivityReg.__init__": {"tf": 6.48074069840786}, "NDNT.modules.regularization.ActivityReg.compute_activity_penalty": {"tf": 3.7416573867739413}, "NDNT.modules.regularization.ActivityReg.compute_reg_penalty": {"tf": 3.7416573867739413}, "NDNT.networks.FFnetwork.__init__": {"tf": 10.954451150103322}, "NDNT.networks.FFnetwork.determine_input_dims": {"tf": 4.898979485566356}, "NDNT.networks.FFnetwork.preprocess_input": {"tf": 3.7416573867739413}, "NDNT.networks.FFnetwork.forward": {"tf": 3.7416573867739413}, "NDNT.networks.FFnetwork.prepare_regularization": {"tf": 4.242640687119285}, "NDNT.networks.FFnetwork.compute_reg_loss": {"tf": 3.1622776601683795}, "NDNT.networks.FFnetwork.list_parameters": {"tf": 4.242640687119285}, "NDNT.networks.FFnetwork.set_parameters": {"tf": 5.830951894845301}, "NDNT.networks.FFnetwork.set_reg_val": {"tf": 5.830951894845301}, "NDNT.networks.FFnetwork.plot_filters": {"tf": 4.898979485566356}, "NDNT.networks.FFnetwork.get_weights": {"tf": 4.898979485566356}, "NDNT.networks.FFnetwork.ffnet_dict": {"tf": 8.717797887081348}, "NDNT.networks.ScaffoldNetwork.__init__": {"tf": 5.0990195135927845}, "NDNT.networks.ScaffoldNetwork.forward": {"tf": 3.7416573867739413}, "NDNT.networks.ScaffoldNetwork.ffnet_dict": {"tf": 5.656854249492381}, "NDNT.networks.ScaffoldNetwork3d.__init__": {"tf": 4.242640687119285}, "NDNT.networks.ScaffoldNetwork3d.forward": {"tf": 3.7416573867739413}, "NDNT.networks.ScaffoldNetwork3d.ffnet_dict": {"tf": 4}, "NDNT.networks.ReadoutNetwork.__init__": {"tf": 3.1622776601683795}, "NDNT.networks.ReadoutNetwork.determine_input_dims": {"tf": 4.47213595499958}, "NDNT.networks.ReadoutNetwork.forward": {"tf": 3.7416573867739413}, "NDNT.networks.ReadoutNetwork.get_readout_locations": {"tf": 3.1622776601683795}, "NDNT.networks.ReadoutNetwork.set_readout_locations": {"tf": 3.7416573867739413}, "NDNT.networks.ReadoutNetwork.ffnet_dict": {"tf": 4.898979485566356}, "NDNT.networks.FFnet_external.__init__": {"tf": 6.164414002968976}, "NDNT.networks.FFnet_external.forward": {"tf": 3.7416573867739413}, "NDNT.networks.FFnet_external.compute_reg_loss": {"tf": 3.1622776601683795}, "NDNT.networks.FFnet_external.list_params": {"tf": 4.242640687119285}, "NDNT.networks.FFnet_external.set_params": {"tf": 5.830951894845301}, "NDNT.networks.FFnet_external.ffnet_dict": {"tf": 4}, "NDNT.training.ada_hessian.AdaHessian.__init__": {"tf": 9.591663046625438}, "NDNT.training.ada_hessian.AdaHessian.get_params": {"tf": 3.1622776601683795}, "NDNT.training.ada_hessian.AdaHessian.zero_hessian": {"tf": 3.1622776601683795}, "NDNT.training.ada_hessian.AdaHessian.set_hessian": {"tf": 3.1622776601683795}, "NDNT.training.ada_hessian.AdaHessian.step": {"tf": 4.242640687119285}, "NDNT.training.earlystopping.EarlyStopping.__init__": {"tf": 7.14142842854285}, "NDNT.training.lbfgs.is_legal": {"tf": 3.1622776601683795}, "NDNT.training.lbfgs.polyinterp": {"tf": 5.830951894845301}, "NDNT.training.lbfgs.LBFGS.__init__": {"tf": 7.745966692414834}, "NDNT.training.lbfgs.LBFGS.line_search": {"tf": 3.7416573867739413}, "NDNT.training.lbfgs.LBFGS.two_loop_recursion": {"tf": 3.7416573867739413}, "NDNT.training.lbfgs.LBFGS.curvature_update": {"tf": 5.477225575051661}, "NDNT.training.lbfgs.LBFGS.step": {"tf": 5.916079783099616}, "NDNT.training.lbfgs.FullBatchLBFGS.__init__": {"tf": 7.745966692414834}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 4.242640687119285}, "NDNT.training.lbfgsnew.LBFGSNew.__init__": {"tf": 9}, "NDNT.training.lbfgsnew.LBFGSNew.step": {"tf": 3.7416573867739413}, "NDNT.training.trainer.Trainer.__init__": {"tf": 11.874342087037917}, "NDNT.training.trainer.Trainer.fit": {"tf": 5.477225575051661}, "NDNT.training.trainer.Trainer.prepare_fit": {"tf": 4.69041575982343}, "NDNT.training.trainer.Trainer.fit_loop": {"tf": 5.0990195135927845}, "NDNT.training.trainer.Trainer.validate_one_epoch": {"tf": 4.242640687119285}, "NDNT.training.trainer.Trainer.train_one_epoch": {"tf": 5.0990195135927845}, "NDNT.training.trainer.Trainer.train_one_step": {"tf": 5.0990195135927845}, "NDNT.training.trainer.Trainer.checkpoint_model": {"tf": 5.477225575051661}, "NDNT.training.trainer.Trainer.graceful_exit": {"tf": 3.7416573867739413}, "NDNT.training.trainer.LBFGSTrainer.__init__": {"tf": 4.242640687119285}, "NDNT.training.trainer.LBFGSTrainer.fit": {"tf": 5.830951894845301}, "NDNT.training.trainer.LBFGSTrainer.fit_data_dict": {"tf": 4.242640687119285}, "NDNT.training.trainer.LBFGSTrainer.train_one_epoch": {"tf": 5.0990195135927845}, "NDNT.training.trainer.TemperatureCalibratedTrainer.__init__": {"tf": 3.1622776601683795}, "NDNT.training.trainer.TemperatureCalibratedTrainer.validate_one_epoch": {"tf": 4.242640687119285}, "NDNT.utils.DanUtils.subplot_setup": {"tf": 6.164414002968976}, "NDNT.utils.DanUtils.ss": {"tf": 6.782329983125268}, "NDNT.utils.DanUtils.imagesc": {"tf": 8.602325267042627}, "NDNT.utils.DanUtils.find_peaks": {"tf": 5.830951894845301}, "NDNT.utils.DanUtils.filename_num2str": {"tf": 4.242640687119285}, "NDNT.utils.DanUtils.display_matrix": {"tf": 6.48074069840786}, "NDNT.utils.DanUtils.figure_export": {"tf": 5.477225575051661}, "NDNT.utils.DanUtils.matlab_export": {"tf": 3.7416573867739413}, "NDNT.utils.DanUtils.save_python_data": {"tf": 3.7416573867739413}, "NDNT.utils.DanUtils.load_python_data": {"tf": 4.242640687119285}, "NDNT.utils.DanUtils.fold_sample": {"tf": 5.830951894845301}, "NDNT.utils.DanUtils.time_embedding_simple": {"tf": 3.7416573867739413}, "NDNT.utils.DanUtils.design_matrix_drift": {"tf": 7.211102550927978}, "NDNT.utils.DanUtils.max_multiD": {"tf": 3.1622776601683795}, "NDNT.utils.DanUtils.iterate_lbfgs": {"tf": 8.12403840463596}, "NDNT.utils.DanUtils.binocular_data_import": {"tf": 3.7416573867739413}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 4.242640687119285}, "NDNT.utils.DanUtils.monocular_data_import": {"tf": 5.477225575051661}, "NDNT.utils.MattUtils.load_losses": {"tf": 3.1622776601683795}, "NDNT.utils.MattUtils.smooth_ema": {"tf": 5.830951894845301}, "NDNT.utils.MattUtils.smooth_conv": {"tf": 3.7416573867739413}, "NDNT.utils.MattUtils.plot_losses": {"tf": 6.082762530298219}, "NDNT.utils.NDNutils.fit_lbfgs": {"tf": 10.392304845413264}, "NDNT.utils.NDNutils.create_optimizer_params": {"tf": 14.66287829861518}, "NDNT.utils.NDNutils.CPU_Unpickler.find_class": {"tf": 4.242640687119285}, "NDNT.utils.NDNutils.default_save_dir": {"tf": 2.6457513110645907}, "NDNT.utils.NDNutils.create_time_embedding": {"tf": 5.477225575051661}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 5.477225575051661}, "NDNT.utils.NDNutils.is_int": {"tf": 3.1622776601683795}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 5.477225575051661}, "NDNT.utils.NDNutils.tent_basis_generate": {"tf": 7.14142842854285}, "NDNT.utils.NDNutils.shift_mat_zpad": {"tf": 4.69041575982343}, "NDNT.utils.NDNutils.generate_xv_folds": {"tf": 5.830951894845301}, "NDNT.utils.NDNutils.initialize_gaussian_envelope": {"tf": 3.7416573867739413}, "NDNT.utils.NDNutils.pixel2grid": {"tf": 4.242640687119285}, "NDNT.utils.NDNutils.grid2pixel": {"tf": 5.830951894845301}, "NDNT.utils.NDNutils.save_checkpoint": {"tf": 6.782329983125268}, "NDNT.utils.NDNutils.load_checkpoint": {"tf": 5.477225575051661}, "NDNT.utils.NDNutils.ensure_dir": {"tf": 3.7416573867739413}, "NDNT.utils.NDNutils.ModelSummary": {"tf": 8.06225774829855}, "NDNT.utils.NDNutils.summary_string": {"tf": 8.06225774829855}, "NDNT.utils.NDNutils.get_fit_versions": {"tf": 3.7416573867739413}, "NDNT.utils.NDNutils.load_model": {"tf": 6}, "NDNT.utils.NDNutils.get_max_samples": {"tf": 7.211102550927978}, "NDNT.utils.NDNutils.NpEncoder.default": {"tf": 3.7416573867739413}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 4.69041575982343}, "NDNT.utils.create_reg_matrices.create_maxpenalty_matrix": {"tf": 3.7416573867739413}, "NDNT.utils.create_reg_matrices.create_localpenalty_matrix": {"tf": 5.0990195135927845}, "NDNT.utils.ffnet_dicts.layer_dict": {"tf": 10.344080432788601}, "NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 5.477225575051661}, "NDNT.utils.ffnet_dicts.ffnet_dict_NIM": {"tf": 10.44030650891055}, "NDNT.utils.ffnet_dicts.ffnet_dict_readout": {"tf": 10.44030650891055}, "NDNT.utils.ffnet_dicts.ffnet_dict_external": {"tf": 8}, "NDNT.utils.ffnet_dicts.list_complete": {"tf": 5.0990195135927845}, "NDNT.utils.plotting.plot_filters_1D": {"tf": 6.324555320336759}, "NDNT.utils.plotting.plot_filters_2D": {"tf": 7.483314773547883}, "NDNT.utils.plotting.plot_filters_ST1D": {"tf": 7.483314773547883}, "NDNT.utils.plotting.plot_filters_ST2D": {"tf": 4.898979485566356}, "NDNT.utils.plotting.plot_filters_ST3D": {"tf": 4.898979485566356}, "NDNT.utils.plotting.plot_scatter": {"tf": 4.898979485566356}, "NDNT.utils.plotting.plot_internal_weights": {"tf": 4.242640687119285}, "NDNT.metrics.mse_loss.MseLoss_datafilter.__init__": {"tf": 3.1622776601683795}, "NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 6.855654600401044}, "NDNT.metrics.mse_loss.MseLoss_datafilter.forward": {"tf": 5.0990195135927845}, "NDNT.metrics.mse_loss.MseLoss_datafilter.unit_loss": {"tf": 5.830951894845301}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.__init__": {"tf": 3.1622776601683795}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_log_epsilon": {"tf": 4.242640687119285}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 6.855654600401044}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.forward": {"tf": 5.0990195135927845}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.unit_loss": {"tf": 5.830951894845301}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.__init__": {"tf": 3.1622776601683795}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"tf": 6.855654600401044}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.forward": {"tf": 5.0990195135927845}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.unit_loss": {"tf": 5.830951894845301}, "NDNT.metrics.rmse_loss.RmseLoss.__init__": {"tf": 3.1622776601683795}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"tf": 6.855654600401044}, "NDNT.metrics.rmse_loss.RmseLoss.forward": {"tf": 5.0990195135927845}, "NDNT.metrics.rmse_loss.RmseLoss.unit_loss": {"tf": 5.830951894845301}}, "df": 340, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.NDN.NDN.__init__": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.assemble_ffnetworks": {"tf": 1}, "NDNT.NDN.NDN.initialize_biases": {"tf": 1}, "NDNT.NDN.NDN.generate_predictions": {"tf": 1}, "NDNT.NDN.NDN.get_weights": {"tf": 1}, "NDNT.NDN.NDN.list_parameters": {"tf": 1}, "NDNT.NDN.NDN.set_parameters": {"tf": 1}, "NDNT.NDN.NDN.set_reg_val": {"tf": 1}, "NDNT.NDN.NDN.plot_filters": {"tf": 1}, "NDNT.NDN.NDN.save_model_zip": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.get_activations": {"tf": 1}, "NDNT.networks.FFnetwork.__init__": {"tf": 1.4142135623730951}, "NDNT.networks.FFnetwork.determine_input_dims": {"tf": 1}, "NDNT.networks.FFnetwork.ffnet_dict": {"tf": 1.4142135623730951}, "NDNT.networks.ReadoutNetwork.ffnet_dict": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_NIM": {"tf": 1.4142135623730951}, "NDNT.utils.ffnet_dicts.ffnet_dict_readout": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_external": {"tf": 1}}, "df": 19}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.NDN.NDN.get_trainer": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.get_dataloaders": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.get_optimizer": {"tf": 1}, "NDNT.NDN.NDN.fit": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.fit_dl": {"tf": 1}, "NDNT.NDN.NDN.eval_models": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.save_model": {"tf": 1}, "NDNT.NDN.NDN.get_null_adjusted_ll": {"tf": 1}, "NDNT.NDN.NDN.get_activations": {"tf": 1}, "NDNT.NDN.NDN.load_model": {"tf": 1}, "NDNT.modules.activations.adaptive_elu": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.ConvLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.STconvLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.get_weights": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1.7320508075688772}, "NDNT.modules.layers.orilayers.OriConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.plot_filters": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.__init__": {"tf": 2}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.regularization.RegModule.__init__": {"tf": 1.7320508075688772}, "NDNT.training.ada_hessian.AdaHessian.__init__": {"tf": 1}, "NDNT.training.earlystopping.EarlyStopping.__init__": {"tf": 1}, "NDNT.training.lbfgs.polyinterp": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.__init__": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.curvature_update": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.__init__": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew.__init__": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer.__init__": {"tf": 1.7320508075688772}, "NDNT.training.trainer.Trainer.checkpoint_model": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.__init__": {"tf": 1}, "NDNT.utils.DanUtils.subplot_setup": {"tf": 1}, "NDNT.utils.DanUtils.ss": {"tf": 1}, "NDNT.utils.DanUtils.display_matrix": {"tf": 1.4142135623730951}, "NDNT.utils.DanUtils.figure_export": {"tf": 1}, "NDNT.utils.DanUtils.load_python_data": {"tf": 1}, "NDNT.utils.DanUtils.fold_sample": {"tf": 1}, "NDNT.utils.DanUtils.design_matrix_drift": {"tf": 1.7320508075688772}, "NDNT.utils.NDNutils.create_optimizer_params": {"tf": 1}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.grid2pixel": {"tf": 1}, "NDNT.utils.NDNutils.save_checkpoint": {"tf": 1}, "NDNT.utils.NDNutils.load_checkpoint": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_localpenalty_matrix": {"tf": 1}, "NDNT.utils.ffnet_dicts.layer_dict": {"tf": 1.4142135623730951}, "NDNT.utils.ffnet_dicts.ffnet_dict_readout": {"tf": 1}, "NDNT.utils.plotting.plot_filters_ST2D": {"tf": 1}, "NDNT.utils.plotting.plot_filters_ST3D": {"tf": 1}}, "df": 63}}}, "c": {"docs": {"NDNT.utils.NDNutils.create_time_embedding": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1}}, "df": 2}, "u": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.utils.ffnet_dicts.list_complete": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.NDN.NDN.get_dataloaders": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.__init__": {"tf": 1}, "NDNT.utils.NDNutils.create_optimizer_params": {"tf": 1}}, "df": 3}}, "n": {"docs": {}, "df": 0, "c": {"docs": {"NDNT.training.earlystopping.EarlyStopping.__init__": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_readout": {"tf": 1}}, "df": 2, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.training.earlystopping.EarlyStopping.__init__": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {"NDNT.utils.ffnet_dicts.ffnet_dict_NIM": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {"NDNT.NDN.NDN.get_optimizer": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew.__init__": {"tf": 1}, "NDNT.utils.NDNutils.create_optimizer_params": {"tf": 1}}, "df": 3}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.NDN.NDN.fit": {"tf": 1}, "NDNT.NDN.NDN.fit_dl": {"tf": 1}, "NDNT.utils.NDNutils.grid2pixel": {"tf": 1}}, "df": 3}}}, "l": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.utils.DanUtils.fold_sample": {"tf": 1}, "NDNT.utils.NDNutils.generate_xv_folds": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1}, "NDNT.modules.regularization.RegModule.__init__": {"tf": 1}}, "df": 4}}, "s": {"docs": {"NDNT.utils.DanUtils.fold_sample": {"tf": 1}, "NDNT.utils.NDNutils.generate_xv_folds": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.utils.NDNutils.load_checkpoint": {"tf": 1}}, "df": 1, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.NDN.NDN.save_model_zip": {"tf": 1}, "NDNT.NDN.NDN.load_model_zip": {"tf": 1}, "NDNT.NDN.NDN.save_model": {"tf": 1}, "NDNT.NDN.NDN.save_model_chk": {"tf": 1}, "NDNT.NDN.NDN.load_model": {"tf": 1}, "NDNT.utils.DanUtils.figure_export": {"tf": 1}, "NDNT.utils.DanUtils.matlab_export": {"tf": 1}, "NDNT.utils.DanUtils.save_python_data": {"tf": 1}, "NDNT.utils.DanUtils.load_python_data": {"tf": 1}}, "df": 9}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.layers.bilayers.BiSTconv1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.__init__": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.__init__": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.rotation_matrix_tensor": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.rotation_matrix_tensor": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.orilayers.ConvLayer3D.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.__init__": {"tf": 1}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1}}, "df": 23, "s": {"docs": {"NDNT.modules.layers.bilayers.BinocLayer1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.dim_info": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.__init__": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.__init__": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.dim_info": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.__init__": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.__init__": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.__init__": {"tf": 1}, "NDNT.utils.ffnet_dicts.layer_dict": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.forward": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.forward": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.forward": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.unit_loss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.forward": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.unit_loss": {"tf": 1}}, "df": 37}}}}}, "x": {"docs": {"NDNT.modules.layers.readouts.FixationLayer.__init__": {"tf": 1}, "NDNT.utils.plotting.plot_filters_1D": {"tf": 1}, "NDNT.utils.plotting.plot_filters_2D": {"tf": 1}, "NDNT.utils.plotting.plot_filters_ST1D": {"tf": 1}}, "df": 4, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.layers.readouts.FixationLayer.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 1}}, "df": 2}}}}}}}, "g": {"docs": {"NDNT.utils.DanUtils.subplot_setup": {"tf": 1}, "NDNT.utils.DanUtils.figure_export": {"tf": 1}}, "df": 2, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.utils.DanUtils.subplot_setup": {"tf": 1}, "NDNT.utils.DanUtils.ss": {"tf": 1}}, "df": 2}}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.utils.MattUtils.plot_losses": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.utils.NDNutils.tent_basis_generate": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"3": {"2": {"docs": {"NDNT.training.lbfgs.LBFGS.__init__": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.__init__": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {"NDNT.utils.MattUtils.smooth_ema": {"tf": 1.7320508075688772}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.training.lbfgs.LBFGS.curvature_update": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {"NDNT.utils.NDNutils.pixel2grid": {"tf": 1}, "NDNT.utils.NDNutils.grid2pixel": {"tf": 1}, "NDNT.utils.ffnet_dicts.list_complete": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.NDN.NDN.__init__": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.assemble_ffnetworks": {"tf": 1}, "NDNT.NDN.NDN.save_model_zip": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchGenerator.__init__": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchGenerator.next": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.__init__": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.rotation_matrix_tensor": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.rotation_matrix_tensor": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.__init__": {"tf": 1}, "NDNT.networks.FFnetwork.__init__": {"tf": 2.8284271247461903}, "NDNT.networks.FFnetwork.determine_input_dims": {"tf": 1}, "NDNT.networks.FFnetwork.ffnet_dict": {"tf": 1}, "NDNT.networks.ReadoutNetwork.determine_input_dims": {"tf": 1}, "NDNT.utils.DanUtils.matlab_export": {"tf": 1}, "NDNT.utils.MattUtils.smooth_ema": {"tf": 1.4142135623730951}, "NDNT.utils.ffnet_dicts.ffnet_dict_NIM": {"tf": 1.4142135623730951}, "NDNT.utils.ffnet_dicts.ffnet_dict_readout": {"tf": 1}}, "df": 17}}, "n": {"docs": {"NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1}}, "df": 4, "e": {"docs": {"NDNT.NDN.NDN.get_optimizer": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.__init__": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.line_search": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.__init__": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew.__init__": {"tf": 1}, "NDNT.utils.NDNutils.fit_lbfgs": {"tf": 1}, "NDNT.utils.NDNutils.create_optimizer_params": {"tf": 1}}, "df": 7}}}, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.NDN.NDN.__init__": {"tf": 1}, "NDNT.NDN.NDN.initialize_biases": {"tf": 1}, "NDNT.NDN.NDN.list_parameters": {"tf": 1}, "NDNT.NDN.NDN.set_parameters": {"tf": 1}, "NDNT.NDN.NDN.set_reg_val": {"tf": 1}, "NDNT.NDN.NDN.get_activations": {"tf": 1}, "NDNT.modules.activity_regularization.ActivityRegularization.activity": {"tf": 1}, "NDNT.modules.activity_regularization.ActivityRegularization.nonneg": {"tf": 1}, "NDNT.modules.activity_regularization.ActivityRegularization.regularize": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.__init__": {"tf": 1}, "NDNT.modules.regularization.Regularization.compute_activity_regularization": {"tf": 1}, "NDNT.networks.FFnetwork.__init__": {"tf": 1}, "NDNT.networks.FFnetwork.list_parameters": {"tf": 1}, "NDNT.networks.FFnetwork.set_parameters": {"tf": 1}, "NDNT.networks.FFnetwork.set_reg_val": {"tf": 1}, "NDNT.networks.FFnetwork.plot_filters": {"tf": 1}, "NDNT.networks.FFnetwork.get_weights": {"tf": 1}, "NDNT.networks.FFnetwork.ffnet_dict": {"tf": 1}, "NDNT.networks.FFnet_external.list_params": {"tf": 1}, "NDNT.networks.FFnet_external.set_params": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_NIM": {"tf": 1.4142135623730951}}, "df": 32, "s": {"docs": {"NDNT.utils.ffnet_dicts.ffnet_dict_NIM": {"tf": 1}}, "df": 1}}}}, "g": {"docs": {"NDNT.utils.NDNutils.tent_basis_generate": {"tf": 1}}, "df": 1, "s": {"docs": {"NDNT.NDN.NDN.generate_predictions": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.__init__": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.layer_dict": {"tf": 1}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1}, "NDNT.modules.regularization.RegModule.__init__": {"tf": 1}, "NDNT.networks.FFnetwork.ffnet_dict": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.__init__": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.ffnet_dict": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d.__init__": {"tf": 1}, "NDNT.utils.DanUtils.monocular_data_import": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding": {"tf": 1}}, "df": 21}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1}}, "df": 6}}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.utils.DanUtils.imagesc": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.NDN.NDN.__init__": {"tf": 1}, "NDNT.NDN.NDN.change_loss": {"tf": 1}, "NDNT.NDN.NDN.save_model_zip": {"tf": 1}}, "df": 3}}, "c": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer.set_readout_locations": {"tf": 1}, "NDNT.networks.ReadoutNetwork.set_readout_locations": {"tf": 1}}, "df": 2}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.utils.NDNutils.load_checkpoint": {"tf": 1}}, "df": 1}}}}}}, "g": {"docs": {"NDNT.training.trainer.Trainer.__init__": {"tf": 1}, "NDNT.utils.NDNutils.create_optimizer_params": {"tf": 1}}, "df": 2}, "a": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.utils.NDNutils.load_checkpoint": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.training.trainer.Trainer.fit": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer.fit_loop": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer.validate_one_epoch": {"tf": 1}, "NDNT.training.trainer.Trainer.train_one_epoch": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.fit": {"tf": 1.4142135623730951}, "NDNT.training.trainer.LBFGSTrainer.train_one_epoch": {"tf": 1}, "NDNT.training.trainer.TemperatureCalibratedTrainer.validate_one_epoch": {"tf": 1}}, "df": 7}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.NDN.NDN.get_optimizer": {"tf": 1}, "NDNT.utils.NDNutils.create_optimizer_params": {"tf": 1}}, "df": 2}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.networks.FFnetwork.__init__": {"tf": 1}, "NDNT.networks.FFnetwork.ffnet_dict": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.__init__": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.ffnet_dict": {"tf": 1}}, "df": 4}}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.utils.DanUtils.design_matrix_drift": {"tf": 1}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 1}}, "df": 2}}}, "v": {"docs": {"NDNT.modules.layers.lvlayers.LVLayerOLD.__init__": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1}}, "df": 2, "s": {"docs": {"NDNT.modules.layers.lvlayers.LVLayer.__init__": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.__init__": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1}}, "df": 4}}, "n": {"docs": {"NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1}}, "df": 2}, "r": {"docs": {"NDNT.training.ada_hessian.AdaHessian.__init__": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.__init__": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.__init__": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew.__init__": {"tf": 1}, "NDNT.utils.NDNutils.fit_lbfgs": {"tf": 1}}, "df": 5}, "t": {"docs": {"NDNT.training.earlystopping.EarlyStopping.__init__": {"tf": 1}}, "df": 1}, "b": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.utils.DanUtils.iterate_lbfgs": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {"NDNT.modules.layers.readouts.FixationLayer.__init__": {"tf": 1}, "NDNT.networks.FFnetwork.__init__": {"tf": 1.4142135623730951}, "NDNT.networks.FFnetwork.ffnet_dict": {"tf": 1.4142135623730951}, "NDNT.networks.ReadoutNetwork.ffnet_dict": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.__init__": {"tf": 1}, "NDNT.utils.DanUtils.filename_num2str": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 1.4142135623730951}, "NDNT.utils.ffnet_dicts.ffnet_dict_NIM": {"tf": 1.4142135623730951}, "NDNT.utils.ffnet_dicts.ffnet_dict_readout": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_external": {"tf": 1.4142135623730951}}, "df": 10, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.NDN.NDN.__init__": {"tf": 2.6457513110645907}, "NDNT.NDN.NDN.assemble_ffnetworks": {"tf": 1}, "NDNT.NDN.NDN.training_step": {"tf": 1}, "NDNT.NDN.NDN.validation_step": {"tf": 1}, "NDNT.NDN.NDN.get_trainer": {"tf": 2}, "NDNT.NDN.NDN.get_dataloaders": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.get_optimizer": {"tf": 1}, "NDNT.NDN.NDN.fit": {"tf": 3.1622776601683795}, "NDNT.NDN.NDN.fit_dl": {"tf": 2.8284271247461903}, "NDNT.NDN.NDN.initialize_loss": {"tf": 2.23606797749979}, "NDNT.NDN.NDN.compute_average_responses": {"tf": 1}, "NDNT.NDN.NDN.initialize_biases": {"tf": 1}, "NDNT.NDN.NDN.eval_models": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.generate_predictions": {"tf": 2.23606797749979}, "NDNT.NDN.NDN.change_loss": {"tf": 1}, "NDNT.NDN.NDN.list_parameters": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.set_parameters": {"tf": 2}, "NDNT.NDN.NDN.set_reg_val": {"tf": 2}, "NDNT.NDN.NDN.save_model_zip": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.save_model": {"tf": 1}, "NDNT.NDN.NDN.save_model_chk": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.load_model": {"tf": 1}, "NDNT.NDN.NDN.load_model_chk": {"tf": 1.7320508075688772}, "NDNT.modules.experiment_sampler.ExperimentBatchGenerator.__init__": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchIterator.__init__": {"tf": 1}, "NDNT.modules.experiment_sampler.construct_exp_to_time": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.BinocLayer1D.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.layers.bilayers.BiSTconv1D.__init__": {"tf": 2}, "NDNT.modules.layers.bilayers.ChannelConvLayer.__init__": {"tf": 2.449489742783178}, "NDNT.modules.layers.bilayers.ChannelConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 2.6457513110645907}, "NDNT.modules.layers.convlayers.ConvLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 2.23606797749979}, "NDNT.modules.layers.convlayers.TconvLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.layers.dimlayers.Dim0Layer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.Dim0Layer.dim_info": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.ChannelLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.DimSPLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.DimSPTLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.externallayer.ExternalLayer.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.layers.laglayers.LagLayer.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.layers.laglayers.LagLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.lvlayers.LVLayerOLD.__init__": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 2.23606797749979}, "NDNT.modules.layers.ndnlayer.NDNLayer.reset_parameters": {"tf": 2}, "NDNT.modules.layers.ndnlayer.NDNLayer.set_parameters": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.set_reg_val": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.dim_info": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1.7320508075688772}, "NDNT.modules.layers.normlayers.DivNormLayer.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.layers.orilayers.OriLayer.__init__": {"tf": 2}, "NDNT.modules.layers.orilayers.OriLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.__init__": {"tf": 2.23606797749979}, "NDNT.modules.layers.orilayers.OriConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.__init__": {"tf": 2}, "NDNT.modules.layers.orilayers.ConvLayer3D.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.get_weights": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.ReadoutLayer.forward": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.forward": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.forward": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 2.449489742783178}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.__init__": {"tf": 2}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.__init__": {"tf": 2}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.__init__": {"tf": 2.23606797749979}, "NDNT.modules.layers.specialtylayers.Tlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.reset_parameters2": {"tf": 2}, "NDNT.modules.layers.specialtylayers.OnOffLayer.__init__": {"tf": 2.23606797749979}, "NDNT.modules.layers.specialtylayers.OnOffLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 2.23606797749979}, "NDNT.modules.layers.specialtylayers.MaskLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.__init__": {"tf": 2}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.regularization.Regularization.set_reg_val": {"tf": 1}, "NDNT.modules.regularization.Regularization.unit_reg_convert": {"tf": 1}, "NDNT.modules.regularization.Regularization.build_reg_modules": {"tf": 1}, "NDNT.modules.regularization.Regularization.get_reg_class": {"tf": 1}, "NDNT.modules.regularization.RegModule.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.regularization.LocalityReg.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.regularization.DiagonalReg.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.regularization.InlineReg.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.regularization.ConvReg.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.regularization.Tikhanov.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.regularization.TikhanovC.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.regularization.ActivityReg.__init__": {"tf": 1.7320508075688772}, "NDNT.networks.FFnetwork.__init__": {"tf": 2.23606797749979}, "NDNT.networks.FFnetwork.prepare_regularization": {"tf": 1}, "NDNT.networks.FFnetwork.list_parameters": {"tf": 1}, "NDNT.networks.FFnetwork.set_parameters": {"tf": 1.7320508075688772}, "NDNT.networks.FFnetwork.set_reg_val": {"tf": 1.7320508075688772}, "NDNT.networks.FFnetwork.ffnet_dict": {"tf": 1.7320508075688772}, "NDNT.networks.ScaffoldNetwork.__init__": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.ffnet_dict": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d.__init__": {"tf": 1}, "NDNT.networks.FFnet_external.__init__": {"tf": 1.7320508075688772}, "NDNT.networks.FFnet_external.list_params": {"tf": 1}, "NDNT.networks.FFnet_external.set_params": {"tf": 1.7320508075688772}, "NDNT.training.ada_hessian.AdaHessian.step": {"tf": 1}, "NDNT.training.lbfgs.polyinterp": {"tf": 1.4142135623730951}, "NDNT.training.lbfgs.LBFGS.step": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew.__init__": {"tf": 1}, "NDNT.training.trainer.Trainer.__init__": {"tf": 2.6457513110645907}, "NDNT.training.trainer.Trainer.fit": {"tf": 1}, "NDNT.training.trainer.Trainer.prepare_fit": {"tf": 1}, "NDNT.training.trainer.Trainer.train_one_step": {"tf": 1}, "NDNT.training.trainer.Trainer.checkpoint_model": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.fit": {"tf": 1.4142135623730951}, "NDNT.utils.DanUtils.ss": {"tf": 1}, "NDNT.utils.DanUtils.imagesc": {"tf": 2.23606797749979}, "NDNT.utils.DanUtils.fold_sample": {"tf": 1}, "NDNT.utils.DanUtils.iterate_lbfgs": {"tf": 1.4142135623730951}, "NDNT.utils.MattUtils.plot_losses": {"tf": 1}, "NDNT.utils.NDNutils.fit_lbfgs": {"tf": 1.7320508075688772}, "NDNT.utils.NDNutils.create_optimizer_params": {"tf": 2}, "NDNT.utils.NDNutils.tent_basis_generate": {"tf": 1.7320508075688772}, "NDNT.utils.NDNutils.generate_xv_folds": {"tf": 1}, "NDNT.utils.NDNutils.save_checkpoint": {"tf": 1}, "NDNT.utils.NDNutils.load_checkpoint": {"tf": 1}, "NDNT.utils.NDNutils.ModelSummary": {"tf": 1}, "NDNT.utils.NDNutils.summary_string": {"tf": 1}, "NDNT.utils.NDNutils.load_model": {"tf": 1}, "NDNT.utils.NDNutils.get_max_samples": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}, "NDNT.utils.ffnet_dicts.layer_dict": {"tf": 2.23606797749979}, "NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 1.7320508075688772}, "NDNT.utils.ffnet_dicts.ffnet_dict_NIM": {"tf": 3}, "NDNT.utils.ffnet_dicts.ffnet_dict_readout": {"tf": 1.4142135623730951}, "NDNT.utils.ffnet_dicts.ffnet_dict_external": {"tf": 2}, "NDNT.utils.ffnet_dicts.list_complete": {"tf": 1.4142135623730951}, "NDNT.utils.plotting.plot_filters_ST1D": {"tf": 1}, "NDNT.utils.plotting.plot_internal_weights": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 2}, "NDNT.metrics.mse_loss.MseLoss_datafilter.forward": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_log_epsilon": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 2}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.forward": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"tf": 2}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.forward": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.unit_loss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"tf": 2}, "NDNT.metrics.rmse_loss.RmseLoss.forward": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.unit_loss": {"tf": 1}}, "df": 160}}, "r": {"docs": {}, "df": 0, "m": {"docs": {"NDNT.modules.layers.bilayers.BiSTconv1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.orilayers.OriConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.utils.ffnet_dicts.layer_dict": {"tf": 1.4142135623730951}, "NDNT.utils.ffnet_dicts.ffnet_dict_NIM": {"tf": 1}}, "df": 18, "a": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.modules.layers.lvlayers.LVLayer.__init__": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"tf": 1}, "NDNT.networks.FFnetwork.__init__": {"tf": 1}, "NDNT.networks.FFnetwork.determine_input_dims": {"tf": 1}, "NDNT.networks.FFnetwork.ffnet_dict": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_NIM": {"tf": 1}}, "df": 6, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.regularization.Regularization.__init__": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.unit_loss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.unit_loss": {"tf": 1}}, "df": 5}}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.NDN.NDN.__init__": {"tf": 1}, "NDNT.NDN.NDN.get_trainer": {"tf": 1}, "NDNT.NDN.NDN.fit_dl": {"tf": 1}, "NDNT.NDN.NDN.set_parameters": {"tf": 1}, "NDNT.NDN.NDN.save_model_zip": {"tf": 1}, "NDNT.NDN.NDN.load_model_chk": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.set_parameters": {"tf": 1}, "NDNT.networks.FFnetwork.set_parameters": {"tf": 1}, "NDNT.networks.FFnet_external.__init__": {"tf": 1}, "NDNT.networks.FFnet_external.set_params": {"tf": 1}, "NDNT.utils.NDNutils.CPU_Unpickler.find_class": {"tf": 1}, "NDNT.utils.NDNutils.ensure_dir": {"tf": 1}, "NDNT.utils.NDNutils.get_fit_versions": {"tf": 1}, "NDNT.utils.NDNutils.load_model": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_external": {"tf": 1}}, "df": 15}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.NDN.NDN.assemble_ffnetworks": {"tf": 1}}, "df": 1}}, "w": {"docs": {"NDNT.NDN.NDN.change_loss": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"NDNT.NDN.NDN.get_dataloaders": {"tf": 1}, "NDNT.NDN.NDN.fit_dl": {"tf": 1}, "NDNT.NDN.NDN.eval_models": {"tf": 1}, "NDNT.NDN.NDN.generate_predictions": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.dim_info": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.__init__": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.__init__": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.laglayers.LagLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"tf": 1.7320508075688772}, "NDNT.modules.layers.lvlayers.LVLayerOLD.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.get_weights": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.dim_info": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.normlayers.DivNormLayer.__init__": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.__init__": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.__init__": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.plot_filters": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.get_weights": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterSTlayer.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.Tlayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.Tlayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.OnOffLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.timelayers.TimeLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1}, "NDNT.modules.regularization.Regularization.unit_reg_convert": {"tf": 1}, "NDNT.modules.regularization.RegModule.__init__": {"tf": 1}, "NDNT.modules.regularization.LocalityReg.__init__": {"tf": 1}, "NDNT.modules.regularization.ActivityReg.__init__": {"tf": 1}, "NDNT.networks.FFnetwork.ffnet_dict": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.__init__": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.ffnet_dict": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d.__init__": {"tf": 1}, "NDNT.utils.DanUtils.subplot_setup": {"tf": 1.4142135623730951}, "NDNT.utils.DanUtils.ss": {"tf": 1.4142135623730951}, "NDNT.utils.DanUtils.filename_num2str": {"tf": 1}, "NDNT.utils.DanUtils.fold_sample": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1.4142135623730951}, "NDNT.utils.DanUtils.monocular_data_import": {"tf": 1}, "NDNT.utils.NDNutils.create_optimizer_params": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.create_time_embedding": {"tf": 1}, "NDNT.utils.NDNutils.tent_basis_generate": {"tf": 1}, "NDNT.utils.NDNutils.generate_xv_folds": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.get_max_samples": {"tf": 1}, "NDNT.utils.ffnet_dicts.layer_dict": {"tf": 1.4142135623730951}, "NDNT.utils.ffnet_dicts.ffnet_dict_readout": {"tf": 1}, "NDNT.utils.plotting.plot_filters_1D": {"tf": 1}, "NDNT.utils.plotting.plot_filters_2D": {"tf": 1}, "NDNT.utils.plotting.plot_filters_ST1D": {"tf": 1}, "NDNT.utils.plotting.plot_internal_weights": {"tf": 1}}, "df": 78, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.utils.DanUtils.display_matrix": {"tf": 1.4142135623730951}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.NDN.NDN.eval_models": {"tf": 1}, "NDNT.utils.ffnet_dicts.list_complete": {"tf": 1}}, "df": 2}}}, "l": {"docs": {"NDNT.NDN.NDN.get_activations": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.layers.bilayers.BiSTconv1D.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1}, "NDNT.utils.ffnet_dicts.layer_dict": {"tf": 1}}, "df": 7}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.utils.DanUtils.time_embedding_simple": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {"NDNT.utils.DanUtils.design_matrix_drift": {"tf": 1}, "NDNT.utils.NDNutils.generate_xv_folds": {"tf": 1}}, "df": 2}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.utils.NDNutils.get_max_samples": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.NDN.NDN.__init__": {"tf": 1}, "NDNT.NDN.NDN.assemble_ffnetworks": {"tf": 1}, "NDNT.networks.FFnet_external.__init__": {"tf": 1.4142135623730951}, "NDNT.utils.ffnet_dicts.ffnet_dict_external": {"tf": 1}}, "df": 4}}}}}}, "p": {"docs": {"NDNT.modules.experiment_sampler.ExperimentBatchIterator.__init__": {"tf": 1.4142135623730951}}, "df": 1, "t": {"docs": {"NDNT.utils.DanUtils.binocular_data_import": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}}, "df": 2, "n": {"docs": {"NDNT.utils.DanUtils.monocular_data_import": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.NDN.NDN.get_trainer": {"tf": 1.7320508075688772}, "NDNT.training.trainer.Trainer.__init__": {"tf": 1}, "NDNT.utils.NDNutils.create_optimizer_params": {"tf": 1.7320508075688772}}, "df": 3}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {"NDNT.training.ada_hessian.AdaHessian.__init__": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.modules.layers.timelayers.TimeLayer.__init__": {"tf": 1}}, "df": 1}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.utils.NDNutils.grid2pixel": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.training.ada_hessian.AdaHessian.__init__": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.curvature_update": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_log_epsilon": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"NDNT.training.trainer.Trainer.train_one_epoch": {"tf": 1}, "NDNT.training.trainer.Trainer.checkpoint_model": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.train_one_epoch": {"tf": 1}}, "df": 3, "s": {"docs": {"NDNT.training.trainer.Trainer.__init__": {"tf": 1}, "NDNT.training.trainer.Trainer.fit_loop": {"tf": 1}, "NDNT.utils.NDNutils.create_optimizer_params": {"tf": 1}}, "df": 3}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.training.lbfgsnew.LBFGSNew.__init__": {"tf": 1}}, "df": 1}}}, "i": {"docs": {"NDNT.utils.ffnet_dicts.ffnet_dict_NIM": {"tf": 1}}, "df": 1}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.utils.DanUtils.iterate_lbfgs": {"tf": 1}, "NDNT.utils.NDNutils.fit_lbfgs": {"tf": 1}}, "df": 2, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.networks.FFnet_external.__init__": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.CPU_Unpickler.find_class": {"tf": 1}}, "df": 2, "s": {"docs": {"NDNT.NDN.NDN.__init__": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew.__init__": {"tf": 1}}, "df": 2, "l": {"docs": {"NDNT.NDN.NDN.__init__": {"tf": 1}, "NDNT.NDN.NDN.save_model_zip": {"tf": 1}, "NDNT.NDN.NDN.load_model_chk": {"tf": 1}, "NDNT.training.trainer.Trainer.fit": {"tf": 1}, "NDNT.training.trainer.Trainer.prepare_fit": {"tf": 1}, "NDNT.training.trainer.Trainer.fit_loop": {"tf": 1}, "NDNT.training.trainer.Trainer.validate_one_epoch": {"tf": 1}, "NDNT.training.trainer.Trainer.train_one_epoch": {"tf": 1}, "NDNT.training.trainer.Trainer.train_one_step": {"tf": 1}, "NDNT.training.trainer.Trainer.checkpoint_model": {"tf": 1}, "NDNT.training.trainer.Trainer.graceful_exit": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.fit": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.fit_data_dict": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.train_one_epoch": {"tf": 1}, "NDNT.training.trainer.TemperatureCalibratedTrainer.validate_one_epoch": {"tf": 1}, "NDNT.utils.NDNutils.ModelSummary": {"tf": 1}, "NDNT.utils.NDNutils.summary_string": {"tf": 1}, "NDNT.utils.NDNutils.get_fit_versions": {"tf": 1}, "NDNT.utils.NDNutils.load_model": {"tf": 1}}, "df": 19}}}}, "u": {"docs": {"NDNT.modules.layers.lvlayers.LVLayerOLD.__init__": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_readout": {"tf": 1}}, "df": 4, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "p": {"docs": {"NDNT.NDN.NDN.get_dataloaders": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.NDN.NDN.get_dataloaders": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"NDNT.training.trainer.Trainer.__init__": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "x": {"docs": {"NDNT.NDN.NDN.get_optimizer": {"tf": 1}, "NDNT.training.lbfgs.polyinterp": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew.__init__": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer.__init__": {"tf": 1}, "NDNT.utils.DanUtils.imagesc": {"tf": 1}, "NDNT.utils.DanUtils.find_peaks": {"tf": 1}, "NDNT.utils.DanUtils.iterate_lbfgs": {"tf": 1}, "NDNT.utils.NDNutils.fit_lbfgs": {"tf": 1}, "NDNT.utils.NDNutils.create_optimizer_params": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.save_checkpoint": {"tf": 1}}, "df": 10}, "s": {"docs": {}, "df": 0, "k": {"docs": {"NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.layer_dict": {"tf": 1}}, "df": 2}}, "p": {"docs": {"NDNT.utils.NDNutils.load_checkpoint": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.training.lbfgs.polyinterp": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.NDN.NDN.__init__": {"tf": 1}, "NDNT.NDN.NDN.get_trainer": {"tf": 1}, "NDNT.NDN.NDN.get_optimizer": {"tf": 1}, "NDNT.NDN.NDN.change_loss": {"tf": 1}, "NDNT.NDN.NDN.set_reg_val": {"tf": 1}, "NDNT.NDN.NDN.save_model_zip": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.__init__": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.set_reg_val": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1}, "NDNT.modules.regularization.Regularization.set_reg_val": {"tf": 1}, "NDNT.modules.regularization.Regularization.get_reg_class": {"tf": 1}, "NDNT.modules.regularization.RegModule.__init__": {"tf": 1}, "NDNT.modules.regularization.LocalityReg.__init__": {"tf": 1}, "NDNT.modules.regularization.DiagonalReg.__init__": {"tf": 1}, "NDNT.modules.regularization.DiagonalReg.build_reg_mats": {"tf": 1}, "NDNT.modules.regularization.InlineReg.__init__": {"tf": 1}, "NDNT.modules.regularization.ConvReg.__init__": {"tf": 1}, "NDNT.modules.regularization.Tikhanov.__init__": {"tf": 1}, "NDNT.modules.regularization.TikhanovC.__init__": {"tf": 1}, "NDNT.modules.regularization.ActivityReg.__init__": {"tf": 1}, "NDNT.networks.FFnetwork.__init__": {"tf": 1}, "NDNT.networks.FFnetwork.determine_input_dims": {"tf": 1}, "NDNT.networks.FFnetwork.set_reg_val": {"tf": 1}, "NDNT.networks.FFnetwork.ffnet_dict": {"tf": 1}, "NDNT.utils.NDNutils.create_optimizer_params": {"tf": 1}, "NDNT.utils.NDNutils.ModelSummary": {"tf": 1}, "NDNT.utils.NDNutils.summary_string": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_maxpenalty_matrix": {"tf": 1}, "NDNT.utils.ffnet_dicts.layer_dict": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_NIM": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_readout": {"tf": 1}}, "df": 36, "s": {"docs": {"NDNT.utils.ffnet_dicts.ffnet_dict_NIM": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.NDN.NDN.get_dataloaders": {"tf": 1}, "NDNT.NDN.NDN.fit": {"tf": 1}, "NDNT.NDN.NDN.fit_dl": {"tf": 1}, "NDNT.NDN.NDN.eval_models": {"tf": 1}, "NDNT.training.trainer.Trainer.fit": {"tf": 1}, "NDNT.training.trainer.Trainer.fit_loop": {"tf": 1}, "NDNT.training.trainer.Trainer.train_one_epoch": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.fit": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.fit_data_dict": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.train_one_epoch": {"tf": 1}, "NDNT.utils.DanUtils.iterate_lbfgs": {"tf": 1}}, "df": 11, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.NDN.NDN.fit": {"tf": 1}, "NDNT.NDN.NDN.fit_dl": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.NDN.NDN.fit": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.modules.layers.dimlayers.DimSPLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.layer_dict": {"tf": 1}}, "df": 4}}}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.training.earlystopping.EarlyStopping.__init__": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.activations.AdaptiveELU.__init__": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.get_weights": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.get_weights": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.__init__": {"tf": 1}, "NDNT.modules.regularization.Regularization.unit_reg_convert": {"tf": 1}, "NDNT.training.trainer.Trainer.__init__": {"tf": 1}, "NDNT.utils.DanUtils.imagesc": {"tf": 1.4142135623730951}, "NDNT.utils.DanUtils.design_matrix_drift": {"tf": 1}, "NDNT.utils.DanUtils.iterate_lbfgs": {"tf": 1}, "NDNT.utils.NDNutils.fit_lbfgs": {"tf": 1}, "NDNT.utils.NDNutils.create_optimizer_params": {"tf": 1.7320508075688772}, "NDNT.utils.NDNutils.grid2pixel": {"tf": 1}, "NDNT.utils.NDNutils.load_model": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_localpenalty_matrix": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_readout": {"tf": 1.7320508075688772}, "NDNT.utils.plotting.plot_filters_1D": {"tf": 1}, "NDNT.utils.plotting.plot_filters_2D": {"tf": 1}, "NDNT.utils.plotting.plot_filters_ST1D": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.unit_loss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.unit_loss": {"tf": 1}}, "df": 31}}, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.layers.lvlayers.LVLayer.__init__": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {"NDNT.modules.experiment_sampler.ExperimentBatchIterator.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.get_weights": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.get_weights": {"tf": 1}, "NDNT.training.trainer.Trainer.__init__": {"tf": 1}, "NDNT.utils.DanUtils.design_matrix_drift": {"tf": 1}}, "df": 5, "l": {"docs": {"NDNT.utils.DanUtils.iterate_lbfgs": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.NDN.NDN.get_optimizer": {"tf": 1.4142135623730951}, "NDNT.training.lbfgsnew.LBFGSNew.__init__": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.fit_lbfgs": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.create_optimizer_params": {"tf": 1.4142135623730951}}, "df": 4}}}}}}}, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"NDNT.modules.experiment_sampler.ExperimentSampler.__init__": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.__init__": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.__init__": {"tf": 1}}, "df": 3}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.NDN.NDN.initialize_biases": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.generate_predictions": {"tf": 1}, "NDNT.NDN.NDN.get_weights": {"tf": 1}, "NDNT.NDN.NDN.list_parameters": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.set_parameters": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.set_reg_val": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.plot_filters": {"tf": 1}, "NDNT.NDN.NDN.get_activations": {"tf": 1.4142135623730951}, "NDNT.networks.FFnetwork.list_parameters": {"tf": 1}, "NDNT.networks.FFnetwork.set_parameters": {"tf": 1}, "NDNT.networks.FFnetwork.set_reg_val": {"tf": 1}, "NDNT.networks.FFnetwork.plot_filters": {"tf": 1}, "NDNT.networks.FFnetwork.get_weights": {"tf": 1}, "NDNT.networks.FFnet_external.list_params": {"tf": 1}, "NDNT.networks.FFnet_external.set_params": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.forward": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.forward": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.forward": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.unit_loss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.forward": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.unit_loss": {"tf": 1}}, "df": 23}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.experiment_sampler.ExperimentBatchIterator.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.__init__": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.__init__": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.get_weights": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.plot_filters": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.get_weights": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.utils.DanUtils.monocular_data_import": {"tf": 1}, "NDNT.utils.NDNutils.tent_basis_generate": {"tf": 1}}, "df": 17, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.experiment_sampler.ExperimentBatchGenerator.__init__": {"tf": 1}}, "df": 1}}}}}}}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.modules.layers.bilayers.ChannelConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.__init__": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.unit_loss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.unit_loss": {"tf": 1}}, "df": 9}}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.modules.layers.bilayers.ChannelConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.__init__": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1}}, "df": 7}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"NDNT.modules.layers.orilayers.OriLayer.rotation_matrix_tensor": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.rotation_matrix_tensor": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.get_rot_mat": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.rotate_tensor": {"tf": 1}}, "df": 4}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"NDNT.utils.DanUtils.find_peaks": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {"NDNT.training.lbfgs.LBFGS.step": {"tf": 1}, "NDNT.utils.NDNutils.pixel2grid": {"tf": 1}}, "df": 2, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.NDN.NDN.__init__": {"tf": 1}, "NDNT.NDN.NDN.save_model_zip": {"tf": 1}}, "df": 2}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.training.lbfgs.polyinterp": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {"NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.__init__": {"tf": 1}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1}, "NDNT.modules.regularization.RegModule.__init__": {"tf": 1}, "NDNT.utils.ffnet_dicts.layer_dict": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_readout": {"tf": 1}}, "df": 9}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.training.ada_hessian.AdaHessian.__init__": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"NDNT.modules.layers.ndnlayer.NDNLayer.reset_parameters": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.reset_parameters2": {"tf": 1}}, "df": 2, "s": {"docs": {"NDNT.NDN.NDN.__init__": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.__init__": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.__init__": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.__init__": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew.__init__": {"tf": 1}, "NDNT.utils.NDNutils.tent_basis_generate": {"tf": 1}}, "df": 6}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.utils.NDNutils.fit_lbfgs": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {"NDNT.utils.DanUtils.iterate_lbfgs": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.NDN.NDN.get_trainer": {"tf": 1}, "NDNT.training.earlystopping.EarlyStopping.__init__": {"tf": 1}, "NDNT.utils.NDNutils.create_optimizer_params": {"tf": 1}}, "df": 3}}}}}, "h": {"docs": {"NDNT.NDN.NDN.load_model_chk": {"tf": 1}, "NDNT.utils.NDNutils.save_checkpoint": {"tf": 1}, "NDNT.utils.NDNutils.load_model": {"tf": 1}}, "df": 3}}, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.modules.layers.bilayers.BinocLayer1D.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.__init__": {"tf": 1}}, "df": 6}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.NDN.NDN.get_dataloaders": {"tf": 1}}, "df": 1}}, "t": {"docs": {"NDNT.NDN.NDN.save_model": {"tf": 1}, "NDNT.NDN.NDN.load_model": {"tf": 1}}, "df": 2}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.layers.lvlayers.LVLayer.__init__": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.__init__": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1}}, "df": 4}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.training.earlystopping.EarlyStopping.__init__": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {"NDNT.utils.DanUtils.display_matrix": {"tf": 1}}, "df": 1}, "d": {"docs": {"NDNT.metrics.mse_loss.MseLoss_datafilter.forward": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.forward": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.forward": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.unit_loss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.forward": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.unit_loss": {"tf": 1}}, "df": 8}}, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.utils.NDNutils.create_optimizer_params": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.training.lbfgs.polyinterp": {"tf": 1}, "NDNT.utils.DanUtils.design_matrix_drift": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.utils.DanUtils.find_peaks": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.NDN.NDN.__init__": {"tf": 1}, "NDNT.NDN.NDN.save_model_zip": {"tf": 1}, "NDNT.networks.FFnetwork.ffnet_dict": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.__init__": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.ffnet_dict": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d.__init__": {"tf": 1}}, "df": 6, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.modules.activity_regularization.ActivityRegularization.activity": {"tf": 1}, "NDNT.modules.activity_regularization.ActivityRegularization.nonneg": {"tf": 1}, "NDNT.modules.activity_regularization.ActivityRegularization.regularize": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1}, "NDNT.modules.regularization.Regularization.compute_activity_regularization": {"tf": 1}, "NDNT.utils.ffnet_dicts.layer_dict": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_external": {"tf": 1}}, "df": 24, "s": {"docs": {"NDNT.modules.regularization.Regularization.__init__": {"tf": 1}, "NDNT.modules.regularization.Regularization.unit_reg_convert": {"tf": 1}}, "df": 2}}}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.NDN.NDN.get_trainer": {"tf": 1}, "NDNT.training.trainer.Trainer.__init__": {"tf": 1}, "NDNT.utils.NDNutils.create_optimizer_params": {"tf": 1}}, "df": 3, "r": {"docs": {"NDNT.NDN.NDN.__init__": {"tf": 1}, "NDNT.NDN.NDN.get_trainer": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.get_optimizer": {"tf": 1}, "NDNT.NDN.NDN.fit": {"tf": 1}, "NDNT.NDN.NDN.fit_dl": {"tf": 1}, "NDNT.training.trainer.Trainer.__init__": {"tf": 1}, "NDNT.utils.NDNutils.fit_lbfgs": {"tf": 1}, "NDNT.utils.NDNutils.create_optimizer_params": {"tf": 1}}, "df": 8}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.training.lbfgs.LBFGS.step": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1}}, "df": 2}}}}}}, "r": {"docs": {"NDNT.utils.NDNutils.load_checkpoint": {"tf": 1}}, "df": 1, "i": {"docs": {"NDNT.modules.layers.orilayers.ConvLayer3D.__init__": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.layer_dict": {"tf": 1}}, "df": 2, "g": {"docs": {"NDNT.modules.layers.convlayers.ConvLayer.batchnorm_clone": {"tf": 1}}, "df": 1}}}, "k": {"docs": {"NDNT.training.lbfgs.LBFGS.step": {"tf": 1}}, "df": 1}, "b": {"docs": {}, "df": 0, "j": {"docs": {"NDNT.utils.NDNutils.NpEncoder.default": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.NDN.NDN.__init__": {"tf": 1}, "NDNT.NDN.NDN.get_dataloaders": {"tf": 1}, "NDNT.NDN.NDN.fit": {"tf": 1}, "NDNT.NDN.NDN.fit_dl": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchGenerator.__init__": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchIterator.__init__": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.__init__": {"tf": 1}, "NDNT.training.trainer.Trainer.fit": {"tf": 1}, "NDNT.training.trainer.Trainer.prepare_fit": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.fit": {"tf": 1}}, "df": 10}}, "l": {"docs": {}, "df": 0, "f": {"docs": {"NDNT.NDN.NDN.assemble_ffnetworks": {"tf": 1}, "NDNT.NDN.NDN.compute_network_outputs": {"tf": 1}, "NDNT.NDN.NDN.forward": {"tf": 1}, "NDNT.NDN.NDN.training_step": {"tf": 1}, "NDNT.NDN.NDN.validation_step": {"tf": 1}, "NDNT.NDN.NDN.compute_reg_loss": {"tf": 1}, "NDNT.NDN.NDN.get_trainer": {"tf": 1}, "NDNT.NDN.NDN.get_dataloaders": {"tf": 1}, "NDNT.NDN.NDN.get_optimizer": {"tf": 1}, "NDNT.NDN.NDN.prepare_regularization": {"tf": 1}, "NDNT.NDN.NDN.fit": {"tf": 1}, "NDNT.NDN.NDN.fit_dl": {"tf": 1}, "NDNT.NDN.NDN.initialize_loss": {"tf": 1}, "NDNT.NDN.NDN.compute_average_responses": {"tf": 1}, "NDNT.NDN.NDN.initialize_biases": {"tf": 1}, "NDNT.NDN.NDN.eval_models": {"tf": 1}, "NDNT.NDN.NDN.generate_predictions": {"tf": 1}, "NDNT.NDN.NDN.change_loss": {"tf": 1}, "NDNT.NDN.NDN.get_weights": {"tf": 1}, "NDNT.NDN.NDN.get_readout_locations": {"tf": 1}, "NDNT.NDN.NDN.passive_readout": {"tf": 1}, "NDNT.NDN.NDN.list_parameters": {"tf": 1}, "NDNT.NDN.NDN.set_parameters": {"tf": 1}, "NDNT.NDN.NDN.set_reg_val": {"tf": 1}, "NDNT.NDN.NDN.plot_filters": {"tf": 1}, "NDNT.NDN.NDN.save_model_zip": {"tf": 1}, "NDNT.NDN.NDN.save_model": {"tf": 1}, "NDNT.NDN.NDN.save_model_chk": {"tf": 1}, "NDNT.NDN.NDN.get_null_adjusted_ll": {"tf": 1}, "NDNT.NDN.NDN.get_activations": {"tf": 1}, "NDNT.NDN.NDN.model_string": {"tf": 1}, "NDNT.modules.activations.Square.forward": {"tf": 1}, "NDNT.modules.activations.AdaptiveELU.forward": {"tf": 1}, "NDNT.modules.activity_regularization.ActivityRegularization.activity": {"tf": 1}, "NDNT.modules.activity_regularization.ActivityRegularization.nonneg": {"tf": 1}, "NDNT.modules.activity_regularization.ActivityRegularization.regularize": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchGenerator.next": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D.forward": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.forward": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.forward": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.batchnorm_clone": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.batchnorm_convert": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.forward": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.forward": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.forward": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.forward": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.forward": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.forward": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.forward": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.forward": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.forward": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.forward": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.forward": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.reset_parameters": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.initialize_gaussian_envelope": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.forward": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.compute_reg_loss": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.get_weights": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.list_parameters": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.set_parameters": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.set_reg_val": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.forward": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.rotation_matrix_tensor": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.forward": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.rotation_matrix_tensor": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.get_rot_mat": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.rotate_tensor": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.forward": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.forward": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.plot_filters": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.initialize_spatial_mapping": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.get_weights": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.forward": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.set_readout_locations": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.get_readout_locations": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.passive_readout": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.forward": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.passive_readout": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.forward": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.initialize": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.forward": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.forward": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.forward": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.forward": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.reset_parameters2": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.forward": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.forward": {"tf": 1}, "NDNT.modules.regularization.Regularization.set_reg_val": {"tf": 1}, "NDNT.modules.regularization.Regularization.unit_reg_convert": {"tf": 1}, "NDNT.modules.regularization.Regularization.build_reg_modules": {"tf": 1}, "NDNT.modules.regularization.Regularization.compute_reg_loss": {"tf": 1}, "NDNT.modules.regularization.Regularization.compute_activity_regularization": {"tf": 1}, "NDNT.modules.regularization.Regularization.reg_copy": {"tf": 1}, "NDNT.modules.regularization.RegModule.forward": {"tf": 1}, "NDNT.modules.regularization.LocalityReg.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.LocalityReg.build_reg_mats": {"tf": 1}, "NDNT.modules.regularization.DiagonalReg.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.DiagonalReg.build_reg_mats": {"tf": 1}, "NDNT.modules.regularization.InlineReg.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.ConvReg.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.Tikhanov.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.TikhanovC.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.ActivityReg.compute_activity_penalty": {"tf": 1}, "NDNT.modules.regularization.ActivityReg.compute_reg_penalty": {"tf": 1}, "NDNT.networks.FFnetwork.determine_input_dims": {"tf": 1}, "NDNT.networks.FFnetwork.preprocess_input": {"tf": 1}, "NDNT.networks.FFnetwork.forward": {"tf": 1}, "NDNT.networks.FFnetwork.prepare_regularization": {"tf": 1}, "NDNT.networks.FFnetwork.compute_reg_loss": {"tf": 1}, "NDNT.networks.FFnetwork.list_parameters": {"tf": 1}, "NDNT.networks.FFnetwork.set_parameters": {"tf": 1}, "NDNT.networks.FFnetwork.set_reg_val": {"tf": 1}, "NDNT.networks.FFnetwork.plot_filters": {"tf": 1}, "NDNT.networks.FFnetwork.get_weights": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.forward": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d.forward": {"tf": 1}, "NDNT.networks.ReadoutNetwork.determine_input_dims": {"tf": 1}, "NDNT.networks.ReadoutNetwork.forward": {"tf": 1}, "NDNT.networks.ReadoutNetwork.get_readout_locations": {"tf": 1}, "NDNT.networks.ReadoutNetwork.set_readout_locations": {"tf": 1}, "NDNT.networks.FFnet_external.forward": {"tf": 1}, "NDNT.networks.FFnet_external.compute_reg_loss": {"tf": 1}, "NDNT.networks.FFnet_external.list_params": {"tf": 1}, "NDNT.networks.FFnet_external.set_params": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.get_params": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.zero_hessian": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.set_hessian": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.step": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.line_search": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.two_loop_recursion": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.curvature_update": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.step": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew.step": {"tf": 1}, "NDNT.training.trainer.Trainer.fit": {"tf": 1}, "NDNT.training.trainer.Trainer.prepare_fit": {"tf": 1}, "NDNT.training.trainer.Trainer.fit_loop": {"tf": 1}, "NDNT.training.trainer.Trainer.validate_one_epoch": {"tf": 1}, "NDNT.training.trainer.Trainer.train_one_epoch": {"tf": 1}, "NDNT.training.trainer.Trainer.train_one_step": {"tf": 1}, "NDNT.training.trainer.Trainer.checkpoint_model": {"tf": 1}, "NDNT.training.trainer.Trainer.graceful_exit": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.fit": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.fit_data_dict": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.train_one_epoch": {"tf": 1}, "NDNT.training.trainer.TemperatureCalibratedTrainer.validate_one_epoch": {"tf": 1}, "NDNT.utils.NDNutils.CPU_Unpickler.find_class": {"tf": 1}, "NDNT.utils.NDNutils.NpEncoder.default": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.forward": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_log_epsilon": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.forward": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.forward": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.unit_loss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.forward": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.unit_loss": {"tf": 1}}, "df": 174}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"NDNT.NDN.NDN.get_optimizer": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.__init__": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.line_search": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.__init__": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew.__init__": {"tf": 1}, "NDNT.utils.NDNutils.fit_lbfgs": {"tf": 1}, "NDNT.utils.NDNutils.create_optimizer_params": {"tf": 1}}, "df": 7}}}}, "t": {"docs": {"NDNT.training.trainer.Trainer.__init__": {"tf": 1}}, "df": 1}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.utils.create_reg_matrices.create_localpenalty_matrix": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.NDN.NDN.get_trainer": {"tf": 1}, "NDNT.NDN.NDN.fit": {"tf": 1}, "NDNT.NDN.NDN.fit_dl": {"tf": 1}, "NDNT.utils.NDNutils.save_checkpoint": {"tf": 1}}, "df": 4}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.NDN.NDN.fit": {"tf": 1}, "NDNT.NDN.NDN.get_null_adjusted_ll": {"tf": 1}, "NDNT.NDN.NDN.get_activations": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.__init__": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_readout": {"tf": 1}}, "df": 7, "s": {"docs": {"NDNT.training.ada_hessian.AdaHessian.__init__": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {"NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.layer_dict": {"tf": 1}}, "df": 2}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.NDN.NDN.get_trainer": {"tf": 1}, "NDNT.NDN.NDN.fit": {"tf": 1}, "NDNT.NDN.NDN.fit_dl": {"tf": 1}, "NDNT.training.trainer.Trainer.__init__": {"tf": 1.7320508075688772}}, "df": 4}}}}}}}, "a": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.networks.FFnetwork.__init__": {"tf": 1}, "NDNT.networks.FFnetwork.ffnet_dict": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.__init__": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.ffnet_dict": {"tf": 1}}, "df": 4}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.utils.MattUtils.smooth_ema": {"tf": 1}, "NDNT.utils.MattUtils.smooth_conv": {"tf": 1}}, "df": 2}}}, "e": {"docs": {"NDNT.utils.plotting.plot_filters_1D": {"tf": 1}, "NDNT.utils.plotting.plot_filters_2D": {"tf": 1}, "NDNT.utils.plotting.plot_filters_ST1D": {"tf": 1}}, "df": 3}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.NDN.NDN.get_trainer": {"tf": 1.7320508075688772}, "NDNT.training.trainer.Trainer.__init__": {"tf": 1}, "NDNT.utils.NDNutils.create_optimizer_params": {"tf": 1.7320508075688772}}, "df": 3}}}}}}, "r": {"docs": {"NDNT.NDN.NDN.fit": {"tf": 1}, "NDNT.NDN.NDN.fit_dl": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1.7320508075688772}, "NDNT.networks.FFnetwork.__init__": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.save_checkpoint": {"tf": 1}, "NDNT.utils.NDNutils.load_checkpoint": {"tf": 1}, "NDNT.utils.NDNutils.ensure_dir": {"tf": 1}}, "df": 9, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1}, "NDNT.utils.ffnet_dicts.layer_dict": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.utils.NDNutils.fit_lbfgs": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.modules.layers.timelayers.TimeLayer.__init__": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.utils.NDNutils.save_checkpoint": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {"NDNT.networks.FFnetwork.__init__": {"tf": 1}, "NDNT.networks.FFnetwork.ffnet_dict": {"tf": 1}, "NDNT.utils.DanUtils.time_embedding_simple": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_NIM": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_external": {"tf": 1}}, "df": 8}}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.NDN.NDN.get_dataloaders": {"tf": 1}, "NDNT.NDN.NDN.get_optimizer": {"tf": 1}, "NDNT.NDN.NDN.fit": {"tf": 1}, "NDNT.NDN.NDN.fit_dl": {"tf": 1}, "NDNT.NDN.NDN.initialize_loss": {"tf": 1}, "NDNT.NDN.NDN.eval_models": {"tf": 1}, "NDNT.NDN.NDN.generate_predictions": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchGenerator.__init__": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.__init__": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.__init__": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew.__init__": {"tf": 1}, "NDNT.utils.NDNutils.fit_lbfgs": {"tf": 1}, "NDNT.utils.NDNutils.create_optimizer_params": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.ModelSummary": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.summary_string": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.get_max_samples": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"tf": 1}}, "df": 22, "s": {"docs": {"NDNT.modules.experiment_sampler.ExperimentBatchIterator.__init__": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_NIM": {"tf": 1}}, "df": 2}}}, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"NDNT.modules.layers.lvlayers.LVLayerOLD.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_readout": {"tf": 1}}, "df": 6}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.layers.readouts.FixationLayer.__init__": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "v": {"docs": {"NDNT.NDN.NDN.fit": {"tf": 1}, "NDNT.NDN.NDN.eval_models": {"tf": 1}}, "df": 2}}}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.modules.layers.bilayers.ChannelConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.__init__": {"tf": 1}, "NDNT.utils.DanUtils.display_matrix": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1}, "NDNT.utils.NDNutils.tent_basis_generate": {"tf": 1}}, "df": 9}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_localpenalty_matrix": {"tf": 1}}, "df": 5}}}}}}, "h": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.experiment_sampler.ExperimentBatchGenerator.__init__": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchIterator.__init__": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.__init__": {"tf": 1}}, "df": 3}}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.layers.lvlayers.LVLayerOLD.__init__": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1}, "NDNT.utils.NDNutils.initialize_gaussian_envelope": {"tf": 1}}, "df": 3}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer.forward": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.forward": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.forward": {"tf": 1}, "NDNT.utils.DanUtils.monocular_data_import": {"tf": 1}, "NDNT.utils.NDNutils.shift_mat_zpad": {"tf": 1}}, "df": 5}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {"NDNT.utils.DanUtils.load_python_data": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer.layer_dict": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_readout": {"tf": 1}}, "df": 2}}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.utils.plotting.plot_filters_ST2D": {"tf": 1}, "NDNT.utils.plotting.plot_filters_ST3D": {"tf": 1}}, "df": 2}}}, "k": {"docs": {"NDNT.training.lbfgs.LBFGS.step": {"tf": 1}}, "df": 1}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.utils.MattUtils.smooth_conv": {"tf": 1}, "NDNT.utils.MattUtils.plot_losses": {"tf": 1}}, "df": 2}}}}}}}}}, "w": {"docs": {"NDNT.utils.NDNutils.initialize_gaussian_envelope": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.NDN.NDN.__init__": {"tf": 1}, "NDNT.NDN.NDN.save_model_zip": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.NDN.NDN.get_dataloaders": {"tf": 1}, "NDNT.NDN.NDN.fit_dl": {"tf": 1}, "NDNT.NDN.NDN.eval_models": {"tf": 1}, "NDNT.utils.NDNutils.create_optimizer_params": {"tf": 1}}, "df": 4}}}}}, "l": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.training.lbfgs.LBFGS.__init__": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.__init__": {"tf": 1}, "NDNT.utils.NDNutils.fit_lbfgs": {"tf": 1}}, "df": 3}}}}, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.NDN.NDN.get_optimizer": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.__init__": {"tf": 1}, "NDNT.utils.MattUtils.smooth_ema": {"tf": 1}, "NDNT.utils.NDNutils.create_optimizer_params": {"tf": 1}}, "df": 4, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.NDN.NDN.initialize_loss": {"tf": 1.4142135623730951}, "NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"tf": 1.4142135623730951}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"tf": 1.4142135623730951}}, "df": 5}}}, "s": {"docs": {"NDNT.modules.layers.lvlayers.LVLayer.__init__": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.reset_parameters": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.reset_parameters2": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1}, "NDNT.modules.regularization.Regularization.compute_reg_loss": {"tf": 1}, "NDNT.modules.regularization.RegModule.forward": {"tf": 1}, "NDNT.modules.regularization.LocalityReg.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.DiagonalReg.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.InlineReg.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.ConvReg.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.Tikhanov.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.TikhanovC.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.ActivityReg.compute_reg_penalty": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"tf": 1}}, "df": 20}}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"NDNT.modules.layers.bilayers.ChannelConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.orilayers.ConvLayer3D.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1}, "NDNT.utils.DanUtils.subplot_setup": {"tf": 1}, "NDNT.utils.ffnet_dicts.layer_dict": {"tf": 1}}, "df": 12, "s": {"docs": {"NDNT.utils.ffnet_dicts.ffnet_dict_NIM": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"NDNT.modules.layers.bilayers.ChannelConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1}}, "df": 4}}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"NDNT.utils.DanUtils.fold_sample": {"tf": 1}, "NDNT.utils.NDNutils.generate_xv_folds": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {"NDNT.utils.NDNutils.initialize_gaussian_envelope": {"tf": 1}, "NDNT.utils.plotting.plot_filters_1D": {"tf": 1}, "NDNT.utils.plotting.plot_filters_2D": {"tf": 1}, "NDNT.utils.plotting.plot_filters_ST1D": {"tf": 1}, "NDNT.utils.plotting.plot_filters_ST2D": {"tf": 1}, "NDNT.utils.plotting.plot_filters_ST3D": {"tf": 1}, "NDNT.utils.plotting.plot_internal_weights": {"tf": 1}}, "df": 7}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.NDN.NDN.__init__": {"tf": 1}, "NDNT.NDN.NDN.get_trainer": {"tf": 1}, "NDNT.NDN.NDN.fit": {"tf": 1}, "NDNT.NDN.NDN.fit_dl": {"tf": 1}, "NDNT.NDN.NDN.save_model_zip": {"tf": 1}, "NDNT.utils.NDNutils.load_checkpoint": {"tf": 1}, "NDNT.utils.NDNutils.ensure_dir": {"tf": 1}, "NDNT.utils.NDNutils.get_fit_versions": {"tf": 1}}, "df": 8, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.NDN.NDN.save_model_chk": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"NDNT.training.trainer.Trainer.__init__": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.utils.MattUtils.load_losses": {"tf": 1}, "NDNT.utils.MattUtils.plot_losses": {"tf": 1}}, "df": 2}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.NDN.NDN.fit": {"tf": 1}, "NDNT.NDN.NDN.fit_dl": {"tf": 1}, "NDNT.modules.experiment_sampler.construct_exp_to_time": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1}, "NDNT.networks.FFnet_external.__init__": {"tf": 1}}, "df": 6}}, "m": {"docs": {"NDNT.utils.NDNutils.shift_mat_zpad": {"tf": 1}}, "df": 1, "s": {"docs": {"NDNT.modules.layers.bilayers.BinocLayer1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.ChannelConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.ConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.layers.convlayers.TconvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.dim_info": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.__init__": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.laglayers.LagLayer.__init__": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.dim_info": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.orilayers.OriLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.orilayers.OriLayer.rotation_matrix_tensor": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.orilayers.OriConvLayer.rotation_matrix_tensor": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.ReadoutLayer3d.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1}, "NDNT.modules.regularization.RegModule.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.LocalityReg.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.DiagonalReg.__init__": {"tf": 1}, "NDNT.modules.regularization.InlineReg.__init__": {"tf": 1}, "NDNT.modules.regularization.ConvReg.__init__": {"tf": 1}, "NDNT.modules.regularization.Tikhanov.__init__": {"tf": 1}, "NDNT.modules.regularization.TikhanovC.__init__": {"tf": 1}, "NDNT.modules.regularization.ActivityReg.__init__": {"tf": 1.4142135623730951}, "NDNT.networks.FFnetwork.__init__": {"tf": 1}, "NDNT.networks.FFnetwork.determine_input_dims": {"tf": 1}, "NDNT.networks.ReadoutNetwork.determine_input_dims": {"tf": 1}, "NDNT.networks.FFnet_external.__init__": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_maxpenalty_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_localpenalty_matrix": {"tf": 1}, "NDNT.utils.ffnet_dicts.layer_dict": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_NIM": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_external": {"tf": 1.7320508075688772}}, "df": 56}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1}, "NDNT.utils.ffnet_dicts.layer_dict": {"tf": 1}}, "df": 2}}}}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.utils.DanUtils.filename_num2str": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.NDN.NDN.get_trainer": {"tf": 1}, "NDNT.NDN.NDN.fit": {"tf": 1}, "NDNT.NDN.NDN.fit_dl": {"tf": 1}, "NDNT.NDN.NDN.eval_models": {"tf": 1}, "NDNT.NDN.NDN.generate_predictions": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.get_rot_mat": {"tf": 1}, "NDNT.modules.regularization.Regularization.build_reg_modules": {"tf": 1}, "NDNT.networks.FFnetwork.prepare_regularization": {"tf": 1}, "NDNT.training.trainer.Trainer.__init__": {"tf": 1}, "NDNT.utils.NDNutils.create_optimizer_params": {"tf": 1}, "NDNT.utils.NDNutils.ModelSummary": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.summary_string": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.get_max_samples": {"tf": 1}}, "df": 13}}}}, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"NDNT.NDN.NDN.get_trainer": {"tf": 1}, "NDNT.training.earlystopping.EarlyStopping.__init__": {"tf": 1}, "NDNT.utils.NDNutils.create_optimizer_params": {"tf": 1}}, "df": 3}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.NDN.NDN.get_optimizer": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.__init__": {"tf": 1}, "NDNT.utils.NDNutils.create_optimizer_params": {"tf": 1}}, "df": 3}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.training.lbfgs.LBFGS.__init__": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.__init__": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.utils.DanUtils.iterate_lbfgs": {"tf": 1}}, "df": 1, "a": {"docs": {"NDNT.NDN.NDN.get_dataloaders": {"tf": 1}, "NDNT.NDN.NDN.initialize_loss": {"tf": 1}, "NDNT.NDN.NDN.compute_average_responses": {"tf": 1}, "NDNT.NDN.NDN.initialize_biases": {"tf": 1}, "NDNT.NDN.NDN.eval_models": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.generate_predictions": {"tf": 1.4142135623730951}, "NDNT.modules.experiment_sampler.ExperimentSampler.__init__": {"tf": 1}, "NDNT.training.trainer.Trainer.train_one_step": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.fit_data_dict": {"tf": 1}, "NDNT.utils.DanUtils.save_python_data": {"tf": 1}, "NDNT.utils.NDNutils.fit_lbfgs": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.get_fit_versions": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.forward": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.forward": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.forward": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.unit_loss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.forward": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.unit_loss": {"tf": 1}}, "df": 20, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.NDN.NDN.get_dataloaders": {"tf": 1}, "NDNT.NDN.NDN.fit": {"tf": 1}, "NDNT.NDN.NDN.initialize_loss": {"tf": 1}, "NDNT.NDN.NDN.compute_average_responses": {"tf": 1}, "NDNT.NDN.NDN.initialize_biases": {"tf": 1}, "NDNT.NDN.NDN.change_loss": {"tf": 1}, "NDNT.modules.experiment_sampler.construct_exp_to_time": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.__init__": {"tf": 1.7320508075688772}, "NDNT.utils.NDNutils.get_max_samples": {"tf": 1}}, "df": 9}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.utils.DanUtils.binocular_data_import": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}, "NDNT.utils.DanUtils.monocular_data_import": {"tf": 1}}, "df": 3}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.training.lbfgs.LBFGS.curvature_update": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {"NDNT.NDN.NDN.fit_dl": {"tf": 1.4142135623730951}}, "df": 1}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.layers.orilayers.OriConvLayer.rotate_tensor": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.__init__": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.__init__": {"tf": 1}}, "df": 3, "s": {"docs": {"NDNT.utils.NDNutils.ModelSummary": {"tf": 1}, "NDNT.utils.NDNutils.summary_string": {"tf": 1}}, "df": 2}}}}}, "p": {"docs": {}, "df": 0, "i": {"docs": {"NDNT.utils.DanUtils.figure_export": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.utils.NDNutils.tent_basis_generate": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.NDN.NDN.load_model_chk": {"tf": 1}, "NDNT.utils.NDNutils.load_model": {"tf": 1}}, "df": 2, "s": {"docs": {"NDNT.NDN.NDN.__init__": {"tf": 1}, "NDNT.NDN.NDN.get_trainer": {"tf": 1}, "NDNT.NDN.NDN.save_model_zip": {"tf": 1}, "NDNT.training.trainer.Trainer.__init__": {"tf": 1}}, "df": 4}}}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.NDN.NDN.get_optimizer": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew.__init__": {"tf": 1}, "NDNT.utils.NDNutils.fit_lbfgs": {"tf": 1}, "NDNT.utils.NDNutils.create_optimizer_params": {"tf": 1}}, "df": 4}}}}}, "l": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.NDN.NDN.load_model_zip": {"tf": 1}, "NDNT.NDN.NDN.load_model": {"tf": 1}, "NDNT.NDN.NDN.load_model_chk": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.layer_dict": {"tf": 1}, "NDNT.networks.FFnetwork.ffnet_dict": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.ffnet_dict": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d.ffnet_dict": {"tf": 1}, "NDNT.networks.ReadoutNetwork.ffnet_dict": {"tf": 1}, "NDNT.networks.FFnet_external.ffnet_dict": {"tf": 1}}, "df": 36}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.training.ada_hessian.AdaHessian.step": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew.step": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.utils.DanUtils.find_peaks": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {"NDNT.utils.plotting.plot_scatter": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {"NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.layer_dict": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.__init__": {"tf": 1}, "NDNT.utils.ffnet_dicts.layer_dict": {"tf": 1.4142135623730951}, "NDNT.utils.ffnet_dicts.ffnet_dict_NIM": {"tf": 1}}, "df": 5}, "s": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.utils.DanUtils.design_matrix_drift": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.__init__": {"tf": 1}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1}, "NDNT.modules.regularization.RegModule.__init__": {"tf": 1}, "NDNT.utils.ffnet_dicts.layer_dict": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_readout": {"tf": 1}}, "df": 9}}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1}}, "df": 6}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}}, "df": 1}}}}}}}}, "l": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.layers.convlayers.TconvLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.plot_filters": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.plot_filters": {"tf": 1}, "NDNT.utils.DanUtils.subplot_setup": {"tf": 1}, "NDNT.utils.DanUtils.ss": {"tf": 1}, "NDNT.utils.DanUtils.display_matrix": {"tf": 1}, "NDNT.utils.plotting.plot_filters_1D": {"tf": 1}, "NDNT.utils.plotting.plot_filters_2D": {"tf": 1}, "NDNT.utils.plotting.plot_filters_ST1D": {"tf": 1}}, "df": 11}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"NDNT.utils.DanUtils.imagesc": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_readout": {"tf": 1}}, "df": 2}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"NDNT.utils.DanUtils.imagesc": {"tf": 1}, "NDNT.utils.plotting.plot_filters_2D": {"tf": 1}, "NDNT.utils.plotting.plot_filters_ST1D": {"tf": 1}}, "df": 3, "s": {"docs": {"NDNT.modules.layers.convlayers.TconvLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.plot_filters": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.plot_filters": {"tf": 1}}, "df": 5}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1}}, "df": 3}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}}, "df": 1, "s": {"docs": {"NDNT.utils.NDNutils.get_max_samples": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_readout": {"tf": 1}}, "df": 2}}}}, "k": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.utils.NDNutils.load_checkpoint": {"tf": 1}}, "df": 1, "s": {"docs": {"NDNT.utils.MattUtils.load_losses": {"tf": 1}, "NDNT.utils.MattUtils.plot_losses": {"tf": 1}}, "df": 2}}}}, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {"NDNT.utils.NDNutils.ModelSummary": {"tf": 1}, "NDNT.utils.NDNutils.summary_string": {"tf": 1}}, "df": 2}}}}, "x": {"docs": {"NDNT.modules.activations.adaptive_elu": {"tf": 1}, "NDNT.modules.activations.Square.forward": {"tf": 1}, "NDNT.modules.activations.AdaptiveELU.forward": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D.forward": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.forward": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.forward": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.forward": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.forward": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.forward": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.forward": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.forward": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.forward": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.forward": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.forward": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.forward": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.forward": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.forward": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.forward": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.forward": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.forward": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.rotate_tensor": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.forward": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.forward": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.forward": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.forward": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.forward": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.forward": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.forward": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.forward": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.forward": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.forward": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.forward": {"tf": 1}, "NDNT.training.lbfgs.polyinterp": {"tf": 1.4142135623730951}, "NDNT.utils.DanUtils.find_peaks": {"tf": 1}, "NDNT.utils.DanUtils.display_matrix": {"tf": 1}, "NDNT.utils.NDNutils.shift_mat_zpad": {"tf": 1}, "NDNT.utils.NDNutils.grid2pixel": {"tf": 1}}, "df": 37, "s": {"docs": {"NDNT.NDN.NDN.compute_network_outputs": {"tf": 1}, "NDNT.NDN.NDN.forward": {"tf": 1}, "NDNT.utils.NDNutils.tent_basis_generate": {"tf": 1}, "NDNT.utils.plotting.plot_scatter": {"tf": 1}}, "df": 4, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.modules.activations.adaptive_elu": {"tf": 1}, "NDNT.modules.activations.AdaptiveELU.__init__": {"tf": 1}}, "df": 2}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {"NDNT.networks.FFnetwork.__init__": {"tf": 1}, "NDNT.networks.FFnetwork.ffnet_dict": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_NIM": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_external": {"tf": 1}}, "df": 5}}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1}}, "df": 3}}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"NDNT.NDN.NDN.training_step": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.validation_step": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.get_dataloaders": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.fit": {"tf": 1}, "NDNT.NDN.NDN.fit_dl": {"tf": 1}, "NDNT.NDN.NDN.initialize_loss": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.eval_models": {"tf": 1}, "NDNT.NDN.NDN.generate_predictions": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchGenerator.__init__": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchIterator.__init__": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.__init__": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew.__init__": {"tf": 1}, "NDNT.training.trainer.Trainer.__init__": {"tf": 1}, "NDNT.training.trainer.Trainer.train_one_step": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.__init__": {"tf": 1}, "NDNT.utils.NDNutils.create_optimizer_params": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.ModelSummary": {"tf": 1}, "NDNT.utils.NDNutils.summary_string": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_readout": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"tf": 1.4142135623730951}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"tf": 1.4142135623730951}}, "df": 26, "e": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.training.trainer.Trainer.__init__": {"tf": 1}, "NDNT.utils.NDNutils.create_optimizer_params": {"tf": 1}}, "df": 2}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.layers.timelayers.TimeLayer.__init__": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.utils.DanUtils.imagesc": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {"NDNT.utils.NDNutils.create_optimizer_params": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.NDN.NDN.get_optimizer": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.__init__": {"tf": 1}, "NDNT.utils.NDNutils.create_optimizer_params": {"tf": 1}}, "df": 3}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.training.trainer.Trainer.checkpoint_model": {"tf": 1}, "NDNT.utils.NDNutils.save_checkpoint": {"tf": 1}, "NDNT.utils.NDNutils.load_checkpoint": {"tf": 1}}, "df": 3}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"NDNT.NDN.NDN.fit": {"tf": 1}, "NDNT.NDN.NDN.generate_predictions": {"tf": 1}}, "df": 2, "s": {"docs": {"NDNT.utils.NDNutils.generate_xv_folds": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.NDN.NDN.eval_models": {"tf": 1}, "NDNT.NDN.NDN.get_null_adjusted_ll": {"tf": 1}}, "df": 2}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"NDNT.utils.DanUtils.figure_export": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.reset_parameters": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.normlayers.DivNormLayer.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.reset_parameters2": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.utils.ffnet_dicts.ffnet_dict_readout": {"tf": 1}}, "df": 8}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.modules.experiment_sampler.ExperimentBatchGenerator.__init__": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchIterator.__init__": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1}, "NDNT.utils.NDNutils.save_checkpoint": {"tf": 1}}, "df": 6}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.training.lbfgs.polyinterp": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"NDNT.utils.NDNutils.grid2pixel": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {"NDNT.modules.layers.convlayers.ConvLayer.batchnorm_clone": {"tf": 1}}, "df": 1}, "c": {"docs": {"NDNT.modules.regularization.ConvReg.__init__": {"tf": 1}, "NDNT.modules.regularization.Tikhanov.__init__": {"tf": 1}, "NDNT.modules.regularization.TikhanovC.__init__": {"tf": 1}}, "df": 3}, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.training.earlystopping.EarlyStopping.__init__": {"tf": 1}}, "df": 1}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.utils.NDNutils.get_max_samples": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "x": {"docs": {"NDNT.NDN.NDN.training_step": {"tf": 1}, "NDNT.NDN.NDN.validation_step": {"tf": 1}, "NDNT.training.trainer.Trainer.train_one_step": {"tf": 1}}, "df": 3}}, "n": {"docs": {"NDNT.training.earlystopping.EarlyStopping.__init__": {"tf": 1}}, "df": 1, "d": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.NDN.NDN.get_dataloaders": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.fit": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.initialize_loss": {"tf": 1}, "NDNT.NDN.NDN.compute_average_responses": {"tf": 1}, "NDNT.NDN.NDN.initialize_biases": {"tf": 1}, "NDNT.NDN.NDN.eval_models": {"tf": 1}, "NDNT.NDN.NDN.generate_predictions": {"tf": 1.4142135623730951}, "NDNT.utils.DanUtils.iterate_lbfgs": {"tf": 1.4142135623730951}}, "df": 8}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.experiment_sampler.construct_exp_to_time": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.__init__": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {"NDNT.modules.layers.readouts.FixationLayer.__init__": {"tf": 1}, "NDNT.utils.NDNutils.ModelSummary": {"tf": 1}, "NDNT.utils.NDNutils.summary_string": {"tf": 1}}, "df": 3}}}, "t": {"docs": {"NDNT.NDN.NDN.fit": {"tf": 1}, "NDNT.NDN.NDN.fit_dl": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchGenerator.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.experiment_sampler.ExperimentBatchIterator.__init__": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.orilayers.ConvLayer3D.__init__": {"tf": 2}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.grid2pixel": {"tf": 1}, "NDNT.utils.NDNutils.save_checkpoint": {"tf": 1}}, "df": 10}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.activations.adaptive_elu": {"tf": 1}, "NDNT.modules.activations.AdaptiveELU.__init__": {"tf": 1}}, "df": 2}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.modules.layers.bilayers.BinocLayer1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.dim_info": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.__init__": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.__init__": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.__init__": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.dim_info": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.__init__": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.__init__": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.__init__": {"tf": 1}, "NDNT.modules.regularization.RegModule.__init__": {"tf": 1}, "NDNT.modules.regularization.LocalityReg.__init__": {"tf": 1}, "NDNT.modules.regularization.DiagonalReg.__init__": {"tf": 1}, "NDNT.modules.regularization.InlineReg.__init__": {"tf": 1}, "NDNT.modules.regularization.ConvReg.__init__": {"tf": 1}, "NDNT.modules.regularization.Tikhanov.__init__": {"tf": 1}, "NDNT.modules.regularization.TikhanovC.__init__": {"tf": 1}, "NDNT.modules.regularization.ActivityReg.__init__": {"tf": 1}, "NDNT.networks.FFnetwork.__init__": {"tf": 1}, "NDNT.networks.FFnetwork.determine_input_dims": {"tf": 1}, "NDNT.networks.ReadoutNetwork.determine_input_dims": {"tf": 1}, "NDNT.networks.FFnet_external.__init__": {"tf": 1}, "NDNT.utils.NDNutils.ModelSummary": {"tf": 1}, "NDNT.utils.NDNutils.summary_string": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_maxpenalty_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_localpenalty_matrix": {"tf": 1}, "NDNT.utils.ffnet_dicts.layer_dict": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_NIM": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_external": {"tf": 1.4142135623730951}}, "df": 51, "s": {"docs": {"NDNT.networks.FFnetwork.preprocess_input": {"tf": 1}, "NDNT.networks.FFnetwork.forward": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.forward": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d.forward": {"tf": 1}, "NDNT.networks.ReadoutNetwork.forward": {"tf": 1}, "NDNT.networks.FFnet_external.forward": {"tf": 1}}, "df": 6}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.modules.layers.lvlayers.LVLayerOLD.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.FixationLayer.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 1}, "NDNT.utils.NDNutils.tent_basis_generate": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_readout": {"tf": 1.4142135623730951}}, "df": 7, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1}}, "df": 3, "r": {"docs": {"NDNT.modules.layers.lvlayers.LVLayer.__init__": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.reset_parameters": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.L1convLayer.reset_parameters2": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1.4142135623730951}}, "df": 7}}}}}}}}}, "h": {"docs": {"NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.get_weights": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.get_weights": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1}, "NDNT.utils.ffnet_dicts.layer_dict": {"tf": 1}, "NDNT.utils.plotting.plot_internal_weights": {"tf": 1}}, "df": 7}}, "s": {"docs": {"NDNT.NDN.NDN.get_dataloaders": {"tf": 1}, "NDNT.training.trainer.Trainer.checkpoint_model": {"tf": 1}, "NDNT.utils.NDNutils.save_checkpoint": {"tf": 1}}, "df": 3}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.NDN.NDN.get_optimizer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew.__init__": {"tf": 1}, "NDNT.utils.DanUtils.iterate_lbfgs": {"tf": 1}, "NDNT.utils.NDNutils.fit_lbfgs": {"tf": 1}, "NDNT.utils.NDNutils.create_optimizer_params": {"tf": 1}}, "df": 11}, "m": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.utils.DanUtils.fold_sample": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.utils.DanUtils.imagesc": {"tf": 1}}, "df": 1}}}, "v": {"docs": {"NDNT.training.lbfgs.is_legal": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.NDN.NDN.get_trainer": {"tf": 1}, "NDNT.NDN.NDN.fit": {"tf": 1}, "NDNT.NDN.NDN.fit_dl": {"tf": 1}, "NDNT.NDN.NDN.load_model_chk": {"tf": 1}, "NDNT.training.trainer.Trainer.__init__": {"tf": 1}, "NDNT.utils.NDNutils.load_model": {"tf": 1}}, "df": 6}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.experiment_sampler.ExperimentSampler.__init__": {"tf": 1}, "NDNT.training.earlystopping.EarlyStopping.__init__": {"tf": 1}, "NDNT.training.trainer.Trainer.__init__": {"tf": 1}, "NDNT.utils.DanUtils.iterate_lbfgs": {"tf": 1}, "NDNT.utils.NDNutils.fit_lbfgs": {"tf": 1}, "NDNT.utils.NDNutils.load_model": {"tf": 1}}, "df": 6}}}}}, "c": {"docs": {"NDNT.training.lbfgs.LBFGS.two_loop_recursion": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.NDN.NDN.get_dataloaders": {"tf": 1}, "NDNT.NDN.NDN.fit": {"tf": 1}, "NDNT.NDN.NDN.fit_dl": {"tf": 1}, "NDNT.NDN.NDN.eval_models": {"tf": 1}, "NDNT.NDN.NDN.set_parameters": {"tf": 1}, "NDNT.NDN.NDN.set_reg_val": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.set_parameters": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.set_reg_val": {"tf": 1}, "NDNT.modules.regularization.Regularization.set_reg_val": {"tf": 1}, "NDNT.modules.regularization.RegModule.__init__": {"tf": 1}, "NDNT.modules.regularization.LocalityReg.__init__": {"tf": 1}, "NDNT.modules.regularization.DiagonalReg.__init__": {"tf": 1}, "NDNT.modules.regularization.InlineReg.__init__": {"tf": 1}, "NDNT.modules.regularization.ConvReg.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.Tikhanov.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.TikhanovC.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.ActivityReg.__init__": {"tf": 1}, "NDNT.networks.FFnetwork.set_parameters": {"tf": 1}, "NDNT.networks.FFnetwork.set_reg_val": {"tf": 1}, "NDNT.networks.FFnet_external.set_params": {"tf": 1}, "NDNT.training.trainer.Trainer.fit": {"tf": 1}, "NDNT.training.trainer.Trainer.fit_loop": {"tf": 1}, "NDNT.training.trainer.Trainer.validate_one_epoch": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.fit": {"tf": 1}, "NDNT.training.trainer.TemperatureCalibratedTrainer.validate_one_epoch": {"tf": 1}, "NDNT.utils.DanUtils.iterate_lbfgs": {"tf": 1}, "NDNT.utils.NDNutils.fit_lbfgs": {"tf": 1}, "NDNT.utils.NDNutils.is_int": {"tf": 1}, "NDNT.utils.ffnet_dicts.list_complete": {"tf": 1}}, "df": 29, "s": {"docs": {"NDNT.modules.activity_regularization.ActivityRegularization.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1}}, "df": 5}, "i": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.modules.layers.orilayers.OriConvLayer.__init__": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.utils.DanUtils.matlab_export": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.layers.convlayers.TconvLayer.plot_filters": {"tf": 1}, "NDNT.utils.plotting.plot_filters_2D": {"tf": 1}, "NDNT.utils.plotting.plot_filters_ST1D": {"tf": 1}}, "df": 3}}}}}}}, "j": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.NDN.NDN.get_trainer": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "w": {"docs": {"NDNT.NDN.NDN.get_trainer": {"tf": 1}, "NDNT.NDN.NDN.get_optimizer": {"tf": 1}, "NDNT.utils.NDNutils.create_optimizer_params": {"tf": 1}}, "df": 3}}}, "j": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.NDN.NDN.eval_models": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.NDN.NDN.get_optimizer": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.NDN.NDN.save_model_chk": {"tf": 1}}, "df": 1}, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {"NDNT.modules.activity_regularization.ActivityRegularization.activity": {"tf": 1}, "NDNT.modules.activity_regularization.ActivityRegularization.nonneg": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_readout": {"tf": 1}}, "df": 2}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.layers.orilayers.OriLayer.__init__": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.layer_dict": {"tf": 1}}, "df": 4}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.utils.DanUtils.design_matrix_drift": {"tf": 1}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 1}}, "df": 2}}}}}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.layers.readouts.FixationLayer.initialize": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.utils.ffnet_dicts.ffnet_dict_NIM": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_readout": {"tf": 1}}, "df": 2, "s": {"docs": {"NDNT.modules.regularization.ActivityReg.compute_activity_penalty": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.training.trainer.Trainer.__init__": {"tf": 1}, "NDNT.utils.NDNutils.create_optimizer_params": {"tf": 1}}, "df": 2}}}}}}}}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.training.trainer.Trainer.__init__": {"tf": 1}}, "df": 1, "d": {"docs": {"NDNT.utils.NDNutils.create_optimizer_params": {"tf": 1}}, "df": 1}}}}}}}}}}, "v": {"docs": {"NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"tf": 1}}, "df": 4, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.training.ada_hessian.AdaHessian.__init__": {"tf": 1}}, "df": 1}}}}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.training.trainer.Trainer.__init__": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.utils.DanUtils.imagesc": {"tf": 1}}, "df": 1}}}}}, "x": {"docs": {"NDNT.utils.DanUtils.imagesc": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.utils.DanUtils.imagesc": {"tf": 1}}, "df": 1}}}}, "g": {"docs": {"NDNT.training.lbfgs.LBFGS.step": {"tf": 1.4142135623730951}, "NDNT.utils.plotting.plot_scatter": {"tf": 1}}, "df": 2, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {"NDNT.NDN.NDN.get_trainer": {"tf": 1}, "NDNT.training.trainer.Trainer.__init__": {"tf": 1}, "NDNT.utils.NDNutils.create_optimizer_params": {"tf": 1}}, "df": 3}}, "d": {"docs": {"NDNT.NDN.NDN.get_optimizer": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.curvature_update": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew.__init__": {"tf": 1}, "NDNT.training.trainer.Trainer.__init__": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.fit_lbfgs": {"tf": 1}, "NDNT.utils.NDNutils.create_optimizer_params": {"tf": 1.4142135623730951}}, "df": 6}, "y": {"docs": {"NDNT.modules.layers.convlayers.STconvLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.plot_filters": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.plot_filters": {"tf": 1}}, "df": 4}}}, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_readout": {"tf": 1}}, "df": 2}}}}, "t": {"docs": {"NDNT.training.earlystopping.EarlyStopping.__init__": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.utils.DanUtils.fold_sample": {"tf": 1}}, "df": 1}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.utils.NDNutils.create_optimizer_params": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.utils.create_reg_matrices.create_localpenalty_matrix": {"tf": 1}}, "df": 1}}}}}}, "k": {"docs": {"NDNT.training.lbfgs.LBFGS.step": {"tf": 1}, "NDNT.utils.DanUtils.max_multiD": {"tf": 1}}, "df": 2, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.NDN.NDN.get_trainer": {"tf": 1}, "NDNT.NDN.NDN.get_dataloaders": {"tf": 1}, "NDNT.NDN.NDN.get_optimizer": {"tf": 1}, "NDNT.NDN.NDN.fit": {"tf": 1}, "NDNT.NDN.NDN.fit_dl": {"tf": 1}, "NDNT.NDN.NDN.eval_models": {"tf": 1}, "NDNT.NDN.NDN.get_weights": {"tf": 1}, "NDNT.NDN.NDN.plot_filters": {"tf": 1}, "NDNT.modules.activations.AdaptiveELU.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.dim_info": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.__init__": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.__init__": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.__init__": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.__init__": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.dim_info": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.__init__": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.__init__": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.__init__": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.initialize": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.__init__": {"tf": 1}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1}, "NDNT.modules.regularization.RegModule.__init__": {"tf": 1}, "NDNT.modules.regularization.LocalityReg.__init__": {"tf": 1}, "NDNT.modules.regularization.DiagonalReg.__init__": {"tf": 1}, "NDNT.modules.regularization.InlineReg.__init__": {"tf": 1}, "NDNT.modules.regularization.ConvReg.__init__": {"tf": 1}, "NDNT.modules.regularization.Tikhanov.__init__": {"tf": 1}, "NDNT.modules.regularization.TikhanovC.__init__": {"tf": 1}, "NDNT.modules.regularization.ActivityReg.__init__": {"tf": 1}, "NDNT.networks.FFnetwork.__init__": {"tf": 1}, "NDNT.networks.FFnetwork.plot_filters": {"tf": 1}, "NDNT.networks.FFnetwork.get_weights": {"tf": 1}, "NDNT.networks.FFnetwork.ffnet_dict": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.__init__": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.ffnet_dict": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d.__init__": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d.ffnet_dict": {"tf": 1}, "NDNT.networks.ReadoutNetwork.__init__": {"tf": 1}, "NDNT.networks.ReadoutNetwork.determine_input_dims": {"tf": 1}, "NDNT.networks.ReadoutNetwork.ffnet_dict": {"tf": 1}, "NDNT.networks.FFnet_external.__init__": {"tf": 1}, "NDNT.networks.FFnet_external.ffnet_dict": {"tf": 1}, "NDNT.training.trainer.Trainer.__init__": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.__init__": {"tf": 1}, "NDNT.training.trainer.TemperatureCalibratedTrainer.__init__": {"tf": 1}, "NDNT.utils.plotting.plot_filters_1D": {"tf": 1}, "NDNT.utils.plotting.plot_filters_2D": {"tf": 1}, "NDNT.utils.plotting.plot_filters_ST1D": {"tf": 1}, "NDNT.utils.plotting.plot_filters_ST2D": {"tf": 1}, "NDNT.utils.plotting.plot_filters_ST3D": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.__init__": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.__init__": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.__init__": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.__init__": {"tf": 1}}, "df": 107}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.training.ada_hessian.AdaHessian.__init__": {"tf": 1}}, "df": 1}}}}, "y": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.utils.DanUtils.load_python_data": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"NDNT.utils.NDNutils.save_checkpoint": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.NDN.NDN.get_optimizer": {"tf": 1}, "NDNT.utils.NDNutils.create_optimizer_params": {"tf": 1}}, "df": 2}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"NDNT.modules.experiment_sampler.ExperimentBatchGenerator.__init__": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchIterator.__init__": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler.__init__": {"tf": 1}, "NDNT.utils.DanUtils.fold_sample": {"tf": 1}}, "df": 4}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.layers.lvlayers.LVLayerOLD.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_readout": {"tf": 1}}, "df": 3}}}}, "e": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.NDN.NDN.fit": {"tf": 1}}, "df": 1}}}, "g": {"docs": {"NDNT.NDN.NDN.set_reg_val": {"tf": 1.4142135623730951}, "NDNT.modules.activity_regularization.ActivityRegularization.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.set_reg_val": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1}, "NDNT.modules.regularization.Regularization.set_reg_val": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.Regularization.unit_reg_convert": {"tf": 1}, "NDNT.modules.regularization.Regularization.get_reg_class": {"tf": 1}, "NDNT.modules.regularization.RegModule.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.regularization.LocalityReg.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.DiagonalReg.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.DiagonalReg.build_reg_mats": {"tf": 1}, "NDNT.modules.regularization.InlineReg.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.ConvReg.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.Tikhanov.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.TikhanovC.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.ActivityReg.__init__": {"tf": 1.4142135623730951}, "NDNT.networks.FFnetwork.__init__": {"tf": 1}, "NDNT.networks.FFnetwork.set_reg_val": {"tf": 1.4142135623730951}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_maxpenalty_matrix": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_NIM": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_readout": {"tf": 1}}, "df": 24}, "l": {"docs": {}, "df": 0, "u": {"docs": {"NDNT.modules.layers.bilayers.BiSTconv1D.__init__": {"tf": 1}, "NDNT.utils.ffnet_dicts.layer_dict": {"tf": 1}}, "df": 2}}, "s": {"docs": {"NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.__init__": {"tf": 1}}, "df": 12, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.layers.ndnlayer.NDNLayer.get_weights": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.get_weights": {"tf": 1}, "NDNT.networks.FFnet_external.__init__": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_external": {"tf": 1}}, "df": 4}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.layers.convlayers.TconvLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.get_weights": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.plot_filters": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.get_weights": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.plot_filters": {"tf": 1}}, "df": 11}}}}}, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"NDNT.utils.NDNutils.create_optimizer_params": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {"NDNT.modules.layers.convlayers.TconvLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.plot_filters": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.plot_filters": {"tf": 1}, "NDNT.utils.DanUtils.subplot_setup": {"tf": 1}, "NDNT.utils.DanUtils.ss": {"tf": 1}, "NDNT.utils.plotting.plot_filters_1D": {"tf": 1}, "NDNT.utils.plotting.plot_filters_2D": {"tf": 1}, "NDNT.utils.plotting.plot_filters_ST1D": {"tf": 1}}, "df": 10, "s": {"docs": {"NDNT.utils.DanUtils.subplot_setup": {"tf": 1}, "NDNT.utils.DanUtils.ss": {"tf": 1}, "NDNT.utils.DanUtils.display_matrix": {"tf": 1}}, "df": 3}}}, "h": {"docs": {"NDNT.utils.DanUtils.ss": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.utils.DanUtils.design_matrix_drift": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 1}}, "df": 2}}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.NDN.NDN.get_optimizer": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.__init__": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.__init__": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew.__init__": {"tf": 1}, "NDNT.utils.NDNutils.fit_lbfgs": {"tf": 1}, "NDNT.utils.NDNutils.create_optimizer_params": {"tf": 1}, "NDNT.utils.NDNutils.get_max_samples": {"tf": 1}}, "df": 7}}}}}}, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.modules.layers.convlayers.TconvLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.plot_filters": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.plot_filters": {"tf": 1}, "NDNT.utils.DanUtils.subplot_setup": {"tf": 1}, "NDNT.utils.DanUtils.ss": {"tf": 1}, "NDNT.utils.plotting.plot_filters_1D": {"tf": 1}, "NDNT.utils.plotting.plot_filters_2D": {"tf": 1}, "NDNT.utils.plotting.plot_filters_ST1D": {"tf": 1}}, "df": 10}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.training.ada_hessian.AdaHessian.__init__": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.utils.DanUtils.figure_export": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.NDN.NDN.initialize_loss": {"tf": 1}, "NDNT.modules.regularization.Regularization.unit_reg_convert": {"tf": 1}, "NDNT.modules.regularization.RegModule.__init__": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"tf": 1.4142135623730951}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"tf": 1.4142135623730951}}, "df": 7}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1}}, "df": 3}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_readout": {"tf": 1}}, "df": 2}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.experiment_sampler.ExperimentSampler.__init__": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {"NDNT.utils.NDNutils.create_time_embedding": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1}}, "df": 2, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.training.ada_hessian.AdaHessian.__init__": {"tf": 1}}, "df": 1}}}}}}, "y": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.utils.plotting.plot_scatter": {"tf": 1}}, "df": 1, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.modules.activations.adaptive_elu": {"tf": 1}, "NDNT.modules.activations.AdaptiveELU.__init__": {"tf": 1}}, "df": 2}}}}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {"NDNT.utils.DanUtils.design_matrix_drift": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 1.4142135623730951}}, "df": 2, "s": {"docs": {"NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1}}, "df": 3}}}}}}}, "bases": {"root": {"docs": {"NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"NDNT.NDN.NDN": {"tf": 1}, "NDNT.modules.activations.Square": {"tf": 1}, "NDNT.modules.activations.AdaptiveELU": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1}, "NDNT.modules.regularization.Regularization": {"tf": 1}, "NDNT.modules.regularization.RegModule": {"tf": 1}, "NDNT.networks.FFnetwork": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian": {"tf": 1}, "NDNT.training.lbfgs.LBFGS": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 1}}, "df": 15}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.modules.experiment_sampler.ExperimentBatchIterator": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler": {"tf": 1}}, "df": 2}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.layers.convlayers.STconvLayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer": {"tf": 1}}, "df": 2}}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.layers.specialtylayers.OnOffLayer": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.training.trainer.LBFGSTrainer": {"tf": 1}, "NDNT.training.trainer.TemperatureCalibratedTrainer": {"tf": 1}}, "df": 2}}}}}}}, "n": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.NDN.NDN": {"tf": 1}, "NDNT.modules.activations.Square": {"tf": 1}, "NDNT.modules.activations.AdaptiveELU": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1}, "NDNT.modules.regularization.Regularization": {"tf": 1}, "NDNT.modules.regularization.RegModule": {"tf": 1}, "NDNT.networks.FFnetwork": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 1}}, "df": 12}, "d": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.modules.layers.bilayers.BinocLayer1D": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer": {"tf": 1}}, "df": 25}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.layers.bilayers.BiSTconv1D": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.ConvLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.Dim0Layer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.ChannelLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.DimSPLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.DimSPTLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.laglayers.LagLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.lvlayers.LVLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.lvlayers.LVLayerOLD": {"tf": 1.4142135623730951}, "NDNT.modules.layers.normlayers.DivNormLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.orilayers.OriLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.ReadoutLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.FixationLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.Tlayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.L1convLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.MaskLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.timelayers.TimeLayer": {"tf": 1.4142135623730951}}, "df": 17}}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.NDN.NDN": {"tf": 1.4142135623730951}, "NDNT.modules.activations.Square": {"tf": 1.4142135623730951}, "NDNT.modules.activations.AdaptiveELU": {"tf": 1.4142135623730951}, "NDNT.modules.layers.externallayer.ExternalLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.Regularization": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.RegModule": {"tf": 1.4142135623730951}, "NDNT.networks.FFnetwork": {"tf": 1.4142135623730951}, "NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1.4142135623730951}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 1.4142135623730951}}, "df": 12, "s": {"docs": {"NDNT.NDN.NDN": {"tf": 1}, "NDNT.modules.activations.Square": {"tf": 1}, "NDNT.modules.activations.AdaptiveELU": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer": {"tf": 1}, "NDNT.modules.regularization.Regularization": {"tf": 1}, "NDNT.modules.regularization.RegModule": {"tf": 1}, "NDNT.networks.FFnetwork": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 1}}, "df": 37}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.experiment_sampler.ExperimentBatchIterator": {"tf": 1}}, "df": 1}}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "+": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.modules.experiment_sampler.ExperimentSampler": {"tf": 1}}, "df": 1}}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {"NDNT.modules.experiment_sampler.ExperimentSampler": {"tf": 1}}, "df": 1, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.layers.bilayers.BinocLayer1D": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer": {"tf": 1}}, "df": 7, "s": {"docs": {"NDNT.modules.layers.bilayers.BinocLayer1D": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer": {"tf": 1}}, "df": 8}}}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.layers.bilayers.BinocLayer1D": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer": {"tf": 1}}, "df": 25}}}}}, "b": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer3d": {"tf": 1}}, "df": 1}}}}}}}}}}, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.regularization.LocalityReg": {"tf": 1}, "NDNT.modules.regularization.DiagonalReg": {"tf": 1}, "NDNT.modules.regularization.InlineReg": {"tf": 1}, "NDNT.modules.regularization.ConvReg": {"tf": 1}, "NDNT.modules.regularization.Tikhanov": {"tf": 1}, "NDNT.modules.regularization.TikhanovC": {"tf": 1}, "NDNT.modules.regularization.ActivityReg": {"tf": 1}}, "df": 7}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.layers.reslayers.IterSTlayer": {"tf": 1}}, "df": 1}}}}}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"NDNT.networks.ScaffoldNetwork3d": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"NDNT.networks.ScaffoldNetwork": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1}, "NDNT.networks.FFnet_external": {"tf": 1}}, "df": 3}}}}}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {"NDNT.training.ada_hessian.AdaHessian": {"tf": 1}, "NDNT.training.lbfgs.LBFGS": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.training.ada_hessian.AdaHessian": {"tf": 1.4142135623730951}, "NDNT.training.lbfgs.LBFGS": {"tf": 1.4142135623730951}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}}}, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1}}, "df": 1}}}}}}}}}, "j": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.utils.NDNutils.NpEncoder": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.utils.NDNutils.NpEncoder": {"tf": 1}}, "df": 1}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.utils.NDNutils.NpEncoder": {"tf": 1}}, "df": 1}}}}}}}}}, "doc": {"root": {"0": {"0": {"1": {"docs": {"NDNT.NDN.NDN.get_optimizer": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "1": {"docs": {"NDNT.NDN.NDN.get_optimizer": {"tf": 1}}, "df": 1}, "docs": {"NDNT.NDN.NDN.get_trainer": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.get_optimizer": {"tf": 2}, "NDNT.NDN.NDN.fit_dl": {"tf": 1}, "NDNT.NDN.NDN.initialize_loss": {"tf": 1}, "NDNT.NDN.NDN.eval_models": {"tf": 1}, "NDNT.NDN.NDN.get_activations": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.BiConvLayer1D": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.Regularization.set_reg_val": {"tf": 1.4142135623730951}, "NDNT.networks.FFnetwork.plot_filters": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1}, "NDNT.networks.FFnet_external.compute_reg_loss": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian": {"tf": 2.449489742783178}, "NDNT.training.earlystopping.EarlyStopping": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 2.23606797749979}, "NDNT.utils.DanUtils.binocular_data_import": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}, "NDNT.utils.NDNutils.pixel2grid": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 1.4142135623730951}, "NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"tf": 1.4142135623730951}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 1.4142135623730951}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"tf": 1.4142135623730951}}, "df": 36}, "1": {"0": {"0": {"0": {"docs": {"NDNT.NDN.NDN.eval_models": {"tf": 1}}, "df": 1}, "docs": {"NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1}, "NDNT.training.trainer.Trainer.__init__": {"tf": 1}}, "df": 2}, "docs": {"NDNT.NDN.NDN.get_optimizer": {"tf": 1}, "NDNT.training.lbfgs.LBFGS": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1.4142135623730951}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1}}, "df": 5, "/": {"2": {"0": {"docs": {}, "df": 0, "/": {"2": {"0": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "1": {"docs": {}, "df": 0, "/": {"1": {"5": {"docs": {}, "df": 0, "/": {"1": {"8": {"docs": {"NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "2": {"docs": {"NDNT.utils.DanUtils.binocular_data_import": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}}, "df": 2, "/": {"6": {"docs": {}, "df": 0, "/": {"1": {"8": {"docs": {"NDNT.training.lbfgs.polyinterp": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}}, "3": {"5": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "4": {"1": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "5": {"1": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "6": {"3": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "9": {"8": {"0": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}}, "df": 1}, "9": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"NDNT.NDN.NDN.initialize_loss": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.eval_models": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D": {"tf": 2.23606797749979}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.lvlayers.LVLayerOLD.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.__init__": {"tf": 1}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.ConvReg.compute_reg_penalty": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 2.449489742783178}, "NDNT.training.ada_hessian.AdaHessian": {"tf": 2}, "NDNT.training.lbfgs.LBFGS": {"tf": 2}, "NDNT.training.lbfgs.LBFGS.two_loop_recursion": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.curvature_update": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1.7320508075688772}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1.7320508075688772}, "NDNT.utils.DanUtils.binocular_data_import": {"tf": 2}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1.7320508075688772}, "NDNT.utils.DanUtils.monocular_data_import": {"tf": 1}, "NDNT.utils.NDNutils.tent_basis_generate": {"tf": 1}, "NDNT.utils.NDNutils.pixel2grid": {"tf": 1.7320508075688772}, "NDNT.utils.plotting.plot_filters_1D": {"tf": 1}, "NDNT.utils.plotting.plot_filters_2D": {"tf": 1}, "NDNT.utils.plotting.plot_filters_ST1D": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 1.4142135623730951}, "NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 2}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 2}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"tf": 2}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 1.4142135623730951}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"tf": 2}}, "df": 43, "e": {"docs": {"NDNT.training.ada_hessian.AdaHessian": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.curvature_update": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1.7320508075688772}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_log_epsilon": {"tf": 1}}, "df": 5}, ":": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.utils.NDNutils.create_time_embedding": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1}}, "df": 2}}}}}}, "/": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.utils.NDNutils.generate_xv_folds": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {"NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}}, "df": 1}}, "2": {"0": {"0": {"5": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}}, "df": 1}, "6": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}}, "df": 1}, "7": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "1": {"3": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}}, "df": 1}, "6": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}}, "df": 1}, "7": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}}, "df": 1}, "8": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"NDNT.networks.ReadoutNetwork": {"tf": 1}}, "df": 1}, "5": {"docs": {"NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1}}, "df": 1}, "7": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}}, "df": 1}, "docs": {"NDNT.NDN.NDN.initialize_loss": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.forward": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}, "NDNT.modules.regularization.ConvReg.compute_reg_penalty": {"tf": 1}, "NDNT.training.lbfgs.LBFGS": {"tf": 1.7320508075688772}, "NDNT.training.lbfgs.LBFGS.curvature_update": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1.7320508075688772}, "NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1.7320508075688772}, "NDNT.utils.plotting.plot_filters_1D": {"tf": 1}, "NDNT.utils.plotting.plot_filters_2D": {"tf": 1}, "NDNT.utils.plotting.plot_filters_ST1D": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"tf": 1.4142135623730951}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"tf": 1.4142135623730951}}, "df": 30, "x": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "x": {"docs": {"NDNT.modules.layers.bilayers.BiSTconv1D": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.utils.NDNutils.create_time_embedding": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1}}, "df": 2}}, "d": {"docs": {"NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}}, "df": 1}}, "3": {"0": {"0": {"docs": {"NDNT.utils.DanUtils.figure_export": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "5": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}}, "df": 1}, "6": {"docs": {"NDNT.utils.DanUtils.binocular_data_import": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}}, "df": 2}, "docs": {"NDNT.modules.layers.dimlayers.DimSPLayer": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.forward": {"tf": 1}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1}, "NDNT.modules.regularization.ConvReg.compute_reg_penalty": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1.4142135623730951}, "NDNT.training.lbfgs.LBFGS": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1}}, "df": 9, "d": {"docs": {"NDNT.modules.layers.orilayers.ConvLayer3D": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.__init__": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}}, "df": 7}}, "4": {"5": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}}, "df": 1}, "docs": {"NDNT.NDN.NDN.get_optimizer": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.dim_info": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1}, "NDNT.training.lbfgs.LBFGS": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1.4142135623730951}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1}}, "df": 14}, "5": {"0": {"3": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "2": {"8": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"NDNT.NDN.NDN.get_trainer": {"tf": 1}, "NDNT.training.lbfgs.LBFGS": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1}}, "df": 3}, "6": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}}, "df": 1}, "7": {"2": {"docs": {"NDNT.utils.DanUtils.binocular_data_import": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}}, "df": 2}, "7": {"3": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "8": {"2": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"NDNT.training.earlystopping.EarlyStopping": {"tf": 1}, "NDNT.training.lbfgs.LBFGS": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1.7320508075688772}}, "df": 3}, "8": {"docs": {"NDNT.modules.layers.convlayers.TconvLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.plot_filters": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian": {"tf": 1}, "NDNT.training.lbfgs.LBFGS": {"tf": 1}, "NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_log_epsilon": {"tf": 1}}, "df": 7}, "9": {"2": {"7": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "5": {"6": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "9": {"9": {"docs": {"NDNT.NDN.NDN.get_optimizer": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {"NDNT.NDN.NDN.get_optimizer": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian": {"tf": 1}, "NDNT.training.lbfgs.LBFGS": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1}}, "df": 5}, "docs": {"NDNT": {"tf": 1.7320508075688772}, "NDNT.NDN": {"tf": 1.7320508075688772}, "NDNT.NDN.FFnets": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN": {"tf": 8.426149773176359}, "NDNT.NDN.NDN.__init__": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.loss_type": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.ffnet_out": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.seed": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.ffnet_list": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.working_dir": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.loss": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.val_loss": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.trainer": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.block_sample": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.networks": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.opt_params": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.speckled_flag": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.assemble_ffnetworks": {"tf": 7.416198487095663}, "NDNT.NDN.NDN.compute_network_outputs": {"tf": 6.6332495807108}, "NDNT.NDN.NDN.forward": {"tf": 5.744562646538029}, "NDNT.NDN.NDN.training_step": {"tf": 5.477225575051661}, "NDNT.NDN.NDN.validation_step": {"tf": 5.477225575051661}, "NDNT.NDN.NDN.compute_reg_loss": {"tf": 4.47213595499958}, "NDNT.NDN.NDN.get_trainer": {"tf": 9.486832980505138}, "NDNT.NDN.NDN.get_dataloaders": {"tf": 8.888194417315589}, "NDNT.NDN.NDN.get_optimizer": {"tf": 7.810249675906654}, "NDNT.NDN.NDN.prepare_regularization": {"tf": 3.3166247903554}, "NDNT.NDN.NDN.fit": {"tf": 11.61895003862225}, "NDNT.NDN.NDN.fit_dl": {"tf": 11.224972160321824}, "NDNT.NDN.NDN.initialize_loss": {"tf": 7.54983443527075}, "NDNT.NDN.NDN.compute_average_responses": {"tf": 5.291502622129181}, "NDNT.NDN.NDN.initialize_biases": {"tf": 6.782329983125268}, "NDNT.NDN.NDN.eval_models": {"tf": 10.677078252031311}, "NDNT.NDN.NDN.generate_predictions": {"tf": 7.280109889280518}, "NDNT.NDN.NDN.change_loss": {"tf": 6}, "NDNT.NDN.NDN.get_weights": {"tf": 6.082762530298219}, "NDNT.NDN.NDN.get_readout_locations": {"tf": 4.58257569495584}, "NDNT.NDN.NDN.passive_readout": {"tf": 4.47213595499958}, "NDNT.NDN.NDN.list_parameters": {"tf": 5.196152422706632}, "NDNT.NDN.NDN.set_parameters": {"tf": 6.782329983125268}, "NDNT.NDN.NDN.set_reg_val": {"tf": 6.782329983125268}, "NDNT.NDN.NDN.plot_filters": {"tf": 5.196152422706632}, "NDNT.NDN.NDN.save_model_zip": {"tf": 6.855654600401044}, "NDNT.NDN.NDN.load_model_zip": {"tf": 4.795831523312719}, "NDNT.NDN.NDN.save_model": {"tf": 5.0990195135927845}, "NDNT.NDN.NDN.save_model_chk": {"tf": 5.0990195135927845}, "NDNT.NDN.NDN.get_null_adjusted_ll": {"tf": 5.291502622129181}, "NDNT.NDN.NDN.get_activations": {"tf": 6}, "NDNT.NDN.NDN.device": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.load_model": {"tf": 5.291502622129181}, "NDNT.NDN.NDN.load_model_chk": {"tf": 5.744562646538029}, "NDNT.NDN.NDN.model_string": {"tf": 3.3166247903554}, "NDNT.modules": {"tf": 1.7320508075688772}, "NDNT.modules.activations": {"tf": 1.7320508075688772}, "NDNT.modules.activations.adaptive_elu": {"tf": 6.082762530298219}, "NDNT.modules.activations.Square": {"tf": 1.7320508075688772}, "NDNT.modules.activations.Square.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.activations.Square.forward": {"tf": 4.69041575982343}, "NDNT.modules.activations.AdaptiveELU": {"tf": 1.7320508075688772}, "NDNT.modules.activations.AdaptiveELU.__init__": {"tf": 6}, "NDNT.modules.activations.AdaptiveELU.xshift": {"tf": 1.7320508075688772}, "NDNT.modules.activations.AdaptiveELU.yshift": {"tf": 1.7320508075688772}, "NDNT.modules.activations.AdaptiveELU.inplace": {"tf": 1.7320508075688772}, "NDNT.modules.activations.AdaptiveELU.forward": {"tf": 4.69041575982343}, "NDNT.modules.activations.NLtypes": {"tf": 1.7320508075688772}, "NDNT.modules.activity_regularization": {"tf": 1.7320508075688772}, "NDNT.modules.activity_regularization.ActivityRegularization": {"tf": 1.7320508075688772}, "NDNT.modules.activity_regularization.ActivityRegularization.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.activity_regularization.ActivityRegularization.reg_vals": {"tf": 1.7320508075688772}, "NDNT.modules.activity_regularization.ActivityRegularization.activity": {"tf": 5.385164807134504}, "NDNT.modules.activity_regularization.ActivityRegularization.nonneg": {"tf": 5.385164807134504}, "NDNT.modules.activity_regularization.ActivityRegularization.regularize": {"tf": 4.795831523312719}, "NDNT.modules.experiment_sampler": {"tf": 1.7320508075688772}, "NDNT.modules.experiment_sampler.ExperimentBatchGenerator": {"tf": 5.385164807134504}, "NDNT.modules.experiment_sampler.ExperimentBatchGenerator.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.experiment_sampler.ExperimentBatchGenerator.batches": {"tf": 1.7320508075688772}, "NDNT.modules.experiment_sampler.ExperimentBatchGenerator.current_batch_index": {"tf": 1.7320508075688772}, "NDNT.modules.experiment_sampler.ExperimentBatchGenerator.next": {"tf": 3.3166247903554}, "NDNT.modules.experiment_sampler.ExperimentBatchIterator": {"tf": 5.385164807134504}, "NDNT.modules.experiment_sampler.ExperimentBatchIterator.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.experiment_sampler.ExperimentBatchIterator.exp_batch_generators": {"tf": 1.7320508075688772}, "NDNT.modules.experiment_sampler.construct_exp_to_time": {"tf": 4.358898943540674}, "NDNT.modules.experiment_sampler.ExperimentSampler": {"tf": 6.244997998398398}, "NDNT.modules.experiment_sampler.ExperimentSampler.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.experiment_sampler.ExperimentSampler.dataset": {"tf": 1.7320508075688772}, "NDNT.modules.experiment_sampler.ExperimentSampler.batch_size": {"tf": 1.7320508075688772}, "NDNT.modules.experiment_sampler.ExperimentSampler.shuffle": {"tf": 1.7320508075688772}, "NDNT.modules.experiment_sampler.ExperimentSampler.random_seed": {"tf": 1.7320508075688772}, "NDNT.modules.experiment_sampler.ExperimentSampler.num_exps": {"tf": 1.7320508075688772}, "NDNT.modules.experiment_sampler.ExperimentSampler.exp_to_time": {"tf": 1.7320508075688772}, "NDNT.modules.experiment_sampler.ExperimentSampler.exp_lengths": {"tf": 1.7320508075688772}, "NDNT.modules.experiment_sampler.ExperimentSampler.exp_batch_sizes": {"tf": 1.7320508075688772}, "NDNT.modules.experiment_sampler.ExperimentSampler.num_batches": {"tf": 1.7320508075688772}, "NDNT.modules.layers": {"tf": 1.7320508075688772}, "NDNT.modules.layers.bilayers": {"tf": 1.7320508075688772}, "NDNT.modules.layers.bilayers.BinocLayer1D": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.BinocLayer1D.__init__": {"tf": 4.69041575982343}, "NDNT.modules.layers.bilayers.BinocLayer1D.forward": {"tf": 4.47213595499958}, "NDNT.modules.layers.bilayers.BinocLayer1D.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.BiConvLayer1D": {"tf": 1.7320508075688772}, "NDNT.modules.layers.bilayers.BiConvLayer1D.__init__": {"tf": 6.708203932499369}, "NDNT.modules.layers.bilayers.BiConvLayer1D.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.BiSTconv1D": {"tf": 2.23606797749979}, "NDNT.modules.layers.bilayers.BiSTconv1D.__init__": {"tf": 6.708203932499369}, "NDNT.modules.layers.bilayers.BiSTconv1D.output_dims": {"tf": 1.7320508075688772}, "NDNT.modules.layers.bilayers.BiSTconv1D.num_outputs": {"tf": 1.7320508075688772}, "NDNT.modules.layers.bilayers.BiSTconv1D.forward": {"tf": 4.58257569495584}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 8.246211251235321}, "NDNT.modules.layers.bilayers.ChannelConvLayer": {"tf": 3.1622776601683795}, "NDNT.modules.layers.bilayers.ChannelConvLayer.__init__": {"tf": 5.916079783099616}, "NDNT.modules.layers.bilayers.ChannelConvLayer.weights_folded_dims": {"tf": 1.7320508075688772}, "NDNT.modules.layers.bilayers.ChannelConvLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.ChannelConvLayer.forward": {"tf": 4.58257569495584}, "NDNT.modules.layers.convlayers": {"tf": 1.7320508075688772}, "NDNT.modules.layers.convlayers.ConvLayer": {"tf": 2.6457513110645907}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 7.416198487095663}, "NDNT.modules.layers.convlayers.ConvLayer.window": {"tf": 1.7320508075688772}, "NDNT.modules.layers.convlayers.ConvLayer.tent_basis": {"tf": 1.7320508075688772}, "NDNT.modules.layers.convlayers.ConvLayer.is1D": {"tf": 1.7320508075688772}, "NDNT.modules.layers.convlayers.ConvLayer.res_layer": {"tf": 1.7320508075688772}, "NDNT.modules.layers.convlayers.ConvLayer.filter_dims": {"tf": 1.7320508075688772}, "NDNT.modules.layers.convlayers.ConvLayer.padding": {"tf": 1.7320508075688772}, "NDNT.modules.layers.convlayers.ConvLayer.folded_dims": {"tf": 1.7320508075688772}, "NDNT.modules.layers.convlayers.ConvLayer.batchnorm_clone": {"tf": 1.7320508075688772}, "NDNT.modules.layers.convlayers.ConvLayer.batchnorm_convert": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.ConvLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.ConvLayer.preprocess_weights": {"tf": 3.3166247903554}, "NDNT.modules.layers.convlayers.ConvLayer.forward": {"tf": 4.58257569495584}, "NDNT.modules.layers.convlayers.TconvLayer": {"tf": 5.291502622129181}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 7.416198487095663}, "NDNT.modules.layers.convlayers.TconvLayer.num_lags": {"tf": 1.7320508075688772}, "NDNT.modules.layers.convlayers.TconvLayer.is1D": {"tf": 1.7320508075688772}, "NDNT.modules.layers.convlayers.TconvLayer.padding": {"tf": 1.7320508075688772}, "NDNT.modules.layers.convlayers.TconvLayer.forward": {"tf": 4.58257569495584}, "NDNT.modules.layers.convlayers.TconvLayer.plot_filters": {"tf": 6.082762530298219}, "NDNT.modules.layers.convlayers.TconvLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.STconvLayer": {"tf": 5.385164807134504}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 7.416198487095663}, "NDNT.modules.layers.convlayers.STconvLayer.num_lags": {"tf": 1.7320508075688772}, "NDNT.modules.layers.convlayers.STconvLayer.output_dims": {"tf": 1.7320508075688772}, "NDNT.modules.layers.convlayers.STconvLayer.forward": {"tf": 4.58257569495584}, "NDNT.modules.layers.convlayers.STconvLayer.plot_filters": {"tf": 6.082762530298219}, "NDNT.modules.layers.convlayers.STconvLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers": {"tf": 1.7320508075688772}, "NDNT.modules.layers.dimlayers.Dim0Layer": {"tf": 1.7320508075688772}, "NDNT.modules.layers.dimlayers.Dim0Layer.__init__": {"tf": 3.872983346207417}, "NDNT.modules.layers.dimlayers.Dim0Layer.output_dims": {"tf": 1.7320508075688772}, "NDNT.modules.layers.dimlayers.Dim0Layer.num_outputs": {"tf": 1.7320508075688772}, "NDNT.modules.layers.dimlayers.Dim0Layer.num_other_dims": {"tf": 1.7320508075688772}, "NDNT.modules.layers.dimlayers.Dim0Layer.forward": {"tf": 4.242640687119285}, "NDNT.modules.layers.dimlayers.Dim0Layer.dim_info": {"tf": 5.196152422706632}, "NDNT.modules.layers.dimlayers.Dim0Layer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.ChannelLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.ChannelLayer.__init__": {"tf": 3.872983346207417}, "NDNT.modules.layers.dimlayers.ChannelLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.ChannelLayer.forward": {"tf": 4.242640687119285}, "NDNT.modules.layers.dimlayers.DimSPLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.DimSPLayer.__init__": {"tf": 4.358898943540674}, "NDNT.modules.layers.dimlayers.DimSPLayer.transparent": {"tf": 1.7320508075688772}, "NDNT.modules.layers.dimlayers.DimSPLayer.num_outputs": {"tf": 1.7320508075688772}, "NDNT.modules.layers.dimlayers.DimSPLayer.num_sp_dims": {"tf": 1.7320508075688772}, "NDNT.modules.layers.dimlayers.DimSPLayer.forward": {"tf": 4.242640687119285}, "NDNT.modules.layers.dimlayers.DimSPLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.DimSPTLayer": {"tf": 1.7320508075688772}, "NDNT.modules.layers.dimlayers.DimSPTLayer.__init__": {"tf": 4.358898943540674}, "NDNT.modules.layers.dimlayers.DimSPTLayer.output_dims": {"tf": 1.7320508075688772}, "NDNT.modules.layers.dimlayers.DimSPTLayer.num_outputs": {"tf": 1.7320508075688772}, "NDNT.modules.layers.dimlayers.DimSPTLayer.transparent": {"tf": 1.7320508075688772}, "NDNT.modules.layers.dimlayers.DimSPTLayer.num_spt_dims": {"tf": 1.7320508075688772}, "NDNT.modules.layers.dimlayers.DimSPTLayer.forward": {"tf": 4.242640687119285}, "NDNT.modules.layers.dimlayers.DimSPTLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.externallayer": {"tf": 1.7320508075688772}, "NDNT.modules.layers.externallayer.ExternalLayer": {"tf": 1.7320508075688772}, "NDNT.modules.layers.externallayer.ExternalLayer.__init__": {"tf": 5.196152422706632}, "NDNT.modules.layers.externallayer.ExternalLayer.input_dims": {"tf": 1.7320508075688772}, "NDNT.modules.layers.externallayer.ExternalLayer.num_filters": {"tf": 1.7320508075688772}, "NDNT.modules.layers.externallayer.ExternalLayer.filter_dims": {"tf": 1.7320508075688772}, "NDNT.modules.layers.externallayer.ExternalLayer.output_dims": {"tf": 1.7320508075688772}, "NDNT.modules.layers.externallayer.ExternalLayer.reg": {"tf": 1.7320508075688772}, "NDNT.modules.layers.externallayer.ExternalLayer.forward": {"tf": 4.58257569495584}, "NDNT.modules.layers.laglayers": {"tf": 1.7320508075688772}, "NDNT.modules.layers.laglayers.LagLayer": {"tf": 3.1622776601683795}, "NDNT.modules.layers.laglayers.LagLayer.__init__": {"tf": 5.0990195135927845}, "NDNT.modules.layers.laglayers.LagLayer.num_lags": {"tf": 1.7320508075688772}, "NDNT.modules.layers.laglayers.LagLayer.num_folded_dims": {"tf": 1.7320508075688772}, "NDNT.modules.layers.laglayers.LagLayer.forward": {"tf": 4.795831523312719}, "NDNT.modules.layers.laglayers.LagLayer.plot_filters": {"tf": 5.744562646538029}, "NDNT.modules.layers.laglayers.LagLayer.layer_dict": {"tf": 4.898979485566356}, "NDNT.modules.layers.lvlayers": {"tf": 1.7320508075688772}, "NDNT.modules.layers.lvlayers.LVLayer": {"tf": 2.8284271247461903}, "NDNT.modules.layers.lvlayers.LVLayer.__init__": {"tf": 5.744562646538029}, "NDNT.modules.layers.lvlayers.LVLayer.preprocess_weights": {"tf": 3.3166247903554}, "NDNT.modules.layers.lvlayers.LVLayer.forward": {"tf": 4.795831523312719}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"tf": 5.291502622129181}, "NDNT.modules.layers.lvlayers.LVLayerOLD": {"tf": 1.4142135623730951}, "NDNT.modules.layers.lvlayers.LVLayerOLD.__init__": {"tf": 5.385164807134504}, "NDNT.modules.layers.lvlayers.LVLayerOLD.numLVs": {"tf": 1.7320508075688772}, "NDNT.modules.layers.lvlayers.LVLayerOLD.nt": {"tf": 1.7320508075688772}, "NDNT.modules.layers.lvlayers.LVLayerOLD.init_mu_range": {"tf": 1.7320508075688772}, "NDNT.modules.layers.lvlayers.LVLayerOLD.init_sigma": {"tf": 1.7320508075688772}, "NDNT.modules.layers.lvlayers.LVLayerOLD.sigma": {"tf": 1.7320508075688772}, "NDNT.modules.layers.lvlayers.LVLayerOLD.sm_skips": {"tf": 1.7320508075688772}, "NDNT.modules.layers.lvlayers.LVLayerOLD.sample": {"tf": 1.7320508075688772}, "NDNT.modules.layers.lvlayers.LVLayerOLD.weight_scale": {"tf": 1.7320508075688772}, "NDNT.modules.layers.lvlayers.LVLayerOLD.forward": {"tf": 4.47213595499958}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 6.4031242374328485}, "NDNT.modules.layers.ndnlayer": {"tf": 1.7320508075688772}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 8.94427190999916}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 7.416198487095663}, "NDNT.modules.layers.ndnlayer.NDNLayer.input_dims": {"tf": 1.7320508075688772}, "NDNT.modules.layers.ndnlayer.NDNLayer.num_filters": {"tf": 1.7320508075688772}, "NDNT.modules.layers.ndnlayer.NDNLayer.output_dims": {"tf": 1.7320508075688772}, "NDNT.modules.layers.ndnlayer.NDNLayer.norm_type": {"tf": 1.7320508075688772}, "NDNT.modules.layers.ndnlayer.NDNLayer.pos_constraint": {"tf": 1.7320508075688772}, "NDNT.modules.layers.ndnlayer.NDNLayer.conv": {"tf": 1.7320508075688772}, "NDNT.modules.layers.ndnlayer.NDNLayer.NL": {"tf": 1.7320508075688772}, "NDNT.modules.layers.ndnlayer.NDNLayer.shape": {"tf": 1.7320508075688772}, "NDNT.modules.layers.ndnlayer.NDNLayer.weight_scale": {"tf": 1.7320508075688772}, "NDNT.modules.layers.ndnlayer.NDNLayer.weight": {"tf": 1.7320508075688772}, "NDNT.modules.layers.ndnlayer.NDNLayer.reg": {"tf": 1.7320508075688772}, "NDNT.modules.layers.ndnlayer.NDNLayer.num_inh": {"tf": 1.7320508075688772}, "NDNT.modules.layers.ndnlayer.NDNLayer.reset_parameters": {"tf": 4.795831523312719}, "NDNT.modules.layers.ndnlayer.NDNLayer.initialize_gaussian_envelope": {"tf": 1.7320508075688772}, "NDNT.modules.layers.ndnlayer.NDNLayer.preprocess_weights": {"tf": 3.3166247903554}, "NDNT.modules.layers.ndnlayer.NDNLayer.forward": {"tf": 4.58257569495584}, "NDNT.modules.layers.ndnlayer.NDNLayer.compute_reg_loss": {"tf": 3.3166247903554}, "NDNT.modules.layers.ndnlayer.NDNLayer.get_weights": {"tf": 5.385164807134504}, "NDNT.modules.layers.ndnlayer.NDNLayer.list_parameters": {"tf": 1.7320508075688772}, "NDNT.modules.layers.ndnlayer.NDNLayer.set_parameters": {"tf": 1.7320508075688772}, "NDNT.modules.layers.ndnlayer.NDNLayer.set_reg_val": {"tf": 5}, "NDNT.modules.layers.ndnlayer.NDNLayer.plot_filters": {"tf": 6.082762530298219}, "NDNT.modules.layers.ndnlayer.NDNLayer.dim_info": {"tf": 5}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 8.246211251235321}, "NDNT.modules.layers.normlayers": {"tf": 1.7320508075688772}, "NDNT.modules.layers.normlayers.DivNormLayer": {"tf": 1.7320508075688772}, "NDNT.modules.layers.normlayers.DivNormLayer.__init__": {"tf": 5.830951894845301}, "NDNT.modules.layers.normlayers.DivNormLayer.output_dims": {"tf": 1.7320508075688772}, "NDNT.modules.layers.normlayers.DivNormLayer.num_outputs": {"tf": 1.7320508075688772}, "NDNT.modules.layers.normlayers.DivNormLayer.preprocess_weights": {"tf": 3.4641016151377544}, "NDNT.modules.layers.normlayers.DivNormLayer.forward": {"tf": 4.795831523312719}, "NDNT.modules.layers.orilayers": {"tf": 1.7320508075688772}, "NDNT.modules.layers.orilayers.OriLayer": {"tf": 1.7320508075688772}, "NDNT.modules.layers.orilayers.OriLayer.__init__": {"tf": 5.0990195135927845}, "NDNT.modules.layers.orilayers.OriLayer.angles": {"tf": 1.7320508075688772}, "NDNT.modules.layers.orilayers.OriLayer.output_dims": {"tf": 1.7320508075688772}, "NDNT.modules.layers.orilayers.OriLayer.rotation_matrix_tensor": {"tf": 5}, "NDNT.modules.layers.orilayers.OriLayer.forward": {"tf": 4.795831523312719}, "NDNT.modules.layers.orilayers.OriLayer.layer_dict": {"tf": 4.69041575982343}, "NDNT.modules.layers.orilayers.OriConvLayer": {"tf": 1.7320508075688772}, "NDNT.modules.layers.orilayers.OriConvLayer.__init__": {"tf": 5.0990195135927845}, "NDNT.modules.layers.orilayers.OriConvLayer.angles": {"tf": 1.7320508075688772}, "NDNT.modules.layers.orilayers.OriConvLayer.folded_dims": {"tf": 1.7320508075688772}, "NDNT.modules.layers.orilayers.OriConvLayer.output_dims": {"tf": 1.7320508075688772}, "NDNT.modules.layers.orilayers.OriConvLayer.rotation_matrix_tensor": {"tf": 5}, "NDNT.modules.layers.orilayers.OriConvLayer.get_rot_mat": {"tf": 5}, "NDNT.modules.layers.orilayers.OriConvLayer.rotate_tensor": {"tf": 4.58257569495584}, "NDNT.modules.layers.orilayers.OriConvLayer.forward": {"tf": 4.795831523312719}, "NDNT.modules.layers.orilayers.OriConvLayer.layer_dict": {"tf": 4.69041575982343}, "NDNT.modules.layers.orilayers.ConvLayer3D": {"tf": 1.7320508075688772}, "NDNT.modules.layers.orilayers.ConvLayer3D.__init__": {"tf": 5.385164807134504}, "NDNT.modules.layers.orilayers.ConvLayer3D.ori_padding": {"tf": 1.7320508075688772}, "NDNT.modules.layers.orilayers.ConvLayer3D.input_dims": {"tf": 1.7320508075688772}, "NDNT.modules.layers.orilayers.ConvLayer3D.output_dims": {"tf": 1.7320508075688772}, "NDNT.modules.layers.orilayers.ConvLayer3D.forward": {"tf": 4.795831523312719}, "NDNT.modules.layers.orilayers.ConvLayer3D.plot_filters": {"tf": 5.744562646538029}, "NDNT.modules.layers.orilayers.ConvLayer3D.layer_dict": {"tf": 4}, "NDNT.modules.layers.readouts": {"tf": 1.7320508075688772}, "NDNT.modules.layers.readouts.ReadoutLayer": {"tf": 1.7320508075688772}, "NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 7}, "NDNT.modules.layers.readouts.ReadoutLayer.batch_sample": {"tf": 1.7320508075688772}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_mode": {"tf": 1.7320508075688772}, "NDNT.modules.layers.readouts.ReadoutLayer.init_mu_range": {"tf": 1.7320508075688772}, "NDNT.modules.layers.readouts.ReadoutLayer.init_sigma": {"tf": 1.7320508075688772}, "NDNT.modules.layers.readouts.ReadoutLayer.align_corners": {"tf": 1.7320508075688772}, "NDNT.modules.layers.readouts.ReadoutLayer.grid_shape": {"tf": 1.7320508075688772}, "NDNT.modules.layers.readouts.ReadoutLayer.mu": {"tf": 1.7320508075688772}, "NDNT.modules.layers.readouts.ReadoutLayer.sigma": {"tf": 1.7320508075688772}, "NDNT.modules.layers.readouts.ReadoutLayer.sample": {"tf": 1.7320508075688772}, "NDNT.modules.layers.readouts.ReadoutLayer.features": {"tf": 1.7320508075688772}, "NDNT.modules.layers.readouts.ReadoutLayer.grid": {"tf": 1.7320508075688772}, "NDNT.modules.layers.readouts.ReadoutLayer.initialize_spatial_mapping": {"tf": 3.3166247903554}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 4.242640687119285}, "NDNT.modules.layers.readouts.ReadoutLayer.get_weights": {"tf": 5.656854249492381}, "NDNT.modules.layers.readouts.ReadoutLayer.forward": {"tf": 5.196152422706632}, "NDNT.modules.layers.readouts.ReadoutLayer.set_readout_locations": {"tf": 3.605551275463989}, "NDNT.modules.layers.readouts.ReadoutLayer.get_readout_locations": {"tf": 3.3166247903554}, "NDNT.modules.layers.readouts.ReadoutLayer.passive_readout": {"tf": 4.358898943540674}, "NDNT.modules.layers.readouts.ReadoutLayer.layer_dict": {"tf": 4.47213595499958}, "NDNT.modules.layers.readouts.ReadoutLayer3d": {"tf": 1.7320508075688772}, "NDNT.modules.layers.readouts.ReadoutLayer3d.__init__": {"tf": 3.7416573867739413}, "NDNT.modules.layers.readouts.ReadoutLayer3d.input_dims": {"tf": 1.7320508075688772}, "NDNT.modules.layers.readouts.ReadoutLayer3d.filter_dims": {"tf": 1.7320508075688772}, "NDNT.modules.layers.readouts.ReadoutLayer3d.reg": {"tf": 1.7320508075688772}, "NDNT.modules.layers.readouts.ReadoutLayer3d.forward": {"tf": 5.0990195135927845}, "NDNT.modules.layers.readouts.ReadoutLayer3d.passive_readout": {"tf": 1.7320508075688772}, "NDNT.modules.layers.readouts.ReadoutLayer3d.layer_dict": {"tf": 4.242640687119285}, "NDNT.modules.layers.readouts.FixationLayer": {"tf": 1.7320508075688772}, "NDNT.modules.layers.readouts.FixationLayer.__init__": {"tf": 6.4031242374328485}, "NDNT.modules.layers.readouts.FixationLayer.num_spatial_dims": {"tf": 1.7320508075688772}, "NDNT.modules.layers.readouts.FixationLayer.num_fixations": {"tf": 1.7320508075688772}, "NDNT.modules.layers.readouts.FixationLayer.batch_sample": {"tf": 1.7320508075688772}, "NDNT.modules.layers.readouts.FixationLayer.init_sigma": {"tf": 1.7320508075688772}, "NDNT.modules.layers.readouts.FixationLayer.single_sigma": {"tf": 1.7320508075688772}, "NDNT.modules.layers.readouts.FixationLayer.fix_n_index": {"tf": 1.7320508075688772}, "NDNT.modules.layers.readouts.FixationLayer.sample": {"tf": 1.7320508075688772}, "NDNT.modules.layers.readouts.FixationLayer.forward": {"tf": 5.0990195135927845}, "NDNT.modules.layers.readouts.FixationLayer.initialize": {"tf": 1.7320508075688772}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 5.744562646538029}, "NDNT.modules.layers.reslayers": {"tf": 1.7320508075688772}, "NDNT.modules.layers.reslayers.IterLayer": {"tf": 3.3166247903554}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 7.810249675906654}, "NDNT.modules.layers.reslayers.IterLayer.num_iter": {"tf": 1.7320508075688772}, "NDNT.modules.layers.reslayers.IterLayer.LN_reverse": {"tf": 1.7320508075688772}, "NDNT.modules.layers.reslayers.IterLayer.output_config": {"tf": 1.7320508075688772}, "NDNT.modules.layers.reslayers.IterLayer.res_layer": {"tf": 1.7320508075688772}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 6.6332495807108}, "NDNT.modules.layers.reslayers.IterLayer.forward": {"tf": 4.58257569495584}, "NDNT.modules.layers.reslayers.IterTlayer": {"tf": 3.3166247903554}, "NDNT.modules.layers.reslayers.IterTlayer.__init__": {"tf": 7.0710678118654755}, "NDNT.modules.layers.reslayers.IterTlayer.num_iter": {"tf": 1.7320508075688772}, "NDNT.modules.layers.reslayers.IterTlayer.output_config": {"tf": 1.7320508075688772}, "NDNT.modules.layers.reslayers.IterTlayer.res_layer": {"tf": 1.7320508075688772}, "NDNT.modules.layers.reslayers.IterTlayer.num_outputs": {"tf": 1.7320508075688772}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 6.557438524302}, "NDNT.modules.layers.reslayers.IterTlayer.forward": {"tf": 4.58257569495584}, "NDNT.modules.layers.reslayers.IterSTlayer": {"tf": 3.3166247903554}, "NDNT.modules.layers.reslayers.IterSTlayer.__init__": {"tf": 7.0710678118654755}, "NDNT.modules.layers.reslayers.IterSTlayer.num_iter": {"tf": 1.7320508075688772}, "NDNT.modules.layers.reslayers.IterSTlayer.output_config": {"tf": 1.7320508075688772}, "NDNT.modules.layers.reslayers.IterSTlayer.res_layer": {"tf": 1.7320508075688772}, "NDNT.modules.layers.reslayers.IterSTlayer.num_outputs": {"tf": 1.7320508075688772}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 6.557438524302}, "NDNT.modules.layers.reslayers.IterSTlayer.forward": {"tf": 4.58257569495584}, "NDNT.modules.layers.specialtylayers": {"tf": 1.7320508075688772}, "NDNT.modules.layers.specialtylayers.Tlayer": {"tf": 2.8284271247461903}, "NDNT.modules.layers.specialtylayers.Tlayer.__init__": {"tf": 6.164414002968976}, "NDNT.modules.layers.specialtylayers.Tlayer.tent_basis": {"tf": 1.7320508075688772}, "NDNT.modules.layers.specialtylayers.Tlayer.res_layer": {"tf": 1.7320508075688772}, "NDNT.modules.layers.specialtylayers.Tlayer.folded_dims": {"tf": 1.7320508075688772}, "NDNT.modules.layers.specialtylayers.Tlayer.forward": {"tf": 4.58257569495584}, "NDNT.modules.layers.specialtylayers.Tlayer.plot_filters": {"tf": 5.744562646538029}, "NDNT.modules.layers.specialtylayers.Tlayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.L1convLayer": {"tf": 2.449489742783178}, "NDNT.modules.layers.specialtylayers.L1convLayer.__init__": {"tf": 4.58257569495584}, "NDNT.modules.layers.specialtylayers.L1convLayer.weight_minus": {"tf": 1.7320508075688772}, "NDNT.modules.layers.specialtylayers.L1convLayer.window": {"tf": 1.7320508075688772}, "NDNT.modules.layers.specialtylayers.L1convLayer.tent_basis": {"tf": 1.7320508075688772}, "NDNT.modules.layers.specialtylayers.L1convLayer.preprocess_weights": {"tf": 3.3166247903554}, "NDNT.modules.layers.specialtylayers.L1convLayer.reset_parameters2": {"tf": 5.385164807134504}, "NDNT.modules.layers.specialtylayers.L1convLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.OnOffLayer": {"tf": 1.7320508075688772}, "NDNT.modules.layers.specialtylayers.OnOffLayer.__init__": {"tf": 2.449489742783178}, "NDNT.modules.layers.specialtylayers.OnOffLayer.plot_filters": {"tf": 5}, "NDNT.modules.layers.specialtylayers.OnOffLayer.forward": {"tf": 4.58257569495584}, "NDNT.modules.layers.specialtylayers.OnOffLayer.layer_dict": {"tf": 4.898979485566356}, "NDNT.modules.layers.specialtylayers.MaskLayer": {"tf": 1.7320508075688772}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 8.18535277187245}, "NDNT.modules.layers.specialtylayers.MaskLayer.preprocess_weights": {"tf": 3.3166247903554}, "NDNT.modules.layers.specialtylayers.MaskLayer.layer_dict": {"tf": 4.898979485566356}, "NDNT.modules.layers.timelayers": {"tf": 1.7320508075688772}, "NDNT.modules.layers.timelayers.TimeLayer": {"tf": 1.7320508075688772}, "NDNT.modules.layers.timelayers.TimeLayer.__init__": {"tf": 6.557438524302}, "NDNT.modules.layers.timelayers.TimeLayer.output_dims": {"tf": 1.7320508075688772}, "NDNT.modules.layers.timelayers.TimeLayer.num_outputs": {"tf": 1.7320508075688772}, "NDNT.modules.layers.timelayers.TimeLayer.forward": {"tf": 4.58257569495584}, "NDNT.modules.regularization": {"tf": 1.7320508075688772}, "NDNT.modules.regularization.Regularization": {"tf": 6.855654600401044}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 6.48074069840786}, "NDNT.modules.regularization.Regularization.input_dims": {"tf": 1.7320508075688772}, "NDNT.modules.regularization.Regularization.vals": {"tf": 1.7320508075688772}, "NDNT.modules.regularization.Regularization.reg_modules": {"tf": 1.7320508075688772}, "NDNT.modules.regularization.Regularization.normalize": {"tf": 1.7320508075688772}, "NDNT.modules.regularization.Regularization.unit_reg": {"tf": 1.7320508075688772}, "NDNT.modules.regularization.Regularization.folded_lags": {"tf": 1.7320508075688772}, "NDNT.modules.regularization.Regularization.num_outputs": {"tf": 1.7320508075688772}, "NDNT.modules.regularization.Regularization.pos_constraint": {"tf": 1.7320508075688772}, "NDNT.modules.regularization.Regularization.boundary_conditions": {"tf": 1.7320508075688772}, "NDNT.modules.regularization.Regularization.activity_regmodule": {"tf": 1.7320508075688772}, "NDNT.modules.regularization.Regularization.set_reg_val": {"tf": 7.211102550927978}, "NDNT.modules.regularization.Regularization.unit_reg_convert": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.Regularization.build_reg_modules": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.Regularization.compute_reg_loss": {"tf": 1.7320508075688772}, "NDNT.modules.regularization.Regularization.compute_activity_regularization": {"tf": 1.7320508075688772}, "NDNT.modules.regularization.Regularization.reg_copy": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.Regularization.get_reg_class": {"tf": 1.7320508075688772}, "NDNT.modules.regularization.RegModule": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.RegModule.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.RegModule.reg_type": {"tf": 1.7320508075688772}, "NDNT.modules.regularization.RegModule.unit_reg": {"tf": 1.7320508075688772}, "NDNT.modules.regularization.RegModule.input_dims": {"tf": 1.7320508075688772}, "NDNT.modules.regularization.RegModule.num_dims": {"tf": 1.7320508075688772}, "NDNT.modules.regularization.RegModule.folded_lags": {"tf": 1.7320508075688772}, "NDNT.modules.regularization.RegModule.pos_constraint": {"tf": 1.7320508075688772}, "NDNT.modules.regularization.RegModule.forward": {"tf": 3.872983346207417}, "NDNT.modules.regularization.LocalityReg": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.LocalityReg.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.LocalityReg.compute_reg_penalty": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.LocalityReg.build_reg_mats": {"tf": 1.7320508075688772}, "NDNT.modules.regularization.DiagonalReg": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.DiagonalReg.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.DiagonalReg.input_dims": {"tf": 1.7320508075688772}, "NDNT.modules.regularization.DiagonalReg.compute_reg_penalty": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.DiagonalReg.build_reg_mats": {"tf": 1.7320508075688772}, "NDNT.modules.regularization.InlineReg": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.InlineReg.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.InlineReg.compute_reg_penalty": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.ConvReg": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.ConvReg.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.ConvReg.BC": {"tf": 1.7320508075688772}, "NDNT.modules.regularization.ConvReg.compute_reg_penalty": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.Tikhanov": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.Tikhanov.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.Tikhanov.input_dims": {"tf": 1.7320508075688772}, "NDNT.modules.regularization.Tikhanov.compute_reg_penalty": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.TikhanovC": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.TikhanovC.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.TikhanovC.input_dims": {"tf": 1.7320508075688772}, "NDNT.modules.regularization.TikhanovC.collapse_dims": {"tf": 1.7320508075688772}, "NDNT.modules.regularization.TikhanovC.compute_reg_penalty": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.ActivityReg": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.ActivityReg.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.ActivityReg.acitivity_penalty": {"tf": 1.7320508075688772}, "NDNT.modules.regularization.ActivityReg.compute_activity_penalty": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.ActivityReg.compute_reg_penalty": {"tf": 1.4142135623730951}, "NDNT.networks": {"tf": 1.7320508075688772}, "NDNT.networks.LayerTypes": {"tf": 1.7320508075688772}, "NDNT.networks.FFnetwork": {"tf": 8.18535277187245}, "NDNT.networks.FFnetwork.__init__": {"tf": 1.7320508075688772}, "NDNT.networks.FFnetwork.network_type": {"tf": 1.7320508075688772}, "NDNT.networks.FFnetwork.layer_list": {"tf": 1.7320508075688772}, "NDNT.networks.FFnetwork.layer_types": {"tf": 1.7320508075688772}, "NDNT.networks.FFnetwork.xstim_n": {"tf": 1.7320508075688772}, "NDNT.networks.FFnetwork.ffnets_in": {"tf": 1.7320508075688772}, "NDNT.networks.FFnetwork.layers": {"tf": 1.7320508075688772}, "NDNT.networks.FFnetwork.output_dims": {"tf": 1.7320508075688772}, "NDNT.networks.FFnetwork.num_outputs": {"tf": 1.7320508075688772}, "NDNT.networks.FFnetwork.determine_input_dims": {"tf": 6.324555320336759}, "NDNT.networks.FFnetwork.preprocess_input": {"tf": 6}, "NDNT.networks.FFnetwork.forward": {"tf": 5}, "NDNT.networks.FFnetwork.prepare_regularization": {"tf": 3.872983346207417}, "NDNT.networks.FFnetwork.compute_reg_loss": {"tf": 4.58257569495584}, "NDNT.networks.FFnetwork.list_parameters": {"tf": 5.830951894845301}, "NDNT.networks.FFnetwork.set_parameters": {"tf": 6.782329983125268}, "NDNT.networks.FFnetwork.set_reg_val": {"tf": 6.782329983125268}, "NDNT.networks.FFnetwork.plot_filters": {"tf": 5.291502622129181}, "NDNT.networks.FFnetwork.get_weights": {"tf": 6.324555320336759}, "NDNT.networks.FFnetwork.ffnet_dict": {"tf": 7.745966692414834}, "NDNT.networks.ScaffoldNetwork": {"tf": 5.916079783099616}, "NDNT.networks.ScaffoldNetwork.__init__": {"tf": 1.7320508075688772}, "NDNT.networks.ScaffoldNetwork.network_type": {"tf": 1.7320508075688772}, "NDNT.networks.ScaffoldNetwork.num_lags_out": {"tf": 1.7320508075688772}, "NDNT.networks.ScaffoldNetwork.spatial_dims": {"tf": 1.7320508075688772}, "NDNT.networks.ScaffoldNetwork.filter_count": {"tf": 1.7320508075688772}, "NDNT.networks.ScaffoldNetwork.forward": {"tf": 6}, "NDNT.networks.ScaffoldNetwork.ffnet_dict": {"tf": 6.855654600401044}, "NDNT.networks.ScaffoldNetwork3d": {"tf": 5.385164807134504}, "NDNT.networks.ScaffoldNetwork3d.__init__": {"tf": 1.7320508075688772}, "NDNT.networks.ScaffoldNetwork3d.network_type": {"tf": 1.7320508075688772}, "NDNT.networks.ScaffoldNetwork3d.num_lags_out": {"tf": 1.7320508075688772}, "NDNT.networks.ScaffoldNetwork3d.forward": {"tf": 6}, "NDNT.networks.ScaffoldNetwork3d.ffnet_dict": {"tf": 4.898979485566356}, "NDNT.networks.ReadoutNetwork": {"tf": 8.426149773176359}, "NDNT.networks.ReadoutNetwork.__init__": {"tf": 1.7320508075688772}, "NDNT.networks.ReadoutNetwork.network_type": {"tf": 1.7320508075688772}, "NDNT.networks.ReadoutNetwork.determine_input_dims": {"tf": 6.244997998398398}, "NDNT.networks.ReadoutNetwork.forward": {"tf": 5}, "NDNT.networks.ReadoutNetwork.get_readout_locations": {"tf": 4.47213595499958}, "NDNT.networks.ReadoutNetwork.set_readout_locations": {"tf": 4.69041575982343}, "NDNT.networks.ReadoutNetwork.ffnet_dict": {"tf": 5}, "NDNT.networks.FFnet_external": {"tf": 6.557438524302}, "NDNT.networks.FFnet_external.__init__": {"tf": 1.7320508075688772}, "NDNT.networks.FFnet_external.network_type": {"tf": 1.7320508075688772}, "NDNT.networks.FFnet_external.input_dims_reshape": {"tf": 1.7320508075688772}, "NDNT.networks.FFnet_external.forward": {"tf": 6}, "NDNT.networks.FFnet_external.compute_reg_loss": {"tf": 4.358898943540674}, "NDNT.networks.FFnet_external.list_params": {"tf": 5.830951894845301}, "NDNT.networks.FFnet_external.set_params": {"tf": 6.782329983125268}, "NDNT.networks.FFnet_external.ffnet_dict": {"tf": 4.898979485566356}, "NDNT.training": {"tf": 1.7320508075688772}, "NDNT.training.ada_hessian": {"tf": 1.7320508075688772}, "NDNT.training.ada_hessian.AdaHessian": {"tf": 7.745966692414834}, "NDNT.training.ada_hessian.AdaHessian.__init__": {"tf": 1.7320508075688772}, "NDNT.training.ada_hessian.AdaHessian.n_samples": {"tf": 1.7320508075688772}, "NDNT.training.ada_hessian.AdaHessian.update_each": {"tf": 1.7320508075688772}, "NDNT.training.ada_hessian.AdaHessian.average_conv_kernel": {"tf": 1.7320508075688772}, "NDNT.training.ada_hessian.AdaHessian.generator": {"tf": 1.7320508075688772}, "NDNT.training.ada_hessian.AdaHessian.get_params": {"tf": 3.3166247903554}, "NDNT.training.ada_hessian.AdaHessian.zero_hessian": {"tf": 1.7320508075688772}, "NDNT.training.ada_hessian.AdaHessian.set_hessian": {"tf": 1.7320508075688772}, "NDNT.training.ada_hessian.AdaHessian.step": {"tf": 3.872983346207417}, "NDNT.training.earlystopping": {"tf": 1.7320508075688772}, "NDNT.training.earlystopping.EarlyStopping": {"tf": 5.744562646538029}, "NDNT.training.earlystopping.EarlyStopping.__init__": {"tf": 1.7320508075688772}, "NDNT.training.earlystopping.EarlyStopping.patience": {"tf": 1.7320508075688772}, "NDNT.training.earlystopping.EarlyStopping.verbose": {"tf": 1.7320508075688772}, "NDNT.training.earlystopping.EarlyStopping.counter": {"tf": 1.7320508075688772}, "NDNT.training.earlystopping.EarlyStopping.best_score": {"tf": 1.7320508075688772}, "NDNT.training.earlystopping.EarlyStopping.early_stop": {"tf": 1.7320508075688772}, "NDNT.training.earlystopping.EarlyStopping.val_loss_min": {"tf": 1.7320508075688772}, "NDNT.training.earlystopping.EarlyStopping.delta": {"tf": 1.7320508075688772}, "NDNT.training.earlystopping.EarlyStopping.trace_func": {"tf": 1.7320508075688772}, "NDNT.training.lbfgs": {"tf": 1.7320508075688772}, "NDNT.training.lbfgs.is_legal": {"tf": 3.7416573867739413}, "NDNT.training.lbfgs.polyinterp": {"tf": 7}, "NDNT.training.lbfgs.LBFGS": {"tf": 7.615773105863909}, "NDNT.training.lbfgs.LBFGS.__init__": {"tf": 1.7320508075688772}, "NDNT.training.lbfgs.LBFGS.line_search": {"tf": 4.123105625617661}, "NDNT.training.lbfgs.LBFGS.two_loop_recursion": {"tf": 4.795831523312719}, "NDNT.training.lbfgs.LBFGS.curvature_update": {"tf": 5.0990195135927845}, "NDNT.training.lbfgs.LBFGS.step": {"tf": 5}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 7}, "NDNT.training.lbfgs.FullBatchLBFGS.__init__": {"tf": 1.7320508075688772}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 9.591663046625438}, "NDNT.training.lbfgsnew": {"tf": 1.7320508075688772}, "NDNT.training.lbfgsnew.be_verbose": {"tf": 1.7320508075688772}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 9.591663046625438}, "NDNT.training.lbfgsnew.LBFGSNew.__init__": {"tf": 1.7320508075688772}, "NDNT.training.lbfgsnew.LBFGSNew.step": {"tf": 3.872983346207417}, "NDNT.training.trainer": {"tf": 1.7320508075688772}, "NDNT.training.trainer.Trainer": {"tf": 1.7320508075688772}, "NDNT.training.trainer.Trainer.__init__": {"tf": 7.280109889280518}, "NDNT.training.trainer.Trainer.optimizer": {"tf": 1.7320508075688772}, "NDNT.training.trainer.Trainer.scheduler": {"tf": 1.7320508075688772}, "NDNT.training.trainer.Trainer.optimize_graph": {"tf": 1.7320508075688772}, "NDNT.training.trainer.Trainer.log_activations": {"tf": 1.7320508075688772}, "NDNT.training.trainer.Trainer.accumulate_grad_batches": {"tf": 1.7320508075688772}, "NDNT.training.trainer.Trainer.verbose": {"tf": 1.7320508075688772}, "NDNT.training.trainer.Trainer.set_to_none": {"tf": 1.7320508075688772}, "NDNT.training.trainer.Trainer.fullbatch": {"tf": 1.7320508075688772}, "NDNT.training.trainer.Trainer.dirpath": {"tf": 1.7320508075688772}, "NDNT.training.trainer.Trainer.early_stopping": {"tf": 1.7320508075688772}, "NDNT.training.trainer.Trainer.device": {"tf": 1.7320508075688772}, "NDNT.training.trainer.Trainer.logger": {"tf": 1.7320508075688772}, "NDNT.training.trainer.Trainer.version": {"tf": 1.7320508075688772}, "NDNT.training.trainer.Trainer.epoch": {"tf": 1.7320508075688772}, "NDNT.training.trainer.Trainer.max_epochs": {"tf": 1.7320508075688772}, "NDNT.training.trainer.Trainer.n_iter": {"tf": 1.7320508075688772}, "NDNT.training.trainer.Trainer.val_loss_min": {"tf": 1.7320508075688772}, "NDNT.training.trainer.Trainer.step_scheduler_after": {"tf": 1.7320508075688772}, "NDNT.training.trainer.Trainer.step_scheduler_metric": {"tf": 1.7320508075688772}, "NDNT.training.trainer.Trainer.fit": {"tf": 6.4031242374328485}, "NDNT.training.trainer.Trainer.prepare_fit": {"tf": 5.5677643628300215}, "NDNT.training.trainer.Trainer.fit_loop": {"tf": 6.4031242374328485}, "NDNT.training.trainer.Trainer.validate_one_epoch": {"tf": 5.291502622129181}, "NDNT.training.trainer.Trainer.train_one_epoch": {"tf": 5.916079783099616}, "NDNT.training.trainer.Trainer.train_one_step": {"tf": 5.916079783099616}, "NDNT.training.trainer.Trainer.checkpoint_model": {"tf": 5.916079783099616}, "NDNT.training.trainer.Trainer.graceful_exit": {"tf": 4.795831523312719}, "NDNT.training.trainer.LBFGSTrainer": {"tf": 1.7320508075688772}, "NDNT.training.trainer.LBFGSTrainer.__init__": {"tf": 3.4641016151377544}, "NDNT.training.trainer.LBFGSTrainer.fullbatch": {"tf": 1.7320508075688772}, "NDNT.training.trainer.LBFGSTrainer.fit": {"tf": 6.4031242374328485}, "NDNT.training.trainer.LBFGSTrainer.fit_data_dict": {"tf": 5.385164807134504}, "NDNT.training.trainer.LBFGSTrainer.train_one_epoch": {"tf": 5.916079783099616}, "NDNT.training.trainer.TemperatureCalibratedTrainer": {"tf": 1.7320508075688772}, "NDNT.training.trainer.TemperatureCalibratedTrainer.__init__": {"tf": 2.8284271247461903}, "NDNT.training.trainer.TemperatureCalibratedTrainer.validate_one_epoch": {"tf": 5.385164807134504}, "NDNT.utils": {"tf": 1.7320508075688772}, "NDNT.utils.DanUtils": {"tf": 1.7320508075688772}, "NDNT.utils.DanUtils.subplot_setup": {"tf": 1.7320508075688772}, "NDNT.utils.DanUtils.ss": {"tf": 1.7320508075688772}, "NDNT.utils.DanUtils.imagesc": {"tf": 1.4142135623730951}, "NDNT.utils.DanUtils.find_peaks": {"tf": 1.4142135623730951}, "NDNT.utils.DanUtils.filename_num2str": {"tf": 1.7320508075688772}, "NDNT.utils.DanUtils.display_matrix": {"tf": 1.7320508075688772}, "NDNT.utils.DanUtils.figure_export": {"tf": 1.4142135623730951}, "NDNT.utils.DanUtils.matlab_export": {"tf": 1.4142135623730951}, "NDNT.utils.DanUtils.save_python_data": {"tf": 1.7320508075688772}, "NDNT.utils.DanUtils.load_python_data": {"tf": 1.7320508075688772}, "NDNT.utils.DanUtils.fold_sample": {"tf": 1.7320508075688772}, "NDNT.utils.DanUtils.time_embedding_simple": {"tf": 1.4142135623730951}, "NDNT.utils.DanUtils.design_matrix_drift": {"tf": 3.7416573867739413}, "NDNT.utils.DanUtils.max_multiD": {"tf": 1.7320508075688772}, "NDNT.utils.DanUtils.iterate_lbfgs": {"tf": 1.7320508075688772}, "NDNT.utils.DanUtils.binocular_data_import": {"tf": 4.47213595499958}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 5.196152422706632}, "NDNT.utils.DanUtils.monocular_data_import": {"tf": 1.4142135623730951}, "NDNT.utils.MattUtils": {"tf": 1.7320508075688772}, "NDNT.utils.MattUtils.load_losses": {"tf": 1.7320508075688772}, "NDNT.utils.MattUtils.smooth_ema": {"tf": 2}, "NDNT.utils.MattUtils.smooth_conv": {"tf": 1.7320508075688772}, "NDNT.utils.MattUtils.plot_losses": {"tf": 1.7320508075688772}, "NDNT.utils.NDNutils": {"tf": 1.7320508075688772}, "NDNT.utils.NDNutils.fit_lbfgs": {"tf": 1.7320508075688772}, "NDNT.utils.NDNutils.create_optimizer_params": {"tf": 1.7320508075688772}, "NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 5.477225575051661}, "NDNT.utils.NDNutils.CPU_Unpickler.find_class": {"tf": 3}, "NDNT.utils.NDNutils.default_save_dir": {"tf": 1.7320508075688772}, "NDNT.utils.NDNutils.create_time_embedding": {"tf": 6.6332495807108}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 7.0710678118654755}, "NDNT.utils.NDNutils.is_int": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 3.7416573867739413}, "NDNT.utils.NDNutils.tent_basis_generate": {"tf": 3.3166247903554}, "NDNT.utils.NDNutils.shift_mat_zpad": {"tf": 5.830951894845301}, "NDNT.utils.NDNutils.generate_xv_folds": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.initialize_gaussian_envelope": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.pixel2grid": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.grid2pixel": {"tf": 1.7320508075688772}, "NDNT.utils.NDNutils.save_checkpoint": {"tf": 6.164414002968976}, "NDNT.utils.NDNutils.load_checkpoint": {"tf": 5.477225575051661}, "NDNT.utils.NDNutils.ensure_dir": {"tf": 2.6457513110645907}, "NDNT.utils.NDNutils.ModelSummary": {"tf": 1.7320508075688772}, "NDNT.utils.NDNutils.summary_string": {"tf": 1.7320508075688772}, "NDNT.utils.NDNutils.get_fit_versions": {"tf": 4}, "NDNT.utils.NDNutils.load_model": {"tf": 1.7320508075688772}, "NDNT.utils.NDNutils.get_max_samples": {"tf": 4.58257569495584}, "NDNT.utils.NDNutils.NpEncoder": {"tf": 8.426149773176359}, "NDNT.utils.NDNutils.NpEncoder.default": {"tf": 4}, "NDNT.utils.create_reg_matrices": {"tf": 1.7320508075688772}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 7.211102550927978}, "NDNT.utils.create_reg_matrices.create_maxpenalty_matrix": {"tf": 6.4031242374328485}, "NDNT.utils.create_reg_matrices.create_localpenalty_matrix": {"tf": 6.4031242374328485}, "NDNT.utils.ffnet_dicts": {"tf": 1.7320508075688772}, "NDNT.utils.ffnet_dicts.layer_dict": {"tf": 1.4142135623730951}, "NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 2.449489742783178}, "NDNT.utils.ffnet_dicts.ffnet_dict_NIM": {"tf": 1.4142135623730951}, "NDNT.utils.ffnet_dicts.ffnet_dict_readout": {"tf": 1.7320508075688772}, "NDNT.utils.ffnet_dicts.ffnet_dict_external": {"tf": 4.358898943540674}, "NDNT.utils.ffnet_dicts.list_complete": {"tf": 1.7320508075688772}, "NDNT.utils.plotting": {"tf": 1.7320508075688772}, "NDNT.utils.plotting.plot_filters_1D": {"tf": 1.4142135623730951}, "NDNT.utils.plotting.plot_filters_2D": {"tf": 1.4142135623730951}, "NDNT.utils.plotting.plot_filters_ST1D": {"tf": 1.4142135623730951}, "NDNT.utils.plotting.plot_filters_ST2D": {"tf": 1.7320508075688772}, "NDNT.utils.plotting.plot_filters_ST3D": {"tf": 1.7320508075688772}, "NDNT.utils.plotting.plot_scatter": {"tf": 1.7320508075688772}, "NDNT.utils.plotting.plot_internal_weights": {"tf": 1.7320508075688772}, "NDNT.version": {"tf": 1.7320508075688772}, "NDNT.version.version": {"tf": 1.7320508075688772}, "NDNT.metrics": {"tf": 1.7320508075688772}, "NDNT.metrics.mse_loss": {"tf": 1.7320508075688772}, "NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 2.23606797749979}, "NDNT.metrics.mse_loss.MseLoss_datafilter.__init__": {"tf": 1.7320508075688772}, "NDNT.metrics.mse_loss.MseLoss_datafilter.loss_name": {"tf": 1.7320508075688772}, "NDNT.metrics.mse_loss.MseLoss_datafilter.loss": {"tf": 1.7320508075688772}, "NDNT.metrics.mse_loss.MseLoss_datafilter.lossNR": {"tf": 1.7320508075688772}, "NDNT.metrics.mse_loss.MseLoss_datafilter.unit_weighting": {"tf": 1.7320508075688772}, "NDNT.metrics.mse_loss.MseLoss_datafilter.batch_weighting": {"tf": 1.7320508075688772}, "NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 5}, "NDNT.metrics.mse_loss.MseLoss_datafilter.forward": {"tf": 4.123105625617661}, "NDNT.metrics.mse_loss.MseLoss_datafilter.unit_loss": {"tf": 4.242640687119285}, "NDNT.metrics.poisson_loss": {"tf": 1.7320508075688772}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 2}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.__init__": {"tf": 1.7320508075688772}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.loss_name": {"tf": 1.7320508075688772}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.loss": {"tf": 1.7320508075688772}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.lossNR": {"tf": 1.7320508075688772}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.unit_weighting": {"tf": 1.7320508075688772}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.batch_weighting": {"tf": 1.7320508075688772}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_log_epsilon": {"tf": 4.69041575982343}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 6.782329983125268}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.forward": {"tf": 5.744562646538029}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.unit_loss": {"tf": 6.164414002968976}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 2}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.__init__": {"tf": 1.7320508075688772}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.loss_name": {"tf": 1.7320508075688772}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.loss": {"tf": 1.7320508075688772}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.lossNR": {"tf": 1.7320508075688772}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.unit_weighting": {"tf": 1.7320508075688772}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.batch_weighting": {"tf": 1.7320508075688772}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"tf": 6.782329983125268}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.forward": {"tf": 5.744562646538029}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.unit_loss": {"tf": 6.164414002968976}, "NDNT.metrics.rmse_loss": {"tf": 1.7320508075688772}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 2}, "NDNT.metrics.rmse_loss.RmseLoss.__init__": {"tf": 1.7320508075688772}, "NDNT.metrics.rmse_loss.RmseLoss.loss_name": {"tf": 1.7320508075688772}, "NDNT.metrics.rmse_loss.RmseLoss.loss": {"tf": 1.7320508075688772}, "NDNT.metrics.rmse_loss.RmseLoss.lossNR": {"tf": 1.7320508075688772}, "NDNT.metrics.rmse_loss.RmseLoss.unit_weighting": {"tf": 1.7320508075688772}, "NDNT.metrics.rmse_loss.RmseLoss.batch_weighting": {"tf": 1.7320508075688772}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"tf": 6.708203932499369}, "NDNT.metrics.rmse_loss.RmseLoss.forward": {"tf": 5.744562646538029}, "NDNT.metrics.rmse_loss.RmseLoss.unit_loss": {"tf": 6.164414002968976}}, "df": 674, "i": {"1": {"docs": {"NDNT.modules.layers.lvlayers.LVLayer": {"tf": 1}}, "df": 1}, "2": {"docs": {"NDNT.modules.layers.lvlayers.LVLayer": {"tf": 1}}, "df": 1}, "docs": {"NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1.7320508075688772}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1}, "NDNT.modules.regularization.ConvReg.compute_reg_penalty": {"tf": 1}, "NDNT.networks.ScaffoldNetwork": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1}, "NDNT.training.trainer.Trainer": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1}}, "df": 9, "n": {"docs": {"NDNT.NDN.NDN": {"tf": 1}, "NDNT.NDN.NDN.assemble_ffnetworks": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.compute_network_outputs": {"tf": 1}, "NDNT.NDN.NDN.forward": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.get_trainer": {"tf": 1}, "NDNT.NDN.NDN.initialize_loss": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.compute_average_responses": {"tf": 1}, "NDNT.NDN.NDN.initialize_biases": {"tf": 1}, "NDNT.NDN.NDN.eval_models": {"tf": 1}, "NDNT.NDN.NDN.change_loss": {"tf": 1}, "NDNT.NDN.NDN.get_readout_locations": {"tf": 1}, "NDNT.NDN.NDN.save_model": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.save_model_chk": {"tf": 1}, "NDNT.NDN.NDN.get_null_adjusted_ll": {"tf": 1}, "NDNT.modules.activations.adaptive_elu": {"tf": 1.7320508075688772}, "NDNT.modules.activations.AdaptiveELU.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.layers.bilayers.BinocLayer1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.ChannelConvLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.ChannelConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.plot_filters": {"tf": 1.7320508075688772}, "NDNT.modules.layers.convlayers.TconvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.plot_filters": {"tf": 1.7320508075688772}, "NDNT.modules.layers.convlayers.STconvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.dim_info": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.Dim0Layer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.externallayer.ExternalLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.laglayers.LagLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.laglayers.LagLayer.__init__": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.plot_filters": {"tf": 1.4142135623730951}, "NDNT.modules.layers.laglayers.LagLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.lvlayers.LVLayer": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1.7320508075688772}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.plot_filters": {"tf": 1.7320508075688772}, "NDNT.modules.layers.ndnlayer.NDNLayer.dim_info": {"tf": 1.7320508075688772}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.orilayers.OriLayer.__init__": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.rotation_matrix_tensor": {"tf": 1.4142135623730951}, "NDNT.modules.layers.orilayers.OriLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.rotation_matrix_tensor": {"tf": 1.4142135623730951}, "NDNT.modules.layers.orilayers.OriConvLayer.get_rot_mat": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.rotate_tensor": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.passive_readout": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterSTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.Tlayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.plot_filters": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.Tlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.MaskLayer.layer_dict": {"tf": 1}, "NDNT.modules.regularization.Regularization": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 2}, "NDNT.modules.regularization.Regularization.set_reg_val": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.Regularization.build_reg_modules": {"tf": 1}, "NDNT.modules.regularization.ConvReg.compute_reg_penalty": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.ActivityReg.compute_activity_penalty": {"tf": 1}, "NDNT.networks.FFnetwork.determine_input_dims": {"tf": 2}, "NDNT.networks.ScaffoldNetwork": {"tf": 1.7320508075688772}, "NDNT.networks.ScaffoldNetwork3d": {"tf": 1.4142135623730951}, "NDNT.networks.ReadoutNetwork": {"tf": 2.23606797749979}, "NDNT.networks.ReadoutNetwork.determine_input_dims": {"tf": 2}, "NDNT.training.ada_hessian.AdaHessian.get_params": {"tf": 1}, "NDNT.training.earlystopping.EarlyStopping": {"tf": 1}, "NDNT.training.lbfgs.polyinterp": {"tf": 1}, "NDNT.training.lbfgs.LBFGS": {"tf": 2}, "NDNT.training.lbfgs.LBFGS.line_search": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1.4142135623730951}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 2.449489742783178}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1.4142135623730951}, "NDNT.training.trainer.LBFGSTrainer.fit_data_dict": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1}, "NDNT.utils.NDNutils.generate_xv_folds": {"tf": 1}, "NDNT.utils.NDNutils.initialize_gaussian_envelope": {"tf": 1}, "NDNT.utils.NDNutils.get_max_samples": {"tf": 1.7320508075688772}, "NDNT.utils.NDNutils.NpEncoder.default": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 2}, "NDNT.utils.create_reg_matrices.create_maxpenalty_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_localpenalty_matrix": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_external": {"tf": 1.7320508075688772}, "NDNT.utils.plotting.plot_filters_1D": {"tf": 1}, "NDNT.utils.plotting.plot_filters_2D": {"tf": 1}, "NDNT.utils.plotting.plot_filters_ST1D": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 1.7320508075688772}, "NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 1.7320508075688772}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_log_epsilon": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1.7320508075688772}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 1.7320508075688772}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"tf": 1}}, "df": 126, "i": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.modules.layers.bilayers.BiConvLayer1D.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.BiSTconv1D.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.ChannelConvLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.ConvLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.Dim0Layer.dim_info": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.lvlayers.LVLayerOLD.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.dim_info": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.FixationLayer.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterTlayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterSTlayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.Tlayer": {"tf": 1.4142135623730951}, "NDNT.networks.ReadoutNetwork": {"tf": 2.6457513110645907}, "NDNT.utils.NDNutils.tent_basis_generate": {"tf": 1.4142135623730951}}, "df": 23, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1.4142135623730951}, "NDNT.utils.DanUtils.binocular_data_import": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.activations.AdaptiveELU.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.reset_parameters": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.initialize_gaussian_envelope": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.orilayers.OriLayer.__init__": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.initialize": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.networks.ReadoutNetwork": {"tf": 1}}, "df": 19, "s": {"docs": {"NDNT.NDN.NDN": {"tf": 1}, "NDNT.NDN.NDN.__init__": {"tf": 1}, "NDNT.NDN.NDN.initialize_biases": {"tf": 1.4142135623730951}, "NDNT.modules.activations.Square.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.initialize_spatial_mapping": {"tf": 1}, "NDNT.networks.FFnetwork": {"tf": 1}, "NDNT.networks.FFnetwork.__init__": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.__init__": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d.__init__": {"tf": 1}, "NDNT.networks.ReadoutNetwork.__init__": {"tf": 1}, "NDNT.networks.FFnet_external.__init__": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.__init__": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.__init__": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.__init__": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.__init__": {"tf": 1}}, "df": 15}, "d": {"docs": {"NDNT.NDN.NDN.change_loss": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 1}}, "df": 6}, "r": {"docs": {"NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.laglayers.LagLayer": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.__init__": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.reset_parameters": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.L1convLayer.reset_parameters2": {"tf": 1.7320508075688772}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1.4142135623730951}}, "df": 8}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.NDN.NDN.initialize_biases": {"tf": 1}, "NDNT.NDN.NDN.change_loss": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.initialize_gaussian_envelope": {"tf": 1}}, "df": 3}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1.7320508075688772}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.reset_parameters": {"tf": 1.7320508075688772}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.FixationLayer.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 1}}, "df": 11}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.networks.ReadoutNetwork": {"tf": 1}}, "df": 1}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.NDN.NDN": {"tf": 1}, "NDNT.modules.regularization.RegModule.forward": {"tf": 1}, "NDNT.networks.FFnetwork": {"tf": 1}}, "df": 3, "s": {"docs": {"NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.NDN.NDN.fit_dl": {"tf": 1}, "NDNT.NDN.NDN.save_model": {"tf": 1}, "NDNT.NDN.NDN.load_model": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.get_weights": {"tf": 1}, "NDNT.modules.regularization.RegModule.forward": {"tf": 1}}, "df": 6}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {"NDNT.NDN.NDN": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.training_step": {"tf": 1}, "NDNT.NDN.NDN.validation_step": {"tf": 1}, "NDNT.NDN.NDN.get_trainer": {"tf": 1}, "NDNT.NDN.NDN.get_dataloaders": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.get_optimizer": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.fit": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.fit_dl": {"tf": 2}, "NDNT.NDN.NDN.eval_models": {"tf": 1.7320508075688772}, "NDNT.modules.experiment_sampler.ExperimentBatchGenerator": {"tf": 1.4142135623730951}, "NDNT.modules.experiment_sampler.ExperimentBatchIterator": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.BiConvLayer1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1.7320508075688772}, "NDNT.modules.layers.bilayers.ChannelConvLayer": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.layers.convlayers.TconvLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.layers.convlayers.TconvLayer.plot_filters": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.STconvLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.layers.convlayers.STconvLayer.plot_filters": {"tf": 1.4142135623730951}, "NDNT.modules.layers.laglayers.LagLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.laglayers.LagLayer.plot_filters": {"tf": 1.4142135623730951}, "NDNT.modules.layers.laglayers.LagLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.__init__": {"tf": 2}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"tf": 1.7320508075688772}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1.7320508075688772}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.layers.ndnlayer.NDNLayer.get_weights": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.plot_filters": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.dim_info": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1.7320508075688772}, "NDNT.modules.layers.normlayers.DivNormLayer.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.get_weights": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterLayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.plot_filters": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.OnOffLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.regularization.Regularization": {"tf": 1}, "NDNT.networks.FFnetwork.list_parameters": {"tf": 1}, "NDNT.networks.FFnetwork.set_parameters": {"tf": 1}, "NDNT.networks.FFnetwork.set_reg_val": {"tf": 1}, "NDNT.networks.FFnetwork.plot_filters": {"tf": 1}, "NDNT.networks.FFnetwork.get_weights": {"tf": 1}, "NDNT.networks.FFnetwork.ffnet_dict": {"tf": 1}, "NDNT.networks.ScaffoldNetwork": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.ffnet_dict": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1}, "NDNT.networks.ReadoutNetwork.ffnet_dict": {"tf": 1}, "NDNT.networks.FFnet_external.list_params": {"tf": 1}, "NDNT.networks.FFnet_external.set_params": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian": {"tf": 1.4142135623730951}, "NDNT.training.earlystopping.EarlyStopping": {"tf": 1}, "NDNT.training.lbfgs.LBFGS": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 2.6457513110645907}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1.7320508075688772}, "NDNT.training.trainer.Trainer.__init__": {"tf": 1}, "NDNT.training.trainer.Trainer.fit": {"tf": 1}, "NDNT.training.trainer.Trainer.prepare_fit": {"tf": 1}, "NDNT.training.trainer.Trainer.fit_loop": {"tf": 1}, "NDNT.training.trainer.Trainer.train_one_epoch": {"tf": 1}, "NDNT.training.trainer.Trainer.train_one_step": {"tf": 1}, "NDNT.training.trainer.Trainer.checkpoint_model": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.fit": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.train_one_epoch": {"tf": 1}, "NDNT.utils.NDNutils.save_checkpoint": {"tf": 1}, "NDNT.utils.NDNutils.NpEncoder": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"tf": 1.4142135623730951}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"tf": 1.4142135623730951}}, "df": 92, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.NDN.NDN.__init__": {"tf": 1}, "NDNT.modules.activations.Square.__init__": {"tf": 1}, "NDNT.networks.FFnetwork.__init__": {"tf": 1}, "NDNT.networks.FFnetwork.determine_input_dims": {"tf": 2}, "NDNT.networks.ScaffoldNetwork.__init__": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d.__init__": {"tf": 1}, "NDNT.networks.ReadoutNetwork.__init__": {"tf": 1}, "NDNT.networks.ReadoutNetwork.determine_input_dims": {"tf": 2}, "NDNT.networks.FFnet_external.__init__": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 1.4142135623730951}, "NDNT.metrics.mse_loss.MseLoss_datafilter.__init__": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.__init__": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.__init__": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.__init__": {"tf": 1}}, "df": 14}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.NDN.NDN.initialize_loss": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.layers.lvlayers.LVLayer": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1.4142135623730951}}, "df": 2}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.networks.ReadoutNetwork": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1.4142135623730951}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1}}, "df": 3}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.training.lbfgs.polyinterp": {"tf": 2}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.training.trainer.Trainer.graceful_exit": {"tf": 1}}, "df": 1}}}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.layers.convlayers.TconvLayer": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1}}, "df": 1, "s": {"docs": {"NDNT.utils.NDNutils.is_int": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}}, "df": 1}}}}}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {"NDNT.NDN.NDN.assemble_ffnetworks": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.get_weights": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.passive_readout": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.layer_dict": {"tf": 1}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1}, "NDNT.networks.FFnet_external": {"tf": 1}, "NDNT.utils.DanUtils.design_matrix_drift": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_external": {"tf": 1.4142135623730951}}, "df": 40}, "s": {"docs": {"NDNT.modules.layers.bilayers.BinocLayer1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.BiSTconv1D.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.ChannelConvLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.ConvLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.dim_info": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.__init__": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.laglayers.LagLayer": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.dim_info": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.ReadoutLayer3d.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterTlayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterSTlayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.Tlayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_maxpenalty_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_localpenalty_matrix": {"tf": 1}}, "df": 46}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"1": {"docs": {"NDNT.modules.layers.lvlayers.LVLayer": {"tf": 1}}, "df": 1}, "2": {"docs": {"NDNT.modules.layers.lvlayers.LVLayer": {"tf": 1}}, "df": 1}, "docs": {"NDNT.NDN.NDN": {"tf": 1}, "NDNT.NDN.NDN.training_step": {"tf": 1}, "NDNT.NDN.NDN.validation_step": {"tf": 1}, "NDNT.NDN.NDN.generate_predictions": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer.train_one_step": {"tf": 1}}, "df": 6, "e": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.layers.lvlayers.LVLayer.forward": {"tf": 1}}, "df": 1}, "d": {"docs": {"NDNT.modules.layers.lvlayers.LVLayerOLD.forward": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {"NDNT.NDN.NDN.get_dataloaders": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.fit": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.initialize_loss": {"tf": 1}, "NDNT.NDN.NDN.compute_average_responses": {"tf": 1}, "NDNT.NDN.NDN.initialize_biases": {"tf": 1}, "NDNT.NDN.NDN.eval_models": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.generate_predictions": {"tf": 1.4142135623730951}, "NDNT.utils.DanUtils.binocular_data_import": {"tf": 1.4142135623730951}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 3.3166247903554}, "NDNT.utils.DanUtils.monocular_data_import": {"tf": 1.7320508075688772}}, "df": 10}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.NDN.NDN.get_dataloaders": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.fit": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.initialize_loss": {"tf": 1}, "NDNT.NDN.NDN.compute_average_responses": {"tf": 1}, "NDNT.NDN.NDN.initialize_biases": {"tf": 1}, "NDNT.NDN.NDN.eval_models": {"tf": 1}, "NDNT.NDN.NDN.generate_predictions": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchIterator": {"tf": 1}, "NDNT.modules.experiment_sampler.construct_exp_to_time": {"tf": 1.7320508075688772}, "NDNT.modules.experiment_sampler.ExperimentSampler": {"tf": 1.7320508075688772}, "NDNT.modules.layers.lvlayers.LVLayer": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.forward": {"tf": 1.4142135623730951}, "NDNT.utils.DanUtils.binocular_data_import": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 2}, "NDNT.utils.NDNutils.generate_xv_folds": {"tf": 1}}, "df": 15}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.modules.layers.dimlayers.ChannelLayer": {"tf": 1}, "NDNT.utils.NDNutils.initialize_gaussian_envelope": {"tf": 1}}, "df": 2, "l": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"tf": 1}}, "df": 4}}}}}}}}}, "x": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.NDN.NDN.assemble_ffnetworks": {"tf": 1}, "NDNT.NDN.NDN.compute_network_outputs": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.forward": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.training_step": {"tf": 1}, "NDNT.NDN.NDN.validation_step": {"tf": 1}, "NDNT.NDN.NDN.eval_models": {"tf": 1}, "NDNT.NDN.NDN.get_activations": {"tf": 1.4142135623730951}, "NDNT.modules.activations.adaptive_elu": {"tf": 1.4142135623730951}, "NDNT.modules.activations.Square.forward": {"tf": 1}, "NDNT.modules.activations.AdaptiveELU.__init__": {"tf": 1}, "NDNT.modules.activations.AdaptiveELU.forward": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.BinocLayer1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1.7320508075688772}, "NDNT.modules.layers.bilayers.ChannelConvLayer": {"tf": 1.7320508075688772}, "NDNT.modules.layers.bilayers.ChannelConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.ConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.forward": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.TconvLayer.forward": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer": {"tf": 2}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.STconvLayer.forward": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.forward": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.dim_info": {"tf": 1.7320508075688772}, "NDNT.modules.layers.dimlayers.Dim0Layer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.forward": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.forward": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.forward": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.__init__": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.forward": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.laglayers.LagLayer.__init__": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.laglayers.LagLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.lvlayers.LVLayer.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.forward": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.forward": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.dim_info": {"tf": 1.7320508075688772}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1.7320508075688772}, "NDNT.modules.layers.normlayers.DivNormLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.normlayers.DivNormLayer.forward": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.orilayers.OriLayer.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.orilayers.OriLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.orilayers.OriConvLayer.rotate_tensor": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.orilayers.OriConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.orilayers.ConvLayer3D.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.orilayers.ConvLayer3D.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.ReadoutLayer.passive_readout": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.ReadoutLayer3d.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterLayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.forward": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.forward": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.forward": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.forward": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.forward": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.__init__": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.forward": {"tf": 1}, "NDNT.modules.regularization.Regularization": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1.7320508075688772}, "NDNT.networks.FFnetwork": {"tf": 1.7320508075688772}, "NDNT.networks.FFnetwork.determine_input_dims": {"tf": 3.1622776601683795}, "NDNT.networks.FFnetwork.preprocess_input": {"tf": 1.7320508075688772}, "NDNT.networks.FFnetwork.forward": {"tf": 1}, "NDNT.networks.FFnetwork.ffnet_dict": {"tf": 1}, "NDNT.networks.ScaffoldNetwork": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.forward": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d.forward": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1.4142135623730951}, "NDNT.networks.ReadoutNetwork.determine_input_dims": {"tf": 3.1622776601683795}, "NDNT.networks.ReadoutNetwork.forward": {"tf": 1}, "NDNT.networks.FFnet_external": {"tf": 1.4142135623730951}, "NDNT.networks.FFnet_external.forward": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_maxpenalty_matrix": {"tf": 1.7320508075688772}, "NDNT.utils.create_reg_matrices.create_localpenalty_matrix": {"tf": 1.7320508075688772}, "NDNT.utils.ffnet_dicts.layer_dict": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 1.7320508075688772}, "NDNT.utils.ffnet_dicts.ffnet_dict_NIM": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_external": {"tf": 2.449489742783178}, "NDNT.metrics.mse_loss.MseLoss_datafilter.forward": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.forward": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.forward": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.forward": {"tf": 1}}, "df": 136, "s": {"docs": {"NDNT.NDN.NDN.assemble_ffnetworks": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.compute_network_outputs": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.forward": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.get_activations": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.BinocLayer1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.dim_info": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.dim_info": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.layer_dict": {"tf": 1}, "NDNT.networks.FFnetwork.determine_input_dims": {"tf": 2}, "NDNT.networks.FFnetwork.preprocess_input": {"tf": 1}, "NDNT.networks.FFnetwork.forward": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.forward": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d.forward": {"tf": 1}, "NDNT.networks.ReadoutNetwork.determine_input_dims": {"tf": 2}, "NDNT.networks.ReadoutNetwork.forward": {"tf": 1.4142135623730951}, "NDNT.networks.FFnet_external.forward": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1}, "NDNT.utils.DanUtils.design_matrix_drift": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}, "NDNT.utils.NDNutils.fit_lbfgs": {"tf": 1}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 1}, "NDNT.utils.NDNutils.get_max_samples": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_readout": {"tf": 1}}, "df": 51}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.activations.adaptive_elu": {"tf": 1}, "NDNT.modules.activations.AdaptiveELU.__init__": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 2}}, "df": 3}}}}}, "f": {"docs": {"NDNT.training.lbfgs.is_legal": {"tf": 1}}, "df": 1, "o": {"docs": {"NDNT.modules.regularization.Regularization": {"tf": 1}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import": {"tf": 2}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1.7320508075688772}, "NDNT.utils.DanUtils.monocular_data_import": {"tf": 1.7320508075688772}, "NDNT.utils.ffnet_dicts.ffnet_dict_readout": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 1.4142135623730951}, "NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 1.4142135623730951}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"tf": 1}}, "df": 14, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.NDN.NDN.initialize_loss": {"tf": 1}, "NDNT.NDN.NDN.save_model": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.dim_info": {"tf": 1}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1}, "NDNT.modules.regularization.Regularization.set_reg_val": {"tf": 1}, "NDNT.networks.FFnet_external": {"tf": 1}, "NDNT.training.lbfgs.polyinterp": {"tf": 1}, "NDNT.training.lbfgs.LBFGS": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_external": {"tf": 1}}, "df": 10}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.modules.layers.bilayers.BiSTconv1D": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.layers.bilayers.BiConvLayer1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1}}, "df": 25, "d": {"docs": {"NDNT.modules.layers.bilayers.BinocLayer1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.layer_dict": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding": {"tf": 1}}, "df": 27}, "s": {"docs": {"NDNT.modules.layers.reslayers.IterLayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer": {"tf": 1}}, "df": 3}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"tf": 1}}, "df": 4}}}}}}, "h": {"docs": {"NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.get_weights": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.get_weights": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1}}, "df": 10, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.get_weights": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.ReadoutLayer.get_weights": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1}}, "df": 10}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.modules.layers.ndnlayer.NDNLayer.get_weights": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.layers.laglayers.LagLayer": {"tf": 1}}, "df": 1}}}}}}, "v": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1}}, "df": 1, "s": {"docs": {"NDNT.modules.layers.convlayers.ConvLayer.batchnorm_convert": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.networks.FFnetwork.list_parameters": {"tf": 1}, "NDNT.networks.FFnetwork.set_parameters": {"tf": 1}, "NDNT.networks.FFnetwork.set_reg_val": {"tf": 1}, "NDNT.networks.FFnetwork.get_weights": {"tf": 1}, "NDNT.networks.ScaffoldNetwork": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.ffnet_dict": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d": {"tf": 1}, "NDNT.networks.FFnet_external": {"tf": 1}, "NDNT.networks.FFnet_external.list_params": {"tf": 1}, "NDNT.networks.FFnet_external.set_params": {"tf": 1}}, "df": 10}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.regularization.InlineReg": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1.4142135623730951}}, "df": 1}}}}, "f": {"docs": {"NDNT.NDN.NDN": {"tf": 2.23606797749979}, "NDNT.NDN.NDN.assemble_ffnetworks": {"tf": 1}, "NDNT.NDN.NDN.compute_network_outputs": {"tf": 1}, "NDNT.NDN.NDN.get_trainer": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.fit": {"tf": 1}, "NDNT.NDN.NDN.fit_dl": {"tf": 1}, "NDNT.NDN.NDN.eval_models": {"tf": 3.3166247903554}, "NDNT.NDN.NDN.generate_predictions": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.change_loss": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.dim_info": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.__init__": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1.7320508075688772}, "NDNT.modules.layers.ndnlayer.NDNLayer.set_parameters": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.dim_info": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1.7320508075688772}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.regularization.Regularization.set_reg_val": {"tf": 1.7320508075688772}, "NDNT.networks.FFnetwork": {"tf": 1}, "NDNT.networks.FFnetwork.preprocess_input": {"tf": 1}, "NDNT.networks.FFnetwork.list_parameters": {"tf": 1}, "NDNT.networks.FFnetwork.set_parameters": {"tf": 1}, "NDNT.networks.FFnetwork.set_reg_val": {"tf": 1}, "NDNT.networks.FFnetwork.get_weights": {"tf": 1}, "NDNT.networks.ScaffoldNetwork": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.forward": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.ffnet_dict": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d.forward": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1}, "NDNT.networks.ReadoutNetwork.forward": {"tf": 1}, "NDNT.networks.FFnet_external": {"tf": 1}, "NDNT.networks.FFnet_external.forward": {"tf": 1}, "NDNT.networks.FFnet_external.list_params": {"tf": 1}, "NDNT.networks.FFnet_external.set_params": {"tf": 1}, "NDNT.training.earlystopping.EarlyStopping": {"tf": 1.4142135623730951}, "NDNT.training.lbfgs.polyinterp": {"tf": 1.4142135623730951}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 2}, "NDNT.training.trainer.Trainer.__init__": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer.graceful_exit": {"tf": 1}, "NDNT.utils.DanUtils.figure_export": {"tf": 1}, "NDNT.utils.DanUtils.time_embedding_simple": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}, "NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1}, "NDNT.utils.NDNutils.CPU_Unpickler.find_class": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1}, "NDNT.utils.NDNutils.tent_basis_generate": {"tf": 1}, "NDNT.utils.NDNutils.save_checkpoint": {"tf": 1}, "NDNT.utils.NDNutils.load_checkpoint": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.ensure_dir": {"tf": 1}, "NDNT.utils.NDNutils.NpEncoder": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 1.7320508075688772}, "NDNT.utils.ffnet_dicts.ffnet_dict_external": {"tf": 1.4142135623730951}, "NDNT.metrics.mse_loss.MseLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_log_epsilon": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.unit_loss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.unit_loss": {"tf": 1}}, "df": 63}, "s": {"docs": {"NDNT.NDN.NDN": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.assemble_ffnetworks": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.forward": {"tf": 1}, "NDNT.NDN.NDN.get_trainer": {"tf": 2.23606797749979}, "NDNT.NDN.NDN.get_dataloaders": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.get_optimizer": {"tf": 2.6457513110645907}, "NDNT.NDN.NDN.fit": {"tf": 2.6457513110645907}, "NDNT.NDN.NDN.fit_dl": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.eval_models": {"tf": 3.4641016151377544}, "NDNT.NDN.NDN.change_loss": {"tf": 1}, "NDNT.NDN.NDN.get_weights": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.STconvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.dim_info": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.laglayers.LagLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.forward": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1.7320508075688772}, "NDNT.modules.layers.ndnlayer.NDNLayer.initialize_gaussian_envelope": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.set_parameters": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.dim_info": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1.7320508075688772}, "NDNT.modules.layers.readouts.ReadoutLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.forward": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.Tlayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.Tlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.layer_dict": {"tf": 1}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 2.23606797749979}, "NDNT.modules.regularization.Regularization.set_reg_val": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.ConvReg.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.TikhanovC": {"tf": 1}, "NDNT.networks.FFnetwork": {"tf": 1}, "NDNT.networks.FFnetwork.prepare_regularization": {"tf": 1}, "NDNT.networks.FFnetwork.list_parameters": {"tf": 1}, "NDNT.networks.FFnetwork.set_parameters": {"tf": 1}, "NDNT.networks.FFnetwork.set_reg_val": {"tf": 1}, "NDNT.networks.FFnetwork.get_weights": {"tf": 1}, "NDNT.networks.ScaffoldNetwork": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1.7320508075688772}, "NDNT.networks.FFnet_external": {"tf": 1.4142135623730951}, "NDNT.networks.FFnet_external.list_params": {"tf": 1}, "NDNT.networks.FFnet_external.set_params": {"tf": 1}, "NDNT.training.lbfgs.is_legal": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 2}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer": {"tf": 1}, "NDNT.training.trainer.Trainer.prepare_fit": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer.fit_loop": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer.checkpoint_model": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer.graceful_exit": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer": {"tf": 1.4142135623730951}, "NDNT.training.trainer.LBFGSTrainer.fit_data_dict": {"tf": 1}, "NDNT.training.trainer.TemperatureCalibratedTrainer": {"tf": 1.4142135623730951}, "NDNT.utils.DanUtils.time_embedding_simple": {"tf": 1.4142135623730951}, "NDNT.utils.DanUtils.design_matrix_drift": {"tf": 1.7320508075688772}, "NDNT.utils.DanUtils.binocular_data_import": {"tf": 1.4142135623730951}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 2.23606797749979}, "NDNT.utils.DanUtils.monocular_data_import": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1.7320508075688772}, "NDNT.utils.NDNutils.CPU_Unpickler.find_class": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.create_time_embedding": {"tf": 1.7320508075688772}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1.7320508075688772}, "NDNT.utils.NDNutils.is_int": {"tf": 1}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 1.7320508075688772}, "NDNT.utils.NDNutils.initialize_gaussian_envelope": {"tf": 1.7320508075688772}, "NDNT.utils.NDNutils.save_checkpoint": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 2.6457513110645907}, "NDNT.utils.create_reg_matrices.create_maxpenalty_matrix": {"tf": 1.4142135623730951}, "NDNT.utils.create_reg_matrices.create_localpenalty_matrix": {"tf": 1.4142135623730951}, "NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 1.4142135623730951}, "NDNT.utils.ffnet_dicts.ffnet_dict_readout": {"tf": 1.4142135623730951}, "NDNT.utils.ffnet_dicts.ffnet_dict_external": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 1.7320508075688772}, "NDNT.metrics.mse_loss.MseLoss_datafilter.forward": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 1.7320508075688772}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.forward": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1.7320508075688772}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.forward": {"tf": 1.4142135623730951}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 1.7320508075688772}, "NDNT.metrics.rmse_loss.RmseLoss.forward": {"tf": 1.4142135623730951}}, "df": 110, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"NDNT.modules.layers.lvlayers.LVLayerOLD.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}}, "t": {"docs": {"NDNT.NDN.NDN.assemble_ffnetworks": {"tf": 1}, "NDNT.NDN.NDN.get_trainer": {"tf": 1}, "NDNT.NDN.NDN.eval_models": {"tf": 2}, "NDNT.modules.layers.convlayers.TconvLayer": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1.7320508075688772}, "NDNT.modules.layers.readouts.ReadoutLayer.passive_readout": {"tf": 1}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1}, "NDNT.modules.regularization.Regularization.unit_reg_convert": {"tf": 1}, "NDNT.networks.FFnetwork.determine_input_dims": {"tf": 1.4142135623730951}, "NDNT.networks.FFnetwork.prepare_regularization": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1.4142135623730951}, "NDNT.networks.ReadoutNetwork.determine_input_dims": {"tf": 1.4142135623730951}, "NDNT.networks.ReadoutNetwork.forward": {"tf": 1}, "NDNT.networks.FFnet_external": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.set_hessian": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer.graceful_exit": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer": {"tf": 1}, "NDNT.training.trainer.TemperatureCalibratedTrainer": {"tf": 1}, "NDNT.utils.DanUtils.find_peaks": {"tf": 1}, "NDNT.utils.DanUtils.time_embedding_simple": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}, "NDNT.utils.NDNutils.shift_mat_zpad": {"tf": 1}, "NDNT.utils.NDNutils.save_checkpoint": {"tf": 1}, "NDNT.utils.NDNutils.NpEncoder": {"tf": 1}, "NDNT.utils.NDNutils.NpEncoder.default": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1.4142135623730951}, "NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.forward": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.forward": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.forward": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.forward": {"tf": 1}}, "df": 33, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.NDN.NDN.get_optimizer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 2}, "NDNT.utils.NDNutils.NpEncoder.default": {"tf": 1}}, "df": 9, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.NDN.NDN.get_optimizer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1.4142135623730951}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1}}, "df": 9}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.experiment_sampler.ExperimentBatchIterator": {"tf": 1}}, "df": 1, "s": {"docs": {"NDNT.utils.NDNutils.NpEncoder.default": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 2.23606797749979}}, "df": 1}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.training.ada_hessian.AdaHessian": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.NpEncoder.default": {"tf": 1.4142135623730951}}, "df": 2}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.forward": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.forward": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.forward": {"tf": 1}}, "df": 6}}}}}}, "m": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.utils.DanUtils.fold_sample": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"NDNT.NDN.NDN.passive_readout": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_external": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"docs": {"NDNT.NDN.NDN.save_model_chk": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "x": {"docs": {"NDNT.NDN.NDN.training_step": {"tf": 1}, "NDNT.NDN.NDN.validation_step": {"tf": 1}, "NDNT.training.trainer.Trainer.train_one_step": {"tf": 1}}, "df": 3}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer.passive_readout": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.training.ada_hessian.AdaHessian": {"tf": 1}, "NDNT.training.earlystopping.EarlyStopping": {"tf": 1}}, "df": 2, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.NDN.NDN.get_trainer": {"tf": 1.4142135623730951}, "NDNT.training.earlystopping.EarlyStopping": {"tf": 1.4142135623730951}}, "df": 2}}}}, "d": {"docs": {"NDNT.training.earlystopping.EarlyStopping": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.utils.NDNutils.NpEncoder": {"tf": 1}, "NDNT.utils.NDNutils.NpEncoder.default": {"tf": 1.4142135623730951}}, "df": 2, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.modules.layers.normlayers.DivNormLayer": {"tf": 1}, "NDNT.training.lbfgs.LBFGS": {"tf": 1}, "NDNT.utils.MattUtils.smooth_ema": {"tf": 1}, "NDNT.utils.NDNutils.NpEncoder": {"tf": 1}, "NDNT.utils.NDNutils.NpEncoder.default": {"tf": 1}}, "df": 5, "s": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {"NDNT.training.ada_hessian.AdaHessian": {"tf": 1}, "NDNT.training.lbfgs.LBFGS": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1}}, "df": 4}, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.training.lbfgs.polyinterp": {"tf": 1}, "NDNT.training.lbfgs.LBFGS": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1}}, "df": 3}}}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.modules.regularization.ConvReg.compute_reg_penalty": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"tf": 1}}, "df": 5}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.utils.DanUtils.binocular_data_import": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1.4142135623730951}, "NDNT.utils.DanUtils.monocular_data_import": {"tf": 1}}, "df": 3, "s": {"docs": {"NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}, "NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1.4142135623730951}}, "df": 2}, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.utils.NDNutils.CPU_Unpickler.find_class": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.networks.FFnetwork.prepare_regularization": {"tf": 1}}, "df": 1}}}}}}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.networks.ReadoutNetwork": {"tf": 1}}, "df": 1, "s": {"docs": {"NDNT.utils.plotting.plot_filters_1D": {"tf": 1}, "NDNT.utils.plotting.plot_filters_2D": {"tf": 1}, "NDNT.utils.plotting.plot_filters_ST1D": {"tf": 1}}, "df": 3}}}}, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"NDNT.utils.DanUtils.imagesc": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.regularization.RegModule.forward": {"tf": 1}}, "df": 1}, "d": {"docs": {"NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {"NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1}}, "df": 1}}, "a": {"docs": {"NDNT.NDN.NDN": {"tf": 2.23606797749979}, "NDNT.NDN.NDN.assemble_ffnetworks": {"tf": 2.449489742783178}, "NDNT.NDN.NDN.compute_network_outputs": {"tf": 1}, "NDNT.NDN.NDN.forward": {"tf": 1}, "NDNT.NDN.NDN.training_step": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.validation_step": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.get_trainer": {"tf": 1}, "NDNT.NDN.NDN.get_dataloaders": {"tf": 1}, "NDNT.NDN.NDN.fit": {"tf": 1}, "NDNT.NDN.NDN.fit_dl": {"tf": 1}, "NDNT.NDN.NDN.initialize_loss": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.eval_models": {"tf": 2.6457513110645907}, "NDNT.NDN.NDN.generate_predictions": {"tf": 1}, "NDNT.NDN.NDN.change_loss": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.get_readout_locations": {"tf": 1}, "NDNT.NDN.NDN.save_model_zip": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.load_model_zip": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.get_null_adjusted_ll": {"tf": 1}, "NDNT.NDN.NDN.get_activations": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.load_model": {"tf": 1}, "NDNT.NDN.NDN.load_model_chk": {"tf": 1}, "NDNT.modules.activity_regularization.ActivityRegularization.activity": {"tf": 1}, "NDNT.modules.activity_regularization.ActivityRegularization.nonneg": {"tf": 1}, "NDNT.modules.activity_regularization.ActivityRegularization.regularize": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchGenerator": {"tf": 1}, "NDNT.modules.experiment_sampler.construct_exp_to_time": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.BiConvLayer1D.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1.7320508075688772}, "NDNT.modules.layers.bilayers.ChannelConvLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.ConvLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.TconvLayer": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.STconvLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.Dim0Layer.dim_info": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.ChannelLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.DimSPLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.DimSPTLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.externallayer.ExternalLayer": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.lvlayers.LVLayer": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.initialize_gaussian_envelope": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.set_reg_val": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.dim_info": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1.7320508075688772}, "NDNT.modules.layers.normlayers.DivNormLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.orilayers.OriLayer.rotation_matrix_tensor": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.rotation_matrix_tensor": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.get_rot_mat": {"tf": 1.4142135623730951}, "NDNT.modules.layers.orilayers.OriConvLayer.rotate_tensor": {"tf": 1.4142135623730951}, "NDNT.modules.layers.orilayers.OriConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.ReadoutLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.ReadoutLayer3d": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.FixationLayer.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterLayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1.7320508075688772}, "NDNT.modules.layers.reslayers.IterTlayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1.7320508075688772}, "NDNT.modules.layers.reslayers.IterSTlayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1.7320508075688772}, "NDNT.modules.layers.specialtylayers.Tlayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.L1convLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.OnOffLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.MaskLayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.timelayers.TimeLayer": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.__init__": {"tf": 1}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1}, "NDNT.modules.regularization.Regularization.set_reg_val": {"tf": 1.4142135623730951}, "NDNT.networks.FFnetwork": {"tf": 2.23606797749979}, "NDNT.networks.FFnetwork.determine_input_dims": {"tf": 1.4142135623730951}, "NDNT.networks.FFnetwork.ffnet_dict": {"tf": 2}, "NDNT.networks.ScaffoldNetwork": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.ffnet_dict": {"tf": 1.4142135623730951}, "NDNT.networks.ScaffoldNetwork3d.ffnet_dict": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 2.449489742783178}, "NDNT.networks.ReadoutNetwork.determine_input_dims": {"tf": 1.4142135623730951}, "NDNT.networks.ReadoutNetwork.forward": {"tf": 1}, "NDNT.networks.ReadoutNetwork.ffnet_dict": {"tf": 1}, "NDNT.networks.FFnet_external": {"tf": 1.7320508075688772}, "NDNT.networks.FFnet_external.ffnet_dict": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.get_params": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.step": {"tf": 1.4142135623730951}, "NDNT.training.earlystopping.EarlyStopping": {"tf": 1.4142135623730951}, "NDNT.training.lbfgs.LBFGS": {"tf": 2}, "NDNT.training.lbfgs.LBFGS.step": {"tf": 1.4142135623730951}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1.7320508075688772}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1.7320508075688772}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 2}, "NDNT.training.lbfgsnew.LBFGSNew.step": {"tf": 1.4142135623730951}, "NDNT.training.trainer.LBFGSTrainer": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.fit_data_dict": {"tf": 1}, "NDNT.training.trainer.TemperatureCalibratedTrainer": {"tf": 1}, "NDNT.utils.DanUtils.time_embedding_simple": {"tf": 1}, "NDNT.utils.DanUtils.design_matrix_drift": {"tf": 2.449489742783178}, "NDNT.utils.NDNutils.fit_lbfgs": {"tf": 1}, "NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 2.23606797749979}, "NDNT.utils.NDNutils.CPU_Unpickler.find_class": {"tf": 1.7320508075688772}, "NDNT.utils.NDNutils.create_time_embedding": {"tf": 2}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 2.23606797749979}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 2.449489742783178}, "NDNT.utils.NDNutils.tent_basis_generate": {"tf": 1}, "NDNT.utils.NDNutils.shift_mat_zpad": {"tf": 1}, "NDNT.utils.NDNutils.initialize_gaussian_envelope": {"tf": 1}, "NDNT.utils.NDNutils.save_checkpoint": {"tf": 1}, "NDNT.utils.NDNutils.get_max_samples": {"tf": 1}, "NDNT.utils.NDNutils.NpEncoder": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.NpEncoder.default": {"tf": 1.7320508075688772}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 2.8284271247461903}, "NDNT.utils.create_reg_matrices.create_maxpenalty_matrix": {"tf": 2}, "NDNT.utils.create_reg_matrices.create_localpenalty_matrix": {"tf": 2}, "NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 1.4142135623730951}, "NDNT.utils.ffnet_dicts.ffnet_dict_NIM": {"tf": 1.4142135623730951}}, "df": 129, "n": {"docs": {"NDNT.NDN.NDN": {"tf": 1}, "NDNT.NDN.NDN.get_optimizer": {"tf": 1}, "NDNT.networks.FFnetwork": {"tf": 1}, "NDNT.networks.FFnet_external": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian": {"tf": 1}, "NDNT.training.earlystopping.EarlyStopping": {"tf": 1}, "NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.CPU_Unpickler.find_class": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_maxpenalty_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_localpenalty_matrix": {"tf": 1}}, "df": 11, "d": {"docs": {"NDNT.NDN.NDN": {"tf": 1}, "NDNT.NDN.NDN.__init__": {"tf": 1}, "NDNT.NDN.NDN.assemble_ffnetworks": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.compute_network_outputs": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.training_step": {"tf": 1}, "NDNT.NDN.NDN.get_dataloaders": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.fit": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.fit_dl": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.initialize_loss": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.initialize_biases": {"tf": 1}, "NDNT.NDN.NDN.get_readout_locations": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.passive_readout": {"tf": 1}, "NDNT.NDN.NDN.list_parameters": {"tf": 1}, "NDNT.NDN.NDN.set_parameters": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.set_reg_val": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.save_model_zip": {"tf": 1}, "NDNT.NDN.NDN.load_model_zip": {"tf": 1}, "NDNT.NDN.NDN.save_model_chk": {"tf": 1}, "NDNT.NDN.NDN.get_activations": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.load_model": {"tf": 1}, "NDNT.modules.activations.Square.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.batchnorm_convert": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.dim_info": {"tf": 1.4142135623730951}, "NDNT.modules.layers.laglayers.LagLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.lvlayers.LVLayer": {"tf": 1.7320508075688772}, "NDNT.modules.layers.lvlayers.LVLayer.__init__": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.forward": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 2.23606797749979}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.reset_parameters": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.dim_info": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.initialize_spatial_mapping": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1.7320508075688772}, "NDNT.modules.layers.readouts.ReadoutLayer.get_readout_locations": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.passive_readout": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.__init__": {"tf": 1}, "NDNT.modules.regularization.Regularization": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.ConvReg.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.ActivityReg": {"tf": 1}, "NDNT.networks.FFnetwork.__init__": {"tf": 1}, "NDNT.networks.FFnetwork.determine_input_dims": {"tf": 1}, "NDNT.networks.FFnetwork.prepare_regularization": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.__init__": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d.__init__": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1.4142135623730951}, "NDNT.networks.ReadoutNetwork.__init__": {"tf": 1}, "NDNT.networks.ReadoutNetwork.determine_input_dims": {"tf": 1}, "NDNT.networks.ReadoutNetwork.forward": {"tf": 1}, "NDNT.networks.FFnet_external.__init__": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.set_hessian": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.step": {"tf": 1}, "NDNT.training.lbfgs.polyinterp": {"tf": 1.7320508075688772}, "NDNT.training.lbfgs.LBFGS": {"tf": 3.3166247903554}, "NDNT.training.lbfgs.LBFGS.step": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 2}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1.4142135623730951}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew.step": {"tf": 1}, "NDNT.training.trainer.Trainer.__init__": {"tf": 1}, "NDNT.training.trainer.Trainer.fit": {"tf": 1}, "NDNT.training.trainer.Trainer.prepare_fit": {"tf": 2}, "NDNT.training.trainer.Trainer.fit_loop": {"tf": 1}, "NDNT.training.trainer.Trainer.validate_one_epoch": {"tf": 1}, "NDNT.training.trainer.Trainer.train_one_epoch": {"tf": 1}, "NDNT.training.trainer.Trainer.train_one_step": {"tf": 1}, "NDNT.training.trainer.Trainer.checkpoint_model": {"tf": 1}, "NDNT.training.trainer.Trainer.graceful_exit": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.fit": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.fit_data_dict": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.train_one_epoch": {"tf": 1}, "NDNT.training.trainer.TemperatureCalibratedTrainer.validate_one_epoch": {"tf": 1}, "NDNT.utils.DanUtils.find_peaks": {"tf": 1}, "NDNT.utils.DanUtils.figure_export": {"tf": 1}, "NDNT.utils.DanUtils.time_embedding_simple": {"tf": 1}, "NDNT.utils.DanUtils.design_matrix_drift": {"tf": 1.7320508075688772}, "NDNT.utils.DanUtils.binocular_data_import": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 2.6457513110645907}, "NDNT.utils.NDNutils.fit_lbfgs": {"tf": 1}, "NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 2}, "NDNT.utils.NDNutils.CPU_Unpickler.find_class": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 1.7320508075688772}, "NDNT.utils.NDNutils.tent_basis_generate": {"tf": 1}, "NDNT.utils.NDNutils.shift_mat_zpad": {"tf": 1}, "NDNT.utils.NDNutils.generate_xv_folds": {"tf": 1}, "NDNT.utils.NDNutils.initialize_gaussian_envelope": {"tf": 1}, "NDNT.utils.NDNutils.NpEncoder": {"tf": 1.4142135623730951}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 2.23606797749979}, "NDNT.utils.create_reg_matrices.create_maxpenalty_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_localpenalty_matrix": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_external": {"tf": 1}, "NDNT.utils.plotting.plot_filters_ST2D": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 1.4142135623730951}, "NDNT.metrics.mse_loss.MseLoss_datafilter.__init__": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.forward": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.__init__": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.forward": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.__init__": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.forward": {"tf": 1.4142135623730951}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 1.4142135623730951}, "NDNT.metrics.rmse_loss.RmseLoss.__init__": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.forward": {"tf": 1.4142135623730951}}, "df": 122, "/": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.NDN.NDN.initialize_loss": {"tf": 1}, "NDNT.utils.DanUtils.design_matrix_drift": {"tf": 1}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 1}}, "df": 3}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.layers.orilayers.OriLayer.rotation_matrix_tensor": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.rotation_matrix_tensor": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.get_rot_mat": {"tf": 1.4142135623730951}, "NDNT.modules.layers.orilayers.OriConvLayer.rotate_tensor": {"tf": 1.4142135623730951}}, "df": 4, "s": {"docs": {"NDNT.modules.layers.orilayers.OriLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.orilayers.OriLayer.rotation_matrix_tensor": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.orilayers.OriConvLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.orilayers.OriConvLayer.rotation_matrix_tensor": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.layer_dict": {"tf": 1.4142135623730951}}, "df": 6}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.utils.DanUtils.design_matrix_drift": {"tf": 2}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 2}}, "df": 2, "s": {"docs": {"NDNT.utils.DanUtils.design_matrix_drift": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}}, "df": 1}}}}}, "y": {"docs": {"NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1}}, "df": 1}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.utils.NDNutils.NpEncoder": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1.7320508075688772}}, "df": 1, "s": {"docs": {"NDNT.NDN.NDN": {"tf": 1}, "NDNT.NDN.NDN.assemble_ffnetworks": {"tf": 1}, "NDNT.NDN.NDN.compute_network_outputs": {"tf": 1}, "NDNT.NDN.NDN.forward": {"tf": 1}, "NDNT.NDN.NDN.training_step": {"tf": 1}, "NDNT.NDN.NDN.validation_step": {"tf": 1}, "NDNT.NDN.NDN.compute_reg_loss": {"tf": 1}, "NDNT.NDN.NDN.get_trainer": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.get_dataloaders": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.get_optimizer": {"tf": 1}, "NDNT.NDN.NDN.fit": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.fit_dl": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.initialize_loss": {"tf": 1}, "NDNT.NDN.NDN.compute_average_responses": {"tf": 1}, "NDNT.NDN.NDN.initialize_biases": {"tf": 1}, "NDNT.NDN.NDN.eval_models": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.generate_predictions": {"tf": 1}, "NDNT.NDN.NDN.change_loss": {"tf": 1}, "NDNT.NDN.NDN.get_weights": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.list_parameters": {"tf": 1}, "NDNT.NDN.NDN.set_parameters": {"tf": 1}, "NDNT.NDN.NDN.set_reg_val": {"tf": 1}, "NDNT.NDN.NDN.plot_filters": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.save_model_zip": {"tf": 1}, "NDNT.NDN.NDN.load_model_zip": {"tf": 1}, "NDNT.NDN.NDN.save_model": {"tf": 1}, "NDNT.NDN.NDN.save_model_chk": {"tf": 1}, "NDNT.NDN.NDN.get_null_adjusted_ll": {"tf": 1}, "NDNT.NDN.NDN.get_activations": {"tf": 1}, "NDNT.NDN.NDN.load_model": {"tf": 1}, "NDNT.NDN.NDN.load_model_chk": {"tf": 1}, "NDNT.modules.activations.adaptive_elu": {"tf": 1}, "NDNT.modules.activations.Square.forward": {"tf": 1}, "NDNT.modules.activations.AdaptiveELU.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.activations.AdaptiveELU.forward": {"tf": 1}, "NDNT.modules.activity_regularization.ActivityRegularization.activity": {"tf": 1}, "NDNT.modules.activity_regularization.ActivityRegularization.nonneg": {"tf": 1}, "NDNT.modules.activity_regularization.ActivityRegularization.regularize": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchGenerator": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchIterator": {"tf": 1}, "NDNT.modules.experiment_sampler.construct_exp_to_time": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.BinocLayer1D.forward": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.BiSTconv1D.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.BiSTconv1D.forward": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.ChannelConvLayer.forward": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.forward": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.forward": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.forward": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.forward": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.dim_info": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.forward": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.forward": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.forward": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.externallayer.ExternalLayer.forward": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.laglayers.LagLayer.forward": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.lvlayers.LVLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.lvlayers.LVLayer.forward": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.lvlayers.LVLayerOLD.__init__": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.forward": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.reset_parameters": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.forward": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.get_weights": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.set_reg_val": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.dim_info": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.__init__": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.forward": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.__init__": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.rotation_matrix_tensor": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.forward": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.rotation_matrix_tensor": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.get_rot_mat": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.rotate_tensor": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.forward": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.__init__": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.forward": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.plot_filters": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.initialize_spatial_mapping": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.get_weights": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.forward": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.set_readout_locations": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.passive_readout": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.forward": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.forward": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterLayer.forward": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterTlayer.forward": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterSTlayer.forward": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.Tlayer.forward": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.L1convLayer.reset_parameters2": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.plot_filters": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.OnOffLayer.forward": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.MaskLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.timelayers.TimeLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.timelayers.TimeLayer.forward": {"tf": 1}, "NDNT.modules.regularization.Regularization.set_reg_val": {"tf": 1}, "NDNT.networks.FFnetwork": {"tf": 1.4142135623730951}, "NDNT.networks.FFnetwork.determine_input_dims": {"tf": 1}, "NDNT.networks.FFnetwork.preprocess_input": {"tf": 1}, "NDNT.networks.FFnetwork.forward": {"tf": 1}, "NDNT.networks.FFnetwork.prepare_regularization": {"tf": 1}, "NDNT.networks.FFnetwork.compute_reg_loss": {"tf": 1}, "NDNT.networks.FFnetwork.list_parameters": {"tf": 1}, "NDNT.networks.FFnetwork.set_parameters": {"tf": 1}, "NDNT.networks.FFnetwork.set_reg_val": {"tf": 1}, "NDNT.networks.FFnetwork.plot_filters": {"tf": 1.4142135623730951}, "NDNT.networks.FFnetwork.get_weights": {"tf": 1.7320508075688772}, "NDNT.networks.FFnetwork.ffnet_dict": {"tf": 1.4142135623730951}, "NDNT.networks.ScaffoldNetwork": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.forward": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.ffnet_dict": {"tf": 1.4142135623730951}, "NDNT.networks.ScaffoldNetwork3d": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d.forward": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d.ffnet_dict": {"tf": 1.4142135623730951}, "NDNT.networks.ReadoutNetwork": {"tf": 1}, "NDNT.networks.ReadoutNetwork.determine_input_dims": {"tf": 1.4142135623730951}, "NDNT.networks.ReadoutNetwork.forward": {"tf": 1}, "NDNT.networks.ReadoutNetwork.get_readout_locations": {"tf": 1}, "NDNT.networks.ReadoutNetwork.set_readout_locations": {"tf": 1}, "NDNT.networks.ReadoutNetwork.ffnet_dict": {"tf": 1}, "NDNT.networks.FFnet_external": {"tf": 1.4142135623730951}, "NDNT.networks.FFnet_external.forward": {"tf": 1}, "NDNT.networks.FFnet_external.compute_reg_loss": {"tf": 1}, "NDNT.networks.FFnet_external.list_params": {"tf": 1}, "NDNT.networks.FFnet_external.set_params": {"tf": 1}, "NDNT.networks.FFnet_external.ffnet_dict": {"tf": 1.4142135623730951}, "NDNT.training.ada_hessian.AdaHessian": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.step": {"tf": 1}, "NDNT.training.earlystopping.EarlyStopping": {"tf": 1}, "NDNT.training.lbfgs.is_legal": {"tf": 1}, "NDNT.training.lbfgs.polyinterp": {"tf": 1}, "NDNT.training.lbfgs.LBFGS": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.line_search": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.two_loop_recursion": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.curvature_update": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.step": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew.step": {"tf": 1}, "NDNT.training.trainer.Trainer.__init__": {"tf": 1}, "NDNT.training.trainer.Trainer.fit": {"tf": 1}, "NDNT.training.trainer.Trainer.prepare_fit": {"tf": 1}, "NDNT.training.trainer.Trainer.fit_loop": {"tf": 1}, "NDNT.training.trainer.Trainer.validate_one_epoch": {"tf": 1}, "NDNT.training.trainer.Trainer.train_one_epoch": {"tf": 1}, "NDNT.training.trainer.Trainer.train_one_step": {"tf": 1}, "NDNT.training.trainer.Trainer.checkpoint_model": {"tf": 1}, "NDNT.training.trainer.Trainer.graceful_exit": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.__init__": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.fit": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.fit_data_dict": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.train_one_epoch": {"tf": 1}, "NDNT.training.trainer.TemperatureCalibratedTrainer.__init__": {"tf": 1}, "NDNT.training.trainer.TemperatureCalibratedTrainer.validate_one_epoch": {"tf": 1}, "NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.CPU_Unpickler.find_class": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.shift_mat_zpad": {"tf": 1}, "NDNT.utils.NDNutils.save_checkpoint": {"tf": 1}, "NDNT.utils.NDNutils.load_checkpoint": {"tf": 1}, "NDNT.utils.NDNutils.get_fit_versions": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_maxpenalty_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_localpenalty_matrix": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_log_epsilon": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.forward": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.forward": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.unit_loss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.forward": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.unit_loss": {"tf": 1}}, "df": 223}}}}}}, "s": {"docs": {"NDNT.modules.layers.bilayers.ChannelConvLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.ConvLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.laglayers.LagLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterTlayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterSTlayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.Tlayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.OnOffLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.forward": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.unit_loss": {"tf": 1}}, "df": 11}}, "e": {"docs": {"NDNT.NDN.NDN.assemble_ffnetworks": {"tf": 1}, "NDNT.NDN.NDN.compute_network_outputs": {"tf": 1}, "NDNT.NDN.NDN.forward": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.BiConvLayer1D.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1.7320508075688772}, "NDNT.modules.layers.bilayers.ChannelConvLayer": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.STconvLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.Dim0Layer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.ChannelLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.DimSPLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.DimSPTLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.laglayers.LagLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.lvlayers.LVLayer.forward": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1.7320508075688772}, "NDNT.modules.layers.orilayers.ConvLayer3D.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.ReadoutLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.ReadoutLayer3d.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.Tlayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.L1convLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.OnOffLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.MaskLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.ConvReg.compute_reg_penalty": {"tf": 1}, "NDNT.networks.FFnetwork.determine_input_dims": {"tf": 1.7320508075688772}, "NDNT.networks.FFnetwork.preprocess_input": {"tf": 1}, "NDNT.networks.ScaffoldNetwork": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.forward": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.ffnet_dict": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d.forward": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1.7320508075688772}, "NDNT.networks.ReadoutNetwork.determine_input_dims": {"tf": 1.7320508075688772}, "NDNT.networks.FFnet_external.forward": {"tf": 1}, "NDNT.training.lbfgs.polyinterp": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import": {"tf": 2}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 2.449489742783178}, "NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1.7320508075688772}, "NDNT.utils.NDNutils.CPU_Unpickler.find_class": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1.7320508075688772}, "NDNT.utils.NDNutils.pixel2grid": {"tf": 1}, "NDNT.utils.NDNutils.get_fit_versions": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}, "NDNT.utils.ffnet_dicts.layer_dict": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_external": {"tf": 1}}, "df": 63}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.NDN.NDN.generate_predictions": {"tf": 1}, "NDNT.training.lbfgs.polyinterp": {"tf": 1}, "NDNT.utils.DanUtils.design_matrix_drift": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 1}, "NDNT.utils.NDNutils.NpEncoder": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_maxpenalty_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_localpenalty_matrix": {"tf": 1}}, "df": 10}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "o": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1.7320508075688772}, "NDNT.training.lbfgs.LBFGS.line_search": {"tf": 1.7320508075688772}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1.7320508075688772}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1.4142135623730951}}, "df": 4}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}}, "df": 1}}}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.utils.DanUtils.find_peaks": {"tf": 1}}, "df": 1}}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.utils.NDNutils.CPU_Unpickler.find_class": {"tf": 1}, "NDNT.utils.NDNutils.NpEncoder.default": {"tf": 1}}, "df": 2}}}}}}}}, "s": {"docs": {"NDNT.NDN.NDN.assemble_ffnetworks": {"tf": 1}, "NDNT.NDN.NDN.get_trainer": {"tf": 1}, "NDNT.NDN.NDN.save_model_zip": {"tf": 1}, "NDNT.NDN.NDN.save_model": {"tf": 1}, "NDNT.NDN.NDN.get_activations": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.get_readout_locations": {"tf": 1}, "NDNT.modules.regularization.Regularization": {"tf": 1.7320508075688772}, "NDNT.networks.FFnetwork.determine_input_dims": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1.4142135623730951}, "NDNT.networks.ReadoutNetwork.determine_input_dims": {"tf": 1}, "NDNT.training.earlystopping.EarlyStopping": {"tf": 1}, "NDNT.training.trainer.Trainer.__init__": {"tf": 1}, "NDNT.utils.DanUtils.figure_export": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import": {"tf": 1.4142135623730951}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding": {"tf": 1}, "NDNT.utils.NDNutils.is_int": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_readout": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_external": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.forward": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.forward": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.forward": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.forward": {"tf": 1}}, "df": 37, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.NDN.NDN": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.NDN.NDN.assemble_ffnetworks": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.NDN.NDN.assemble_ffnetworks": {"tf": 1}, "NDNT.NDN.NDN.compute_network_outputs": {"tf": 1}, "NDNT.NDN.NDN.fit": {"tf": 1}, "NDNT.NDN.NDN.fit_dl": {"tf": 1}, "NDNT.NDN.NDN.eval_models": {"tf": 1}, "NDNT.networks.FFnetwork": {"tf": 1}, "NDNT.networks.FFnetwork.list_parameters": {"tf": 1}, "NDNT.networks.FFnetwork.set_parameters": {"tf": 1}, "NDNT.networks.FFnetwork.set_reg_val": {"tf": 1}, "NDNT.networks.FFnetwork.get_weights": {"tf": 1}, "NDNT.networks.ScaffoldNetwork": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.ffnet_dict": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d": {"tf": 1}, "NDNT.networks.FFnet_external": {"tf": 1}, "NDNT.networks.FFnet_external.list_params": {"tf": 1}, "NDNT.networks.FFnet_external.set_params": {"tf": 1}}, "df": 16}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.layers.convlayers.STconvLayer": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.__init__": {"tf": 1}}, "df": 2, "d": {"docs": {"NDNT.NDN.NDN.eval_models": {"tf": 2}, "NDNT.modules.layers.convlayers.STconvLayer": {"tf": 1}}, "df": 2}, "s": {"docs": {"NDNT.NDN.NDN.save_model_chk": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D": {"tf": 1.4142135623730951}, "NDNT.modules.layers.lvlayers.LVLayer.__init__": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.forward": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1}, "NDNT.utils.NDNutils.tent_basis_generate": {"tf": 1}, "NDNT.utils.NDNutils.initialize_gaussian_envelope": {"tf": 1}}, "df": 8}}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_maxpenalty_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_localpenalty_matrix": {"tf": 1}}, "df": 3}}}}}}}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "i": {"docs": {"NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.utils.NDNutils.generate_xv_folds": {"tf": 1.4142135623730951}}, "df": 1}}}}, "l": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1.4142135623730951}}, "df": 1, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.NDN.NDN.assemble_ffnetworks": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1}}, "df": 2}}}}, "l": {"docs": {"NDNT.NDN.NDN.assemble_ffnetworks": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.layer_dict": {"tf": 1}, "NDNT.modules.regularization.Regularization": {"tf": 1}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1}, "NDNT.modules.regularization.RegModule.forward": {"tf": 1}, "NDNT.modules.regularization.ConvReg.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.TikhanovC": {"tf": 1}, "NDNT.networks.FFnetwork.set_parameters": {"tf": 1}, "NDNT.networks.FFnetwork.set_reg_val": {"tf": 1}, "NDNT.networks.ScaffoldNetwork": {"tf": 1}, "NDNT.networks.FFnet_external": {"tf": 1}, "NDNT.networks.FFnet_external.set_params": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.get_params": {"tf": 1.7320508075688772}, "NDNT.training.lbfgs.LBFGS": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import": {"tf": 1.7320508075688772}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 2.449489742783178}, "NDNT.utils.NDNutils.create_time_embedding": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.initialize_gaussian_envelope": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1.4142135623730951}, "NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_readout": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"tf": 1}}, "df": 57, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.modules.regularization.Regularization.set_reg_val": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {"NDNT.NDN.NDN.save_model_chk": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 1}}, "df": 4, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.NDN.NDN.save_model_chk": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.utils.NDNutils.tent_basis_generate": {"tf": 1}}, "df": 1}}}}}}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"NDNT.modules.regularization.RegModule.forward": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {"NDNT.modules.activity_regularization.ActivityRegularization.activity": {"tf": 1}, "NDNT.modules.activity_regularization.ActivityRegularization.nonneg": {"tf": 1}}, "df": 2}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {"NDNT.modules.layers.lvlayers.LVLayer": {"tf": 1}, "NDNT.modules.regularization.Regularization.set_reg_val": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1.4142135623730951}, "NDNT.utils.ffnet_dicts.ffnet_dict_external": {"tf": 1}}, "df": 5}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.networks.ReadoutNetwork": {"tf": 1.4142135623730951}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.networks.FFnetwork.determine_input_dims": {"tf": 1}, "NDNT.networks.ReadoutNetwork.determine_input_dims": {"tf": 1}, "NDNT.utils.NDNutils.shift_mat_zpad": {"tf": 1}, "NDNT.utils.NDNutils.initialize_gaussian_envelope": {"tf": 1}}, "df": 4}, "e": {"docs": {"NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}}, "df": 1}}}, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "m": {"docs": {"NDNT.training.ada_hessian.AdaHessian": {"tf": 1}, "NDNT.training.lbfgs.LBFGS": {"tf": 1.4142135623730951}, "NDNT.training.lbfgs.LBFGS.line_search": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1.4142135623730951}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1.4142135623730951}}, "df": 5}}}}}}}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.NDN.NDN.forward": {"tf": 1}, "NDNT.NDN.NDN.passive_readout": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.ChannelLayer": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1}}, "df": 4}, "d": {"docs": {"NDNT.modules.layers.specialtylayers.MaskLayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}}, "df": 4}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.NDN.NDN.eval_models": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "y": {"docs": {"NDNT.modules.layers.bilayers.ChannelConvLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.normlayers.DivNormLayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.layer_dict": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.two_loop_recursion": {"tf": 1}, "NDNT.utils.DanUtils.design_matrix_drift": {"tf": 1}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 1}}, "df": 13, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.modules.layers.lvlayers.LVLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.preprocess_weights": {"tf": 1}}, "df": 2}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1}}, "df": 1}}}}}}, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.training.ada_hessian.AdaHessian": {"tf": 1.4142135623730951}, "NDNT.training.ada_hessian.AdaHessian.set_hessian": {"tf": 1}}, "df": 2}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.modules.layers.bilayers.BiConvLayer1D": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer": {"tf": 1}}, "df": 5, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.modules.layers.dimlayers.Dim0Layer.dim_info": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.dim_info": {"tf": 1.4142135623730951}}, "df": 2, "l": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.NDN.NDN.forward": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.modules.activations.Square": {"tf": 1}, "NDNT.modules.activations.Square.forward": {"tf": 1}, "NDNT.modules.activations.AdaptiveELU.__init__": {"tf": 1}, "NDNT.modules.activations.AdaptiveELU.forward": {"tf": 1}}, "df": 4, "s": {"docs": {"NDNT.NDN.NDN.get_activations": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}, "NDNT.modules.regularization.ActivityReg.compute_activity_penalty": {"tf": 1}}, "df": 9}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.modules.activity_regularization.ActivityRegularization.activity": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.forward": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.forward": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.forward": {"tf": 1}, "NDNT.modules.regularization.ActivityReg": {"tf": 1}, "NDNT.modules.regularization.ActivityReg.compute_activity_penalty": {"tf": 1}}, "df": 6}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.utils.NDNutils.tent_basis_generate": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.experiment_sampler.ExperimentBatchIterator": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 1}}, "df": 7}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.modules.layers.ndnlayer.NDNLayer.get_weights": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.passive_readout": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}}, "df": 3}}}, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.utils.DanUtils.binocular_data_import": {"tf": 1}, "NDNT.utils.MattUtils.smooth_ema": {"tf": 1}}, "df": 2, "l": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}}, "df": 1}}}}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.training.ada_hessian.AdaHessian.zero_hessian": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.training.ada_hessian.AdaHessian.set_hessian": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"tf": 1}}, "df": 4, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.NDN.NDN.get_trainer": {"tf": 1}, "NDNT.NDN.NDN.fit": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.batchnorm_convert": {"tf": 1}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.NDN.NDN.eval_models": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.get_null_adjusted_ll": {"tf": 1.4142135623730951}, "NDNT.utils.DanUtils.binocular_data_import": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}}, "df": 4}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.utils.NDNutils.create_time_embedding": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1.4142135623730951}}, "df": 2}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {"NDNT.NDN.NDN.get_optimizer": {"tf": 1}}, "df": 1, "w": {"docs": {"NDNT.NDN.NDN.get_trainer": {"tf": 1}, "NDNT.NDN.NDN.get_optimizer": {"tf": 1}}, "df": 2}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.training.ada_hessian.AdaHessian": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {"NDNT.modules.activations.AdaptiveELU.__init__": {"tf": 1}, "NDNT.modules.activations.AdaptiveELU.forward": {"tf": 1}}, "df": 2}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1.4142135623730951}, "NDNT.utils.create_reg_matrices.create_maxpenalty_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_localpenalty_matrix": {"tf": 1}}, "df": 3}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.training.ada_hessian.AdaHessian": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "d": {"docs": {"NDNT.networks.ScaffoldNetwork": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1}, "NDNT.training.trainer.Trainer": {"tf": 1}}, "df": 4, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.NDN.NDN.get_trainer": {"tf": 1}, "NDNT.NDN.NDN.get_dataloaders": {"tf": 1}, "NDNT.NDN.NDN.fit": {"tf": 1}, "NDNT.NDN.NDN.fit_dl": {"tf": 1}, "NDNT.NDN.NDN.eval_models": {"tf": 1}, "NDNT.NDN.NDN.get_weights": {"tf": 1}, "NDNT.NDN.NDN.plot_filters": {"tf": 1}, "NDNT.modules.activations.AdaptiveELU.__init__": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.reset_parameters2": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.__init__": {"tf": 1}, "NDNT.networks.FFnetwork": {"tf": 1}, "NDNT.networks.FFnetwork.plot_filters": {"tf": 1}, "NDNT.networks.FFnetwork.get_weights": {"tf": 1}, "NDNT.networks.FFnetwork.ffnet_dict": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.ffnet_dict": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d.ffnet_dict": {"tf": 1}, "NDNT.networks.ReadoutNetwork.determine_input_dims": {"tf": 1}, "NDNT.networks.FFnet_external": {"tf": 1}, "NDNT.networks.FFnet_external.ffnet_dict": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1}, "NDNT.utils.NDNutils.save_checkpoint": {"tf": 1}}, "df": 35}}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.modules.layers.convlayers.ConvLayer.batchnorm_convert": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer3d": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian": {"tf": 1}, "NDNT.utils.DanUtils.fold_sample": {"tf": 1}}, "df": 3}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.modules.regularization.Regularization.set_reg_val": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {"NDNT.networks.ReadoutNetwork": {"tf": 1}, "NDNT.utils.NDNutils.get_max_samples": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_external": {"tf": 1}}, "df": 3}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {"NDNT.NDN.NDN.initialize_loss": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 2}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 2}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"tf": 2}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"tf": 2}}, "df": 9, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.NDN.NDN.get_trainer": {"tf": 1}, "NDNT.training.lbfgs.LBFGS": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1}, "NDNT.training.trainer.Trainer.__init__": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}}, "df": 5}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.NDN.NDN.initialize_loss": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.compute_average_responses": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.initialize_biases": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"tf": 1.4142135623730951}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"tf": 1.4142135623730951}}, "df": 11, "s": {"docs": {"NDNT.training.ada_hessian.AdaHessian": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.NDN.NDN.get_optimizer": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.utils.DanUtils.find_peaks": {"tf": 1}, "NDNT.utils.NDNutils.shift_mat_zpad": {"tf": 1}, "NDNT.utils.NDNutils.save_checkpoint": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"tf": 1}}, "df": 7, "s": {"docs": {"NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"tf": 1}}, "df": 4}}}}}}, "t": {"docs": {"NDNT.modules.layers.lvlayers.LVLayer": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.__init__": {"tf": 1}, "NDNT.modules.regularization.RegModule.forward": {"tf": 1}, "NDNT.networks.ScaffoldNetwork": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1}, "NDNT.training.lbfgs.LBFGS": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 2.23606797749979}, "NDNT.training.trainer.Trainer.graceful_exit": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1}, "NDNT.utils.NDNutils.tent_basis_generate": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"tf": 1}}, "df": 18, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.NDN.NDN.eval_models": {"tf": 1}, "NDNT.modules.regularization.Regularization": {"tf": 1}}, "df": 2}}}}}}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.NDN.NDN.save_model_chk": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_maxpenalty_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_localpenalty_matrix": {"tf": 1}}, "df": 4}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.modules.experiment_sampler.ExperimentSampler": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.NDN.NDN.model_string": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.modules.layers.laglayers.LagLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.plot_filters": {"tf": 1}, "NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1}}, "df": 3}}}}}}}}}}}}, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.layers.laglayers.LagLayer.plot_filters": {"tf": 1}}, "df": 1}}, "s": {"docs": {"NDNT.modules.layers.laglayers.LagLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.plot_filters": {"tf": 1}}, "df": 2}, "e": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.layers.laglayers.LagLayer.plot_filters": {"tf": 1.7320508075688772}, "NDNT.modules.layers.orilayers.ConvLayer3D.plot_filters": {"tf": 1}}, "df": 2}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian": {"tf": 1}, "NDNT.training.earlystopping.EarlyStopping": {"tf": 1.4142135623730951}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1}, "NDNT.utils.DanUtils.design_matrix_drift": {"tf": 1}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 1}}, "df": 7, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.regularization.RegModule.forward": {"tf": 1}}, "df": 1}}}}}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.networks.ReadoutNetwork": {"tf": 1}}, "df": 1}}}}}}}}, "o": {"docs": {"NDNT.utils.NDNutils.NpEncoder": {"tf": 1}, "NDNT.utils.NDNutils.NpEncoder.default": {"tf": 2}}, "df": 2, "f": {"docs": {"NDNT.NDN.NDN": {"tf": 2.8284271247461903}, "NDNT.NDN.NDN.assemble_ffnetworks": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.forward": {"tf": 2}, "NDNT.NDN.NDN.training_step": {"tf": 1}, "NDNT.NDN.NDN.validation_step": {"tf": 1}, "NDNT.NDN.NDN.get_trainer": {"tf": 2}, "NDNT.NDN.NDN.get_dataloaders": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.get_optimizer": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.fit": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.fit_dl": {"tf": 2}, "NDNT.NDN.NDN.initialize_loss": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.compute_average_responses": {"tf": 1}, "NDNT.NDN.NDN.initialize_biases": {"tf": 1}, "NDNT.NDN.NDN.eval_models": {"tf": 2}, "NDNT.NDN.NDN.generate_predictions": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.get_readout_locations": {"tf": 1}, "NDNT.NDN.NDN.set_parameters": {"tf": 1}, "NDNT.NDN.NDN.save_model_zip": {"tf": 2}, "NDNT.NDN.NDN.load_model_zip": {"tf": 1}, "NDNT.NDN.NDN.save_model": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.save_model_chk": {"tf": 1}, "NDNT.NDN.NDN.get_null_adjusted_ll": {"tf": 1}, "NDNT.NDN.NDN.get_activations": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.load_model": {"tf": 1}, "NDNT.NDN.NDN.load_model_chk": {"tf": 1}, "NDNT.modules.activations.Square.forward": {"tf": 1}, "NDNT.modules.activations.AdaptiveELU.forward": {"tf": 1}, "NDNT.modules.activity_regularization.ActivityRegularization.activity": {"tf": 1}, "NDNT.modules.activity_regularization.ActivityRegularization.nonneg": {"tf": 1}, "NDNT.modules.activity_regularization.ActivityRegularization.regularize": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchGenerator": {"tf": 1.7320508075688772}, "NDNT.modules.experiment_sampler.ExperimentBatchGenerator.next": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchIterator": {"tf": 1.4142135623730951}, "NDNT.modules.experiment_sampler.ExperimentSampler": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.BinocLayer1D.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.BinocLayer1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D.__init__": {"tf": 2}, "NDNT.modules.layers.bilayers.BiConvLayer1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.__init__": {"tf": 2}, "NDNT.modules.layers.bilayers.BiSTconv1D.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 3.3166247903554}, "NDNT.modules.layers.bilayers.ChannelConvLayer": {"tf": 2.449489742783178}, "NDNT.modules.layers.bilayers.ChannelConvLayer.__init__": {"tf": 2.23606797749979}, "NDNT.modules.layers.bilayers.ChannelConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.ConvLayer": {"tf": 2}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 2.8284271247461903}, "NDNT.modules.layers.convlayers.ConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer": {"tf": 2}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 2.8284271247461903}, "NDNT.modules.layers.convlayers.TconvLayer.plot_filters": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.TconvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer": {"tf": 2.449489742783178}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 2.8284271247461903}, "NDNT.modules.layers.convlayers.STconvLayer.plot_filters": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.STconvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.Dim0Layer.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.Dim0Layer.dim_info": {"tf": 2.23606797749979}, "NDNT.modules.layers.dimlayers.Dim0Layer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.ChannelLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.DimSPLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.DimSPLayer.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.DimSPLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.DimSPTLayer.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.DimSPTLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.layers.laglayers.LagLayer": {"tf": 2.23606797749979}, "NDNT.modules.layers.laglayers.LagLayer.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.layers.laglayers.LagLayer.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.laglayers.LagLayer.plot_filters": {"tf": 2}, "NDNT.modules.layers.laglayers.LagLayer.layer_dict": {"tf": 1.7320508075688772}, "NDNT.modules.layers.lvlayers.LVLayer": {"tf": 2}, "NDNT.modules.layers.lvlayers.LVLayer.__init__": {"tf": 2}, "NDNT.modules.layers.lvlayers.LVLayer.forward": {"tf": 1.7320508075688772}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"tf": 2}, "NDNT.modules.layers.lvlayers.LVLayerOLD.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 2}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 2.8284271247461903}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 2.8284271247461903}, "NDNT.modules.layers.ndnlayer.NDNLayer.reset_parameters": {"tf": 2}, "NDNT.modules.layers.ndnlayer.NDNLayer.get_weights": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.set_reg_val": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.plot_filters": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.dim_info": {"tf": 2.6457513110645907}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 3.3166247903554}, "NDNT.modules.layers.normlayers.DivNormLayer.__init__": {"tf": 2.23606797749979}, "NDNT.modules.layers.orilayers.OriLayer.__init__": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.rotation_matrix_tensor": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.orilayers.OriLayer.layer_dict": {"tf": 1.7320508075688772}, "NDNT.modules.layers.orilayers.OriConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.rotation_matrix_tensor": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.orilayers.OriConvLayer.layer_dict": {"tf": 1.7320508075688772}, "NDNT.modules.layers.orilayers.ConvLayer3D.__init__": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.orilayers.ConvLayer3D.plot_filters": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 2.23606797749979}, "NDNT.modules.layers.readouts.ReadoutLayer.initialize_spatial_mapping": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1.7320508075688772}, "NDNT.modules.layers.readouts.ReadoutLayer.get_weights": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.ReadoutLayer.forward": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.set_readout_locations": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.get_readout_locations": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.ReadoutLayer.passive_readout": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.ReadoutLayer.layer_dict": {"tf": 1.7320508075688772}, "NDNT.modules.layers.readouts.ReadoutLayer3d": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.ReadoutLayer3d.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.forward": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.FixationLayer.__init__": {"tf": 2}, "NDNT.modules.layers.readouts.FixationLayer.forward": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 2.449489742783178}, "NDNT.modules.layers.reslayers.IterLayer": {"tf": 2}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 2.449489742783178}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 2.23606797749979}, "NDNT.modules.layers.reslayers.IterTlayer": {"tf": 2}, "NDNT.modules.layers.reslayers.IterTlayer.__init__": {"tf": 2.449489742783178}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 2.449489742783178}, "NDNT.modules.layers.reslayers.IterSTlayer": {"tf": 2}, "NDNT.modules.layers.reslayers.IterSTlayer.__init__": {"tf": 2.449489742783178}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 2.449489742783178}, "NDNT.modules.layers.specialtylayers.Tlayer": {"tf": 2}, "NDNT.modules.layers.specialtylayers.Tlayer.__init__": {"tf": 2}, "NDNT.modules.layers.specialtylayers.Tlayer.plot_filters": {"tf": 1.7320508075688772}, "NDNT.modules.layers.specialtylayers.Tlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.__init__": {"tf": 2}, "NDNT.modules.layers.specialtylayers.OnOffLayer.layer_dict": {"tf": 1.7320508075688772}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.layers.specialtylayers.MaskLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.timelayers.TimeLayer.__init__": {"tf": 2.449489742783178}, "NDNT.modules.regularization.Regularization": {"tf": 2.449489742783178}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.regularization.Regularization.set_reg_val": {"tf": 1}, "NDNT.modules.regularization.RegModule.forward": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.ConvReg.compute_reg_penalty": {"tf": 1.4142135623730951}, "NDNT.networks.FFnetwork": {"tf": 3}, "NDNT.networks.FFnetwork.determine_input_dims": {"tf": 2}, "NDNT.networks.FFnetwork.forward": {"tf": 1}, "NDNT.networks.FFnetwork.set_parameters": {"tf": 1}, "NDNT.networks.FFnetwork.set_reg_val": {"tf": 1}, "NDNT.networks.FFnetwork.ffnet_dict": {"tf": 3}, "NDNT.networks.ScaffoldNetwork": {"tf": 1.7320508075688772}, "NDNT.networks.ScaffoldNetwork.forward": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.ffnet_dict": {"tf": 2}, "NDNT.networks.ScaffoldNetwork3d": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d.forward": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d.ffnet_dict": {"tf": 1.4142135623730951}, "NDNT.networks.ReadoutNetwork": {"tf": 2.6457513110645907}, "NDNT.networks.ReadoutNetwork.determine_input_dims": {"tf": 1.7320508075688772}, "NDNT.networks.ReadoutNetwork.forward": {"tf": 1.4142135623730951}, "NDNT.networks.ReadoutNetwork.ffnet_dict": {"tf": 1.4142135623730951}, "NDNT.networks.FFnet_external": {"tf": 2}, "NDNT.networks.FFnet_external.forward": {"tf": 1}, "NDNT.networks.FFnet_external.set_params": {"tf": 1}, "NDNT.networks.FFnet_external.ffnet_dict": {"tf": 1.4142135623730951}, "NDNT.training.ada_hessian.AdaHessian": {"tf": 2.23606797749979}, "NDNT.training.ada_hessian.AdaHessian.set_hessian": {"tf": 1}, "NDNT.training.lbfgs.polyinterp": {"tf": 2.449489742783178}, "NDNT.training.lbfgs.LBFGS": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.curvature_update": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.step": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 3.1622776601683795}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer.__init__": {"tf": 1}, "NDNT.training.trainer.Trainer.fit_loop": {"tf": 1}, "NDNT.training.trainer.Trainer.graceful_exit": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer": {"tf": 1}, "NDNT.training.trainer.TemperatureCalibratedTrainer": {"tf": 1}, "NDNT.utils.DanUtils.imagesc": {"tf": 1}, "NDNT.utils.DanUtils.find_peaks": {"tf": 1.4142135623730951}, "NDNT.utils.DanUtils.matlab_export": {"tf": 1}, "NDNT.utils.DanUtils.fold_sample": {"tf": 1}, "NDNT.utils.DanUtils.design_matrix_drift": {"tf": 2}, "NDNT.utils.DanUtils.binocular_data_import": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1.4142135623730951}, "NDNT.utils.DanUtils.monocular_data_import": {"tf": 1}, "NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1}, "NDNT.utils.NDNutils.CPU_Unpickler.find_class": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding": {"tf": 2.23606797749979}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 2.6457513110645907}, "NDNT.utils.NDNutils.is_int": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 1.7320508075688772}, "NDNT.utils.NDNutils.tent_basis_generate": {"tf": 1.7320508075688772}, "NDNT.utils.NDNutils.generate_xv_folds": {"tf": 2}, "NDNT.utils.NDNutils.initialize_gaussian_envelope": {"tf": 1}, "NDNT.utils.NDNutils.pixel2grid": {"tf": 1}, "NDNT.utils.NDNutils.save_checkpoint": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.get_fit_versions": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.get_max_samples": {"tf": 1.7320508075688772}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 2.23606797749979}, "NDNT.utils.create_reg_matrices.create_maxpenalty_matrix": {"tf": 2}, "NDNT.utils.create_reg_matrices.create_localpenalty_matrix": {"tf": 2}, "NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 1.4142135623730951}, "NDNT.utils.ffnet_dicts.ffnet_dict_NIM": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_readout": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_external": {"tf": 1.7320508075688772}, "NDNT.utils.plotting.plot_filters_1D": {"tf": 1}, "NDNT.utils.plotting.plot_filters_2D": {"tf": 1}, "NDNT.utils.plotting.plot_filters_ST1D": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 2}, "NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 2}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_log_epsilon": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 2}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.unit_loss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 2}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.unit_loss": {"tf": 1}}, "df": 221, "f": {"docs": {"NDNT.modules.layers.ndnlayer.NDNLayer.set_parameters": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer": {"tf": 1}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1}, "NDNT.modules.regularization.Regularization.unit_reg_convert": {"tf": 1}, "NDNT.networks.ScaffoldNetwork": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1}}, "df": 7, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.layers.convlayers.ConvLayer.batchnorm_convert": {"tf": 1}}, "df": 1}}}}}}, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.NDN.NDN.get_trainer": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.get_optimizer": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.eval_models": {"tf": 1.7320508075688772}, "NDNT.modules.layers.laglayers.LagLayer.plot_filters": {"tf": 1}, "NDNT.modules.regularization.Regularization.unit_reg_convert": {"tf": 1}, "NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 2}, "NDNT.utils.NDNutils.CPU_Unpickler.find_class": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.NpEncoder": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.NpEncoder.default": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 1}}, "df": 10, "s": {"docs": {"NDNT.NDN.NDN": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.plot_filters": {"tf": 1}, "NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1}, "NDNT.utils.NDNutils.CPU_Unpickler.find_class": {"tf": 1}, "NDNT.utils.NDNutils.NpEncoder": {"tf": 1.4142135623730951}}, "df": 5}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.NDN.NDN.eval_models": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.training.lbfgs.LBFGS.two_loop_recursion": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {"NDNT.NDN.NDN.initialize_loss": {"tf": 1}, "NDNT.NDN.NDN.eval_models": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.load_model": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.TconvLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.get_weights": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.set_parameters": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.get_rot_mat": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer": {"tf": 1}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1}, "NDNT.modules.regularization.Regularization.unit_reg_convert": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.Regularization.build_reg_modules": {"tf": 1}, "NDNT.networks.FFnetwork.determine_input_dims": {"tf": 1}, "NDNT.networks.ReadoutNetwork.determine_input_dims": {"tf": 1}, "NDNT.training.lbfgs.polyinterp": {"tf": 1.4142135623730951}, "NDNT.training.lbfgs.LBFGS": {"tf": 2.23606797749979}, "NDNT.training.lbfgs.LBFGS.two_loop_recursion": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1.7320508075688772}, "NDNT.training.trainer.Trainer.__init__": {"tf": 1}, "NDNT.utils.DanUtils.design_matrix_drift": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.fit_lbfgs": {"tf": 1}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 1}, "NDNT.utils.NDNutils.tent_basis_generate": {"tf": 1}, "NDNT.utils.NDNutils.get_max_samples": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.forward": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.forward": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.forward": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.forward": {"tf": 1}}, "df": 42, "l": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.NDN.NDN": {"tf": 1}, "NDNT.NDN.NDN.compute_network_outputs": {"tf": 1}, "NDNT.NDN.NDN.initialize_loss": {"tf": 1}, "NDNT.NDN.NDN.eval_models": {"tf": 1.4142135623730951}, "NDNT.training.ada_hessian.AdaHessian": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1.4142135623730951}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_maxpenalty_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_localpenalty_matrix": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.unit_loss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.unit_loss": {"tf": 1}}, "df": 15}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {"NDNT.NDN.NDN.initialize_loss": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.DimSPLayer": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.__init__": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.__init__": {"tf": 1}, "NDNT.modules.regularization.RegModule.forward": {"tf": 1}, "NDNT.modules.regularization.TikhanovC": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1}, "NDNT.training.trainer.Trainer.validate_one_epoch": {"tf": 1}, "NDNT.training.trainer.Trainer.train_one_epoch": {"tf": 1}, "NDNT.training.trainer.Trainer.train_one_step": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.train_one_epoch": {"tf": 1}, "NDNT.training.trainer.TemperatureCalibratedTrainer.validate_one_epoch": {"tf": 1}, "NDNT.utils.DanUtils.design_matrix_drift": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}, "NDNT.utils.NDNutils.is_int": {"tf": 1}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 1.4142135623730951}, "NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 1}}, "df": 21, "s": {"docs": {"NDNT.modules.layers.ndnlayer.NDNLayer.reset_parameters": {"tf": 1.4142135623730951}}, "df": 1}}, "o": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.layers.specialtylayers.OnOffLayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.forward": {"tf": 1}}, "df": 3}}}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.NDN.NDN": {"tf": 1}, "NDNT.NDN.NDN.generate_predictions": {"tf": 1}, "NDNT.NDN.NDN.save_model_zip": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer": {"tf": 1}, "NDNT.networks.FFnetwork.ffnet_dict": {"tf": 1.4142135623730951}, "NDNT.networks.ScaffoldNetwork": {"tf": 1.4142135623730951}, "NDNT.networks.ScaffoldNetwork.ffnet_dict": {"tf": 1.4142135623730951}, "NDNT.networks.ScaffoldNetwork3d": {"tf": 1.4142135623730951}, "NDNT.training.ada_hessian.AdaHessian.zero_hessian": {"tf": 1}, "NDNT.utils.DanUtils.design_matrix_drift": {"tf": 1}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 1}}, "df": 12, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.NDN.NDN": {"tf": 1}, "NDNT.NDN.NDN.forward": {"tf": 1}, "NDNT.NDN.NDN.save_model_zip": {"tf": 1}, "NDNT.NDN.NDN.get_activations": {"tf": 1.4142135623730951}, "NDNT.modules.activations.adaptive_elu": {"tf": 1}, "NDNT.modules.activations.Square.forward": {"tf": 1}, "NDNT.modules.activations.AdaptiveELU": {"tf": 1}, "NDNT.modules.activations.AdaptiveELU.forward": {"tf": 1}, "NDNT.modules.activity_regularization.ActivityRegularization.activity": {"tf": 1.4142135623730951}, "NDNT.modules.activity_regularization.ActivityRegularization.nonneg": {"tf": 1.4142135623730951}, "NDNT.modules.activity_regularization.ActivityRegularization.regularize": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.BinocLayer1D": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.BinocLayer1D.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.BinocLayer1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.BiConvLayer1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 2}, "NDNT.modules.layers.bilayers.ChannelConvLayer": {"tf": 1.7320508075688772}, "NDNT.modules.layers.bilayers.ChannelConvLayer.__init__": {"tf": 2.23606797749979}, "NDNT.modules.layers.bilayers.ChannelConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.batchnorm_convert": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.forward": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.forward": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.forward": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.forward": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.dim_info": {"tf": 1.7320508075688772}, "NDNT.modules.layers.dimlayers.Dim0Layer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.forward": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.forward": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.forward": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.externallayer.ExternalLayer.forward": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.__init__": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.laglayers.LagLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.lvlayers.LVLayer.forward": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.forward": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.forward": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.dim_info": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 2}, "NDNT.modules.layers.normlayers.DivNormLayer.forward": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.orilayers.OriConvLayer.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.orilayers.ConvLayer3D.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.orilayers.ConvLayer3D.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.orilayers.ConvLayer3D.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterLayer.forward": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterTlayer.forward": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterSTlayer.forward": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.Tlayer.forward": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.OnOffLayer.forward": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.MaskLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.timelayers.TimeLayer.forward": {"tf": 1}, "NDNT.modules.regularization.Regularization": {"tf": 1}, "NDNT.networks.FFnetwork.forward": {"tf": 1}, "NDNT.networks.ScaffoldNetwork": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.forward": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d.forward": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1}, "NDNT.networks.ReadoutNetwork.forward": {"tf": 1.4142135623730951}, "NDNT.networks.FFnet_external.forward": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.two_loop_recursion": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}, "NDNT.utils.DanUtils.monocular_data_import": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_external": {"tf": 1}}, "df": 108, "s": {"docs": {"NDNT.NDN.NDN.compute_network_outputs": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.get_activations": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D.forward": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.forward": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.forward": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.dim_info": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.layer_dict": {"tf": 1}, "NDNT.modules.regularization.Regularization": {"tf": 1}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1.4142135623730951}, "NDNT.utils.DanUtils.design_matrix_drift": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 1}}, "df": 42}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.networks.ReadoutNetwork": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {"NDNT.NDN.NDN": {"tf": 1}, "NDNT.NDN.NDN.get_trainer": {"tf": 1}, "NDNT.NDN.NDN.fit": {"tf": 1}, "NDNT.NDN.NDN.eval_models": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.BiConvLayer1D.__init__": {"tf": 2.23606797749979}, "NDNT.modules.layers.bilayers.BiSTconv1D.__init__": {"tf": 2.23606797749979}, "NDNT.modules.layers.bilayers.ChannelConvLayer": {"tf": 2.23606797749979}, "NDNT.modules.layers.bilayers.ChannelConvLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.ConvLayer": {"tf": 2.23606797749979}, "NDNT.modules.layers.convlayers.TconvLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.dim_info": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.__init__": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.laglayers.LagLayer": {"tf": 1.7320508075688772}, "NDNT.modules.layers.laglayers.LagLayer.__init__": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.__init__": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.reset_parameters": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.set_parameters": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 2}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.ReadoutLayer3d.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer": {"tf": 2.23606797749979}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 2.23606797749979}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterTlayer": {"tf": 2.23606797749979}, "NDNT.modules.layers.reslayers.IterTlayer.__init__": {"tf": 2}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterSTlayer": {"tf": 2.23606797749979}, "NDNT.modules.layers.reslayers.IterSTlayer.__init__": {"tf": 2}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.Tlayer": {"tf": 2.23606797749979}, "NDNT.modules.layers.specialtylayers.Tlayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.Tlayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.reset_parameters2": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.OnOffLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 2}, "NDNT.modules.layers.timelayers.TimeLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.Regularization.unit_reg_convert": {"tf": 1}, "NDNT.modules.regularization.ConvReg.compute_reg_penalty": {"tf": 1}, "NDNT.networks.FFnetwork.determine_input_dims": {"tf": 1.4142135623730951}, "NDNT.networks.FFnetwork.set_parameters": {"tf": 1}, "NDNT.networks.FFnetwork.set_reg_val": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1.4142135623730951}, "NDNT.networks.ReadoutNetwork.determine_input_dims": {"tf": 1.4142135623730951}, "NDNT.networks.FFnet_external.set_params": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian": {"tf": 1}, "NDNT.training.lbfgs.is_legal": {"tf": 1}, "NDNT.training.lbfgs.polyinterp": {"tf": 1}, "NDNT.training.lbfgs.LBFGS": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.curvature_update": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1.4142135623730951}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1}, "NDNT.training.trainer.Trainer.graceful_exit": {"tf": 1}, "NDNT.utils.DanUtils.fold_sample": {"tf": 1}, "NDNT.utils.DanUtils.design_matrix_drift": {"tf": 1}, "NDNT.utils.DanUtils.monocular_data_import": {"tf": 1}, "NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1}, "NDNT.utils.NDNutils.CPU_Unpickler.find_class": {"tf": 1}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 1}, "NDNT.utils.NDNutils.tent_basis_generate": {"tf": 1}, "NDNT.utils.NDNutils.shift_mat_zpad": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.load_checkpoint": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.NpEncoder.default": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 1.7320508075688772}, "NDNT.utils.ffnet_dicts.ffnet_dict_external": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_log_epsilon": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 1}}, "df": 83, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.NDN.NDN.assemble_ffnetworks": {"tf": 1}, "NDNT.NDN.NDN.forward": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.modules.regularization.Regularization.__init__": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.training.ada_hessian.AdaHessian": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "i": {"docs": {"NDNT.modules.layers.orilayers.ConvLayer3D.__init__": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.layer_dict": {"tf": 1}}, "df": 2, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.modules.layers.bilayers.BiSTconv1D": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.get_weights": {"tf": 1}, "NDNT.training.lbfgs.LBFGS": {"tf": 1}}, "df": 3}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.modules.layers.orilayers.OriLayer": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.__init__": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.__init__": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.layer_dict": {"tf": 1}}, "df": 6}}}}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.modules.layers.ndnlayer.NDNLayer.reset_parameters": {"tf": 1}}, "df": 1}}}}}}}}, "g": {"docs": {"NDNT.utils.NDNutils.NpEncoder": {"tf": 1}}, "df": 1}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {"NDNT.NDN.NDN.get_trainer": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.get_optimizer": {"tf": 1}, "NDNT.NDN.NDN.fit": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer.__init__": {"tf": 1}}, "df": 4, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.NDN.NDN.get_trainer": {"tf": 1.4142135623730951}, "NDNT.training.ada_hessian.AdaHessian": {"tf": 1}, "NDNT.training.trainer.Trainer.__init__": {"tf": 1.4142135623730951}}, "df": 3, "r": {"docs": {"NDNT.NDN.NDN": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.get_trainer": {"tf": 2.23606797749979}, "NDNT.NDN.NDN.get_optimizer": {"tf": 3}, "NDNT.NDN.NDN.fit": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.fit_dl": {"tf": 1.7320508075688772}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 2.23606797749979}, "NDNT.training.trainer.Trainer.__init__": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer.prepare_fit": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer": {"tf": 1}}, "df": 10, "s": {"docs": {"NDNT.training.lbfgs.LBFGS.step": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.NDN.NDN.fit_dl": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.step": {"tf": 1}, "NDNT.training.lbfgs.LBFGS": {"tf": 2.6457513110645907}, "NDNT.training.lbfgs.LBFGS.step": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1.4142135623730951}, "NDNT.training.lbfgsnew.LBFGSNew.step": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.__init__": {"tf": 1}}, "df": 8}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.modules.layers.bilayers.BinocLayer1D.forward": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.forward": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.forward": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.line_search": {"tf": 1}}, "df": 4, "a": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.NDN.NDN.assemble_ffnetworks": {"tf": 1}, "NDNT.NDN.NDN.training_step": {"tf": 1}, "NDNT.NDN.NDN.validation_step": {"tf": 1}, "NDNT.NDN.NDN.fit_dl": {"tf": 3.1622776601683795}, "NDNT.NDN.NDN.initialize_loss": {"tf": 2.23606797749979}, "NDNT.NDN.NDN.eval_models": {"tf": 2.8284271247461903}, "NDNT.NDN.NDN.get_weights": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.__init__": {"tf": 1}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1}, "NDNT.networks.FFnetwork": {"tf": 2.6457513110645907}, "NDNT.networks.FFnetwork.prepare_regularization": {"tf": 1}, "NDNT.networks.FFnetwork.list_parameters": {"tf": 1}, "NDNT.networks.FFnetwork.set_parameters": {"tf": 1}, "NDNT.networks.FFnetwork.set_reg_val": {"tf": 1}, "NDNT.networks.FFnetwork.plot_filters": {"tf": 1}, "NDNT.networks.FFnetwork.get_weights": {"tf": 1}, "NDNT.networks.FFnet_external.list_params": {"tf": 1}, "NDNT.networks.FFnet_external.set_params": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian": {"tf": 2.6457513110645907}, "NDNT.training.ada_hessian.AdaHessian.step": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.step": {"tf": 1}, "NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1}, "NDNT.utils.NDNutils.get_max_samples": {"tf": 1}}, "df": 32}}, "s": {"docs": {"NDNT.modules.layers.ndnlayer.NDNLayer.reset_parameters": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.Regularization.set_reg_val": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1}, "NDNT.training.lbfgs.LBFGS": {"tf": 1.4142135623730951}, "NDNT.training.lbfgs.LBFGS.line_search": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1.4142135623730951}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 2.23606797749979}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1}, "NDNT.utils.DanUtils.fold_sample": {"tf": 1}}, "df": 9}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.layers.laglayers.LagLayer": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1.4142135623730951}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_maxpenalty_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_localpenalty_matrix": {"tf": 1}}, "df": 4}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1.4142135623730951}, "NDNT.utils.create_reg_matrices.create_maxpenalty_matrix": {"tf": 1.4142135623730951}, "NDNT.utils.create_reg_matrices.create_localpenalty_matrix": {"tf": 1.4142135623730951}}, "df": 3}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {"NDNT.modules.regularization.Regularization": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.NDN.NDN": {"tf": 1}, "NDNT.NDN.NDN.assemble_ffnetworks": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.layer_dict": {"tf": 1}, "NDNT.networks.FFnetwork.determine_input_dims": {"tf": 1}, "NDNT.networks.ReadoutNetwork.determine_input_dims": {"tf": 1}, "NDNT.networks.FFnet_external": {"tf": 1}, "NDNT.utils.DanUtils.find_peaks": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}, "NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1}, "NDNT.utils.NDNutils.NpEncoder": {"tf": 1}}, "df": 37, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.NDN.NDN.get_trainer": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.__init__": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.step": {"tf": 1}, "NDNT.utils.DanUtils.figure_export": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}, "NDNT.utils.NDNutils.NpEncoder": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_external": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 1}}, "df": 12}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.layers.bilayers.BinocLayer1D": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.__init__": {"tf": 1}, "NDNT.modules.regularization.TikhanovC": {"tf": 1}, "NDNT.training.lbfgs.polyinterp": {"tf": 1}, "NDNT.utils.DanUtils.fold_sample": {"tf": 1}, "NDNT.utils.NDNutils.tent_basis_generate": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.unit_loss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.unit_loss": {"tf": 1}}, "df": 13, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.modules.layers.convlayers.STconvLayer": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.plot_filters": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.modules.layers.dimlayers.Dim0Layer.dim_info": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.dim_info": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.get_weights": {"tf": 1}, "NDNT.networks.FFnetwork.determine_input_dims": {"tf": 1}, "NDNT.networks.ReadoutNetwork.determine_input_dims": {"tf": 1}}, "df": 5}}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.utils.NDNutils.CPU_Unpickler.find_class": {"tf": 1}}, "df": 1, "s": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1}}, "df": 1}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.modules.regularization.RegModule.forward": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1.4142135623730951}}, "df": 1}}}, "w": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"NDNT.utils.DanUtils.binocular_data_import": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}}, "df": 2}}}}}}}}, "m": {"docs": {"NDNT.modules.layers.laglayers.LagLayer": {"tf": 1}}, "df": 1}, "l": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.modules.regularization.Regularization.__init__": {"tf": 1}, "NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1}}, "df": 2}}, "k": {"docs": {"NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 2}}, "df": 1}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 1}}, "df": 4}}}}}}, "t": {"docs": {"NDNT.modules.layers.convlayers.TconvLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.STconvLayer": {"tf": 1.7320508075688772}, "NDNT.modules.layers.lvlayers.LVLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.set_readout_locations": {"tf": 1}, "NDNT.training.earlystopping.EarlyStopping": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1.7320508075688772}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1.4142135623730951}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_maxpenalty_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_localpenalty_matrix": {"tf": 1}}, "df": 14, "h": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.NDN.NDN": {"tf": 3.7416573867739413}, "NDNT.NDN.NDN.assemble_ffnetworks": {"tf": 2.6457513110645907}, "NDNT.NDN.NDN.compute_network_outputs": {"tf": 2.449489742783178}, "NDNT.NDN.NDN.forward": {"tf": 2}, "NDNT.NDN.NDN.training_step": {"tf": 2}, "NDNT.NDN.NDN.validation_step": {"tf": 2.449489742783178}, "NDNT.NDN.NDN.compute_reg_loss": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.get_trainer": {"tf": 4.123105625617661}, "NDNT.NDN.NDN.get_dataloaders": {"tf": 3.605551275463989}, "NDNT.NDN.NDN.get_optimizer": {"tf": 3.3166247903554}, "NDNT.NDN.NDN.prepare_regularization": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.fit": {"tf": 4.795831523312719}, "NDNT.NDN.NDN.fit_dl": {"tf": 4.358898943540674}, "NDNT.NDN.NDN.initialize_loss": {"tf": 3}, "NDNT.NDN.NDN.compute_average_responses": {"tf": 2.8284271247461903}, "NDNT.NDN.NDN.initialize_biases": {"tf": 3.4641016151377544}, "NDNT.NDN.NDN.eval_models": {"tf": 4.795831523312719}, "NDNT.NDN.NDN.generate_predictions": {"tf": 3.3166247903554}, "NDNT.NDN.NDN.change_loss": {"tf": 2.8284271247461903}, "NDNT.NDN.NDN.get_weights": {"tf": 2.449489742783178}, "NDNT.NDN.NDN.get_readout_locations": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.passive_readout": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.list_parameters": {"tf": 2}, "NDNT.NDN.NDN.set_parameters": {"tf": 3.1622776601683795}, "NDNT.NDN.NDN.set_reg_val": {"tf": 2.8284271247461903}, "NDNT.NDN.NDN.plot_filters": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.save_model_zip": {"tf": 3.4641016151377544}, "NDNT.NDN.NDN.load_model_zip": {"tf": 2.449489742783178}, "NDNT.NDN.NDN.save_model": {"tf": 2.23606797749979}, "NDNT.NDN.NDN.save_model_chk": {"tf": 3}, "NDNT.NDN.NDN.get_null_adjusted_ll": {"tf": 2}, "NDNT.NDN.NDN.get_activations": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.load_model": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.load_model_chk": {"tf": 2.449489742783178}, "NDNT.NDN.NDN.model_string": {"tf": 1}, "NDNT.modules.activations.adaptive_elu": {"tf": 1}, "NDNT.modules.activations.Square.forward": {"tf": 1}, "NDNT.modules.activations.AdaptiveELU": {"tf": 1}, "NDNT.modules.activations.AdaptiveELU.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.activations.AdaptiveELU.forward": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchGenerator": {"tf": 1.4142135623730951}, "NDNT.modules.experiment_sampler.ExperimentBatchGenerator.next": {"tf": 1.4142135623730951}, "NDNT.modules.experiment_sampler.ExperimentBatchIterator": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler": {"tf": 1.7320508075688772}, "NDNT.modules.layers.bilayers.BinocLayer1D.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.BiConvLayer1D.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1.7320508075688772}, "NDNT.modules.layers.bilayers.ChannelConvLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.ChannelConvLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.batchnorm_convert": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.ConvLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.ConvLayer.preprocess_weights": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.ConvLayer.forward": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.forward": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.plot_filters": {"tf": 1.7320508075688772}, "NDNT.modules.layers.convlayers.TconvLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.STconvLayer": {"tf": 2.23606797749979}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.forward": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.plot_filters": {"tf": 1.7320508075688772}, "NDNT.modules.layers.convlayers.STconvLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.Dim0Layer.dim_info": {"tf": 2}, "NDNT.modules.layers.dimlayers.Dim0Layer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.ChannelLayer": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.DimSPLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.DimSPTLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.externallayer.ExternalLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.externallayer.ExternalLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.laglayers.LagLayer": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.laglayers.LagLayer.forward": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.plot_filters": {"tf": 2.23606797749979}, "NDNT.modules.layers.laglayers.LagLayer.layer_dict": {"tf": 1.7320508075688772}, "NDNT.modules.layers.lvlayers.LVLayer.__init__": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"tf": 1.7320508075688772}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1.7320508075688772}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 3}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.reset_parameters": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.initialize_gaussian_envelope": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.preprocess_weights": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.forward": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.compute_reg_loss": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.get_weights": {"tf": 2.23606797749979}, "NDNT.modules.layers.ndnlayer.NDNLayer.set_reg_val": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.plot_filters": {"tf": 1.7320508075688772}, "NDNT.modules.layers.ndnlayer.NDNLayer.dim_info": {"tf": 2}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1.7320508075688772}, "NDNT.modules.layers.normlayers.DivNormLayer.__init__": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.forward": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.get_rot_mat": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.forward": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.forward": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.plot_filters": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.ReadoutLayer.initialize_spatial_mapping": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 2.8284271247461903}, "NDNT.modules.layers.readouts.ReadoutLayer.get_weights": {"tf": 2}, "NDNT.modules.layers.readouts.ReadoutLayer.forward": {"tf": 2}, "NDNT.modules.layers.readouts.ReadoutLayer.set_readout_locations": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.get_readout_locations": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.ReadoutLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.ReadoutLayer3d": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.forward": {"tf": 2}, "NDNT.modules.layers.readouts.ReadoutLayer3d.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.FixationLayer.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.forward": {"tf": 2}, "NDNT.modules.layers.readouts.FixationLayer.initialize": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterLayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1.7320508075688772}, "NDNT.modules.layers.reslayers.IterLayer.forward": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1.7320508075688772}, "NDNT.modules.layers.reslayers.IterTlayer.forward": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1.7320508075688772}, "NDNT.modules.layers.reslayers.IterSTlayer.forward": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.forward": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.L1convLayer.reset_parameters2": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.OnOffLayer.plot_filters": {"tf": 2}, "NDNT.modules.layers.specialtylayers.OnOffLayer.forward": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.MaskLayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.layers.specialtylayers.MaskLayer.layer_dict": {"tf": 1.7320508075688772}, "NDNT.modules.layers.timelayers.TimeLayer.forward": {"tf": 1}, "NDNT.modules.regularization.Regularization": {"tf": 1}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.RegModule.forward": {"tf": 2.449489742783178}, "NDNT.modules.regularization.ConvReg.compute_reg_penalty": {"tf": 2.449489742783178}, "NDNT.modules.regularization.ActivityReg": {"tf": 1}, "NDNT.networks.FFnetwork": {"tf": 2.6457513110645907}, "NDNT.networks.FFnetwork.determine_input_dims": {"tf": 2.8284271247461903}, "NDNT.networks.FFnetwork.preprocess_input": {"tf": 1.7320508075688772}, "NDNT.networks.FFnetwork.forward": {"tf": 2.23606797749979}, "NDNT.networks.FFnetwork.prepare_regularization": {"tf": 1}, "NDNT.networks.FFnetwork.compute_reg_loss": {"tf": 1.4142135623730951}, "NDNT.networks.FFnetwork.list_parameters": {"tf": 2.23606797749979}, "NDNT.networks.FFnetwork.set_parameters": {"tf": 3}, "NDNT.networks.FFnetwork.set_reg_val": {"tf": 2.449489742783178}, "NDNT.networks.FFnetwork.plot_filters": {"tf": 2}, "NDNT.networks.FFnetwork.get_weights": {"tf": 2.23606797749979}, "NDNT.networks.FFnetwork.ffnet_dict": {"tf": 3.1622776601683795}, "NDNT.networks.ScaffoldNetwork": {"tf": 2.23606797749979}, "NDNT.networks.ScaffoldNetwork.forward": {"tf": 2.23606797749979}, "NDNT.networks.ScaffoldNetwork.ffnet_dict": {"tf": 2.23606797749979}, "NDNT.networks.ScaffoldNetwork3d": {"tf": 2.449489742783178}, "NDNT.networks.ScaffoldNetwork3d.forward": {"tf": 2.23606797749979}, "NDNT.networks.ScaffoldNetwork3d.ffnet_dict": {"tf": 1.7320508075688772}, "NDNT.networks.ReadoutNetwork": {"tf": 3.605551275463989}, "NDNT.networks.ReadoutNetwork.determine_input_dims": {"tf": 2.449489742783178}, "NDNT.networks.ReadoutNetwork.forward": {"tf": 2}, "NDNT.networks.ReadoutNetwork.get_readout_locations": {"tf": 1.4142135623730951}, "NDNT.networks.ReadoutNetwork.set_readout_locations": {"tf": 1.4142135623730951}, "NDNT.networks.ReadoutNetwork.ffnet_dict": {"tf": 2}, "NDNT.networks.FFnet_external": {"tf": 2.449489742783178}, "NDNT.networks.FFnet_external.forward": {"tf": 2.23606797749979}, "NDNT.networks.FFnet_external.compute_reg_loss": {"tf": 1}, "NDNT.networks.FFnet_external.list_params": {"tf": 2.23606797749979}, "NDNT.networks.FFnet_external.set_params": {"tf": 3}, "NDNT.networks.FFnet_external.ffnet_dict": {"tf": 1.7320508075688772}, "NDNT.training.ada_hessian.AdaHessian": {"tf": 2.6457513110645907}, "NDNT.training.ada_hessian.AdaHessian.zero_hessian": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.set_hessian": {"tf": 1.4142135623730951}, "NDNT.training.ada_hessian.AdaHessian.step": {"tf": 1.4142135623730951}, "NDNT.training.earlystopping.EarlyStopping": {"tf": 1.4142135623730951}, "NDNT.training.lbfgs.polyinterp": {"tf": 1.4142135623730951}, "NDNT.training.lbfgs.LBFGS": {"tf": 1.7320508075688772}, "NDNT.training.lbfgs.LBFGS.step": {"tf": 2}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1.4142135623730951}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 2.449489742783178}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1.7320508075688772}, "NDNT.training.lbfgsnew.LBFGSNew.step": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer": {"tf": 1}, "NDNT.training.trainer.Trainer.__init__": {"tf": 1}, "NDNT.training.trainer.Trainer.fit": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer.prepare_fit": {"tf": 1}, "NDNT.training.trainer.Trainer.fit_loop": {"tf": 1}, "NDNT.training.trainer.Trainer.checkpoint_model": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer.graceful_exit": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.fit": {"tf": 1.4142135623730951}, "NDNT.utils.DanUtils.fold_sample": {"tf": 1}, "NDNT.utils.DanUtils.time_embedding_simple": {"tf": 1}, "NDNT.utils.DanUtils.design_matrix_drift": {"tf": 1.7320508075688772}, "NDNT.utils.DanUtils.binocular_data_import": {"tf": 1.4142135623730951}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 2.449489742783178}, "NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 2.8284271247461903}, "NDNT.utils.NDNutils.CPU_Unpickler.find_class": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding": {"tf": 2.23606797749979}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 2.6457513110645907}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 1.7320508075688772}, "NDNT.utils.NDNutils.tent_basis_generate": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.shift_mat_zpad": {"tf": 1}, "NDNT.utils.NDNutils.save_checkpoint": {"tf": 1}, "NDNT.utils.NDNutils.get_fit_versions": {"tf": 1.7320508075688772}, "NDNT.utils.NDNutils.get_max_samples": {"tf": 2.8284271247461903}, "NDNT.utils.NDNutils.NpEncoder": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.NpEncoder.default": {"tf": 1.7320508075688772}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 3.4641016151377544}, "NDNT.utils.create_reg_matrices.create_maxpenalty_matrix": {"tf": 2.23606797749979}, "NDNT.utils.create_reg_matrices.create_localpenalty_matrix": {"tf": 2.23606797749979}, "NDNT.utils.ffnet_dicts.ffnet_dict_readout": {"tf": 1.7320508075688772}, "NDNT.utils.ffnet_dicts.ffnet_dict_external": {"tf": 3.7416573867739413}, "NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 1.4142135623730951}, "NDNT.metrics.mse_loss.MseLoss_datafilter.forward": {"tf": 2.6457513110645907}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_log_epsilon": {"tf": 2.23606797749979}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.forward": {"tf": 2.6457513110645907}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.forward": {"tf": 2.6457513110645907}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"tf": 1.4142135623730951}, "NDNT.metrics.rmse_loss.RmseLoss.forward": {"tf": 2.6457513110645907}}, "df": 230, "m": {"docs": {"NDNT.NDN.NDN.assemble_ffnetworks": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.passive_readout": {"tf": 1}, "NDNT.modules.regularization.RegModule.forward": {"tf": 1}, "NDNT.training.trainer.Trainer": {"tf": 1}}, "df": 7}, "n": {"docs": {"NDNT.modules.layers.bilayers.BinocLayer1D.forward": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.forward": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.forward": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1}, "NDNT.utils.DanUtils.find_peaks": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_external": {"tf": 1}}, "df": 8}, "s": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.layers.bilayers.BinocLayer1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.layer_dict": {"tf": 1}, "NDNT.utils.DanUtils.design_matrix_drift": {"tf": 1}, "NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 1}}, "df": 30}}, "i": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.layers.bilayers.BinocLayer1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.layer_dict": {"tf": 1}}, "df": 26}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.layers.bilayers.ChannelConvLayer": {"tf": 1}, "NDNT.networks.FFnetwork.determine_input_dims": {"tf": 1}, "NDNT.networks.ScaffoldNetwork": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1}, "NDNT.networks.ReadoutNetwork.determine_input_dims": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1}, "NDNT.training.trainer.Trainer": {"tf": 1}}, "df": 8}}, "y": {"docs": {"NDNT.modules.layers.convlayers.STconvLayer": {"tf": 1}, "NDNT.training.lbfgs.polyinterp": {"tf": 1}}, "df": 2}, "t": {"docs": {}, "df": 0, "a": {"docs": {"NDNT.modules.layers.orilayers.OriLayer.rotation_matrix_tensor": {"tf": 1.4142135623730951}, "NDNT.modules.layers.orilayers.OriConvLayer.rotation_matrix_tensor": {"tf": 1.4142135623730951}, "NDNT.modules.layers.orilayers.OriConvLayer.get_rot_mat": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.rotate_tensor": {"tf": 1}}, "df": 4}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.NDN.NDN.assemble_ffnetworks": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.compute_network_outputs": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.fit_dl": {"tf": 1}, "NDNT.NDN.NDN.initialize_loss": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.initialize_biases": {"tf": 1}, "NDNT.NDN.NDN.change_loss": {"tf": 1}, "NDNT.NDN.NDN.get_weights": {"tf": 1}, "NDNT.NDN.NDN.get_readout_locations": {"tf": 1}, "NDNT.NDN.NDN.passive_readout": {"tf": 1}, "NDNT.NDN.NDN.set_parameters": {"tf": 1}, "NDNT.NDN.NDN.set_reg_val": {"tf": 1}, "NDNT.NDN.NDN.save_model_chk": {"tf": 1}, "NDNT.modules.activations.AdaptiveELU": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.batchnorm_convert": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.dim_info": {"tf": 1.7320508075688772}, "NDNT.modules.layers.dimlayers.Dim0Layer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.initialize_gaussian_envelope": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.dim_info": {"tf": 1.7320508075688772}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.set_readout_locations": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.passive_readout": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.passive_readout": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.initialize": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.layer_dict": {"tf": 1}, "NDNT.modules.regularization.Regularization": {"tf": 1}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.RegModule.forward": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.ConvReg.compute_reg_penalty": {"tf": 1}, "NDNT.networks.FFnetwork.determine_input_dims": {"tf": 1.7320508075688772}, "NDNT.networks.FFnetwork.prepare_regularization": {"tf": 1}, "NDNT.networks.ScaffoldNetwork": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1}, "NDNT.networks.ReadoutNetwork.determine_input_dims": {"tf": 1.7320508075688772}, "NDNT.networks.FFnet_external": {"tf": 1.4142135623730951}, "NDNT.training.ada_hessian.AdaHessian": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.step": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1.7320508075688772}, "NDNT.training.trainer.Trainer": {"tf": 1}, "NDNT.training.trainer.Trainer.__init__": {"tf": 1}, "NDNT.training.trainer.Trainer.prepare_fit": {"tf": 1}, "NDNT.training.trainer.Trainer.fit_loop": {"tf": 1}, "NDNT.training.trainer.Trainer.checkpoint_model": {"tf": 1}, "NDNT.training.trainer.Trainer.graceful_exit": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer": {"tf": 1}, "NDNT.training.trainer.TemperatureCalibratedTrainer": {"tf": 1}, "NDNT.utils.DanUtils.time_embedding_simple": {"tf": 1}, "NDNT.utils.DanUtils.design_matrix_drift": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.CPU_Unpickler.find_class": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 1}, "NDNT.utils.NDNutils.tent_basis_generate": {"tf": 1}, "NDNT.utils.NDNutils.initialize_gaussian_envelope": {"tf": 1}, "NDNT.utils.NDNutils.NpEncoder": {"tf": 1}, "NDNT.utils.NDNutils.NpEncoder.default": {"tf": 1.4142135623730951}, "NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 1.4142135623730951}, "NDNT.utils.ffnet_dicts.ffnet_dict_NIM": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_readout": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_external": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 1.4142135623730951}, "NDNT.metrics.mse_loss.MseLoss_datafilter.forward": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.forward": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.forward": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.unit_loss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"tf": 1.4142135623730951}, "NDNT.metrics.rmse_loss.RmseLoss.forward": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.unit_loss": {"tf": 1}}, "df": 106}, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.NDN.NDN.forward": {"tf": 1}}, "df": 1, "s": {"docs": {"NDNT.training.trainer.Trainer": {"tf": 1}}, "df": 1}}, "k": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1}, "NDNT.networks.ScaffoldNetwork": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1}}, "df": 4}}, "r": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.networks.ScaffoldNetwork3d": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.NDN.NDN.forward": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchGenerator": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchIterator": {"tf": 1}, "NDNT.modules.experiment_sampler.construct_exp_to_time": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.BiConvLayer1D": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.BiSTconv1D": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.ChannelConvLayer": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.ConvLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.TconvLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.STconvLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.Dim0Layer": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.ChannelLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.DimSPLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.DimSPLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.DimSPTLayer": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.externallayer.ExternalLayer": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.__init__": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.lvlayers.LVLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.orilayers.OriLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.ReadoutLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.ReadoutLayer3d.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.Tlayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.L1convLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.OnOffLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.MaskLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1}, "NDNT.modules.regularization.ConvReg.compute_reg_penalty": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.ActivityReg": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1}, "NDNT.networks.FFnet_external": {"tf": 1.4142135623730951}, "NDNT.training.ada_hessian.AdaHessian.get_params": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.step": {"tf": 1}, "NDNT.training.lbfgs.is_legal": {"tf": 1}, "NDNT.training.lbfgs.polyinterp": {"tf": 1.4142135623730951}, "NDNT.training.lbfgs.LBFGS.step": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew.step": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.fit_data_dict": {"tf": 1}, "NDNT.utils.DanUtils.imagesc": {"tf": 1}, "NDNT.utils.DanUtils.design_matrix_drift": {"tf": 1.4142135623730951}, "NDNT.utils.DanUtils.binocular_data_import": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 2}, "NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1.7320508075688772}, "NDNT.utils.NDNutils.create_time_embedding": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.get_max_samples": {"tf": 1}, "NDNT.utils.NDNutils.NpEncoder": {"tf": 1}, "NDNT.utils.NDNutils.NpEncoder.default": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1.4142135623730951}, "NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_NIM": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_readout": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_external": {"tf": 2.23606797749979}, "NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1.4142135623730951}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 1.4142135623730951}}, "df": 73}, "n": {"docs": {"NDNT.modules.layers.laglayers.LagLayer": {"tf": 1}, "NDNT.modules.regularization.Regularization.set_reg_val": {"tf": 1}}, "df": 2}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"NDNT.modules.layers.laglayers.LagLayer.forward": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.forward": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.forward": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.forward": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.forward": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.forward": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.forward": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.forward": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.forward": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.forward": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.forward": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.forward": {"tf": 1}, "NDNT.networks.FFnetwork.forward": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.forward": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d.forward": {"tf": 1}, "NDNT.networks.FFnet_external.forward": {"tf": 1}}, "df": 16}}}}, "e": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.layers.lvlayers.LVLayer.forward": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}}, "df": 4}}}, "o": {"docs": {"NDNT.NDN.NDN": {"tf": 2}, "NDNT.NDN.NDN.assemble_ffnetworks": {"tf": 2}, "NDNT.NDN.NDN.training_step": {"tf": 1}, "NDNT.NDN.NDN.validation_step": {"tf": 1}, "NDNT.NDN.NDN.get_trainer": {"tf": 3.4641016151377544}, "NDNT.NDN.NDN.get_dataloaders": {"tf": 2.449489742783178}, "NDNT.NDN.NDN.get_optimizer": {"tf": 2.449489742783178}, "NDNT.NDN.NDN.fit": {"tf": 3.3166247903554}, "NDNT.NDN.NDN.fit_dl": {"tf": 3.605551275463989}, "NDNT.NDN.NDN.initialize_loss": {"tf": 2.449489742783178}, "NDNT.NDN.NDN.compute_average_responses": {"tf": 1}, "NDNT.NDN.NDN.initialize_biases": {"tf": 1}, "NDNT.NDN.NDN.eval_models": {"tf": 3.872983346207417}, "NDNT.NDN.NDN.generate_predictions": {"tf": 2.6457513110645907}, "NDNT.NDN.NDN.change_loss": {"tf": 1}, "NDNT.NDN.NDN.get_weights": {"tf": 1}, "NDNT.NDN.NDN.passive_readout": {"tf": 1}, "NDNT.NDN.NDN.set_parameters": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.save_model_zip": {"tf": 1}, "NDNT.NDN.NDN.load_model_zip": {"tf": 1}, "NDNT.NDN.NDN.save_model": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.save_model_chk": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.get_null_adjusted_ll": {"tf": 1}, "NDNT.NDN.NDN.get_activations": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.load_model": {"tf": 1}, "NDNT.NDN.NDN.load_model_chk": {"tf": 1}, "NDNT.NDN.NDN.model_string": {"tf": 1}, "NDNT.modules.activations.adaptive_elu": {"tf": 1}, "NDNT.modules.activations.AdaptiveELU": {"tf": 1.4142135623730951}, "NDNT.modules.activations.AdaptiveELU.__init__": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchGenerator": {"tf": 2}, "NDNT.modules.experiment_sampler.ExperimentBatchIterator": {"tf": 2}, "NDNT.modules.experiment_sampler.construct_exp_to_time": {"tf": 1.7320508075688772}, "NDNT.modules.experiment_sampler.ExperimentSampler": {"tf": 2.449489742783178}, "NDNT.modules.layers.bilayers.BinocLayer1D": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D.forward": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D.layer_dict": {"tf": 1.7320508075688772}, "NDNT.modules.layers.bilayers.BiConvLayer1D.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.BiConvLayer1D.layer_dict": {"tf": 1.7320508075688772}, "NDNT.modules.layers.bilayers.BiSTconv1D": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.BiSTconv1D.forward": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 3.7416573867739413}, "NDNT.modules.layers.bilayers.ChannelConvLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.ChannelConvLayer.__init__": {"tf": 2.23606797749979}, "NDNT.modules.layers.bilayers.ChannelConvLayer.layer_dict": {"tf": 1.7320508075688772}, "NDNT.modules.layers.bilayers.ChannelConvLayer.forward": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 2.8284271247461903}, "NDNT.modules.layers.convlayers.ConvLayer.batchnorm_convert": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.layer_dict": {"tf": 1.7320508075688772}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 2.8284271247461903}, "NDNT.modules.layers.convlayers.TconvLayer.plot_filters": {"tf": 2}, "NDNT.modules.layers.convlayers.TconvLayer.layer_dict": {"tf": 1.7320508075688772}, "NDNT.modules.layers.convlayers.STconvLayer": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 2.8284271247461903}, "NDNT.modules.layers.convlayers.STconvLayer.plot_filters": {"tf": 2}, "NDNT.modules.layers.convlayers.STconvLayer.layer_dict": {"tf": 1.7320508075688772}, "NDNT.modules.layers.dimlayers.Dim0Layer.dim_info": {"tf": 1.7320508075688772}, "NDNT.modules.layers.dimlayers.Dim0Layer.layer_dict": {"tf": 1.7320508075688772}, "NDNT.modules.layers.dimlayers.ChannelLayer.layer_dict": {"tf": 1.7320508075688772}, "NDNT.modules.layers.dimlayers.DimSPLayer.layer_dict": {"tf": 1.7320508075688772}, "NDNT.modules.layers.dimlayers.DimSPTLayer.layer_dict": {"tf": 1.7320508075688772}, "NDNT.modules.layers.externallayer.ExternalLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.laglayers.LagLayer": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.laglayers.LagLayer.plot_filters": {"tf": 1.7320508075688772}, "NDNT.modules.layers.laglayers.LagLayer.layer_dict": {"tf": 2.23606797749979}, "NDNT.modules.layers.lvlayers.LVLayer": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"tf": 2.23606797749979}, "NDNT.modules.layers.lvlayers.LVLayerOLD.forward": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 2.23606797749979}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 3.3166247903554}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 2.8284271247461903}, "NDNT.modules.layers.ndnlayer.NDNLayer.reset_parameters": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.initialize_gaussian_envelope": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.get_weights": {"tf": 2}, "NDNT.modules.layers.ndnlayer.NDNLayer.set_reg_val": {"tf": 1.7320508075688772}, "NDNT.modules.layers.ndnlayer.NDNLayer.plot_filters": {"tf": 2}, "NDNT.modules.layers.ndnlayer.NDNLayer.dim_info": {"tf": 1.7320508075688772}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 3.7416573867739413}, "NDNT.modules.layers.normlayers.DivNormLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.orilayers.OriLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.orilayers.OriConvLayer.get_rot_mat": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.orilayers.ConvLayer3D.layer_dict": {"tf": 1.7320508075688772}, "NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.ReadoutLayer.get_weights": {"tf": 2.23606797749979}, "NDNT.modules.layers.readouts.ReadoutLayer.passive_readout": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.layer_dict": {"tf": 1.7320508075688772}, "NDNT.modules.layers.readouts.ReadoutLayer3d.passive_readout": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.ReadoutLayer3d.layer_dict": {"tf": 1.7320508075688772}, "NDNT.modules.layers.readouts.FixationLayer.__init__": {"tf": 2}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 1.7320508075688772}, "NDNT.modules.layers.reslayers.IterLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 2.23606797749979}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 2.8284271247461903}, "NDNT.modules.layers.reslayers.IterTlayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterTlayer.__init__": {"tf": 2}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 2.6457513110645907}, "NDNT.modules.layers.reslayers.IterSTlayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterSTlayer.__init__": {"tf": 2}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 2.6457513110645907}, "NDNT.modules.layers.specialtylayers.Tlayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.layers.specialtylayers.Tlayer.plot_filters": {"tf": 2}, "NDNT.modules.layers.specialtylayers.Tlayer.layer_dict": {"tf": 1.7320508075688772}, "NDNT.modules.layers.specialtylayers.L1convLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.L1convLayer.reset_parameters2": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.L1convLayer.layer_dict": {"tf": 1.7320508075688772}, "NDNT.modules.layers.specialtylayers.OnOffLayer.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.layers.specialtylayers.OnOffLayer.plot_filters": {"tf": 1.7320508075688772}, "NDNT.modules.layers.specialtylayers.OnOffLayer.layer_dict": {"tf": 2.23606797749979}, "NDNT.modules.layers.specialtylayers.MaskLayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 2.8284271247461903}, "NDNT.modules.layers.specialtylayers.MaskLayer.layer_dict": {"tf": 2.6457513110645907}, "NDNT.modules.layers.timelayers.TimeLayer": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.__init__": {"tf": 2}, "NDNT.modules.regularization.Regularization": {"tf": 1}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.regularization.Regularization.unit_reg_convert": {"tf": 1}, "NDNT.modules.regularization.Regularization.reg_copy": {"tf": 1}, "NDNT.modules.regularization.RegModule.forward": {"tf": 1}, "NDNT.modules.regularization.LocalityReg": {"tf": 1}, "NDNT.modules.regularization.ConvReg.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.ActivityReg": {"tf": 1.4142135623730951}, "NDNT.networks.FFnetwork": {"tf": 2.6457513110645907}, "NDNT.networks.FFnetwork.preprocess_input": {"tf": 1.4142135623730951}, "NDNT.networks.FFnetwork.forward": {"tf": 1}, "NDNT.networks.FFnetwork.prepare_regularization": {"tf": 1.4142135623730951}, "NDNT.networks.FFnetwork.list_parameters": {"tf": 1.4142135623730951}, "NDNT.networks.FFnetwork.set_parameters": {"tf": 2}, "NDNT.networks.FFnetwork.set_reg_val": {"tf": 2.23606797749979}, "NDNT.networks.FFnetwork.plot_filters": {"tf": 1.4142135623730951}, "NDNT.networks.FFnetwork.get_weights": {"tf": 1.4142135623730951}, "NDNT.networks.ScaffoldNetwork": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.forward": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d.forward": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 2.23606797749979}, "NDNT.networks.ReadoutNetwork.forward": {"tf": 1.4142135623730951}, "NDNT.networks.FFnet_external": {"tf": 1.4142135623730951}, "NDNT.networks.FFnet_external.forward": {"tf": 1}, "NDNT.networks.FFnet_external.list_params": {"tf": 1.4142135623730951}, "NDNT.networks.FFnet_external.set_params": {"tf": 2}, "NDNT.training.ada_hessian.AdaHessian": {"tf": 2.23606797749979}, "NDNT.training.earlystopping.EarlyStopping": {"tf": 1.4142135623730951}, "NDNT.training.lbfgs.is_legal": {"tf": 1}, "NDNT.training.lbfgs.polyinterp": {"tf": 1.4142135623730951}, "NDNT.training.lbfgs.LBFGS": {"tf": 1.4142135623730951}, "NDNT.training.lbfgs.LBFGS.line_search": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.two_loop_recursion": {"tf": 1.7320508075688772}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1.4142135623730951}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 2}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer.__init__": {"tf": 2.23606797749979}, "NDNT.training.trainer.Trainer.fit": {"tf": 1}, "NDNT.training.trainer.Trainer.prepare_fit": {"tf": 1}, "NDNT.training.trainer.Trainer.fit_loop": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.__init__": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.fit": {"tf": 1}, "NDNT.utils.DanUtils.matlab_export": {"tf": 1}, "NDNT.utils.DanUtils.design_matrix_drift": {"tf": 1.4142135623730951}, "NDNT.utils.DanUtils.binocular_data_import": {"tf": 2.23606797749979}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 2.449489742783178}, "NDNT.utils.DanUtils.monocular_data_import": {"tf": 1}, "NDNT.utils.MattUtils.smooth_ema": {"tf": 1}, "NDNT.utils.NDNutils.fit_lbfgs": {"tf": 1}, "NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 2.449489742783178}, "NDNT.utils.NDNutils.CPU_Unpickler.find_class": {"tf": 1}, "NDNT.utils.NDNutils.is_int": {"tf": 1}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.tent_basis_generate": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.generate_xv_folds": {"tf": 1.7320508075688772}, "NDNT.utils.NDNutils.pixel2grid": {"tf": 1.7320508075688772}, "NDNT.utils.NDNutils.save_checkpoint": {"tf": 1.7320508075688772}, "NDNT.utils.NDNutils.load_checkpoint": {"tf": 1.7320508075688772}, "NDNT.utils.NDNutils.get_max_samples": {"tf": 1.7320508075688772}, "NDNT.utils.NDNutils.NpEncoder": {"tf": 1.7320508075688772}, "NDNT.utils.NDNutils.NpEncoder.default": {"tf": 1.4142135623730951}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1.4142135623730951}, "NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 2.449489742783178}, "NDNT.utils.ffnet_dicts.ffnet_dict_NIM": {"tf": 1.4142135623730951}, "NDNT.utils.ffnet_dicts.ffnet_dict_external": {"tf": 2}, "NDNT.utils.plotting.plot_filters_1D": {"tf": 1}, "NDNT.utils.plotting.plot_filters_2D": {"tf": 1}, "NDNT.utils.plotting.plot_filters_ST1D": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 2}, "NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 2}, "NDNT.metrics.mse_loss.MseLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 2}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_log_epsilon": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 2}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 2.23606797749979}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"tf": 2}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.unit_loss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 2}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"tf": 2}, "NDNT.metrics.rmse_loss.RmseLoss.unit_loss": {"tf": 1}}, "df": 203, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.NDN.NDN.assemble_ffnetworks": {"tf": 1}, "NDNT.NDN.NDN.forward": {"tf": 1}, "NDNT.networks.ScaffoldNetwork": {"tf": 1}}, "df": 3}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.NDN.NDN.training_step": {"tf": 1}, "NDNT.NDN.NDN.compute_reg_loss": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D": {"tf": 1}, "NDNT.utils.NDNutils.tent_basis_generate": {"tf": 1}}, "df": 4}}}, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"NDNT.NDN.NDN.get_trainer": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.get_optimizer": {"tf": 1}, "NDNT.NDN.NDN.fit": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.eval_models": {"tf": 1}, "NDNT.NDN.NDN.generate_predictions": {"tf": 1}, "NDNT.NDN.NDN.save_model": {"tf": 1}, "NDNT.NDN.NDN.load_model": {"tf": 1}, "NDNT.modules.activations.adaptive_elu": {"tf": 1.4142135623730951}, "NDNT.modules.activations.Square.forward": {"tf": 1.4142135623730951}, "NDNT.modules.activations.AdaptiveELU.forward": {"tf": 1.4142135623730951}, "NDNT.modules.activity_regularization.ActivityRegularization.activity": {"tf": 1.4142135623730951}, "NDNT.modules.activity_regularization.ActivityRegularization.nonneg": {"tf": 1.4142135623730951}, "NDNT.modules.activity_regularization.ActivityRegularization.regularize": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.ConvLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.TconvLayer.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.STconvLayer.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.Dim0Layer.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.ChannelLayer.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.DimSPLayer.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.DimSPTLayer.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.laglayers.LagLayer.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.lvlayers.LVLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.compute_reg_loss": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.orilayers.OriLayer.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.orilayers.OriConvLayer.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.orilayers.ConvLayer3D.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterLayer.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterTlayer.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterSTlayer.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.Tlayer.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.L1convLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.MaskLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.forward": {"tf": 1.4142135623730951}, "NDNT.networks.FFnetwork.preprocess_input": {"tf": 1.4142135623730951}, "NDNT.networks.FFnetwork.forward": {"tf": 1.4142135623730951}, "NDNT.networks.FFnetwork.compute_reg_loss": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.forward": {"tf": 1.4142135623730951}, "NDNT.networks.ScaffoldNetwork3d.forward": {"tf": 1.4142135623730951}, "NDNT.networks.ReadoutNetwork.forward": {"tf": 1.4142135623730951}, "NDNT.networks.FFnet_external.forward": {"tf": 1.4142135623730951}, "NDNT.training.lbfgs.LBFGS": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1}, "NDNT.training.trainer.Trainer.__init__": {"tf": 1.7320508075688772}, "NDNT.utils.NDNutils.save_checkpoint": {"tf": 1.7320508075688772}, "NDNT.utils.NDNutils.load_checkpoint": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.forward": {"tf": 2}, "NDNT.metrics.mse_loss.MseLoss_datafilter.unit_loss": {"tf": 2}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.forward": {"tf": 2}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.unit_loss": {"tf": 2}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.forward": {"tf": 2}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.unit_loss": {"tf": 2}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.forward": {"tf": 2}, "NDNT.metrics.rmse_loss.RmseLoss.unit_loss": {"tf": 2}}, "df": 64}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.training.lbfgsnew.LBFGSNew": {"tf": 2}}, "df": 1}}}}}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.NDN.NDN": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.assemble_ffnetworks": {"tf": 1}, "NDNT.NDN.NDN.get_trainer": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.get_optimizer": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.change_loss": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.set_reg_val": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.save_model_zip": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 2.449489742783178}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 2}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 2}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 2}, "NDNT.modules.layers.lvlayers.LVLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.lvlayers.LVLayerOLD.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 2}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 2}, "NDNT.modules.layers.ndnlayer.NDNLayer.reset_parameters": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.set_reg_val": {"tf": 1.7320508075688772}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 2.449489742783178}, "NDNT.modules.layers.orilayers.OriConvLayer.rotate_tensor": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1}, "NDNT.modules.regularization.Regularization.set_reg_val": {"tf": 2.23606797749979}, "NDNT.networks.FFnetwork": {"tf": 1.4142135623730951}, "NDNT.networks.FFnetwork.determine_input_dims": {"tf": 1.7320508075688772}, "NDNT.networks.FFnetwork.set_reg_val": {"tf": 1.4142135623730951}, "NDNT.networks.FFnetwork.ffnet_dict": {"tf": 1.4142135623730951}, "NDNT.networks.ReadoutNetwork": {"tf": 1.7320508075688772}, "NDNT.networks.ReadoutNetwork.determine_input_dims": {"tf": 1}, "NDNT.training.lbfgs.LBFGS": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding": {"tf": 1.7320508075688772}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1.7320508075688772}, "NDNT.utils.NDNutils.shift_mat_zpad": {"tf": 2}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1.7320508075688772}, "NDNT.utils.create_reg_matrices.create_maxpenalty_matrix": {"tf": 1.4142135623730951}, "NDNT.utils.create_reg_matrices.create_localpenalty_matrix": {"tf": 1.4142135623730951}, "NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 1.4142135623730951}}, "df": 40, "s": {"docs": {"NDNT.modules.regularization.Regularization": {"tf": 2}, "NDNT.modules.regularization.Regularization.set_reg_val": {"tf": 1}, "NDNT.modules.regularization.InlineReg.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.Tikhanov.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.TikhanovC.compute_reg_penalty": {"tf": 1}, "NDNT.networks.FFnetwork.determine_input_dims": {"tf": 1}, "NDNT.networks.ReadoutNetwork.determine_input_dims": {"tf": 1}, "NDNT.utils.NDNutils.is_int": {"tf": 1}, "NDNT.utils.NDNutils.NpEncoder": {"tf": 1}}, "df": 9}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.regularization.Regularization.__init__": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.NpEncoder": {"tf": 1}, "NDNT.utils.NDNutils.NpEncoder.default": {"tf": 1.7320508075688772}}, "df": 3}}}}}}}}, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.layers.ndnlayer.NDNLayer.get_weights": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.passive_readout": {"tf": 1}}, "df": 2, "s": {"docs": {"NDNT.NDN.NDN.assemble_ffnetworks": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D": {"tf": 1}, "NDNT.modules.regularization.RegModule.forward": {"tf": 1}, "NDNT.utils.DanUtils.time_embedding_simple": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}, "NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.create_time_embedding": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1}, "NDNT.utils.NDNutils.shift_mat_zpad": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_external": {"tf": 1.4142135623730951}}, "df": 10}}, "\u00e1": {"docs": {}, "df": 0, "c": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.NDN.NDN.initialize_biases": {"tf": 2}, "NDNT.NDN.NDN.generate_predictions": {"tf": 1}, "NDNT.NDN.NDN.get_weights": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.list_parameters": {"tf": 2}, "NDNT.NDN.NDN.set_parameters": {"tf": 2}, "NDNT.NDN.NDN.set_reg_val": {"tf": 2}, "NDNT.NDN.NDN.plot_filters": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.get_activations": {"tf": 2.23606797749979}, "NDNT.modules.regularization.Regularization": {"tf": 1}, "NDNT.networks.FFnetwork.list_parameters": {"tf": 1.4142135623730951}, "NDNT.networks.FFnetwork.set_parameters": {"tf": 1.4142135623730951}, "NDNT.networks.FFnetwork.set_reg_val": {"tf": 1.4142135623730951}, "NDNT.networks.FFnetwork.plot_filters": {"tf": 1}, "NDNT.networks.FFnetwork.get_weights": {"tf": 1.4142135623730951}, "NDNT.networks.FFnet_external.list_params": {"tf": 1.4142135623730951}, "NDNT.networks.FFnet_external.set_params": {"tf": 1.4142135623730951}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_maxpenalty_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_localpenalty_matrix": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.forward": {"tf": 2}, "NDNT.metrics.mse_loss.MseLoss_datafilter.unit_loss": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.forward": {"tf": 2}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.unit_loss": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.forward": {"tf": 2}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.unit_loss": {"tf": 1.4142135623730951}, "NDNT.metrics.rmse_loss.RmseLoss.forward": {"tf": 2}, "NDNT.metrics.rmse_loss.RmseLoss.unit_loss": {"tf": 1.4142135623730951}}, "df": 27}}}}, "n": {"docs": {}, "df": 0, "h": {"docs": {"NDNT.modules.layers.bilayers.BiConvLayer1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1}}, "df": 11}}}, "w": {"docs": {}, "df": 0, "o": {"docs": {"NDNT.NDN.NDN.assemble_ffnetworks": {"tf": 1}, "NDNT.networks.FFnetwork.determine_input_dims": {"tf": 1}, "NDNT.networks.ReadoutNetwork.determine_input_dims": {"tf": 1}, "NDNT.training.lbfgs.polyinterp": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.two_loop_recursion": {"tf": 1.4142135623730951}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1}, "NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_readout": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"tf": 1}}, "df": 12}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.NDN.NDN.compute_network_outputs": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.get_optimizer": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.dim_info": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.__init__": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.laglayers.LagLayer": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.__init__": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.ReadoutLayer3d.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.networks.ReadoutNetwork": {"tf": 1}, "NDNT.utils.NDNutils.NpEncoder": {"tf": 1}}, "df": 33}}}, "r": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.modules.layers.ndnlayer.NDNLayer.set_parameters": {"tf": 1}, "NDNT.modules.regularization.Regularization.unit_reg_convert": {"tf": 1}}, "df": 2, "s": {"docs": {"NDNT.modules.regularization.Regularization.unit_reg_convert": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.networks.FFnetwork.prepare_regularization": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.NDN.NDN.forward": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.modules.layers.lvlayers.LVLayer": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.__init__": {"tf": 1}}, "df": 2, "s": {"docs": {"NDNT.modules.layers.lvlayers.LVLayer": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.__init__": {"tf": 2}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"tf": 1.4142135623730951}}, "df": 3}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.NDN.NDN.get_dataloaders": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.fit": {"tf": 1}, "NDNT.NDN.NDN.fit_dl": {"tf": 1}, "NDNT.NDN.NDN.eval_models": {"tf": 1}, "NDNT.modules.regularization.Regularization.build_reg_modules": {"tf": 1}, "NDNT.training.trainer.Trainer.__init__": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer.fit": {"tf": 1}, "NDNT.training.trainer.Trainer.fit_loop": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer.train_one_epoch": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer.train_one_step": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.fit": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.fit_data_dict": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.train_one_epoch": {"tf": 1.4142135623730951}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1.7320508075688772}}, "df": 14, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.NDN.NDN.training_step": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.get_trainer": {"tf": 2.23606797749979}, "NDNT.NDN.NDN.get_dataloaders": {"tf": 2.23606797749979}, "NDNT.NDN.NDN.fit": {"tf": 2.8284271247461903}, "NDNT.NDN.NDN.fit_dl": {"tf": 3}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.Regularization": {"tf": 1}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1}, "NDNT.networks.FFnetwork.prepare_regularization": {"tf": 1.4142135623730951}, "NDNT.training.earlystopping.EarlyStopping": {"tf": 1}, "NDNT.training.trainer.Trainer.__init__": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer.fit": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer.prepare_fit": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer.fit_loop": {"tf": 1.7320508075688772}, "NDNT.training.trainer.Trainer.validate_one_epoch": {"tf": 1}, "NDNT.training.trainer.Trainer.train_one_epoch": {"tf": 1.7320508075688772}, "NDNT.training.trainer.Trainer.train_one_step": {"tf": 1.7320508075688772}, "NDNT.training.trainer.Trainer.checkpoint_model": {"tf": 1}, "NDNT.training.trainer.Trainer.graceful_exit": {"tf": 1.4142135623730951}, "NDNT.training.trainer.LBFGSTrainer": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.fit": {"tf": 1.4142135623730951}, "NDNT.training.trainer.LBFGSTrainer.fit_data_dict": {"tf": 1.4142135623730951}, "NDNT.training.trainer.LBFGSTrainer.train_one_epoch": {"tf": 1.7320508075688772}, "NDNT.training.trainer.TemperatureCalibratedTrainer": {"tf": 1}, "NDNT.training.trainer.TemperatureCalibratedTrainer.validate_one_epoch": {"tf": 1}, "NDNT.utils.NDNutils.fit_lbfgs": {"tf": 1}}, "df": 26}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.NDN.NDN.get_trainer": {"tf": 2.8284271247461903}, "NDNT.NDN.NDN.fit": {"tf": 2.23606797749979}, "NDNT.NDN.NDN.fit_dl": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer": {"tf": 1}, "NDNT.training.trainer.TemperatureCalibratedTrainer": {"tf": 1}}, "df": 6}, "d": {"docs": {"NDNT.training.trainer.Trainer.fit_loop": {"tf": 1}}, "df": 1}}, "s": {"docs": {"NDNT.NDN.NDN.fit": {"tf": 1}}, "df": 1}, "/": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.NDN.NDN.eval_models": {"tf": 1}}, "df": 1}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.regularization.Regularization": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.set_hessian": {"tf": 1}}, "df": 2}}}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.modules.layers.dimlayers.DimSPLayer": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.__init__": {"tf": 1}}, "df": 3}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.networks.ReadoutNetwork": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {"NDNT.modules.layers.timelayers.TimeLayer": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.__init__": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer.forward": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.forward": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.forward": {"tf": 1}}, "df": 3}}}}, "e": {"docs": {"NDNT.training.ada_hessian.AdaHessian": {"tf": 2}, "NDNT.training.ada_hessian.AdaHessian.set_hessian": {"tf": 1}, "NDNT.training.earlystopping.EarlyStopping": {"tf": 1.4142135623730951}}, "df": 3, "s": {"docs": {"NDNT.training.ada_hessian.AdaHessian.zero_hessian": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.NDN.NDN.eval_models": {"tf": 2}, "NDNT.modules.layers.convlayers.TconvLayer": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1}, "NDNT.modules.regularization.Regularization.set_reg_val": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1.7320508075688772}, "NDNT.training.earlystopping.EarlyStopping": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 2.8284271247461903}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 2.23606797749979}, "NDNT.utils.DanUtils.design_matrix_drift": {"tf": 1}, "NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 1}, "NDNT.utils.NDNutils.save_checkpoint": {"tf": 1}, "NDNT.utils.NDNutils.load_checkpoint": {"tf": 1}, "NDNT.utils.NDNutils.NpEncoder": {"tf": 1.4142135623730951}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1.7320508075688772}, "NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.unit_loss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.unit_loss": {"tf": 1}}, "df": 33, "/": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.layers.convlayers.TconvLayer": {"tf": 1}}, "df": 1}}}}, "y": {"docs": {"NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1}, "NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1}, "NDNT.utils.NDNutils.NpEncoder.default": {"tf": 1}}, "df": 4}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.NDN.NDN.generate_predictions": {"tf": 1}, "NDNT.modules.activations.adaptive_elu": {"tf": 2.23606797749979}, "NDNT.modules.activations.Square.forward": {"tf": 2}, "NDNT.modules.activations.AdaptiveELU.__init__": {"tf": 1}, "NDNT.modules.activations.AdaptiveELU.forward": {"tf": 2}, "NDNT.modules.activity_regularization.ActivityRegularization.activity": {"tf": 1.4142135623730951}, "NDNT.modules.activity_regularization.ActivityRegularization.nonneg": {"tf": 1.4142135623730951}, "NDNT.modules.activity_regularization.ActivityRegularization.regularize": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.BinocLayer1D.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.BiSTconv1D.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.ChannelConvLayer.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.ConvLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.forward": {"tf": 2}, "NDNT.modules.layers.convlayers.TconvLayer.forward": {"tf": 2}, "NDNT.modules.layers.convlayers.STconvLayer.forward": {"tf": 2}, "NDNT.modules.layers.dimlayers.Dim0Layer.forward": {"tf": 2}, "NDNT.modules.layers.dimlayers.Dim0Layer.dim_info": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.forward": {"tf": 2}, "NDNT.modules.layers.dimlayers.DimSPLayer.forward": {"tf": 2}, "NDNT.modules.layers.dimlayers.DimSPTLayer.forward": {"tf": 2}, "NDNT.modules.layers.externallayer.ExternalLayer.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.laglayers.LagLayer.forward": {"tf": 2}, "NDNT.modules.layers.lvlayers.LVLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.forward": {"tf": 2}, "NDNT.modules.layers.ndnlayer.NDNLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.forward": {"tf": 2}, "NDNT.modules.layers.ndnlayer.NDNLayer.compute_reg_loss": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.dim_info": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.normlayers.DivNormLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.forward": {"tf": 2}, "NDNT.modules.layers.orilayers.OriLayer.rotation_matrix_tensor": {"tf": 1.7320508075688772}, "NDNT.modules.layers.orilayers.OriLayer.forward": {"tf": 2}, "NDNT.modules.layers.orilayers.OriConvLayer.rotation_matrix_tensor": {"tf": 1.7320508075688772}, "NDNT.modules.layers.orilayers.OriConvLayer.get_rot_mat": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.rotate_tensor": {"tf": 1.4142135623730951}, "NDNT.modules.layers.orilayers.OriConvLayer.forward": {"tf": 2}, "NDNT.modules.layers.orilayers.ConvLayer3D.forward": {"tf": 2}, "NDNT.modules.layers.reslayers.IterLayer.forward": {"tf": 2}, "NDNT.modules.layers.reslayers.IterTlayer.forward": {"tf": 2}, "NDNT.modules.layers.reslayers.IterSTlayer.forward": {"tf": 2}, "NDNT.modules.layers.specialtylayers.Tlayer.forward": {"tf": 2}, "NDNT.modules.layers.specialtylayers.L1convLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.forward": {"tf": 2}, "NDNT.modules.layers.specialtylayers.MaskLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.forward": {"tf": 2}, "NDNT.networks.FFnetwork.preprocess_input": {"tf": 1.4142135623730951}, "NDNT.networks.FFnetwork.forward": {"tf": 1.4142135623730951}, "NDNT.networks.FFnetwork.compute_reg_loss": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.forward": {"tf": 1.4142135623730951}, "NDNT.networks.ScaffoldNetwork3d.forward": {"tf": 1.4142135623730951}, "NDNT.networks.ReadoutNetwork.forward": {"tf": 1.4142135623730951}, "NDNT.networks.FFnet_external.forward": {"tf": 1.4142135623730951}, "NDNT.training.lbfgs.is_legal": {"tf": 1.7320508075688772}, "NDNT.training.lbfgs.LBFGS.two_loop_recursion": {"tf": 1.7320508075688772}, "NDNT.training.lbfgs.LBFGS.curvature_update": {"tf": 1.4142135623730951}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 3.1622776601683795}, "NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.forward": {"tf": 2}, "NDNT.metrics.mse_loss.MseLoss_datafilter.unit_loss": {"tf": 2}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.forward": {"tf": 2}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.unit_loss": {"tf": 2}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.forward": {"tf": 2}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.unit_loss": {"tf": 2}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.forward": {"tf": 2}, "NDNT.metrics.rmse_loss.RmseLoss.unit_loss": {"tf": 2}}, "df": 69}}}, "t": {"docs": {"NDNT.modules.layers.bilayers.ChannelConvLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.lvlayers.LVLayerOLD": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.Tlayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.OnOffLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.timelayers.TimeLayer.__init__": {"tf": 1}, "NDNT.utils.DanUtils.design_matrix_drift": {"tf": 1.7320508075688772}, "NDNT.utils.NDNutils.create_time_embedding": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 1.7320508075688772}, "NDNT.utils.NDNutils.tent_basis_generate": {"tf": 1}}, "df": 11}}, "r": {"docs": {}, "df": 0, "m": {"docs": {"NDNT.modules.layers.bilayers.BiConvLayer1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian": {"tf": 1}}, "df": 21, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.modules.layers.bilayers.ChannelConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.initialize_gaussian_envelope": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.Tlayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.__init__": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.unit_loss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.unit_loss": {"tf": 1}}, "df": 13}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.training.trainer.TemperatureCalibratedTrainer": {"tf": 1}}, "df": 1}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer.set_readout_locations": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.experiment_sampler.ExperimentBatchIterator": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.plot_filters": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.STconvLayer": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.plot_filters": {"tf": 1.4142135623730951}, "NDNT.modules.layers.laglayers.LagLayer": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.plot_filters": {"tf": 1.7320508075688772}, "NDNT.modules.layers.lvlayers.LVLayer": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.__init__": {"tf": 2}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.lvlayers.LVLayerOLD": {"tf": 1.4142135623730951}, "NDNT.modules.layers.lvlayers.LVLayerOLD.__init__": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1.7320508075688772}, "NDNT.modules.layers.ndnlayer.NDNLayer.get_weights": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.plot_filters": {"tf": 1.4142135623730951}, "NDNT.modules.layers.orilayers.ConvLayer3D.plot_filters": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.ReadoutLayer.get_weights": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.ReadoutLayer3d": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.plot_filters": {"tf": 1.7320508075688772}, "NDNT.modules.layers.specialtylayers.OnOffLayer.plot_filters": {"tf": 1.4142135623730951}, "NDNT.modules.layers.timelayers.TimeLayer": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.__init__": {"tf": 2.23606797749979}, "NDNT.networks.ReadoutNetwork": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian": {"tf": 1}, "NDNT.training.earlystopping.EarlyStopping": {"tf": 1}, "NDNT.utils.DanUtils.time_embedding_simple": {"tf": 1.4142135623730951}, "NDNT.utils.DanUtils.design_matrix_drift": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding": {"tf": 2.8284271247461903}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 2.8284271247461903}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.tent_basis_generate": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.generate_xv_folds": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.unit_loss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.unit_loss": {"tf": 1}}, "df": 44, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.experiment_sampler.ExperimentBatchGenerator": {"tf": 1.7320508075688772}, "NDNT.modules.experiment_sampler.ExperimentBatchIterator": {"tf": 1.4142135623730951}, "NDNT.modules.experiment_sampler.construct_exp_to_time": {"tf": 1}}, "df": 3}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.layers.timelayers.TimeLayer.__init__": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.forward": {"tf": 1}}, "df": 2}}}}}, "s": {"docs": {"NDNT.training.ada_hessian.AdaHessian": {"tf": 1}}, "df": 1}}}, "k": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {"NDNT.modules.regularization.Tikhanov": {"tf": 1}, "NDNT.modules.regularization.Tikhanov.__init__": {"tf": 1}, "NDNT.modules.regularization.Tikhanov.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.TikhanovC": {"tf": 1}, "NDNT.modules.regularization.TikhanovC.__init__": {"tf": 1}, "NDNT.modules.regularization.TikhanovC.compute_reg_penalty": {"tf": 1}}, "df": 6}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {"NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1.4142135623730951}, "NDNT.utils.create_reg_matrices.create_maxpenalty_matrix": {"tf": 1.4142135623730951}, "NDNT.utils.create_reg_matrices.create_localpenalty_matrix": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {"NDNT.modules.layers.convlayers.TconvLayer": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.layers.specialtylayers.Tlayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.forward": {"tf": 1}}, "df": 2}}}}}, "f": {"docs": {"NDNT.modules.regularization.Regularization": {"tf": 2}}, "df": 1}, "s": {"docs": {}, "df": 0, "#": {"docs": {}, "df": 0, "l": {"6": {"9": {"9": {"docs": {"NDNT.utils.MattUtils.smooth_ema": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}, "x": {"docs": {"NDNT.utils.NDNutils.create_time_embedding": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1}}, "df": 2, "d": {"docs": {"NDNT.utils.NDNutils.create_time_embedding": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1}}, "df": 2}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_maxpenalty_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_localpenalty_matrix": {"tf": 1}}, "df": 3}}}, "*": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "|": {"docs": {}, "df": 0, "|": {"docs": {}, "df": 0, "^": {"2": {"docs": {"NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_maxpenalty_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_localpenalty_matrix": {"tf": 1}}, "df": 3}, "docs": {}, "df": 0}}}}}}, "n": {"docs": {"NDNT.modules.layers.bilayers.ChannelConvLayer": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.forward": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.forward": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.forward": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.forward": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.FixationLayer.__init__": {"tf": 1}, "NDNT.networks.FFnetwork": {"tf": 1.4142135623730951}, "NDNT.networks.FFnetwork.determine_input_dims": {"tf": 1}, "NDNT.networks.FFnetwork.ffnet_dict": {"tf": 1.4142135623730951}, "NDNT.networks.ReadoutNetwork.determine_input_dims": {"tf": 1}, "NDNT.networks.ReadoutNetwork.ffnet_dict": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian": {"tf": 1}, "NDNT.training.lbfgs.LBFGS": {"tf": 1}, "NDNT.utils.NDNutils.get_max_samples": {"tf": 1.4142135623730951}, "NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 2.23606797749979}, "NDNT.utils.ffnet_dicts.ffnet_dict_readout": {"tf": 1}}, "df": 17, "d": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.NDN.NDN": {"tf": 1}, "NDNT.NDN.NDN.compute_network_outputs": {"tf": 1}, "NDNT.NDN.NDN.load_model_zip": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.__init__": {"tf": 1}, "NDNT.networks.FFnet_external": {"tf": 1.4142135623730951}, "NDNT.utils.ffnet_dicts.ffnet_dict_external": {"tf": 1}}, "df": 10, "t": {"docs": {"NDNT.NDN.NDN.compute_reg_loss": {"tf": 1}}, "df": 1}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.layers.dimlayers.Dim0Layer.dim_info": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.dim_info": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.__init__": {"tf": 1}}, "df": 10, "s": {"docs": {"NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.__init__": {"tf": 1}}, "df": 2}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.NDN.NDN.forward": {"tf": 1}, "NDNT.NDN.NDN.compute_average_responses": {"tf": 1}, "NDNT.NDN.NDN.eval_models": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.get_weights": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.layer_dict": {"tf": 1}}, "df": 6}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.utils.NDNutils.initialize_gaussian_envelope": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.NDN.NDN": {"tf": 1}, "NDNT.NDN.NDN.eval_models": {"tf": 1}, "NDNT.training.lbfgs.LBFGS": {"tf": 1}, "NDNT.utils.NDNutils.save_checkpoint": {"tf": 1}}, "df": 4}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.NDN.NDN.eval_models": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"tf": 1}}, "df": 11, "a": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer.forward": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.forward": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.forward": {"tf": 1}}, "df": 3}}, "s": {"docs": {"NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"tf": 1}}, "df": 4}}}, "e": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.utils.plotting.plot_filters_ST2D": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {"NDNT.modules.layers.reslayers.IterLayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1.4142135623730951}}, "df": 4, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"NDNT.NDN.NDN": {"tf": 1}, "NDNT.NDN.NDN.assemble_ffnetworks": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.compute_network_outputs": {"tf": 2.23606797749979}, "NDNT.NDN.NDN.forward": {"tf": 1}, "NDNT.NDN.NDN.initialize_biases": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.eval_models": {"tf": 1}, "NDNT.NDN.NDN.generate_predictions": {"tf": 1}, "NDNT.NDN.NDN.get_weights": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.get_readout_locations": {"tf": 1}, "NDNT.NDN.NDN.list_parameters": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.set_parameters": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.set_reg_val": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.plot_filters": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.save_model_zip": {"tf": 1}, "NDNT.NDN.NDN.get_activations": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.externallayer.ExternalLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterLayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer": {"tf": 1}, "NDNT.networks.FFnetwork": {"tf": 1.7320508075688772}, "NDNT.networks.FFnetwork.determine_input_dims": {"tf": 2.23606797749979}, "NDNT.networks.FFnetwork.preprocess_input": {"tf": 1.4142135623730951}, "NDNT.networks.FFnetwork.forward": {"tf": 1.7320508075688772}, "NDNT.networks.FFnetwork.list_parameters": {"tf": 1}, "NDNT.networks.FFnetwork.ffnet_dict": {"tf": 2}, "NDNT.networks.ScaffoldNetwork": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.forward": {"tf": 1.7320508075688772}, "NDNT.networks.ScaffoldNetwork.ffnet_dict": {"tf": 1.4142135623730951}, "NDNT.networks.ScaffoldNetwork3d": {"tf": 1.4142135623730951}, "NDNT.networks.ScaffoldNetwork3d.forward": {"tf": 1.7320508075688772}, "NDNT.networks.ScaffoldNetwork3d.ffnet_dict": {"tf": 1.4142135623730951}, "NDNT.networks.ReadoutNetwork": {"tf": 1}, "NDNT.networks.ReadoutNetwork.determine_input_dims": {"tf": 2}, "NDNT.networks.ReadoutNetwork.forward": {"tf": 1.7320508075688772}, "NDNT.networks.ReadoutNetwork.ffnet_dict": {"tf": 1.7320508075688772}, "NDNT.networks.FFnet_external": {"tf": 1.4142135623730951}, "NDNT.networks.FFnet_external.forward": {"tf": 1.7320508075688772}, "NDNT.networks.FFnet_external.list_params": {"tf": 1}, "NDNT.networks.FFnet_external.ffnet_dict": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.save_checkpoint": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 1.7320508075688772}, "NDNT.utils.ffnet_dicts.ffnet_dict_external": {"tf": 2.8284271247461903}}, "df": 43, "s": {"docs": {"NDNT.NDN.NDN.assemble_ffnetworks": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.compute_network_outputs": {"tf": 1}, "NDNT.NDN.NDN.save_model_zip": {"tf": 1}, "NDNT.networks.FFnetwork": {"tf": 1}, "NDNT.networks.FFnetwork.determine_input_dims": {"tf": 1}, "NDNT.networks.FFnetwork.ffnet_dict": {"tf": 1}, "NDNT.networks.ReadoutNetwork.determine_input_dims": {"tf": 1}}, "df": 7}}}}}, "s": {"docs": {"NDNT.NDN.NDN.assemble_ffnetworks": {"tf": 1}}, "df": 1}}, "w": {"docs": {"NDNT.NDN.NDN.change_loss": {"tf": 1.7320508075688772}, "NDNT.modules.regularization.Regularization.reg_copy": {"tf": 1}, "NDNT.training.lbfgs.LBFGS": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 2.449489742783178}, "NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1}, "NDNT.utils.NDNutils.get_max_samples": {"tf": 1}}, "df": 6, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 2}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.activity_regularization.ActivityRegularization.nonneg": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.__init__": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.forward": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.forward": {"tf": 1}}, "df": 12}}}}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.modules.experiment_sampler.ExperimentBatchGenerator.next": {"tf": 1.4142135623730951}}, "df": 1}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.modules.layers.bilayers.BinocLayer1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.layer_dict": {"tf": 1}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1.4142135623730951}, "NDNT.utils.ffnet_dicts.ffnet_dict_external": {"tf": 1}}, "df": 33, "s": {"docs": {"NDNT.modules.regularization.RegModule.forward": {"tf": 1}, "NDNT.modules.regularization.ActivityReg": {"tf": 1}, "NDNT.training.trainer.Trainer.__init__": {"tf": 1}, "NDNT.training.trainer.Trainer.fit": {"tf": 1}, "NDNT.training.trainer.Trainer.prepare_fit": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer.fit_loop": {"tf": 1}, "NDNT.training.trainer.Trainer.validate_one_epoch": {"tf": 1}, "NDNT.training.trainer.Trainer.train_one_epoch": {"tf": 1}, "NDNT.training.trainer.Trainer.train_one_step": {"tf": 1}, "NDNT.training.trainer.Trainer.checkpoint_model": {"tf": 1}, "NDNT.training.trainer.Trainer.graceful_exit": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.fit": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.fit_data_dict": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.train_one_epoch": {"tf": 1}, "NDNT.training.trainer.TemperatureCalibratedTrainer.validate_one_epoch": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_external": {"tf": 1.4142135623730951}, "NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"tf": 1}}, "df": 20}, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1}, "NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1}, "NDNT.utils.NDNutils.CPU_Unpickler.find_class": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 1}}, "df": 4}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.modules.regularization.Regularization.__init__": {"tf": 1}, "NDNT.utils.NDNutils.CPU_Unpickler.find_class": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}}, "df": 3}}}}}}}}, "o": {"docs": {"NDNT.NDN.NDN.compute_network_outputs": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1}, "NDNT.modules.regularization.ConvReg.compute_reg_penalty": {"tf": 1}, "NDNT.networks.FFnetwork.preprocess_input": {"tf": 1}, "NDNT.networks.ScaffoldNetwork": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.forward": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d.forward": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1}, "NDNT.networks.FFnet_external.forward": {"tf": 1}, "NDNT.training.lbfgs.polyinterp": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}, "NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1.4142135623730951}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 1.7320508075688772}, "NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 1.7320508075688772}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1.7320508075688772}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 1.7320508075688772}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"tf": 1}}, "df": 24, "n": {"docs": {"NDNT.modules.activity_regularization.ActivityRegularization.nonneg": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.__init__": {"tf": 1}, "NDNT.utils.NDNutils.initialize_gaussian_envelope": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_NIM": {"tf": 1}}, "df": 6, "e": {"docs": {"NDNT.NDN.NDN": {"tf": 2.449489742783178}, "NDNT.NDN.NDN.training_step": {"tf": 1}, "NDNT.NDN.NDN.validation_step": {"tf": 1}, "NDNT.NDN.NDN.compute_reg_loss": {"tf": 1}, "NDNT.NDN.NDN.prepare_regularization": {"tf": 1}, "NDNT.NDN.NDN.fit": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.fit_dl": {"tf": 3}, "NDNT.NDN.NDN.initialize_loss": {"tf": 1}, "NDNT.NDN.NDN.initialize_biases": {"tf": 1}, "NDNT.NDN.NDN.eval_models": {"tf": 2}, "NDNT.NDN.NDN.generate_predictions": {"tf": 1}, "NDNT.NDN.NDN.change_loss": {"tf": 1}, "NDNT.NDN.NDN.passive_readout": {"tf": 1}, "NDNT.NDN.NDN.list_parameters": {"tf": 1}, "NDNT.NDN.NDN.set_parameters": {"tf": 1}, "NDNT.NDN.NDN.set_reg_val": {"tf": 1}, "NDNT.NDN.NDN.plot_filters": {"tf": 1}, "NDNT.NDN.NDN.save_model_zip": {"tf": 1}, "NDNT.NDN.NDN.save_model": {"tf": 1}, "NDNT.NDN.NDN.save_model_chk": {"tf": 1}, "NDNT.modules.activations.AdaptiveELU.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.layers.bilayers.BiSTconv1D.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer": {"tf": 1.7320508075688772}, "NDNT.modules.layers.convlayers.ConvLayer": {"tf": 1.7320508075688772}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer": {"tf": 1.7320508075688772}, "NDNT.modules.layers.lvlayers.LVLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.set_parameters": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.set_reg_val": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.initialize_spatial_mapping": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.passive_readout": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.ReadoutLayer3d.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer": {"tf": 1.7320508075688772}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 2.23606797749979}, "NDNT.modules.layers.reslayers.IterTlayer": {"tf": 1.7320508075688772}, "NDNT.modules.layers.reslayers.IterTlayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterSTlayer": {"tf": 1.7320508075688772}, "NDNT.modules.layers.reslayers.IterSTlayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.Tlayer": {"tf": 1.7320508075688772}, "NDNT.modules.layers.specialtylayers.Tlayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.reset_parameters2": {"tf": 1.7320508075688772}, "NDNT.modules.layers.specialtylayers.OnOffLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 2}, "NDNT.networks.FFnetwork": {"tf": 2.23606797749979}, "NDNT.networks.FFnetwork.prepare_regularization": {"tf": 1}, "NDNT.networks.FFnetwork.compute_reg_loss": {"tf": 1}, "NDNT.networks.FFnetwork.list_parameters": {"tf": 1.4142135623730951}, "NDNT.networks.FFnetwork.set_parameters": {"tf": 1.4142135623730951}, "NDNT.networks.FFnetwork.set_reg_val": {"tf": 1.4142135623730951}, "NDNT.networks.FFnetwork.plot_filters": {"tf": 1}, "NDNT.networks.ReadoutNetwork.get_readout_locations": {"tf": 1}, "NDNT.networks.ReadoutNetwork.set_readout_locations": {"tf": 1}, "NDNT.networks.FFnet_external.compute_reg_loss": {"tf": 1}, "NDNT.networks.FFnet_external.list_params": {"tf": 1.4142135623730951}, "NDNT.networks.FFnet_external.set_params": {"tf": 1.4142135623730951}, "NDNT.training.ada_hessian.AdaHessian.step": {"tf": 1}, "NDNT.training.lbfgs.LBFGS": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.line_search": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1}, "NDNT.training.trainer.Trainer.__init__": {"tf": 1.7320508075688772}, "NDNT.training.trainer.Trainer.fit": {"tf": 1}, "NDNT.training.trainer.Trainer.fit_loop": {"tf": 1}, "NDNT.training.trainer.Trainer.checkpoint_model": {"tf": 1}, "NDNT.training.trainer.Trainer.graceful_exit": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.fit": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.fit_data_dict": {"tf": 1}, "NDNT.training.trainer.TemperatureCalibratedTrainer.__init__": {"tf": 1}, "NDNT.utils.NDNutils.tent_basis_generate": {"tf": 1}, "NDNT.utils.NDNutils.NpEncoder": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 2.23606797749979}, "NDNT.utils.ffnet_dicts.ffnet_dict_NIM": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_log_epsilon": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"tf": 1}}, "df": 93}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.NDN.NDN.get_activations": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1}}, "df": 12}}}}}}}}}, "s": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {"NDNT.NDN.NDN.assemble_ffnetworks": {"tf": 1}, "NDNT.NDN.NDN.compute_network_outputs": {"tf": 1}, "NDNT.NDN.NDN.get_trainer": {"tf": 1}, "NDNT.NDN.NDN.fit": {"tf": 1}, "NDNT.NDN.NDN.fit_dl": {"tf": 1}, "NDNT.NDN.NDN.eval_models": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.get_weights": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.passive_readout": {"tf": 1}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.Regularization.set_reg_val": {"tf": 1.4142135623730951}, "NDNT.networks.FFnetwork": {"tf": 1}, "NDNT.networks.FFnetwork.determine_input_dims": {"tf": 1}, "NDNT.networks.ReadoutNetwork.determine_input_dims": {"tf": 1}, "NDNT.training.lbfgs.is_legal": {"tf": 1}, "NDNT.training.lbfgs.LBFGS": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.step": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1.4142135623730951}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1}, "NDNT.training.trainer.Trainer.__init__": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.ensure_dir": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 1.4142135623730951}, "NDNT.utils.ffnet_dicts.ffnet_dict_readout": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_external": {"tf": 1}}, "df": 33, "e": {"docs": {"NDNT.NDN.NDN.compute_network_outputs": {"tf": 1}, "NDNT.NDN.NDN.forward": {"tf": 1}, "NDNT.NDN.NDN.eval_models": {"tf": 1}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1}, "NDNT.modules.regularization.Regularization.set_reg_val": {"tf": 1}, "NDNT.modules.regularization.ConvReg.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.ActivityReg": {"tf": 1}, "NDNT.training.lbfgs.polyinterp": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import": {"tf": 1.4142135623730951}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1.4142135623730951}, "NDNT.utils.DanUtils.monocular_data_import": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1}, "NDNT.utils.NDNutils.tent_basis_generate": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 1.4142135623730951}, "NDNT.utils.ffnet_dicts.ffnet_dict_NIM": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_readout": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_external": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 1}}, "df": 23, "s": {"docs": {"NDNT.NDN.NDN.forward": {"tf": 1}, "NDNT.NDN.NDN.fit": {"tf": 1}, "NDNT.NDN.NDN.fit_dl": {"tf": 1}, "NDNT.NDN.NDN.initialize_loss": {"tf": 1}, "NDNT.NDN.NDN.initialize_biases": {"tf": 1}, "NDNT.NDN.NDN.change_loss": {"tf": 1}, "NDNT.NDN.NDN.get_weights": {"tf": 1}, "NDNT.NDN.NDN.get_readout_locations": {"tf": 1}, "NDNT.NDN.NDN.passive_readout": {"tf": 1}, "NDNT.NDN.NDN.set_parameters": {"tf": 1}, "NDNT.NDN.NDN.set_reg_val": {"tf": 1}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_maxpenalty_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_localpenalty_matrix": {"tf": 1}}, "df": 16}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {"NDNT.NDN.NDN.save_model_chk": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "m": {"2": {"docs": {"NDNT.modules.regularization.Regularization": {"tf": 1}}, "df": 1}, "docs": {"NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.ChannelConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.batchnorm_convert": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.orilayers.ConvLayer3D.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1.4142135623730951}}, "df": 17, "a": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.modules.layers.bilayers.BiConvLayer1D.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.BiSTconv1D.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.ChannelConvLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.ConvLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.laglayers.LagLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.lvlayers.LVLayer.__init__": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.reset_parameters": {"tf": 1.7320508075688772}, "NDNT.modules.layers.reslayers.IterLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterTlayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterSTlayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.Tlayer": {"tf": 1.7320508075688772}, "NDNT.modules.layers.specialtylayers.Tlayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.reset_parameters2": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.networks.FFnetwork": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 1}}, "df": 17, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.ChannelConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.__init__": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.normlayers.DivNormLayer": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.__init__": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.forward": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1}}, "df": 18}}}}}, "e": {"docs": {"NDNT.metrics.mse_loss.MseLoss_datafilter.unit_loss": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.unit_loss": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.unit_loss": {"tf": 1.4142135623730951}, "NDNT.metrics.rmse_loss.RmseLoss.unit_loss": {"tf": 1.4142135623730951}}, "df": 4, "d": {"docs": {"NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 1}}, "df": 4}}}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 2}}, "df": 1}}}}}, "w": {"docs": {"NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.NDN.NDN": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.get_trainer": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.fit_dl": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.set_parameters": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.save_model_zip": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.load_model_zip": {"tf": 1}, "NDNT.NDN.NDN.save_model": {"tf": 1}, "NDNT.NDN.NDN.save_model_chk": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.load_model_chk": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.model_string": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.set_parameters": {"tf": 1}, "NDNT.networks.FFnetwork": {"tf": 1}, "NDNT.networks.FFnetwork.set_parameters": {"tf": 1.4142135623730951}, "NDNT.networks.FFnetwork.ffnet_dict": {"tf": 1}, "NDNT.networks.FFnet_external": {"tf": 1.4142135623730951}, "NDNT.networks.FFnet_external.set_params": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.get_fit_versions": {"tf": 1.4142135623730951}, "NDNT.utils.ffnet_dicts.ffnet_dict_external": {"tf": 1}}, "df": 18, "d": {"docs": {"NDNT.modules.layers.ndnlayer.NDNLayer.set_parameters": {"tf": 1}}, "df": 1}, "l": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.modules.layers.reslayers.IterLayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer": {"tf": 1}}, "df": 3}}, "s": {"docs": {"NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1.4142135623730951}}, "df": 1}}}, "n": {"docs": {"NDNT.training.lbfgs.is_legal": {"tf": 1}, "NDNT.training.lbfgs.polyinterp": {"tf": 1}}, "df": 2}}, "n": {"docs": {"NDNT.NDN.NDN.__init__": {"tf": 1}, "NDNT.NDN.NDN.assemble_ffnetworks": {"tf": 1}, "NDNT.modules.activations.Square.__init__": {"tf": 1}, "NDNT.networks.FFnetwork.__init__": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.__init__": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d.__init__": {"tf": 1}, "NDNT.networks.ReadoutNetwork.__init__": {"tf": 1}, "NDNT.networks.FFnet_external.__init__": {"tf": 1}, "NDNT.training.trainer.Trainer.__init__": {"tf": 1}, "NDNT.training.trainer.Trainer.fit": {"tf": 1}, "NDNT.training.trainer.Trainer.prepare_fit": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer.fit_loop": {"tf": 1}, "NDNT.training.trainer.Trainer.validate_one_epoch": {"tf": 1}, "NDNT.training.trainer.Trainer.train_one_epoch": {"tf": 1}, "NDNT.training.trainer.Trainer.train_one_step": {"tf": 1}, "NDNT.training.trainer.Trainer.checkpoint_model": {"tf": 1}, "NDNT.training.trainer.Trainer.graceful_exit": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.fit": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.fit_data_dict": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.train_one_epoch": {"tf": 1}, "NDNT.training.trainer.TemperatureCalibratedTrainer.validate_one_epoch": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.__init__": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.__init__": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.__init__": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.__init__": {"tf": 1}}, "df": 25}, "u": {"docs": {}, "df": 0, "m": {"docs": {"NDNT.NDN.NDN.get_dataloaders": {"tf": 1}, "NDNT.NDN.NDN.fit_dl": {"tf": 1}, "NDNT.NDN.NDN.eval_models": {"tf": 1}, "NDNT.NDN.NDN.generate_predictions": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.BinocLayer1D.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.BiConvLayer1D.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.BiSTconv1D.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.BiSTconv1D.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.ChannelConvLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.ChannelConvLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.ChannelConvLayer.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.ConvLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.TconvLayer": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.TconvLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.STconvLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.Dim0Layer.dim_info": {"tf": 1.7320508075688772}, "NDNT.modules.layers.dimlayers.ChannelLayer": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.DimSPLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.DimSPTLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.externallayer.ExternalLayer.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.layers.laglayers.LagLayer": {"tf": 1.7320508075688772}, "NDNT.modules.layers.laglayers.LagLayer.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.layers.laglayers.LagLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.__init__": {"tf": 2.6457513110645907}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"tf": 1.7320508075688772}, "NDNT.modules.layers.lvlayers.LVLayerOLD.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.get_weights": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.dim_info": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.normlayers.DivNormLayer.__init__": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.__init__": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.__init__": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.plot_filters": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.layers.readouts.ReadoutLayer.get_weights": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 1.7320508075688772}, "NDNT.modules.layers.reslayers.IterLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterTlayer.__init__": {"tf": 2}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterSTlayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterSTlayer.__init__": {"tf": 2}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.Tlayer": {"tf": 1.7320508075688772}, "NDNT.modules.layers.specialtylayers.Tlayer.__init__": {"tf": 2}, "NDNT.modules.layers.specialtylayers.Tlayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.layers.specialtylayers.OnOffLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.layers.timelayers.TimeLayer.__init__": {"tf": 2}, "NDNT.modules.regularization.Regularization": {"tf": 1}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 2.23606797749979}, "NDNT.networks.FFnetwork.ffnet_dict": {"tf": 1}, "NDNT.networks.ScaffoldNetwork": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.ffnet_dict": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import": {"tf": 1.4142135623730951}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 2}, "NDNT.utils.DanUtils.monocular_data_import": {"tf": 1.7320508075688772}, "NDNT.utils.NDNutils.create_time_embedding": {"tf": 1}, "NDNT.utils.NDNutils.tent_basis_generate": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.generate_xv_folds": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.get_max_samples": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1.7320508075688772}, "NDNT.utils.create_reg_matrices.create_maxpenalty_matrix": {"tf": 1.7320508075688772}, "NDNT.utils.create_reg_matrices.create_localpenalty_matrix": {"tf": 1.7320508075688772}, "NDNT.utils.ffnet_dicts.layer_dict": {"tf": 1.4142135623730951}}, "df": 85, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.NDN.NDN.get_trainer": {"tf": 1}, "NDNT.NDN.NDN.get_dataloaders": {"tf": 1}, "NDNT.NDN.NDN.get_optimizer": {"tf": 1}, "NDNT.NDN.NDN.fit_dl": {"tf": 1}, "NDNT.NDN.NDN.eval_models": {"tf": 1}, "NDNT.NDN.NDN.generate_predictions": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.BiSTconv1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.ChannelConvLayer": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.TconvLayer": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.TconvLayer.plot_filters": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.STconvLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.STconvLayer.plot_filters": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.Dim0Layer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.dim_info": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.__init__": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.__init__": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer": {"tf": 1.7320508075688772}, "NDNT.modules.layers.laglayers.LagLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.laglayers.LagLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"tf": 1.7320508075688772}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.get_weights": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.plot_filters": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.dim_info": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.normlayers.DivNormLayer.__init__": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.__init__": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.__init__": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.plot_filters": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.get_weights": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.passive_readout": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.FixationLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterLayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterSTlayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.Tlayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.Tlayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.OnOffLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.timelayers.TimeLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.networks.FFnetwork.ffnet_dict": {"tf": 1}, "NDNT.networks.ScaffoldNetwork": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.ffnet_dict": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 3.1622776601683795}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer.__init__": {"tf": 1}, "NDNT.training.trainer.Trainer.fit_loop": {"tf": 1}, "NDNT.utils.DanUtils.fold_sample": {"tf": 1}, "NDNT.utils.DanUtils.design_matrix_drift": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.create_time_embedding": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 1}, "NDNT.utils.NDNutils.tent_basis_generate": {"tf": 1}, "NDNT.utils.NDNutils.generate_xv_folds": {"tf": 1}, "NDNT.utils.NDNutils.pixel2grid": {"tf": 1}, "NDNT.utils.NDNutils.get_max_samples": {"tf": 1.7320508075688772}, "NDNT.utils.NDNutils.NpEncoder": {"tf": 1}}, "df": 89, "s": {"docs": {"NDNT.modules.layers.lvlayers.LVLayer.forward": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.utils.DanUtils.binocular_data_import": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}}, "df": 2}}}}}, "p": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.NDN.NDN.eval_models": {"tf": 1}, "NDNT.utils.DanUtils.time_embedding_simple": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_maxpenalty_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_localpenalty_matrix": {"tf": 1}}, "df": 6}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.training.ada_hessian.AdaHessian": {"tf": 1}, "NDNT.training.lbfgs.LBFGS": {"tf": 1}}, "df": 2}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.NDN.NDN.eval_models": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.get_null_adjusted_ll": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.NpEncoder": {"tf": 1}}, "df": 3}}}, "l": {"docs": {"NDNT.NDN.NDN.get_activations": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.layers.bilayers.BiConvLayer1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1}}, "df": 19}}}}, "v": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.layers.lvlayers.LVLayer": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.utils.DanUtils.time_embedding_simple": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {"NDNT.modules.layers.bilayers.BiSTconv1D": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import": {"tf": 1.4142135623730951}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}}, "df": 3}, "p": {"docs": {"NDNT.modules.layers.ndnlayer.NDNLayer.get_weights": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.layer_dict": {"tf": 1}, "NDNT.training.lbfgs.polyinterp": {"tf": 1}}, "df": 4, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.training.lbfgs.polyinterp": {"tf": 1}}, "df": 1}}}}}}, "x": {"docs": {"NDNT.modules.regularization.Regularization.__init__": {"tf": 1.4142135623730951}, "NDNT.utils.DanUtils.binocular_data_import": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}}, "df": 3}, "y": {"docs": {"NDNT.modules.regularization.Regularization.__init__": {"tf": 1.4142135623730951}}, "df": 1}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}}, "df": 1}}}, "m": {"docs": {"NDNT.utils.ffnet_dicts.ffnet_dict_NIM": {"tf": 1}}, "df": 1}}, "t": {"docs": {"NDNT.utils.DanUtils.design_matrix_drift": {"tf": 1.4142135623730951}, "NDNT.utils.DanUtils.binocular_data_import": {"tf": 1.7320508075688772}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 2}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.generate_xv_folds": {"tf": 1}}, "df": 5}, "s": {"docs": {}, "df": 0, "u": {"docs": {"NDNT.utils.DanUtils.binocular_data_import": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}}, "df": 2}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.utils.NDNutils.initialize_gaussian_envelope": {"tf": 1}}, "df": 1}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.utils.NDNutils.get_max_samples": {"tf": 1}}, "df": 1}}}}}, "d": {"2": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.modules.regularization.Regularization.__init__": {"tf": 1.4142135623730951}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}}, "df": 2}, "x": {"docs": {"NDNT.modules.regularization.Regularization.__init__": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}}, "df": 2, "t": {"docs": {"NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}}, "df": 1}}}, "docs": {"NDNT.modules.regularization.Regularization.__init__": {"tf": 1}, "NDNT.modules.regularization.ConvReg.compute_reg_penalty": {"tf": 1.7320508075688772}, "NDNT.training.lbfgs.LBFGS.two_loop_recursion": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.curvature_update": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 2}, "NDNT.utils.plotting.plot_filters_1D": {"tf": 1.4142135623730951}, "NDNT.utils.plotting.plot_filters_2D": {"tf": 1.4142135623730951}, "NDNT.utils.plotting.plot_filters_ST1D": {"tf": 1.4142135623730951}}, "df": 8, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {"NDNT.NDN.NDN": {"tf": 1}, "NDNT.NDN.NDN.fit_dl": {"tf": 1}}, "df": 2}}, "f": {"docs": {"NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1}, "NDNT.utils.NDNutils.NpEncoder.default": {"tf": 1}}, "df": 2, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.NDN.NDN": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.get_trainer": {"tf": 2.449489742783178}, "NDNT.NDN.NDN.get_optimizer": {"tf": 2.6457513110645907}, "NDNT.NDN.NDN.fit": {"tf": 2.23606797749979}, "NDNT.NDN.NDN.get_activations": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.load_model_chk": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.TconvLayer.plot_filters": {"tf": 2}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.STconvLayer.plot_filters": {"tf": 2}, "NDNT.modules.layers.lvlayers.LVLayerOLD.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.plot_filters": {"tf": 2}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 2.449489742783178}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1.7320508075688772}, "NDNT.modules.layers.reslayers.IterTlayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterSTlayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.Tlayer": {"tf": 1}, "NDNT.modules.regularization.Regularization.unit_reg_convert": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 2.23606797749979}, "NDNT.training.ada_hessian.AdaHessian": {"tf": 2.6457513110645907}, "NDNT.training.ada_hessian.AdaHessian.step": {"tf": 1}, "NDNT.training.earlystopping.EarlyStopping": {"tf": 2}, "NDNT.training.lbfgs.polyinterp": {"tf": 1.4142135623730951}, "NDNT.training.lbfgs.LBFGS": {"tf": 2}, "NDNT.training.lbfgs.LBFGS.curvature_update": {"tf": 1.4142135623730951}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 2}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 4.242640687119285}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 2.6457513110645907}, "NDNT.training.trainer.Trainer.__init__": {"tf": 2.449489742783178}, "NDNT.utils.DanUtils.design_matrix_drift": {"tf": 1}, "NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 1}, "NDNT.utils.NDNutils.generate_xv_folds": {"tf": 1}, "NDNT.utils.NDNutils.NpEncoder": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.NpEncoder.default": {"tf": 2}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1.4142135623730951}, "NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 2}, "NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 2}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_log_epsilon": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 2}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"tf": 1.4142135623730951}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 2}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"tf": 1.4142135623730951}}, "df": 60, "s": {"docs": {"NDNT.NDN.NDN.training_step": {"tf": 1}, "NDNT.NDN.NDN.validation_step": {"tf": 1}, "NDNT.NDN.NDN.fit_dl": {"tf": 3.1622776601683795}, "NDNT.NDN.NDN.eval_models": {"tf": 2.8284271247461903}, "NDNT.NDN.NDN.generate_predictions": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.layer_dict": {"tf": 1}, "NDNT.networks.FFnetwork": {"tf": 2.6457513110645907}, "NDNT.networks.FFnetwork.prepare_regularization": {"tf": 1}, "NDNT.networks.FFnetwork.list_parameters": {"tf": 1}, "NDNT.networks.FFnetwork.set_parameters": {"tf": 1}, "NDNT.networks.FFnetwork.set_reg_val": {"tf": 1}, "NDNT.networks.FFnetwork.plot_filters": {"tf": 1}, "NDNT.networks.FFnet_external.list_params": {"tf": 1}, "NDNT.networks.FFnet_external.set_params": {"tf": 1}, "NDNT.training.lbfgs.polyinterp": {"tf": 1}, "NDNT.utils.DanUtils.imagesc": {"tf": 1}, "NDNT.utils.NDNutils.tent_basis_generate": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 1.7320508075688772}}, "df": 43}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.NDN.NDN.compute_network_outputs": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1}, "NDNT.modules.regularization.RegModule.forward": {"tf": 1}, "NDNT.networks.FFnetwork.preprocess_input": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.forward": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d.forward": {"tf": 1}, "NDNT.networks.FFnet_external.forward": {"tf": 1}, "NDNT.training.trainer.Trainer.__init__": {"tf": 1}, "NDNT.training.trainer.Trainer.fit": {"tf": 1}, "NDNT.training.trainer.Trainer.prepare_fit": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer.fit_loop": {"tf": 1}, "NDNT.training.trainer.Trainer.validate_one_epoch": {"tf": 1}, "NDNT.training.trainer.Trainer.train_one_epoch": {"tf": 1}, "NDNT.training.trainer.Trainer.train_one_step": {"tf": 1}, "NDNT.training.trainer.Trainer.checkpoint_model": {"tf": 1}, "NDNT.training.trainer.Trainer.graceful_exit": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.fit": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.fit_data_dict": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.train_one_epoch": {"tf": 1}, "NDNT.training.trainer.TemperatureCalibratedTrainer.validate_one_epoch": {"tf": 1}}, "df": 20}, "s": {"docs": {"NDNT.modules.regularization.RegModule.forward": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.modules.layers.dimlayers.ChannelLayer": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.training.ada_hessian.AdaHessian": {"tf": 1}}, "df": 1}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.NDN.NDN.get_trainer": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.fit": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.fit_dl": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.eval_models": {"tf": 2}, "NDNT.NDN.NDN.generate_predictions": {"tf": 1.4142135623730951}, "NDNT.modules.layers.orilayers.OriConvLayer.get_rot_mat": {"tf": 1.4142135623730951}, "NDNT.networks.FFnetwork.prepare_regularization": {"tf": 1.4142135623730951}, "NDNT.training.lbfgs.LBFGS": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1}, "NDNT.training.trainer.Trainer.__init__": {"tf": 1.7320508075688772}, "NDNT.utils.NDNutils.load_checkpoint": {"tf": 1}, "NDNT.utils.NDNutils.get_max_samples": {"tf": 1.4142135623730951}}, "df": 13}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1}}, "df": 4}}}}}}}, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"NDNT.NDN.NDN.get_trainer": {"tf": 1}, "NDNT.training.earlystopping.EarlyStopping": {"tf": 1}}, "df": 2}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.NDN.NDN.get_optimizer": {"tf": 1.4142135623730951}, "NDNT.training.ada_hessian.AdaHessian": {"tf": 1.4142135623730951}}, "df": 2}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"NDNT.networks.ReadoutNetwork": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.layers.convlayers.TconvLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.plot_filters": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1}}, "df": 4}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.networks.FFnetwork.determine_input_dims": {"tf": 1}, "NDNT.networks.ReadoutNetwork.determine_input_dims": {"tf": 1}}, "df": 2}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer3d.__init__": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.layers.dimlayers.Dim0Layer.dim_info": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.dim_info": {"tf": 1}}, "df": 2, "s": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1}, "NDNT.modules.regularization.ConvReg.compute_reg_penalty": {"tf": 1}, "NDNT.utils.DanUtils.monocular_data_import": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1.4142135623730951}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1}}, "df": 2, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.utils.DanUtils.fold_sample": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.layers.orilayers.OriLayer.__init__": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.rotation_matrix_tensor": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.rotation_matrix_tensor": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.layer_dict": {"tf": 1}}, "df": 6}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.utils.DanUtils.design_matrix_drift": {"tf": 1.7320508075688772}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 1.4142135623730951}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.networks.FFnetwork.determine_input_dims": {"tf": 1}, "NDNT.networks.ReadoutNetwork.determine_input_dims": {"tf": 1}}, "df": 2}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.line_search": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1}}, "df": 3}, "d": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.line_search": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_readout": {"tf": 1}}, "df": 4}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.utils.NDNutils.create_time_embedding": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_maxpenalty_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_localpenalty_matrix": {"tf": 1}}, "df": 5}}}}, "c": {"docs": {"NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1.4142135623730951}}, "df": 1, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 2.449489742783178}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.utils.NDNutils.create_time_embedding": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.shift_mat_zpad": {"tf": 2}}, "df": 3}}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.utils.NDNutils.save_checkpoint": {"tf": 1}}, "df": 1}}}}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.training.ada_hessian.AdaHessian": {"tf": 1}}, "df": 1}}}}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.training.lbfgs.polyinterp": {"tf": 1}}, "df": 1, "/": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_maxpenalty_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_localpenalty_matrix": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.utils.DanUtils.monocular_data_import": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1.4142135623730951}}, "df": 3, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.NDN.NDN": {"tf": 1}, "NDNT.NDN.NDN.training_step": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.validation_step": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.fit": {"tf": 1}, "NDNT.NDN.NDN.fit_dl": {"tf": 1}, "NDNT.NDN.NDN.eval_models": {"tf": 1}, "NDNT.NDN.NDN.save_model_zip": {"tf": 1}, "NDNT.NDN.NDN.load_model_zip": {"tf": 1}, "NDNT.NDN.NDN.get_activations": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchIterator": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1.7320508075688772}, "NDNT.modules.layers.bilayers.ChannelConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.dim_info": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1.7320508075688772}, "NDNT.modules.layers.orilayers.OriLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.reset_parameters2": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.Regularization": {"tf": 2.23606797749979}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.Regularization.set_reg_val": {"tf": 1}, "NDNT.networks.FFnetwork.ffnet_dict": {"tf": 1.4142135623730951}, "NDNT.networks.ScaffoldNetwork.ffnet_dict": {"tf": 1.4142135623730951}, "NDNT.networks.ScaffoldNetwork3d.ffnet_dict": {"tf": 1.4142135623730951}, "NDNT.networks.ReadoutNetwork": {"tf": 1}, "NDNT.networks.ReadoutNetwork.ffnet_dict": {"tf": 1.4142135623730951}, "NDNT.networks.FFnet_external": {"tf": 1.4142135623730951}, "NDNT.networks.FFnet_external.ffnet_dict": {"tf": 1.4142135623730951}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1}, "NDNT.training.trainer.Trainer.validate_one_epoch": {"tf": 1}, "NDNT.training.trainer.Trainer.train_one_epoch": {"tf": 1}, "NDNT.training.trainer.Trainer.train_one_step": {"tf": 1.4142135623730951}, "NDNT.training.trainer.LBFGSTrainer.fit_data_dict": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.train_one_epoch": {"tf": 1}, "NDNT.training.trainer.TemperatureCalibratedTrainer.validate_one_epoch": {"tf": 1}, "NDNT.utils.NDNutils.save_checkpoint": {"tf": 1}, "NDNT.utils.NDNutils.NpEncoder": {"tf": 1}}, "df": 65, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.NDN.NDN.training_step": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.validation_step": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.fit": {"tf": 1}, "NDNT.NDN.NDN.fit_dl": {"tf": 1}, "NDNT.NDN.NDN.eval_models": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.get_activations": {"tf": 1}, "NDNT.modules.experiment_sampler.construct_exp_to_time": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.BiConvLayer1D.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1.7320508075688772}, "NDNT.modules.layers.bilayers.ChannelConvLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.ConvLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.TconvLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.STconvLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.Dim0Layer.dim_info": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.Dim0Layer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.ChannelLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.DimSPLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.DimSPTLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.laglayers.LagLayer.layer_dict": {"tf": 1.7320508075688772}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1.7320508075688772}, "NDNT.modules.layers.ndnlayer.NDNLayer.dim_info": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1.7320508075688772}, "NDNT.modules.layers.orilayers.OriLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.orilayers.OriConvLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.orilayers.ConvLayer3D.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.ReadoutLayer.layer_dict": {"tf": 1.7320508075688772}, "NDNT.modules.layers.readouts.ReadoutLayer3d.layer_dict": {"tf": 1.7320508075688772}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 1.7320508075688772}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1.7320508075688772}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1.7320508075688772}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1.7320508075688772}, "NDNT.modules.layers.specialtylayers.Tlayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.L1convLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.OnOffLayer.layer_dict": {"tf": 1.7320508075688772}, "NDNT.modules.layers.specialtylayers.MaskLayer.layer_dict": {"tf": 1.7320508075688772}, "NDNT.modules.regularization.Regularization.set_reg_val": {"tf": 1}, "NDNT.networks.FFnetwork.ffnet_dict": {"tf": 1.4142135623730951}, "NDNT.networks.ScaffoldNetwork.ffnet_dict": {"tf": 1.4142135623730951}, "NDNT.networks.ScaffoldNetwork3d.ffnet_dict": {"tf": 1.4142135623730951}, "NDNT.networks.ReadoutNetwork.ffnet_dict": {"tf": 1.4142135623730951}, "NDNT.networks.FFnet_external": {"tf": 1.4142135623730951}, "NDNT.networks.FFnet_external.ffnet_dict": {"tf": 1.4142135623730951}, "NDNT.training.trainer.LBFGSTrainer.fit_data_dict": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}, "NDNT.utils.NDNutils.fit_lbfgs": {"tf": 1.4142135623730951}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_readout": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_external": {"tf": 1}}, "df": 51}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.networks.FFnetwork": {"tf": 1}, "NDNT.networks.FFnetwork.ffnet_dict": {"tf": 1}}, "df": 2}}}}}}}}, "s": {"docs": {"NDNT.training.ada_hessian.AdaHessian": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_NIM": {"tf": 1}}, "df": 3}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.networks.ScaffoldNetwork": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1}}, "df": 3}}}}}}}}}, "r": {"docs": {"NDNT.NDN.NDN": {"tf": 1}, "NDNT.NDN.NDN.get_trainer": {"tf": 1}, "NDNT.NDN.NDN.fit": {"tf": 1}, "NDNT.NDN.NDN.fit_dl": {"tf": 1}, "NDNT.NDN.NDN.save_model_zip": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.load_checkpoint": {"tf": 1}, "NDNT.utils.NDNutils.get_fit_versions": {"tf": 1}}, "df": 8, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.NDN.NDN": {"tf": 1}, "NDNT.NDN.NDN.get_trainer": {"tf": 1}, "NDNT.NDN.NDN.fit": {"tf": 1}, "NDNT.NDN.NDN.fit_dl": {"tf": 1}, "NDNT.NDN.NDN.save_model_zip": {"tf": 1}, "NDNT.NDN.NDN.save_model": {"tf": 1}, "NDNT.NDN.NDN.save_model_chk": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.load_model_chk": {"tf": 1}, "NDNT.training.trainer.Trainer.__init__": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}, "NDNT.utils.NDNutils.load_checkpoint": {"tf": 1}, "NDNT.utils.NDNutils.get_fit_versions": {"tf": 1}}, "df": 13}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.NDN.NDN.save_model_chk": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.modules.activations.adaptive_elu": {"tf": 1.4142135623730951}, "NDNT.modules.activations.AdaptiveELU.__init__": {"tf": 1.4142135623730951}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 2.449489742783178}}, "df": 3}}}, "l": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.utils.NDNutils.load_checkpoint": {"tf": 1}, "NDNT.utils.plotting.plot_filters_ST2D": {"tf": 1}}, "df": 2}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.NDN.NDN.save_model_chk": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"NDNT.training.trainer.Trainer.__init__": {"tf": 1}}, "df": 1}}}}}, "m": {"0": {"docs": {"NDNT.modules.layers.dimlayers.ChannelLayer": {"tf": 1}}, "df": 1}, "docs": {"NDNT.modules.layers.bilayers.BiConvLayer1D": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.passive_readout": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1}, "NDNT.utils.NDNutils.shift_mat_zpad": {"tf": 1.4142135623730951}}, "df": 7, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.NDN.NDN.assemble_ffnetworks": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.TconvLayer.plot_filters": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.STconvLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.STconvLayer.plot_filters": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.Dim0Layer": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.get_weights": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.plot_filters": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.dim_info": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.get_weights": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.plot_filters": {"tf": 1}, "NDNT.modules.regularization.Regularization": {"tf": 1}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.LocalityReg": {"tf": 1}, "NDNT.modules.regularization.ConvReg.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.TikhanovC": {"tf": 1}, "NDNT.modules.regularization.ActivityReg": {"tf": 1}, "NDNT.networks.FFnetwork.determine_input_dims": {"tf": 1}, "NDNT.networks.ScaffoldNetwork": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d": {"tf": 1}, "NDNT.networks.ReadoutNetwork.determine_input_dims": {"tf": 1}, "NDNT.utils.DanUtils.design_matrix_drift": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 1}, "NDNT.utils.NDNutils.shift_mat_zpad": {"tf": 1}, "NDNT.utils.NDNutils.initialize_gaussian_envelope": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_external": {"tf": 1}}, "df": 38, "s": {"docs": {"NDNT.NDN.NDN.assemble_ffnetworks": {"tf": 1}, "NDNT.NDN.NDN.forward": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer": {"tf": 2}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.dim_info": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.orilayers.OriLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.orilayers.OriLayer.rotation_matrix_tensor": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.orilayers.OriConvLayer.rotation_matrix_tensor": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 1}, "NDNT.modules.regularization.Regularization": {"tf": 1}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1}, "NDNT.networks.FFnetwork": {"tf": 1}, "NDNT.networks.FFnetwork.determine_input_dims": {"tf": 1}, "NDNT.networks.ReadoutNetwork.determine_input_dims": {"tf": 1}, "NDNT.networks.FFnet_external": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1.4142135623730951}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1.7320508075688772}, "NDNT.utils.create_reg_matrices.create_maxpenalty_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_localpenalty_matrix": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 1}}, "df": 36}, "a": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.modules.regularization.Regularization.__init__": {"tf": 1}, "NDNT.training.lbfgs.polyinterp": {"tf": 1}, "NDNT.utils.DanUtils.time_embedding_simple": {"tf": 1}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 1}}, "df": 4, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.modules.layers.lvlayers.LVLayer.__init__": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_external": {"tf": 1}}, "df": 2}}}}}}}}}}}, "s": {"docs": {"NDNT.modules.layers.bilayers.BinocLayer1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.BiSTconv1D": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.BiSTconv1D.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.ChannelConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.dim_info": {"tf": 2.6457513110645907}, "NDNT.modules.layers.dimlayers.ChannelLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.__init__": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.laglayers.LagLayer": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.__init__": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.dim_info": {"tf": 2}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.orilayers.OriLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.orilayers.OriLayer.rotation_matrix_tensor": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.orilayers.OriConvLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.orilayers.OriConvLayer.rotation_matrix_tensor": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.orilayers.ConvLayer3D.__init__": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.ReadoutLayer.get_weights": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterLayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterSTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.Tlayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.Regularization": {"tf": 1}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1.7320508075688772}, "NDNT.networks.FFnetwork": {"tf": 1}, "NDNT.networks.FFnetwork.determine_input_dims": {"tf": 3}, "NDNT.networks.ScaffoldNetwork": {"tf": 1}, "NDNT.networks.ReadoutNetwork.determine_input_dims": {"tf": 3}, "NDNT.networks.FFnet_external": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1.4142135623730951}, "NDNT.utils.create_reg_matrices.create_maxpenalty_matrix": {"tf": 1.4142135623730951}, "NDNT.utils.create_reg_matrices.create_localpenalty_matrix": {"tf": 1.4142135623730951}, "NDNT.utils.ffnet_dicts.layer_dict": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_NIM": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_external": {"tf": 1.7320508075688772}}, "df": 67}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.NDN.NDN.save_model": {"tf": 1}, "NDNT.NDN.NDN.load_model": {"tf": 1}}, "df": 2, "/": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.NDN.NDN.save_model": {"tf": 1}, "NDNT.NDN.NDN.save_model_chk": {"tf": 1}}, "df": 2}}}}}}}}}, "s": {"docs": {}, "df": 0, "k": {"docs": {"NDNT.NDN.NDN.load_model": {"tf": 1}, "NDNT.NDN.NDN.load_model_chk": {"tf": 1}}, "df": 2}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1.7320508075688772}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.utils.DanUtils.fold_sample": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.utils.NDNutils.tent_basis_generate": {"tf": 1}}, "df": 1}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.layers.bilayers.BinocLayer1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.__init__": {"tf": 1}, "NDNT.utils.DanUtils.fold_sample": {"tf": 1}}, "df": 5}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"tf": 1}}, "df": 4}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.layers.normlayers.DivNormLayer": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.__init__": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.forward": {"tf": 1}}, "df": 3}}}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.modules.layers.bilayers.ChannelConvLayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer": {"tf": 1}, "NDNT.modules.regularization.Regularization": {"tf": 2.449489742783178}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"tf": 1}}, "df": 10, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.training.lbfgs.LBFGS.curvature_update": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}}, "df": 1}}}}}}}}}}, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {"NDNT.modules.layers.dimlayers.Dim0Layer.dim_info": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.dim_info": {"tf": 1}}, "df": 2}}}, "d": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.modules.regularization.DiagonalReg": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {"NDNT.NDN.NDN.assemble_ffnetworks": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.set_parameters": {"tf": 1}, "NDNT.modules.regularization.ConvReg.compute_reg_penalty": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1}}, "df": 4, "e": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.NDN.NDN.compute_network_outputs": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1}, "NDNT.training.lbfgs.LBFGS": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_external": {"tf": 1}}, "df": 7, "n": {"docs": {"NDNT.training.earlystopping.EarlyStopping": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1.4142135623730951}}, "df": 2}}}, "w": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.NDN.NDN.get_weights": {"tf": 1}, "NDNT.networks.FFnetwork.get_weights": {"tf": 1}, "NDNT.utils.NDNutils.shift_mat_zpad": {"tf": 1}}, "df": 3}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.modules.layers.bilayers.BinocLayer1D": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.utils.NDNutils.tent_basis_generate": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "n": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1}, "NDNT.training.trainer.Trainer": {"tf": 1}}, "df": 2, "e": {"docs": {"NDNT.modules.regularization.ConvReg.compute_reg_penalty": {"tf": 1}, "NDNT.networks.FFnetwork.prepare_regularization": {"tf": 1}}, "df": 2}, "g": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"NDNT.NDN.NDN.compute_network_outputs": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.forward": {"tf": 1}, "NDNT.NDN.NDN.training_step": {"tf": 1}, "NDNT.NDN.NDN.validation_step": {"tf": 1}, "NDNT.NDN.NDN.get_dataloaders": {"tf": 2.8284271247461903}, "NDNT.NDN.NDN.fit": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.fit_dl": {"tf": 2}, "NDNT.NDN.NDN.initialize_loss": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.compute_average_responses": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.initialize_biases": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.eval_models": {"tf": 3.7416573867739413}, "NDNT.NDN.NDN.generate_predictions": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.get_null_adjusted_ll": {"tf": 1}, "NDNT.NDN.NDN.get_activations": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.forward": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.rotate_tensor": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.ReadoutLayer3d.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.FixationLayer.forward": {"tf": 1.4142135623730951}, "NDNT.training.lbfgs.LBFGS": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1}, "NDNT.training.trainer.Trainer.fit": {"tf": 1.7320508075688772}, "NDNT.training.trainer.Trainer.fit_loop": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer.validate_one_epoch": {"tf": 1}, "NDNT.training.trainer.Trainer.train_one_epoch": {"tf": 1}, "NDNT.training.trainer.Trainer.train_one_step": {"tf": 1.4142135623730951}, "NDNT.training.trainer.LBFGSTrainer.fit": {"tf": 1.7320508075688772}, "NDNT.training.trainer.LBFGSTrainer.fit_data_dict": {"tf": 1.7320508075688772}, "NDNT.training.trainer.LBFGSTrainer.train_one_epoch": {"tf": 1}, "NDNT.training.trainer.TemperatureCalibratedTrainer.validate_one_epoch": {"tf": 1}, "NDNT.utils.DanUtils.design_matrix_drift": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import": {"tf": 2}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 2.8284271247461903}, "NDNT.utils.DanUtils.monocular_data_import": {"tf": 1}, "NDNT.utils.NDNutils.fit_lbfgs": {"tf": 1.7320508075688772}, "NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 1}, "NDNT.utils.NDNutils.generate_xv_folds": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.get_fit_versions": {"tf": 1}, "NDNT.utils.NDNutils.NpEncoder": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 1.4142135623730951}, "NDNT.metrics.mse_loss.MseLoss_datafilter.forward": {"tf": 2.449489742783178}, "NDNT.metrics.mse_loss.MseLoss_datafilter.unit_loss": {"tf": 2.23606797749979}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.forward": {"tf": 2.449489742783178}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.unit_loss": {"tf": 2.23606797749979}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.forward": {"tf": 2.449489742783178}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.unit_loss": {"tf": 2.23606797749979}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"tf": 1.4142135623730951}, "NDNT.metrics.rmse_loss.RmseLoss.forward": {"tf": 2.449489742783178}, "NDNT.metrics.rmse_loss.RmseLoss.unit_loss": {"tf": 2.23606797749979}}, "df": 56, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.NDN.NDN.get_dataloaders": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer.fit": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer.fit_loop": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer.validate_one_epoch": {"tf": 1}, "NDNT.training.trainer.Trainer.train_one_epoch": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.fit": {"tf": 1.4142135623730951}, "NDNT.training.trainer.LBFGSTrainer.train_one_epoch": {"tf": 1}, "NDNT.training.trainer.TemperatureCalibratedTrainer.validate_one_epoch": {"tf": 1}}, "df": 8, "s": {"docs": {"NDNT.NDN.NDN.get_dataloaders": {"tf": 1}, "NDNT.NDN.NDN.fit": {"tf": 1}}, "df": 2}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.NDN.NDN.get_dataloaders": {"tf": 2.23606797749979}, "NDNT.NDN.NDN.fit": {"tf": 2}, "NDNT.NDN.NDN.fit_dl": {"tf": 2}, "NDNT.NDN.NDN.initialize_loss": {"tf": 2.449489742783178}, "NDNT.NDN.NDN.compute_average_responses": {"tf": 2}, "NDNT.NDN.NDN.initialize_biases": {"tf": 2}, "NDNT.NDN.NDN.eval_models": {"tf": 2}, "NDNT.NDN.NDN.generate_predictions": {"tf": 2}, "NDNT.NDN.NDN.change_loss": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.get_null_adjusted_ll": {"tf": 1}, "NDNT.NDN.NDN.get_activations": {"tf": 1}, "NDNT.modules.experiment_sampler.construct_exp_to_time": {"tf": 1.7320508075688772}, "NDNT.modules.experiment_sampler.ExperimentSampler": {"tf": 1.7320508075688772}, "NDNT.utils.NDNutils.get_max_samples": {"tf": 1.4142135623730951}, "NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 1.4142135623730951}, "NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"tf": 1.4142135623730951}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 1.4142135623730951}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"tf": 1.4142135623730951}}, "df": 22}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.utils.DanUtils.binocular_data_import": {"tf": 1.4142135623730951}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1.4142135623730951}, "NDNT.utils.DanUtils.monocular_data_import": {"tf": 1}}, "df": 3}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.utils.DanUtils.binocular_data_import": {"tf": 1.4142135623730951}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1.4142135623730951}}, "df": 2}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 1}}, "df": 5, "s": {"docs": {"NDNT.utils.DanUtils.binocular_data_import": {"tf": 1}}, "df": 1}}}}}}}}}, "n": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1.7320508075688772}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}}, "df": 2}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.curvature_update": {"tf": 1.7320508075688772}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1.7320508075688772}}, "df": 4}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.NDN.NDN.get_trainer": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.fit": {"tf": 1}, "NDNT.NDN.NDN.change_loss": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1.4142135623730951}, "NDNT.networks.FFnetwork.prepare_regularization": {"tf": 1}}, "df": 5}}}}, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.modules.layers.externallayer.ExternalLayer": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.__init__": {"tf": 1}}, "df": 2}}}, "e": {"docs": {"NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}}, "df": 1}}, "l": {"docs": {"NDNT.NDN.NDN.get_dataloaders": {"tf": 1.4142135623730951}}, "df": 1}, "s": {"docs": {"NDNT.NDN.NDN.fit_dl": {"tf": 1.4142135623730951}}, "df": 1}, "f": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.NDN.NDN.eval_models": {"tf": 1.4142135623730951}, "NDNT.utils.DanUtils.binocular_data_import": {"tf": 1.4142135623730951}, "NDNT.utils.DanUtils.monocular_data_import": {"tf": 1}}, "df": 3}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.layers.orilayers.OriConvLayer.rotate_tensor": {"tf": 1}, "NDNT.training.lbfgs.LBFGS": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1}}, "df": 3}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "w": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "p": {"docs": {"NDNT.utils.DanUtils.design_matrix_drift": {"tf": 1}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 1}}, "df": 2, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.utils.DanUtils.design_matrix_drift": {"tf": 1}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.utils.DanUtils.binocular_data_import": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}}, "df": 2}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {"NDNT.training.lbfgs.polyinterp": {"tf": 1}, "NDNT.training.lbfgs.LBFGS": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1}}, "df": 3}}}}}}}}, "p": {"docs": {}, "df": 0, "i": {"docs": {"NDNT.utils.DanUtils.figure_export": {"tf": 1.4142135623730951}}, "df": 1}}, "*": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.utils.NDNutils.create_time_embedding": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1}}, "df": 2}}}, "c": {"1": {"docs": {"NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1.4142135623730951}}, "df": 1}, "2": {"docs": {"NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1}}, "df": 1}, "docs": {"NDNT.modules.layers.bilayers.BiSTconv1D": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.STconvLayer": {"tf": 1.7320508075688772}, "NDNT.modules.layers.dimlayers.Dim0Layer.forward": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.forward": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.forward": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.forward": {"tf": 1}, "NDNT.training.lbfgs.LBFGS": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}}, "df": 9, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.NDN.NDN": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.__init__": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.__init__": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.Regularization": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1}, "NDNT.modules.regularization.RegModule": {"tf": 1}, "NDNT.modules.regularization.RegModule.__init__": {"tf": 1}, "NDNT.modules.regularization.LocalityReg.__init__": {"tf": 1}, "NDNT.modules.regularization.DiagonalReg.__init__": {"tf": 1}, "NDNT.modules.regularization.InlineReg.__init__": {"tf": 1}, "NDNT.modules.regularization.ConvReg.__init__": {"tf": 1}, "NDNT.modules.regularization.Tikhanov.__init__": {"tf": 1}, "NDNT.modules.regularization.TikhanovC.__init__": {"tf": 1}, "NDNT.modules.regularization.ActivityReg.__init__": {"tf": 1}, "NDNT.networks.FFnetwork.determine_input_dims": {"tf": 1}, "NDNT.networks.ReadoutNetwork.determine_input_dims": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer": {"tf": 1}, "NDNT.training.trainer.TemperatureCalibratedTrainer": {"tf": 1}, "NDNT.utils.NDNutils.CPU_Unpickler.find_class": {"tf": 1}, "NDNT.utils.NDNutils.NpEncoder.default": {"tf": 1}}, "df": 24, "e": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.utils.NDNutils.CPU_Unpickler.find_class": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.training.ada_hessian.AdaHessian.step": {"tf": 1.4142135623730951}, "NDNT.training.lbfgs.LBFGS.step": {"tf": 1.4142135623730951}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 2.449489742783178}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1.4142135623730951}, "NDNT.training.lbfgsnew.LBFGSNew.step": {"tf": 1.4142135623730951}}, "df": 5}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.NDN.NDN.fit": {"tf": 1}, "NDNT.NDN.NDN.fit_dl": {"tf": 1}, "NDNT.NDN.NDN.load_model_chk": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer.checkpoint_model": {"tf": 1}, "NDNT.utils.NDNutils.save_checkpoint": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.load_checkpoint": {"tf": 1.4142135623730951}}, "df": 6, "s": {"docs": {"NDNT.NDN.NDN": {"tf": 1}, "NDNT.NDN.NDN.get_trainer": {"tf": 1}, "NDNT.NDN.NDN.fit": {"tf": 1}, "NDNT.NDN.NDN.load_model_chk": {"tf": 1}, "NDNT.training.trainer.Trainer.__init__": {"tf": 1}, "NDNT.utils.NDNutils.save_checkpoint": {"tf": 1}, "NDNT.utils.NDNutils.get_fit_versions": {"tf": 1}}, "df": 7}}}}}}, "s": {"docs": {"NDNT.training.lbfgs.is_legal": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.training.lbfgs.is_legal": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.NDN.NDN.get_trainer": {"tf": 1}, "NDNT.NDN.NDN.change_loss": {"tf": 1}, "NDNT.networks.FFnetwork.prepare_regularization": {"tf": 1}, "NDNT.training.earlystopping.EarlyStopping": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1}}, "df": 5, "d": {"docs": {"NDNT.networks.ReadoutNetwork": {"tf": 1}}, "df": 1}, "s": {"docs": {"NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_log_epsilon": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"tf": 1}}, "df": 6}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.utils.DanUtils.design_matrix_drift": {"tf": 1}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 1}}, "df": 2}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.modules.layers.bilayers.BiSTconv1D": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.ChannelLayer": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.__init__": {"tf": 1}}, "df": 6, "s": {"docs": {"NDNT.modules.layers.bilayers.BinocLayer1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D.forward": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.forward": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.forward": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.dim_info": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.__init__": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.laglayers.LagLayer": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.ReadoutLayer3d.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.networks.ReadoutNetwork": {"tf": 1}}, "df": 34}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.modules.layers.laglayers.LagLayer": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.regularization.ConvReg.compute_reg_penalty": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "t": {"2": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.utils.MattUtils.smooth_ema": {"tf": 1}}, "df": 1}}}}}}, "docs": {"NDNT.utils.MattUtils.smooth_ema": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.modules.layers.dimlayers.Dim0Layer.dim_info": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.dim_info": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.utils.DanUtils.imagesc": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.NDN.NDN.training_step": {"tf": 1}, "NDNT.NDN.NDN.validation_step": {"tf": 1}, "NDNT.NDN.NDN.save_model_chk": {"tf": 1}, "NDNT.modules.regularization.Regularization.build_reg_modules": {"tf": 1}, "NDNT.networks.FFnetwork.prepare_regularization": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 2}, "NDNT.training.trainer.Trainer.__init__": {"tf": 1}, "NDNT.training.trainer.Trainer.train_one_epoch": {"tf": 1}, "NDNT.training.trainer.Trainer.train_one_step": {"tf": 1}, "NDNT.training.trainer.Trainer.checkpoint_model": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.train_one_epoch": {"tf": 1}}, "df": 11, "l": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.NDN.NDN.assemble_ffnetworks": {"tf": 1}, "NDNT.NDN.NDN.compute_network_outputs": {"tf": 1}, "NDNT.NDN.NDN.get_readout_locations": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.get_readout_locations": {"tf": 1}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1}, "NDNT.networks.FFnetwork.determine_input_dims": {"tf": 1}, "NDNT.networks.ScaffoldNetwork": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1}, "NDNT.networks.ReadoutNetwork.determine_input_dims": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 2}, "NDNT.utils.create_reg_matrices.create_maxpenalty_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_localpenalty_matrix": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.unit_loss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.unit_loss": {"tf": 1}}, "df": 19}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.training.lbfgs.LBFGS.curvature_update": {"tf": 1.4142135623730951}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {"NDNT.training.trainer.Trainer.__init__": {"tf": 1}}, "df": 1, ":": {"0": {"docs": {"NDNT.NDN.NDN.get_trainer": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.networks.FFnetwork.determine_input_dims": {"tf": 1}, "NDNT.networks.ReadoutNetwork.determine_input_dims": {"tf": 1}}, "df": 2, "d": {"docs": {"NDNT.NDN.NDN.assemble_ffnetworks": {"tf": 1}}, "df": 1}, "s": {"docs": {"NDNT.networks.ScaffoldNetwork": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.NDN.NDN.forward": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}}, "df": 3}}}}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.NDN.NDN.eval_models": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.save_model": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.NDN.NDN.assemble_ffnetworks": {"tf": 1}, "NDNT.NDN.NDN.compute_network_outputs": {"tf": 1}, "NDNT.NDN.NDN.training_step": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.validation_step": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.save_model_zip": {"tf": 1}, "NDNT.NDN.NDN.load_model_zip": {"tf": 1}, "NDNT.NDN.NDN.load_model_chk": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}}, "df": 9}}}, "s": {"docs": {"NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.layers.convlayers.STconvLayer": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.layers.lvlayers.LVLayer.__init__": {"tf": 1}, "NDNT.utils.DanUtils.design_matrix_drift": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 1.7320508075688772}}, "df": 3}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.NDN.NDN.get_trainer": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 1}}, "df": 4}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.modules.experiment_sampler.construct_exp_to_time": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.modules.regularization.Regularization": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.regularization.Regularization.__init__": {"tf": null}, "NDNT.modules.regularization.RegModule.__init__": {"tf": null}, "NDNT.modules.regularization.LocalityReg.__init__": {"tf": null}, "NDNT.modules.regularization.DiagonalReg.__init__": {"tf": null}, "NDNT.modules.regularization.InlineReg.__init__": {"tf": null}, "NDNT.modules.regularization.ConvReg.__init__": {"tf": null}, "NDNT.modules.regularization.Tikhanov.__init__": {"tf": null}, "NDNT.modules.regularization.TikhanovC.__init__": {"tf": null}, "NDNT.modules.regularization.ActivityReg.__init__": {"tf": null}, "NDNT.networks.ScaffoldNetwork": {"tf": null}, "NDNT.networks.ScaffoldNetwork3d": {"tf": null}, "NDNT.networks.ReadoutNetwork": {"tf": null}, "NDNT.utils.ffnet_dicts.ffnet_dict_external": {"tf": null}}, "df": 13}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}}, "df": 7, "t": {"docs": {"NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.normlayers.DivNormLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.__init__": {"tf": 1}}, "df": 12}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.modules.layers.readouts.FixationLayer.__init__": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.curvature_update": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 2}}, "df": 3, "s": {"docs": {"NDNT.modules.regularization.Regularization": {"tf": 1}}, "df": 1}}}}}}, "v": {"docs": {"NDNT.modules.layers.bilayers.BinocLayer1D.forward": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.forward": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.forward": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer": {"tf": 1}, "NDNT.networks.ReadoutNetwork.forward": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 1}}, "df": 8, "e": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.NDN.NDN.get_weights": {"tf": 1}, "NDNT.networks.FFnetwork.get_weights": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.modules.regularization.Regularization.unit_reg_convert": {"tf": 1}}, "df": 1, "s": {"docs": {"NDNT.modules.layers.convlayers.ConvLayer.batchnorm_convert": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.utils.NDNutils.pixel2grid": {"tf": 1}}, "df": 1}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.networks.ReadoutNetwork": {"tf": 1}}, "df": 1}}}}}}, "x": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}}, "df": 1}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.utils.ffnet_dicts.ffnet_dict_external": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.modules.layers.convlayers.TconvLayer": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer": {"tf": 1}, "NDNT.modules.regularization.ConvReg.compute_reg_penalty": {"tf": 1}}, "df": 3, "a": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.modules.layers.bilayers.BinocLayer1D": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer": {"tf": 1.7320508075688772}, "NDNT.modules.layers.bilayers.ChannelConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.TconvLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.STconvLayer": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.ConvReg": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_NIM": {"tf": 1}}, "df": 25, "l": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.modules.layers.specialtylayers.Tlayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.__init__": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {"NDNT.modules.regularization.ConvReg.compute_reg_penalty": {"tf": 1}}, "df": 1}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.layers.bilayers.BinocLayer1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.__init__": {"tf": 1.4142135623730951}}, "df": 11}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.modules.layers.reslayers.IterLayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1}}, "df": 9}}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1}}, "df": 6}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}}, "df": 1}}}}}}}, "d": {"docs": {"NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.modules.regularization.Regularization.__init__": {"tf": 1}, "NDNT.modules.regularization.Regularization.set_reg_val": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}}, "df": 4, "s": {"docs": {"NDNT.modules.regularization.ConvReg.compute_reg_penalty": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.compute_reg_loss": {"tf": 1}, "NDNT.modules.regularization.LocalityReg.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.DiagonalReg.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.ActivityReg.compute_reg_penalty": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian": {"tf": 1}}, "df": 6, "s": {"docs": {"NDNT.NDN.NDN.compute_network_outputs": {"tf": 1}, "NDNT.NDN.NDN.compute_reg_loss": {"tf": 1}, "NDNT.NDN.NDN.compute_average_responses": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1}, "NDNT.modules.regularization.ActivityReg.compute_activity_penalty": {"tf": 1}, "NDNT.networks.FFnetwork.compute_reg_loss": {"tf": 1}, "NDNT.networks.FFnet_external.compute_reg_loss": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.set_hessian": {"tf": 1}, "NDNT.utils.NDNutils.tent_basis_generate": {"tf": 1}}, "df": 9}, "d": {"docs": {"NDNT.NDN.NDN.validation_step": {"tf": 1}, "NDNT.modules.regularization.ActivityReg": {"tf": 1}}, "df": 2}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.NDN.NDN.get_trainer": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1}, "NDNT.modules.regularization.RegModule.forward": {"tf": 1}, "NDNT.training.lbfgs.LBFGS": {"tf": 1}}, "df": 4}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.NDN.NDN.initialize_loss": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.compute_average_responses": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.curvature_update": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}}, "df": 5}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.modules.layers.bilayers.BinocLayer1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.layer_dict": {"tf": 1}}, "df": 28}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.modules.regularization.ConvReg.compute_reg_penalty": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.networks.ReadoutNetwork": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1}}, "df": 1}}}}}}}}}}, "/": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "/": {"3": {"4": {"8": {"7": {"7": {"docs": {}, "df": 0, "f": {"1": {"5": {"1": {"5": {"3": {"docs": {}, "df": 0, "e": {"1": {"docs": {}, "df": 0, "a": {"2": {"0": {"8": {"7": {"3": {"1": {"6": {"docs": {}, "df": 0, "b": {"9": {"9": {"5": {"2": {"docs": {}, "df": 0, "c": {"9": {"3": {"1": {"8": {"0": {"7": {"docs": {}, "df": 0, "a": {"1": {"2": {"2": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "a": {"7": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "z": {"docs": {"NDNT.utils.MattUtils.smooth_ema": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}}}}}, "docs": {}, "df": 0}}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}}}}}}}}}}}}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"NDNT.utils.NDNutils.save_checkpoint": {"tf": 1}, "NDNT.utils.NDNutils.load_checkpoint": {"tf": 1}, "NDNT.utils.NDNutils.ensure_dir": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "/": {"2": {"7": {"2": {"7": {"9": {"docs": {"NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 1}}, "df": 5, "l": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.NDN.NDN.forward": {"tf": 1}, "NDNT.networks.FFnet_external": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.networks.ReadoutNetwork.forward": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.modules.regularization.Regularization.__init__": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_NIM": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 1}}, "df": 7}}}, "s": {"docs": {"NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 1}}, "df": 4}}}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.networks.ReadoutNetwork": {"tf": 1.4142135623730951}}, "df": 2}}}}, "e": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1}, "NDNT.utils.plotting.plot_filters_ST2D": {"tf": 1}}, "df": 2}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.layers.orilayers.ConvLayer3D.plot_filters": {"tf": 1}}, "df": 1, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"NDNT.modules.layers.convlayers.TconvLayer.plot_filters": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.STconvLayer.plot_filters": {"tf": 1.4142135623730951}, "NDNT.modules.layers.laglayers.LagLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.plot_filters": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.Tlayer.plot_filters": {"tf": 1}}, "df": 5}}}}}, "s": {"docs": {"NDNT.modules.layers.convlayers.TconvLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.plot_filters": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.plot_filters": {"tf": 1}}, "df": 6}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.layers.convlayers.TconvLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.plot_filters": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.plot_filters": {"tf": 1}}, "df": 6}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.regularization.TikhanovC": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.layers.convlayers.STconvLayer": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.modules.layers.lvlayers.LVLayerOLD": {"tf": 1}, "NDNT.training.trainer.Trainer": {"tf": 1}, "NDNT.utils.NDNutils.NpEncoder.default": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 1}}, "df": 7}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1}, "NDNT.modules.regularization.ConvReg.compute_reg_penalty": {"tf": 1}, "NDNT.networks.ScaffoldNetwork": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1}, "NDNT.training.lbfgs.LBFGS": {"tf": 1.4142135623730951}}, "df": 6}}, "p": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.modules.regularization.Regularization.reg_copy": {"tf": 1}, "NDNT.utils.NDNutils.save_checkpoint": {"tf": 1}}, "df": 2}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.networks.ReadoutNetwork": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.training.ada_hessian.AdaHessian": {"tf": 1}}, "df": 1}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {"NDNT.NDN.NDN.get_trainer": {"tf": 1}, "NDNT.NDN.NDN.save_model": {"tf": 1}, "NDNT.NDN.NDN.load_model": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.get_weights": {"tf": 1}}, "df": 4}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.layers.orilayers.OriLayer.rotation_matrix_tensor": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.rotation_matrix_tensor": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_maxpenalty_matrix": {"tf": 1.4142135623730951}, "NDNT.utils.create_reg_matrices.create_localpenalty_matrix": {"tf": 1.4142135623730951}}, "df": 5, "s": {"docs": {"NDNT.NDN.NDN.get_dataloaders": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1}, "NDNT.utils.NDNutils.save_checkpoint": {"tf": 1}, "NDNT.utils.NDNutils.ensure_dir": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_maxpenalty_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_localpenalty_matrix": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_NIM": {"tf": 1}}, "df": 17}, "d": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.utils.NDNutils.save_checkpoint": {"tf": 1}, "NDNT.utils.NDNutils.load_checkpoint": {"tf": 1}, "NDNT.utils.NDNutils.ensure_dir": {"tf": 1}}, "df": 3}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.NDN.NDN.fit": {"tf": 1}, "NDNT.NDN.NDN.eval_models": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}, "NDNT.utils.NDNutils.generate_xv_folds": {"tf": 1.7320508075688772}}, "df": 4}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.utils.DanUtils.binocular_data_import": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.training.lbfgs.polyinterp": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.regularization.InlineReg.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.Tikhanov.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.TikhanovC.compute_reg_penalty": {"tf": 1}}, "df": 3, "d": {"docs": {"NDNT.NDN.NDN.eval_models": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.forward": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.forward": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.forward": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.forward": {"tf": 1}}, "df": 5}, "s": {"docs": {"NDNT.metrics.mse_loss.MseLoss_datafilter.forward": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.forward": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.forward": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.forward": {"tf": 1}}, "df": 4}}}}}}, "s": {"docs": {"NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1}}, "df": 1}}, "l": {"docs": {"NDNT.NDN.NDN.get_weights": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D.forward": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.forward": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.forward": {"tf": 1}, "NDNT.modules.regularization.RegModule.forward": {"tf": 1.4142135623730951}, "NDNT.networks.FFnetwork.get_weights": {"tf": 1}, "NDNT.utils.NDNutils.NpEncoder": {"tf": 1}}, "df": 7, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.modules.regularization.ActivityReg.compute_activity_penalty": {"tf": 1}, "NDNT.training.trainer.Trainer.prepare_fit": {"tf": 1}, "NDNT.training.trainer.Trainer.graceful_exit": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}, "NDNT.utils.NDNutils.CPU_Unpickler.find_class": {"tf": 1}}, "df": 6}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.training.ada_hessian.AdaHessian.step": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.step": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1.4142135623730951}, "NDNT.training.lbfgsnew.LBFGSNew.step": {"tf": 1}}, "df": 4}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"NDNT.training.trainer.Trainer.__init__": {"tf": 1}}, "df": 1, "s": {"docs": {"NDNT.training.trainer.Trainer": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {"NDNT.utils.NDNutils.NpEncoder.default": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.training.trainer.TemperatureCalibratedTrainer": {"tf": 1}}, "df": 1}}}}}}}}}, "n": {"docs": {"NDNT.NDN.NDN.save_model": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.get_weights": {"tf": 1}, "NDNT.modules.regularization.Regularization.set_reg_val": {"tf": 1}, "NDNT.modules.regularization.Regularization.unit_reg_convert": {"tf": 1}, "NDNT.modules.regularization.ConvReg.compute_reg_penalty": {"tf": 1}, "NDNT.networks.FFnetwork.determine_input_dims": {"tf": 1.4142135623730951}, "NDNT.networks.FFnetwork.prepare_regularization": {"tf": 1}, "NDNT.networks.ScaffoldNetwork": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1}, "NDNT.networks.ReadoutNetwork.determine_input_dims": {"tf": 1.4142135623730951}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1}, "NDNT.utils.DanUtils.fold_sample": {"tf": 1}, "NDNT.utils.DanUtils.design_matrix_drift": {"tf": 1}, "NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 1}, "NDNT.utils.NDNutils.load_checkpoint": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_NIM": {"tf": 1}}, "df": 21}, "r": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.regularization.RegModule.forward": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.networks.ScaffoldNetwork": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}}, "df": 4}}, "/": {"docs": {}, "df": 0, "~": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.utils.DanUtils.fold_sample": {"tf": 1}}, "df": 1}}}}}}}, "k": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.NDN.NDN.save_model_zip": {"tf": 1}, "NDNT.NDN.NDN.load_model_zip": {"tf": 1}, "NDNT.utils.NDNutils.save_checkpoint": {"tf": 1}, "NDNT.utils.NDNutils.load_checkpoint": {"tf": 1.4142135623730951}}, "df": 4}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.get_readout_locations": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.tent_basis_generate": {"tf": 1}}, "df": 5}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 4.242640687119285}}, "df": 1, "s": {"docs": {"NDNT.utils.NDNutils.get_max_samples": {"tf": 1.7320508075688772}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.layers.convlayers.ConvLayer": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.layers.convlayers.TconvLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.plot_filters": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.plot_filters": {"tf": 1}}, "df": 6}}}}, "s": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}}, "df": 1}, "w": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.utils.ffnet_dicts.ffnet_dict_external": {"tf": 1.4142135623730951}}, "df": 1}}}}, "f": {"docs": {"NDNT.training.lbfgs.polyinterp": {"tf": 1.7320508075688772}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 2}}, "df": 2, "f": {"docs": {"NDNT.NDN.NDN.assemble_ffnetworks": {"tf": 1.4142135623730951}}, "df": 1, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.NDN.NDN": {"tf": 2}, "NDNT.NDN.NDN.assemble_ffnetworks": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.initialize_biases": {"tf": 1}, "NDNT.NDN.NDN.generate_predictions": {"tf": 1}, "NDNT.NDN.NDN.get_weights": {"tf": 1}, "NDNT.NDN.NDN.list_parameters": {"tf": 1}, "NDNT.NDN.NDN.set_parameters": {"tf": 1}, "NDNT.NDN.NDN.set_reg_val": {"tf": 1}, "NDNT.NDN.NDN.plot_filters": {"tf": 1}, "NDNT.NDN.NDN.save_model_zip": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.get_activations": {"tf": 1.4142135623730951}, "NDNT.networks.FFnetwork": {"tf": 1.4142135623730951}, "NDNT.networks.FFnetwork.determine_input_dims": {"tf": 1.4142135623730951}, "NDNT.networks.FFnetwork.ffnet_dict": {"tf": 1.7320508075688772}, "NDNT.networks.ScaffoldNetwork.ffnet_dict": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d.ffnet_dict": {"tf": 1}, "NDNT.networks.ReadoutNetwork.determine_input_dims": {"tf": 1}, "NDNT.networks.ReadoutNetwork.ffnet_dict": {"tf": 1.4142135623730951}, "NDNT.networks.FFnet_external.ffnet_dict": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 1.7320508075688772}, "NDNT.utils.ffnet_dicts.ffnet_dict_readout": {"tf": 1}}, "df": 21, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"NDNT.NDN.NDN": {"tf": 2}, "NDNT.NDN.NDN.assemble_ffnetworks": {"tf": 1.4142135623730951}, "NDNT.networks.FFnetwork.determine_input_dims": {"tf": 1}, "NDNT.networks.ReadoutNetwork.determine_input_dims": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 2}, "NDNT.utils.ffnet_dicts.ffnet_dict_readout": {"tf": 1}}, "df": 6, "s": {"docs": {"NDNT.NDN.NDN.assemble_ffnetworks": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"NDNT.training.earlystopping.EarlyStopping": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.NDN.NDN": {"tf": 1}, "NDNT.NDN.NDN.assemble_ffnetworks": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.change_loss": {"tf": 1}, "NDNT.NDN.NDN.passive_readout": {"tf": 1.4142135623730951}, "NDNT.modules.activations.Square": {"tf": 1}, "NDNT.modules.activations.Square.forward": {"tf": 1}, "NDNT.modules.activations.AdaptiveELU.__init__": {"tf": 1}, "NDNT.modules.activations.AdaptiveELU.forward": {"tf": 1}, "NDNT.modules.activity_regularization.ActivityRegularization.activity": {"tf": 1}, "NDNT.modules.activity_regularization.ActivityRegularization.nonneg": {"tf": 1}, "NDNT.modules.activity_regularization.ActivityRegularization.regularize": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.dim_info": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.dim_info": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.plot_filters": {"tf": 1}, "NDNT.modules.regularization.RegModule.forward": {"tf": 1}, "NDNT.training.earlystopping.EarlyStopping": {"tf": 1.4142135623730951}, "NDNT.training.lbfgs.polyinterp": {"tf": 1.4142135623730951}, "NDNT.training.lbfgs.LBFGS.step": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 2.8284271247461903}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1.4142135623730951}, "NDNT.utils.DanUtils.time_embedding_simple": {"tf": 1}, "NDNT.utils.DanUtils.design_matrix_drift": {"tf": 1}, "NDNT.utils.NDNutils.CPU_Unpickler.find_class": {"tf": 1}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_maxpenalty_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_localpenalty_matrix": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 1}, "NDNT.utils.plotting.plot_filters_1D": {"tf": 1}, "NDNT.utils.plotting.plot_filters_2D": {"tf": 1}, "NDNT.utils.plotting.plot_filters_ST1D": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 1.4142135623730951}, "NDNT.metrics.mse_loss.MseLoss_datafilter.forward": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_log_epsilon": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.forward": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.forward": {"tf": 1.4142135623730951}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"tf": 1.4142135623730951}, "NDNT.metrics.rmse_loss.RmseLoss.forward": {"tf": 1.4142135623730951}}, "df": 42, "s": {"docs": {"NDNT.modules.layers.bilayers.ChannelConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.__init__": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.__init__": {"tf": 1}, "NDNT.utils.NDNutils.CPU_Unpickler.find_class": {"tf": 1}}, "df": 7}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.networks.ReadoutNetwork": {"tf": 1}}, "df": 1}}}}}}}}}}, "n": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.NDN.NDN.get_dataloaders": {"tf": 1.4142135623730951}, "NDNT.modules.layers.laglayers.LagLayer": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1.4142135623730951}, "NDNT.training.lbfgs.LBFGS": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.__init__": {"tf": 1.4142135623730951}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1.4142135623730951}}, "df": 16, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"NDNT.utils.NDNutils.fit_lbfgs": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.regularization.ConvReg.compute_reg_penalty": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.NDN.NDN": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.assemble_ffnetworks": {"tf": 1}, "NDNT.NDN.NDN.compute_network_outputs": {"tf": 1}, "NDNT.NDN.NDN.training_step": {"tf": 1}, "NDNT.NDN.NDN.validation_step": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.compute_reg_loss": {"tf": 1}, "NDNT.NDN.NDN.get_trainer": {"tf": 2}, "NDNT.NDN.NDN.get_dataloaders": {"tf": 2.449489742783178}, "NDNT.NDN.NDN.get_optimizer": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.prepare_regularization": {"tf": 1}, "NDNT.NDN.NDN.fit": {"tf": 2.449489742783178}, "NDNT.NDN.NDN.fit_dl": {"tf": 2.6457513110645907}, "NDNT.NDN.NDN.initialize_loss": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.compute_average_responses": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.initialize_biases": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.eval_models": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.generate_predictions": {"tf": 2.23606797749979}, "NDNT.NDN.NDN.change_loss": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.get_weights": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.list_parameters": {"tf": 1}, "NDNT.NDN.NDN.set_parameters": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.set_reg_val": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.plot_filters": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchGenerator": {"tf": 1.4142135623730951}, "NDNT.modules.experiment_sampler.ExperimentBatchIterator": {"tf": 1.4142135623730951}, "NDNT.modules.experiment_sampler.ExperimentSampler": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.forward": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.forward": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.forward": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.__init__": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.__init__": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.forward": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1.7320508075688772}, "NDNT.modules.layers.ndnlayer.NDNLayer.reset_parameters": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.initialize_gaussian_envelope": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.forward": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.compute_reg_loss": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.set_parameters": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.set_reg_val": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.forward": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.__init__": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.rotation_matrix_tensor": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.rotation_matrix_tensor": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.get_rot_mat": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.passive_readout": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.reset_parameters2": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.regularization.Regularization": {"tf": 3.1622776601683795}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 2.449489742783178}, "NDNT.modules.regularization.Regularization.set_reg_val": {"tf": 1}, "NDNT.modules.regularization.RegModule": {"tf": 1}, "NDNT.modules.regularization.RegModule.__init__": {"tf": 1}, "NDNT.modules.regularization.RegModule.forward": {"tf": 1}, "NDNT.modules.regularization.LocalityReg": {"tf": 1}, "NDNT.modules.regularization.LocalityReg.__init__": {"tf": 1}, "NDNT.modules.regularization.LocalityReg.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.DiagonalReg": {"tf": 1}, "NDNT.modules.regularization.DiagonalReg.__init__": {"tf": 1}, "NDNT.modules.regularization.InlineReg": {"tf": 1}, "NDNT.modules.regularization.InlineReg.__init__": {"tf": 1}, "NDNT.modules.regularization.InlineReg.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.ConvReg": {"tf": 1}, "NDNT.modules.regularization.ConvReg.__init__": {"tf": 1}, "NDNT.modules.regularization.ConvReg.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.Tikhanov": {"tf": 1}, "NDNT.modules.regularization.Tikhanov.__init__": {"tf": 1}, "NDNT.modules.regularization.Tikhanov.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.TikhanovC": {"tf": 1}, "NDNT.modules.regularization.TikhanovC.__init__": {"tf": 1}, "NDNT.modules.regularization.TikhanovC.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.ActivityReg": {"tf": 1}, "NDNT.modules.regularization.ActivityReg.__init__": {"tf": 1}, "NDNT.modules.regularization.ActivityReg.compute_reg_penalty": {"tf": 1}, "NDNT.networks.FFnetwork": {"tf": 1}, "NDNT.networks.FFnetwork.determine_input_dims": {"tf": 2}, "NDNT.networks.FFnetwork.list_parameters": {"tf": 1.4142135623730951}, "NDNT.networks.FFnetwork.set_parameters": {"tf": 1.7320508075688772}, "NDNT.networks.FFnetwork.set_reg_val": {"tf": 1.7320508075688772}, "NDNT.networks.FFnetwork.plot_filters": {"tf": 1.4142135623730951}, "NDNT.networks.FFnetwork.get_weights": {"tf": 1.4142135623730951}, "NDNT.networks.ScaffoldNetwork": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 2.23606797749979}, "NDNT.networks.ReadoutNetwork.determine_input_dims": {"tf": 2}, "NDNT.networks.FFnet_external.list_params": {"tf": 1.4142135623730951}, "NDNT.networks.FFnet_external.set_params": {"tf": 1.7320508075688772}, "NDNT.training.ada_hessian.AdaHessian": {"tf": 1.7320508075688772}, "NDNT.training.ada_hessian.AdaHessian.set_hessian": {"tf": 1}, "NDNT.training.earlystopping.EarlyStopping": {"tf": 1}, "NDNT.training.lbfgs.LBFGS": {"tf": 2.23606797749979}, "NDNT.training.lbfgs.LBFGS.curvature_update": {"tf": 1.7320508075688772}, "NDNT.training.lbfgs.LBFGS.step": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 3.605551275463989}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1.7320508075688772}, "NDNT.training.trainer.Trainer.fit": {"tf": 1}, "NDNT.training.trainer.Trainer.prepare_fit": {"tf": 1}, "NDNT.training.trainer.Trainer.validate_one_epoch": {"tf": 1}, "NDNT.training.trainer.Trainer.train_one_epoch": {"tf": 1}, "NDNT.training.trainer.Trainer.train_one_step": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.fit": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.train_one_epoch": {"tf": 1}, "NDNT.training.trainer.TemperatureCalibratedTrainer": {"tf": 1}, "NDNT.training.trainer.TemperatureCalibratedTrainer.validate_one_epoch": {"tf": 1}, "NDNT.utils.DanUtils.find_peaks": {"tf": 1}, "NDNT.utils.DanUtils.design_matrix_drift": {"tf": 2}, "NDNT.utils.DanUtils.binocular_data_import": {"tf": 1.4142135623730951}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 2.6457513110645907}, "NDNT.utils.DanUtils.monocular_data_import": {"tf": 1}, "NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1.7320508075688772}, "NDNT.utils.NDNutils.create_time_embedding": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 2}, "NDNT.utils.NDNutils.generate_xv_folds": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.save_checkpoint": {"tf": 1}, "NDNT.utils.NDNutils.get_max_samples": {"tf": 1.7320508075688772}, "NDNT.utils.NDNutils.NpEncoder": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.NpEncoder.default": {"tf": 1.4142135623730951}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_readout": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 1.4142135623730951}, "NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 1.4142135623730951}, "NDNT.metrics.mse_loss.MseLoss_datafilter.forward": {"tf": 1.4142135623730951}, "NDNT.metrics.mse_loss.MseLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.forward": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.unit_loss": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.forward": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.unit_loss": {"tf": 1.4142135623730951}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 1.4142135623730951}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"tf": 1.4142135623730951}, "NDNT.metrics.rmse_loss.RmseLoss.forward": {"tf": 1.4142135623730951}, "NDNT.metrics.rmse_loss.RmseLoss.unit_loss": {"tf": 1}}, "df": 161, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.NDN.NDN.assemble_ffnetworks": {"tf": 1}, "NDNT.NDN.NDN.forward": {"tf": 1.4142135623730951}, "NDNT.modules.activations.Square.forward": {"tf": 1}, "NDNT.modules.activations.AdaptiveELU.forward": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D.forward": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.forward": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.forward": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.forward": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.forward": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.forward": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.forward": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.forward": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.forward": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.forward": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.forward": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.forward": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.forward": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterLayer.forward": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterTlayer.forward": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterSTlayer.forward": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.forward": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.forward": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.forward": {"tf": 1}, "NDNT.modules.regularization.RegModule.forward": {"tf": 1}, "NDNT.modules.regularization.ActivityReg.compute_activity_penalty": {"tf": 1}, "NDNT.networks.FFnetwork.forward": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.forward": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d.forward": {"tf": 1}, "NDNT.networks.FFnet_external.forward": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.forward": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.forward": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.forward": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.unit_loss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.forward": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.unit_loss": {"tf": 1}}, "df": 43, "s": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer.forward": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.forward": {"tf": 1}}, "df": 2}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.NDN.NDN.fit": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.fit_dl": {"tf": 1.4142135623730951}}, "df": 2}}, "m": {"docs": {"NDNT.modules.layers.lvlayers.LVLayer": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1}, "NDNT.training.lbfgs.polyinterp": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1.7320508075688772}, "NDNT.utils.create_reg_matrices.create_maxpenalty_matrix": {"tf": 1.7320508075688772}, "NDNT.utils.create_reg_matrices.create_localpenalty_matrix": {"tf": 1.7320508075688772}}, "df": 6, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.modules.layers.lvlayers.LVLayer": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1}}, "df": 5}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.regularization.RegModule.forward": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.NDN.NDN.eval_models": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1}, "NDNT.networks.FFnetwork.determine_input_dims": {"tf": 1}, "NDNT.networks.ReadoutNetwork.determine_input_dims": {"tf": 1}, "NDNT.utils.NDNutils.NpEncoder": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"tf": 1}}, "df": 9}}}}}}, "d": {"docs": {"NDNT.utils.DanUtils.fold_sample": {"tf": 1}, "NDNT.utils.NDNutils.generate_xv_folds": {"tf": 1.4142135623730951}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.modules.regularization.Regularization.__init__": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1}}, "df": 3}, "r": {"docs": {"NDNT.utils.NDNutils.ensure_dir": {"tf": 1}}, "df": 1}}, "s": {"docs": {"NDNT.utils.NDNutils.generate_xv_folds": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.NDN.NDN.save_model_zip": {"tf": 2}, "NDNT.NDN.NDN.load_model_zip": {"tf": 2}, "NDNT.NDN.NDN.save_model": {"tf": 1}, "NDNT.NDN.NDN.save_model_chk": {"tf": 1.4142135623730951}, "NDNT.utils.DanUtils.matlab_export": {"tf": 1}, "NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 2}, "NDNT.utils.NDNutils.save_checkpoint": {"tf": 1}, "NDNT.utils.NDNutils.load_checkpoint": {"tf": 1.4142135623730951}}, "df": 8, "s": {"docs": {"NDNT.NDN.NDN": {"tf": 1}}, "df": 1}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.NDN.NDN.save_model_zip": {"tf": 1}, "NDNT.NDN.NDN.load_model_zip": {"tf": 1}, "NDNT.NDN.NDN.save_model": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.save_model_chk": {"tf": 1}, "NDNT.NDN.NDN.load_model": {"tf": 1.4142135623730951}, "NDNT.utils.DanUtils.figure_export": {"tf": 1}, "NDNT.utils.NDNutils.load_checkpoint": {"tf": 1}}, "df": 7}}}}}, "t": {"docs": {"NDNT.utils.create_reg_matrices.create_maxpenalty_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_localpenalty_matrix": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.NDN.NDN.assemble_ffnetworks": {"tf": 1}, "NDNT.modules.experiment_sampler.construct_exp_to_time": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D": {"tf": 2}, "NDNT.modules.layers.bilayers.BiSTconv1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.ChannelConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.dim_info": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.ChannelLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.DimSPLayer": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.__init__": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer": {"tf": 2}, "NDNT.modules.layers.laglayers.LagLayer.__init__": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.get_weights": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.dim_info": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.orilayers.OriLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.orilayers.OriLayer.rotation_matrix_tensor": {"tf": 1.4142135623730951}, "NDNT.modules.layers.orilayers.OriConvLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.orilayers.OriConvLayer.rotation_matrix_tensor": {"tf": 1.4142135623730951}, "NDNT.modules.layers.orilayers.ConvLayer3D.__init__": {"tf": 2}, "NDNT.modules.layers.orilayers.ConvLayer3D.layer_dict": {"tf": 2}, "NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.get_weights": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.passive_readout": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterSTlayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.Tlayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.__init__": {"tf": 1}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1}, "NDNT.networks.FFnetwork.determine_input_dims": {"tf": 1}, "NDNT.networks.ScaffoldNetwork": {"tf": 1}, "NDNT.networks.ReadoutNetwork.determine_input_dims": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1}, "NDNT.utils.NDNutils.initialize_gaussian_envelope": {"tf": 1}, "NDNT.utils.NDNutils.get_max_samples": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.unit_loss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.unit_loss": {"tf": 1}}, "df": 72, "s": {"docs": {"NDNT.NDN.NDN.eval_models": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.plot_filters": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.BinocLayer1D.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.BiConvLayer1D": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.BiSTconv1D": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1.7320508075688772}, "NDNT.modules.layers.bilayers.ChannelConvLayer": {"tf": 2}, "NDNT.modules.layers.bilayers.ChannelConvLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.ConvLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.layers.convlayers.TconvLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.layers.convlayers.TconvLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.layers.convlayers.STconvLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.Dim0Layer.dim_info": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.ChannelLayer": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.DimSPLayer": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.DimSPTLayer": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.externallayer.ExternalLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.laglayers.LagLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.laglayers.LagLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.laglayers.LagLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1.7320508075688772}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.layers.ndnlayer.NDNLayer.initialize_gaussian_envelope": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.dim_info": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1.7320508075688772}, "NDNT.modules.layers.normlayers.DivNormLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.orilayers.OriLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.orilayers.OriConvLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.orilayers.ConvLayer3D.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.orilayers.ConvLayer3D.plot_filters": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.ReadoutLayer.passive_readout": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterTlayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterTlayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterSTlayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterSTlayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.Tlayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.Tlayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.Tlayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.OnOffLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.layers.timelayers.TimeLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1.4142135623730951}, "NDNT.networks.FFnetwork.plot_filters": {"tf": 1.4142135623730951}, "NDNT.utils.DanUtils.binocular_data_import": {"tf": 1}, "NDNT.utils.NDNutils.initialize_gaussian_envelope": {"tf": 1.4142135623730951}, "NDNT.utils.ffnet_dicts.layer_dict": {"tf": 1}, "NDNT.utils.plotting.plot_filters_1D": {"tf": 1.4142135623730951}, "NDNT.utils.plotting.plot_filters_2D": {"tf": 1.4142135623730951}, "NDNT.utils.plotting.plot_filters_ST1D": {"tf": 1.4142135623730951}, "NDNT.utils.plotting.plot_filters_ST2D": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.forward": {"tf": 1.4142135623730951}, "NDNT.metrics.mse_loss.MseLoss_datafilter.unit_loss": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.forward": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.unit_loss": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.forward": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.unit_loss": {"tf": 1.4142135623730951}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.forward": {"tf": 1.4142135623730951}, "NDNT.metrics.rmse_loss.RmseLoss.unit_loss": {"tf": 1.4142135623730951}}, "df": 80}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.modules.layers.dimlayers.ChannelLayer": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.modules.layers.externallayer.ExternalLayer": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.__init__": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.NDN.NDN.assemble_ffnetworks": {"tf": 1}, "NDNT.NDN.NDN.save_model": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer": {"tf": 1}, "NDNT.modules.regularization.TikhanovC": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1.4142135623730951}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}}, "df": 9}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 1}}, "df": 4}}}}, "t": {"docs": {"NDNT.NDN.NDN.fit": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.fit_dl": {"tf": 1}, "NDNT.NDN.NDN.change_loss": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.passive_readout": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1}, "NDNT.training.trainer.Trainer.fit": {"tf": 1}, "NDNT.training.trainer.Trainer.prepare_fit": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.fit": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.fit_data_dict": {"tf": 1}, "NDNT.utils.DanUtils.monocular_data_import": {"tf": 1}, "NDNT.utils.NDNutils.get_fit_versions": {"tf": 1}, "NDNT.utils.NDNutils.get_max_samples": {"tf": 1}}, "df": 12, "s": {"docs": {"NDNT.NDN.NDN.fit_dl": {"tf": 1}}, "df": 1}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.modules.layers.ndnlayer.NDNLayer.set_parameters": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.utils.DanUtils.find_peaks": {"tf": 1}, "NDNT.utils.NDNutils.get_fit_versions": {"tf": 1}}, "df": 2, "s": {"docs": {"NDNT.NDN.NDN.passive_readout": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {"NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.networks.ReadoutNetwork": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1.4142135623730951}}, "df": 2}}}, "g": {"docs": {"NDNT.modules.layers.laglayers.LagLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.plot_filters": {"tf": 1}, "NDNT.utils.DanUtils.figure_export": {"tf": 1}}, "df": 3, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.layers.laglayers.LagLayer.plot_filters": {"tf": 1.7320508075688772}, "NDNT.modules.layers.orilayers.ConvLayer3D.plot_filters": {"tf": 1}, "NDNT.utils.DanUtils.figure_export": {"tf": 1}}, "df": 3}}}}, "x": {"docs": {"NDNT.modules.layers.readouts.FixationLayer.__init__": {"tf": 1}, "NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1}}, "df": 1}, "d": {"docs": {"NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.modules.layers.readouts.FixationLayer": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.forward": {"tf": 1}}, "df": 3, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.layers.readouts.FixationLayer": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {"NDNT.modules.layers.readouts.FixationLayer.__init__": {"tf": 2}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.training.lbfgs.LBFGS.step": {"tf": 1}}, "df": 1, "s": {"docs": {"NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.NDN.NDN.get_trainer": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.get_optimizer": {"tf": 1}, "NDNT.NDN.NDN.fit": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.fit_dl": {"tf": 1}, "NDNT.NDN.NDN.eval_models": {"tf": 1.7320508075688772}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1}, "NDNT.training.earlystopping.EarlyStopping": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.curvature_update": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 2.23606797749979}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1.7320508075688772}, "NDNT.training.trainer.Trainer.__init__": {"tf": 1}, "NDNT.utils.DanUtils.figure_export": {"tf": 1}, "NDNT.utils.DanUtils.design_matrix_drift": {"tf": 1}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 1}, "NDNT.utils.NDNutils.NpEncoder": {"tf": 1.4142135623730951}, "NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 1}}, "df": 22}}, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.NDN.NDN.get_dataloaders": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {"NDNT.utils.NDNutils.create_time_embedding": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1}}, "df": 2, "t": {"docs": {"NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1.4142135623730951}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1.4142135623730951}}, "df": 1, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1.7320508075688772}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1.4142135623730951}}, "df": 1}}, "s": {"docs": {"NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.training.trainer.Trainer": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.NDN.NDN.get_trainer": {"tf": 1}, "NDNT.NDN.NDN.get_optimizer": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.get_null_adjusted_ll": {"tf": 1}, "NDNT.modules.activations.adaptive_elu": {"tf": 1.4142135623730951}, "NDNT.modules.activations.AdaptiveELU.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.activity_regularization.ActivityRegularization.activity": {"tf": 1}, "NDNT.modules.activity_regularization.ActivityRegularization.nonneg": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.reset_parameters": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.set_reg_val": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.FixationLayer.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.Regularization.set_reg_val": {"tf": 1}, "NDNT.networks.FFnetwork.set_reg_val": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1.4142135623730951}, "NDNT.training.ada_hessian.AdaHessian": {"tf": 2.449489742783178}, "NDNT.training.earlystopping.EarlyStopping": {"tf": 1}, "NDNT.training.lbfgs.polyinterp": {"tf": 2}, "NDNT.training.lbfgs.LBFGS": {"tf": 1.4142135623730951}, "NDNT.training.lbfgs.LBFGS.curvature_update": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1.4142135623730951}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 2.449489742783178}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1.7320508075688772}, "NDNT.utils.NDNutils.NpEncoder": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_log_epsilon": {"tf": 1}}, "df": 27, "s": {"docs": {"NDNT.modules.layers.ndnlayer.NDNLayer.reset_parameters": {"tf": 1}, "NDNT.modules.regularization.Regularization": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_log_epsilon": {"tf": 1.4142135623730951}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.training.lbfgs.LBFGS.curvature_update": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 3}}, "df": 2, "s": {"docs": {"NDNT.NDN.NDN.initialize_loss": {"tf": 1.4142135623730951}, "NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"tf": 1}}, "df": 5}}, "t": {"docs": {"NDNT.training.lbfgs.LBFGS.curvature_update": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.curvature_update": {"tf": 1}}, "df": 2}}, "s": {"docs": {"NDNT.utils.DanUtils.time_embedding_simple": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"NDNT.NDN.NDN.fit": {"tf": 1}, "NDNT.NDN.NDN.fit_dl": {"tf": 1}, "NDNT.NDN.NDN.generate_predictions": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.load_model_zip": {"tf": 1}, "NDNT.NDN.NDN.get_null_adjusted_ll": {"tf": 1}, "NDNT.NDN.NDN.get_activations": {"tf": 1}, "NDNT.NDN.NDN.load_model": {"tf": 1}, "NDNT.NDN.NDN.load_model_chk": {"tf": 1.4142135623730951}, "NDNT.modules.experiment_sampler.ExperimentBatchGenerator": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchIterator": {"tf": 1}, "NDNT.modules.experiment_sampler.construct_exp_to_time": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.BinocLayer1D": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 2}, "NDNT.modules.layers.readouts.ReadoutLayer.forward": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.forward": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.forward": {"tf": 1}, "NDNT.modules.regularization.Regularization": {"tf": 1}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1}, "NDNT.modules.regularization.ActivityReg.compute_activity_penalty": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1}, "NDNT.networks.FFnet_external": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1.4142135623730951}, "NDNT.utils.DanUtils.monocular_data_import": {"tf": 1}, "NDNT.utils.NDNutils.CPU_Unpickler.find_class": {"tf": 1}, "NDNT.utils.NDNutils.generate_xv_folds": {"tf": 1}, "NDNT.utils.NDNutils.save_checkpoint": {"tf": 1}, "NDNT.utils.NDNutils.load_checkpoint": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.ensure_dir": {"tf": 1}, "NDNT.utils.NDNutils.get_max_samples": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_maxpenalty_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_localpenalty_matrix": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 1}, "NDNT.utils.plotting.plot_filters_ST2D": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"tf": 1}}, "df": 47}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.utils.NDNutils.generate_xv_folds": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.utils.NDNutils.get_max_samples": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.NDN.NDN.initialize_biases": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.generate_predictions": {"tf": 1}, "NDNT.NDN.NDN.get_weights": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.list_parameters": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.set_parameters": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.set_reg_val": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.plot_filters": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.save_model_zip": {"tf": 1.4142135623730951}, "NDNT.networks.FFnetwork": {"tf": 1.4142135623730951}, "NDNT.networks.FFnetwork.determine_input_dims": {"tf": 1}, "NDNT.networks.FFnetwork.ffnet_dict": {"tf": 2}, "NDNT.networks.ReadoutNetwork.ffnet_dict": {"tf": 1}}, "df": 12}}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.networks.ReadoutNetwork": {"tf": 1}}, "df": 1, "s": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer.get_weights": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1}}, "df": 2}}}}}}}, "n": {"docs": {"NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1.7320508075688772}}, "df": 1}}, "l": {"1": {"docs": {"NDNT.modules.layers.specialtylayers.L1convLayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.__init__": {"tf": 1}}, "df": 2, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.layers.specialtylayers.L1convLayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.reset_parameters2": {"tf": 1}}, "df": 3}}}}}}}}}}, "2": {"docs": {"NDNT.training.ada_hessian.AdaHessian": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_maxpenalty_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_localpenalty_matrix": {"tf": 1}}, "df": 4}, "docs": {"NDNT.modules.layers.dimlayers.Dim0Layer.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.ChannelLayer.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.DimSPLayer.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.DimSPTLayer.forward": {"tf": 1.4142135623730951}, "NDNT.training.lbfgs.LBFGS": {"tf": 2.449489742783178}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1}, "NDNT.utils.NDNutils.pixel2grid": {"tf": 1}}, "df": 10, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.NDN.NDN": {"tf": 3.3166247903554}, "NDNT.NDN.NDN.assemble_ffnetworks": {"tf": 2.6457513110645907}, "NDNT.NDN.NDN.compute_network_outputs": {"tf": 1}, "NDNT.NDN.NDN.forward": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.get_dataloaders": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.fit": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.eval_models": {"tf": 1}, "NDNT.NDN.NDN.get_weights": {"tf": 1}, "NDNT.NDN.NDN.get_readout_locations": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.list_parameters": {"tf": 1}, "NDNT.NDN.NDN.save_model_zip": {"tf": 1.4142135623730951}, "NDNT.modules.experiment_sampler.ExperimentBatchGenerator": {"tf": 1.4142135623730951}, "NDNT.modules.experiment_sampler.ExperimentBatchIterator": {"tf": 1.4142135623730951}, "NDNT.modules.experiment_sampler.construct_exp_to_time": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.BiSTconv1D.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.ChannelConvLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.ConvLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.dim_info": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.__init__": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.laglayers.LagLayer": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.__init__": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.plot_filters": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.reset_parameters": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.dim_info": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.orilayers.OriLayer.rotation_matrix_tensor": {"tf": 1.7320508075688772}, "NDNT.modules.layers.orilayers.OriLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.rotation_matrix_tensor": {"tf": 1.7320508075688772}, "NDNT.modules.layers.orilayers.OriConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.ReadoutLayer.get_readout_locations": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterTlayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterSTlayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.Tlayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.Regularization": {"tf": 1}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1}, "NDNT.networks.FFnetwork": {"tf": 3.7416573867739413}, "NDNT.networks.FFnetwork.determine_input_dims": {"tf": 2.23606797749979}, "NDNT.networks.FFnetwork.preprocess_input": {"tf": 1}, "NDNT.networks.FFnetwork.forward": {"tf": 1}, "NDNT.networks.FFnetwork.list_parameters": {"tf": 1}, "NDNT.networks.FFnetwork.ffnet_dict": {"tf": 2.6457513110645907}, "NDNT.networks.ScaffoldNetwork": {"tf": 1.4142135623730951}, "NDNT.networks.ScaffoldNetwork.forward": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.ffnet_dict": {"tf": 1.4142135623730951}, "NDNT.networks.ScaffoldNetwork3d.forward": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1}, "NDNT.networks.ReadoutNetwork.determine_input_dims": {"tf": 2.23606797749979}, "NDNT.networks.ReadoutNetwork.forward": {"tf": 1}, "NDNT.networks.FFnet_external": {"tf": 1.4142135623730951}, "NDNT.networks.FFnet_external.forward": {"tf": 1}, "NDNT.networks.FFnet_external.list_params": {"tf": 1}, "NDNT.utils.DanUtils.figure_export": {"tf": 1}, "NDNT.utils.DanUtils.matlab_export": {"tf": 1}, "NDNT.utils.DanUtils.design_matrix_drift": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 1}, "NDNT.utils.NDNutils.tent_basis_generate": {"tf": 1}, "NDNT.utils.NDNutils.NpEncoder": {"tf": 1}, "NDNT.utils.NDNutils.NpEncoder.default": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1.4142135623730951}, "NDNT.utils.create_reg_matrices.create_maxpenalty_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_localpenalty_matrix": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 1.7320508075688772}, "NDNT.utils.ffnet_dicts.ffnet_dict_NIM": {"tf": 1}}, "df": 96, "s": {"docs": {"NDNT.modules.layers.bilayers.BinocLayer1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.layer_dict": {"tf": 1}, "NDNT.networks.FFnetwork.list_parameters": {"tf": 1}, "NDNT.networks.FFnet_external.list_params": {"tf": 1}}, "df": 28}, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.networks.FFnetwork.set_parameters": {"tf": 1}, "NDNT.networks.FFnetwork.set_reg_val": {"tf": 1}, "NDNT.networks.FFnetwork.plot_filters": {"tf": 1}, "NDNT.networks.FFnet_external.set_params": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_readout": {"tf": 1}}, "df": 6}}, "/": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1}}, "df": 1}}}}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.layers.dimlayers.ChannelLayer": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1}, "NDNT.utils.NDNutils.NpEncoder.default": {"tf": 1}}, "df": 4, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.NDN.NDN.eval_models": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.get_null_adjusted_ll": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.forward": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.forward": {"tf": 1}}, "df": 4}}}}}}}}, "n": {"docs": {"NDNT.modules.layers.bilayers.BiConvLayer1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1}}, "df": 10, "e": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 2.23606797749979}, "NDNT.training.lbfgs.LBFGS.line_search": {"tf": 2.23606797749979}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 2}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 4.795831523312719}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 2}, "NDNT.utils.MattUtils.smooth_ema": {"tf": 1}}, "df": 6, "a": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.activations.adaptive_elu": {"tf": 1}, "NDNT.modules.activations.AdaptiveELU": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1}}, "df": 3, "l": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.modules.layers.lvlayers.LVLayer": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}}, "df": 1}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.NDN.NDN": {"tf": 2}, "NDNT.NDN.NDN.initialize_biases": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.get_weights": {"tf": 1}, "NDNT.NDN.NDN.passive_readout": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.list_parameters": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.set_parameters": {"tf": 2}, "NDNT.NDN.NDN.set_reg_val": {"tf": 2}, "NDNT.NDN.NDN.save_model_zip": {"tf": 1}, "NDNT.NDN.NDN.get_activations": {"tf": 2.23606797749979}, "NDNT.modules.activity_regularization.ActivityRegularization.activity": {"tf": 1.4142135623730951}, "NDNT.modules.activity_regularization.ActivityRegularization.nonneg": {"tf": 1.4142135623730951}, "NDNT.modules.activity_regularization.ActivityRegularization.regularize": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.BinocLayer1D.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.BiConvLayer1D.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 2}, "NDNT.modules.layers.bilayers.ChannelConvLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.ChannelConvLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.ConvLayer": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.ConvLayer.batchnorm_convert": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.ConvLayer.forward": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.TconvLayer.forward": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.STconvLayer": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.STconvLayer.forward": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.Dim0Layer.dim_info": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.ChannelLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.DimSPLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.DimSPTLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.externallayer.ExternalLayer": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.__init__": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.__init__": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.forward": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.layer_dict": {"tf": 1.7320508075688772}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1.7320508075688772}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.reset_parameters": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.forward": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.compute_reg_loss": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.get_weights": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.set_parameters": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.dim_info": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 2}, "NDNT.modules.layers.normlayers.DivNormLayer.__init__": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.forward": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.__init__": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.forward": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.orilayers.OriConvLayer": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.forward": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.orilayers.ConvLayer3D": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.__init__": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.forward": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.get_weights": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.ReadoutLayer.layer_dict": {"tf": 1.7320508075688772}, "NDNT.modules.layers.readouts.ReadoutLayer3d.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.layer_dict": {"tf": 1.7320508075688772}, "NDNT.modules.layers.readouts.FixationLayer.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.initialize": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 1.7320508075688772}, "NDNT.modules.layers.reslayers.IterLayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 2.449489742783178}, "NDNT.modules.layers.reslayers.IterTlayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 2.23606797749979}, "NDNT.modules.layers.reslayers.IterSTlayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 2.23606797749979}, "NDNT.modules.layers.specialtylayers.Tlayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.layers.specialtylayers.Tlayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.L1convLayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.OnOffLayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.OnOffLayer.layer_dict": {"tf": 1.7320508075688772}, "NDNT.modules.layers.specialtylayers.MaskLayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.layer_dict": {"tf": 1.7320508075688772}, "NDNT.modules.layers.timelayers.TimeLayer": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.__init__": {"tf": 1}, "NDNT.modules.regularization.Regularization": {"tf": 2}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1}, "NDNT.modules.regularization.ActivityReg.compute_activity_penalty": {"tf": 1}, "NDNT.networks.FFnetwork": {"tf": 1.7320508075688772}, "NDNT.networks.FFnetwork.determine_input_dims": {"tf": 1}, "NDNT.networks.FFnetwork.list_parameters": {"tf": 1.7320508075688772}, "NDNT.networks.FFnetwork.set_parameters": {"tf": 2}, "NDNT.networks.FFnetwork.set_reg_val": {"tf": 2}, "NDNT.networks.FFnetwork.plot_filters": {"tf": 1.7320508075688772}, "NDNT.networks.FFnetwork.get_weights": {"tf": 2.23606797749979}, "NDNT.networks.FFnetwork.ffnet_dict": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1}, "NDNT.networks.ReadoutNetwork.determine_input_dims": {"tf": 1}, "NDNT.networks.ReadoutNetwork.forward": {"tf": 1}, "NDNT.networks.FFnet_external.list_params": {"tf": 1.7320508075688772}, "NDNT.networks.FFnet_external.set_params": {"tf": 2}, "NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_NIM": {"tf": 1}}, "df": 116, "s": {"docs": {"NDNT.NDN.NDN": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1}, "NDNT.networks.FFnetwork": {"tf": 1}, "NDNT.networks.FFnetwork.preprocess_input": {"tf": 1}, "NDNT.networks.FFnetwork.set_parameters": {"tf": 1}, "NDNT.networks.FFnetwork.set_reg_val": {"tf": 1}, "NDNT.networks.FFnetwork.ffnet_dict": {"tf": 1}, "NDNT.networks.ScaffoldNetwork": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.forward": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d.forward": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1}, "NDNT.networks.FFnet_external.forward": {"tf": 1}, "NDNT.networks.FFnet_external.set_params": {"tf": 1}}, "df": 14}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.NDN.NDN": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterTlayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterSTlayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1}, "NDNT.training.earlystopping.EarlyStopping": {"tf": 1}, "NDNT.training.lbfgs.polyinterp": {"tf": 1}, "NDNT.training.lbfgs.LBFGS": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding": {"tf": 1}}, "df": 13}}, "g": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.NDN.NDN.generate_predictions": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.BinocLayer1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D.forward": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.forward": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.forward": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.dim_info": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.__init__": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.laglayers.LagLayer": {"tf": 2.449489742783178}, "NDNT.modules.layers.laglayers.LagLayer.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.layers.laglayers.LagLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.ReadoutLayer3d.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterSTlayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.Tlayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.Tlayer.__init__": {"tf": 2}, "NDNT.modules.layers.specialtylayers.OnOffLayer.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.layers.specialtylayers.OnOffLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1.4142135623730951}, "NDNT.networks.FFnetwork.ffnet_dict": {"tf": 1.4142135623730951}, "NDNT.networks.ScaffoldNetwork": {"tf": 1.4142135623730951}, "NDNT.networks.ScaffoldNetwork.ffnet_dict": {"tf": 1.4142135623730951}, "NDNT.networks.ScaffoldNetwork3d": {"tf": 1.4142135623730951}, "NDNT.utils.DanUtils.monocular_data_import": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding": {"tf": 2}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1.7320508075688772}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_maxpenalty_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_localpenalty_matrix": {"tf": 1}, "NDNT.utils.ffnet_dicts.layer_dict": {"tf": 1}}, "df": 50}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.modules.layers.lvlayers.LVLayer.__init__": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1}}, "df": 3}, "c": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.utils.DanUtils.binocular_data_import": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}}, "df": 2}}}, "r": {"docs": {"NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.regularization.RegModule.forward": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.modules.regularization.ConvReg.compute_reg_penalty": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}}, "df": 1}}}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.NDN.NDN": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.assemble_ffnetworks": {"tf": 1}, "NDNT.NDN.NDN.training_step": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.compute_reg_loss": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.initialize_loss": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.change_loss": {"tf": 2.449489742783178}, "NDNT.NDN.NDN.save_model_zip": {"tf": 1.4142135623730951}, "NDNT.modules.activity_regularization.ActivityRegularization.activity": {"tf": 1.4142135623730951}, "NDNT.modules.activity_regularization.ActivityRegularization.nonneg": {"tf": 1.4142135623730951}, "NDNT.modules.activity_regularization.ActivityRegularization.regularize": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.compute_reg_loss": {"tf": 1.7320508075688772}, "NDNT.modules.regularization.DiagonalReg.compute_reg_penalty": {"tf": 1}, "NDNT.networks.FFnetwork.compute_reg_loss": {"tf": 1.4142135623730951}, "NDNT.networks.FFnet_external.compute_reg_loss": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.step": {"tf": 1}, "NDNT.training.earlystopping.EarlyStopping": {"tf": 1.7320508075688772}, "NDNT.training.lbfgs.LBFGS.step": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 2}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 2}, "NDNT.training.lbfgsnew.LBFGSNew.step": {"tf": 1}, "NDNT.training.trainer.Trainer.validate_one_epoch": {"tf": 1}, "NDNT.training.trainer.Trainer.train_one_epoch": {"tf": 1}, "NDNT.training.trainer.Trainer.train_one_step": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.train_one_epoch": {"tf": 1}, "NDNT.training.trainer.TemperatureCalibratedTrainer.validate_one_epoch": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 1.4142135623730951}, "NDNT.metrics.mse_loss.MseLoss_datafilter.forward": {"tf": 2.23606797749979}, "NDNT.metrics.mse_loss.MseLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_log_epsilon": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.forward": {"tf": 2.23606797749979}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.forward": {"tf": 2.23606797749979}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.unit_loss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"tf": 1.4142135623730951}, "NDNT.metrics.rmse_loss.RmseLoss.forward": {"tf": 2.23606797749979}, "NDNT.metrics.rmse_loss.RmseLoss.unit_loss": {"tf": 1}}, "df": 43, "e": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.NDN.NDN.validation_step": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.NDN.NDN.load_model_zip": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.load_model": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.load_model_chk": {"tf": 1}, "NDNT.utils.NDNutils.load_checkpoint": {"tf": 1.4142135623730951}}, "df": 4, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.NDN.NDN.get_dataloaders": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.fit_dl": {"tf": 1}, "NDNT.NDN.NDN.eval_models": {"tf": 1.4142135623730951}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.NDN.NDN.get_dataloaders": {"tf": 1.7320508075688772}, "NDNT.training.trainer.Trainer.fit": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer.fit_loop": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer.validate_one_epoch": {"tf": 1}, "NDNT.training.trainer.Trainer.train_one_epoch": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.fit": {"tf": 1.4142135623730951}, "NDNT.training.trainer.LBFGSTrainer.train_one_epoch": {"tf": 1}, "NDNT.training.trainer.TemperatureCalibratedTrainer.validate_one_epoch": {"tf": 1}}, "df": 8, "s": {"docs": {"NDNT.NDN.NDN.fit_dl": {"tf": 1.4142135623730951}}, "df": 1}}, "d": {"docs": {"NDNT.NDN.NDN.load_model_zip": {"tf": 1}, "NDNT.NDN.NDN.load_model": {"tf": 1}, "NDNT.NDN.NDN.load_model_chk": {"tf": 1}}, "df": 3}}, "s": {"docs": {"NDNT.utils.NDNutils.load_checkpoint": {"tf": 1.4142135623730951}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {"NDNT.NDN.NDN.fit": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.fit_dl": {"tf": 1.4142135623730951}, "NDNT.training.lbfgs.LBFGS.two_loop_recursion": {"tf": 1.4142135623730951}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1}, "NDNT.training.trainer.Trainer.prepare_fit": {"tf": 1}, "NDNT.training.trainer.Trainer.fit_loop": {"tf": 1}}, "df": 6}}, "g": {"docs": {"NDNT.NDN.NDN.eval_models": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.get_null_adjusted_ll": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.forward": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.forward": {"tf": 1}}, "df": 4, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "m": {"docs": {"NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_log_epsilon": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer.forward": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.get_readout_locations": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.forward": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.forward": {"tf": 1}, "NDNT.utils.NDNutils.load_checkpoint": {"tf": 1}}, "df": 5, "s": {"docs": {"NDNT.NDN.NDN.get_readout_locations": {"tf": 1.7320508075688772}, "NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.set_readout_locations": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.get_readout_locations": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.__init__": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1}, "NDNT.networks.ReadoutNetwork.get_readout_locations": {"tf": 1.4142135623730951}, "NDNT.networks.ReadoutNetwork.set_readout_locations": {"tf": 1.4142135623730951}}, "df": 9}}}}}, "l": {"docs": {"NDNT.utils.DanUtils.binocular_data_import": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.modules.regularization.LocalityReg": {"tf": 1}, "NDNT.modules.regularization.LocalityReg.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.ActivityReg.compute_reg_penalty": {"tf": 1}}, "df": 3, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.modules.regularization.LocalityReg.__init__": {"tf": 1}, "NDNT.modules.regularization.ActivityReg.__init__": {"tf": 1}}, "df": 2}}}}}}}}, "s": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer.set_readout_locations": {"tf": 1}, "NDNT.networks.ReadoutNetwork.set_readout_locations": {"tf": 1}}, "df": 2}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.training.earlystopping.EarlyStopping": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1.4142135623730951}}, "df": 2}}}, "r": {"docs": {"NDNT.NDN.NDN.get_trainer": {"tf": 1}, "NDNT.NDN.NDN.fit": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian": {"tf": 1}, "NDNT.training.lbfgs.LBFGS": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1}}, "df": 6, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.NDN.NDN.get_trainer": {"tf": 1}, "NDNT.NDN.NDN.fit": {"tf": 1}}, "df": 2}}}}}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.NDN.NDN.get_trainer": {"tf": 1}, "NDNT.NDN.NDN.get_optimizer": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.fit": {"tf": 1}, "NDNT.NDN.NDN.fit_dl": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian": {"tf": 1.4142135623730951}, "NDNT.training.lbfgs.LBFGS": {"tf": 2}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1}, "NDNT.training.trainer.Trainer.__init__": {"tf": 1}}, "df": 9}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.networks.ReadoutNetwork": {"tf": 1}}, "df": 1}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.networks.ScaffoldNetwork": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1}}, "df": 3}}}, "e": {"docs": {"NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_log_epsilon": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.layers.laglayers.LagLayer": {"tf": 1}, "NDNT.modules.regularization.Regularization.set_reg_val": {"tf": 1}, "NDNT.modules.regularization.ConvReg.compute_reg_penalty": {"tf": 1}}, "df": 3}}, "f": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.modules.layers.laglayers.LagLayer": {"tf": 1}, "NDNT.networks.ScaffoldNetwork": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1}, "NDNT.utils.DanUtils.design_matrix_drift": {"tf": 2}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 2}}, "df": 6}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.networks.ScaffoldNetwork": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1}}, "df": 3, "s": {"docs": {"NDNT.networks.FFnetwork": {"tf": 1.4142135623730951}, "NDNT.networks.FFnetwork.ffnet_dict": {"tf": 1.4142135623730951}, "NDNT.networks.ScaffoldNetwork": {"tf": 1.7320508075688772}, "NDNT.networks.ScaffoldNetwork.ffnet_dict": {"tf": 1.7320508075688772}, "NDNT.networks.ScaffoldNetwork3d": {"tf": 1}}, "df": 5}}}}, "t": {"docs": {"NDNT.utils.NDNutils.NpEncoder.default": {"tf": 1}}, "df": 1, "s": {"docs": {"NDNT.networks.FFnet_external": {"tf": 1}}, "df": 1}}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"NDNT.utils.DanUtils.design_matrix_drift": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"tf": 1}}, "df": 4}}}}}, "b": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.NDN.NDN.get_optimizer": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.fit_dl": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer": {"tf": 1}, "NDNT.utils.NDNutils.fit_lbfgs": {"tf": 1}, "NDNT.utils.NDNutils.get_max_samples": {"tf": 1}}, "df": 6, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "t": {"docs": {"NDNT.modules.layers.convlayers.TconvLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.STconvLayer": {"tf": 1.4142135623730951}, "NDNT.networks.ReadoutNetwork": {"tf": 1}}, "df": 3}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.modules.layers.laglayers.LagLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.layer_dict": {"tf": 1}}, "df": 12}}}}, "v": {"1": {"docs": {"NDNT.modules.layers.lvlayers.LVLayer.forward": {"tf": 1}}, "df": 1}, "docs": {"NDNT.modules.layers.lvlayers.LVLayer": {"tf": 1.7320508075688772}, "NDNT.modules.layers.lvlayers.LVLayer.forward": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1}}, "df": 3, "s": {"docs": {"NDNT.modules.layers.lvlayers.LVLayer": {"tf": 1.7320508075688772}, "NDNT.modules.layers.lvlayers.LVLayer.__init__": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.__init__": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1}}, "df": 7}}, "n": {"docs": {"NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1}}, "df": 2}, "s": {"docs": {"NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 2.6457513110645907}}, "df": 1}, "l": {"docs": {"NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 1}}, "df": 4, "/": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "k": {"docs": {"NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 1}}, "df": 4}}}}}}, "s": {"docs": {"NDNT.NDN.NDN": {"tf": 1.4142135623730951}, "NDNT.modules.layers.laglayers.LagLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.plot_filters": {"tf": 1}, "NDNT.training.lbfgs.LBFGS": {"tf": 2}, "NDNT.utils.DanUtils.design_matrix_drift": {"tf": 1.7320508075688772}, "NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 2}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1.4142135623730951}}, "df": 8, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.NDN.NDN": {"tf": 1}, "NDNT.NDN.NDN.training_step": {"tf": 1}, "NDNT.NDN.NDN.eval_models": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchGenerator": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.training.ada_hessian.AdaHessian.step": {"tf": 1}, "NDNT.training.lbfgs.LBFGS": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.step": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1.4142135623730951}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew.step": {"tf": 1}, "NDNT.utils.DanUtils.design_matrix_drift": {"tf": 1}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 1}}, "df": 14, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.utils.NDNutils.initialize_gaussian_envelope": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.regularization.RegModule.forward": {"tf": 1}}, "df": 1}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.NDN.NDN.get_dataloaders": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.get_optimizer": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.fit": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.fit_dl": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.initialize_loss": {"tf": 2.23606797749979}, "NDNT.NDN.NDN.eval_models": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.generate_predictions": {"tf": 1.4142135623730951}, "NDNT.modules.experiment_sampler.ExperimentBatchGenerator": {"tf": 1.4142135623730951}, "NDNT.modules.experiment_sampler.ExperimentSampler": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.BiSTconv1D": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.dim_info": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.dim_info": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.orilayers.OriConvLayer.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.orilayers.ConvLayer3D.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.Regularization": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1}, "NDNT.training.lbfgs.LBFGS": {"tf": 1.4142135623730951}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1.4142135623730951}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 2.8284271247461903}, "NDNT.utils.NDNutils.create_time_embedding": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1}, "NDNT.utils.NDNutils.get_max_samples": {"tf": 1.4142135623730951}, "NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 2.23606797749979}, "NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 2.449489742783178}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 2.23606797749979}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 2.6457513110645907}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 2.23606797749979}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"tf": 2.6457513110645907}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 2.23606797749979}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"tf": 2.449489742783178}}, "df": 34, "s": {"docs": {"NDNT.modules.experiment_sampler.ExperimentBatchIterator": {"tf": 1.4142135623730951}}, "df": 1}}}, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"NDNT.modules.layers.lvlayers.LVLayerOLD.__init__": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1.7320508075688772}, "NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.initialize_spatial_mapping": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.ReadoutLayer.get_readout_locations": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.__init__": {"tf": 2}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 2}}, "df": 9, "s": {"docs": {"NDNT.NDN.NDN.get_readout_locations": {"tf": 1.7320508075688772}, "NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.get_readout_locations": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.FixationLayer.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 1}}, "df": 6}}, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.modules.layers.bilayers.BiConvLayer1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1}}, "df": 10}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.modules.regularization.Regularization": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"NDNT.utils.DanUtils.time_embedding_simple": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.modules.regularization.ConvReg.compute_reg_penalty": {"tf": 1}}, "df": 1}}}, "y": {"docs": {"NDNT.utils.ffnet_dicts.ffnet_dict_external": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.utils.NDNutils.create_time_embedding": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.modules.regularization.RegModule.forward": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}}, "df": 1}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.utils.DanUtils.design_matrix_drift": {"tf": 1}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 1}}, "df": 2}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.NDN.NDN": {"tf": 1}, "NDNT.NDN.NDN.assemble_ffnetworks": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.get_trainer": {"tf": 1}, "NDNT.NDN.NDN.fit": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.compute_average_responses": {"tf": 1}, "NDNT.NDN.NDN.initialize_biases": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.get_weights": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.list_parameters": {"tf": 1}, "NDNT.NDN.NDN.set_parameters": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.set_reg_val": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.plot_filters": {"tf": 1}, "NDNT.NDN.NDN.get_activations": {"tf": 1}, "NDNT.modules.activations.adaptive_elu": {"tf": 1}, "NDNT.modules.activations.AdaptiveELU": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.__init__": {"tf": 1}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1.4142135623730951}, "NDNT.networks.FFnetwork.get_weights": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.step": {"tf": 1}, "NDNT.utils.NDNutils.CPU_Unpickler.find_class": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_readout": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_external": {"tf": 1}}, "df": 26}, "s": {"docs": {"NDNT.modules.layers.convlayers.STconvLayer": {"tf": 1}, "NDNT.utils.NDNutils.save_checkpoint": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 1}}, "df": 3}}, "c": {"docs": {"NDNT.NDN.NDN.save_model_chk": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.layer_dict": {"tf": 1}, "NDNT.utils.NDNutils.load_checkpoint": {"tf": 1}}, "df": 28, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.modules.layers.lvlayers.LVLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1}}, "df": 2}}}}}}, "y": {"docs": {"NDNT.modules.layers.bilayers.BinocLayer1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.layer_dict": {"tf": 1}, "NDNT.utils.NDNutils.tent_basis_generate": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_maxpenalty_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_localpenalty_matrix": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 1}}, "df": 33, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.NDN.NDN": {"tf": 1}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1.4142135623730951}, "NDNT.utils.create_reg_matrices.create_maxpenalty_matrix": {"tf": 1.4142135623730951}, "NDNT.utils.create_reg_matrices.create_localpenalty_matrix": {"tf": 1.4142135623730951}, "NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 1}}, "df": 6}}}}}}, "k": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.NDN.NDN.fit": {"tf": 1}, "NDNT.NDN.NDN.eval_models": {"tf": 1}}, "df": 2, "x": {"docs": {}, "df": 0, "v": {"docs": {"NDNT.NDN.NDN.fit": {"tf": 1}, "NDNT.NDN.NDN.eval_models": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.NDN.NDN.eval_models": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.modules.layers.bilayers.BinocLayer1D": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.DimSPLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.__init__": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.initialize_gaussian_envelope": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.networks.ScaffoldNetwork": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1.4142135623730951}}, "df": 15}}, "o": {"docs": {"NDNT.modules.layers.convlayers.STconvLayer": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.modules.layers.laglayers.LagLayer": {"tf": 1.7320508075688772}, "NDNT.modules.layers.laglayers.LagLayer.__init__": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.layer_dict": {"tf": 1}, "NDNT.utils.plotting.plot_filters_1D": {"tf": 1}, "NDNT.utils.plotting.plot_filters_2D": {"tf": 1}, "NDNT.utils.plotting.plot_filters_ST1D": {"tf": 1}}, "df": 13}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "e": {"1": {"docs": {"NDNT.utils.ffnet_dicts.layer_dict": {"tf": 1}}, "df": 1}, "2": {"docs": {"NDNT.utils.ffnet_dicts.layer_dict": {"tf": 1}}, "df": 1}, "docs": {"NDNT.modules.layers.bilayers.BinocLayer1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.__init__": {"tf": 1}, "NDNT.utils.NDNutils.tent_basis_generate": {"tf": 1.4142135623730951}, "NDNT.utils.create_reg_matrices.create_maxpenalty_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_localpenalty_matrix": {"tf": 1}}, "df": 7}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.modules.layers.bilayers.ChannelConvLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.Tlayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.OnOffLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.create_time_embedding": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1}}, "df": 6}}}}, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"tf": 1}}, "df": 8}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.NDN.NDN": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.get_trainer": {"tf": 2.23606797749979}, "NDNT.NDN.NDN.get_optimizer": {"tf": 1}, "NDNT.NDN.NDN.fit": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.fit_dl": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.model_string": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.layers.bilayers.BiSTconv1D.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 2}, "NDNT.modules.layers.bilayers.ChannelConvLayer": {"tf": 1.7320508075688772}, "NDNT.modules.layers.convlayers.ConvLayer": {"tf": 1.7320508075688772}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.layers.convlayers.TconvLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.layers.convlayers.STconvLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer": {"tf": 1.7320508075688772}, "NDNT.modules.layers.laglayers.LagLayer.plot_filters": {"tf": 1.4142135623730951}, "NDNT.modules.layers.lvlayers.LVLayer.__init__": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1.7320508075688772}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.layers.ndnlayer.NDNLayer.reset_parameters": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.set_reg_val": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 2}, "NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.ReadoutLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer": {"tf": 1.7320508075688772}, "NDNT.modules.layers.reslayers.IterTlayer": {"tf": 1.7320508075688772}, "NDNT.modules.layers.reslayers.IterSTlayer": {"tf": 1.7320508075688772}, "NDNT.modules.layers.specialtylayers.Tlayer": {"tf": 1.7320508075688772}, "NDNT.modules.layers.specialtylayers.Tlayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.plot_filters": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.L1convLayer.reset_parameters2": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.OnOffLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 2}, "NDNT.modules.regularization.Regularization.set_reg_val": {"tf": 1}, "NDNT.networks.FFnetwork": {"tf": 1.4142135623730951}, "NDNT.networks.FFnetwork.determine_input_dims": {"tf": 1}, "NDNT.networks.FFnetwork.prepare_regularization": {"tf": 1}, "NDNT.networks.FFnetwork.set_parameters": {"tf": 1}, "NDNT.networks.FFnetwork.set_reg_val": {"tf": 1}, "NDNT.networks.FFnetwork.ffnet_dict": {"tf": 1.4142135623730951}, "NDNT.networks.ReadoutNetwork": {"tf": 1}, "NDNT.networks.FFnet_external": {"tf": 1}, "NDNT.networks.FFnet_external.set_params": {"tf": 1}, "NDNT.training.lbfgs.LBFGS": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.line_search": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1}, "NDNT.training.trainer.Trainer.__init__": {"tf": 1}, "NDNT.utils.NDNutils.CPU_Unpickler.find_class": {"tf": 1}, "NDNT.utils.NDNutils.save_checkpoint": {"tf": 1}, "NDNT.utils.NDNutils.load_checkpoint": {"tf": 1}, "NDNT.utils.NDNutils.NpEncoder": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_maxpenalty_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_localpenalty_matrix": {"tf": 1}}, "df": 60, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"NDNT.modules.activity_regularization.ActivityRegularization.activity": {"tf": 1}, "NDNT.modules.activity_regularization.ActivityRegularization.nonneg": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {"NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1.4142135623730951}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.layers.convlayers.TconvLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.STconvLayer": {"tf": 1.4142135623730951}}, "df": 2}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.NpEncoder": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 1}}, "df": 3}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.layers.lvlayers.LVLayer": {"tf": 1}, "NDNT.modules.regularization.Regularization.reg_copy": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1}}, "df": 3, "s": {"docs": {"NDNT.utils.NDNutils.NpEncoder": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.NDN.NDN.__init__": {"tf": 1}, "NDNT.NDN.NDN.save_model_zip": {"tf": 1}, "NDNT.NDN.NDN.load_model_zip": {"tf": 1}, "NDNT.modules.activations.Square.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1}, "NDNT.networks.FFnetwork.__init__": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.__init__": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d.__init__": {"tf": 1}, "NDNT.networks.ReadoutNetwork.__init__": {"tf": 1}, "NDNT.networks.FFnet_external.__init__": {"tf": 1}, "NDNT.utils.NDNutils.save_checkpoint": {"tf": 2}, "NDNT.metrics.mse_loss.MseLoss_datafilter.__init__": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.__init__": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.__init__": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.__init__": {"tf": 1}}, "df": 15}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}}, "df": 1}}}}}}}, "y": {"docs": {"NDNT.modules.activations.AdaptiveELU": {"tf": 1}}, "df": 1}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 1}}, "df": 8}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.modules.layers.specialtylayers.L1convLayer": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.__init__": {"tf": 1.4142135623730951}}, "df": 2, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.modules.layers.readouts.FixationLayer.__init__": {"tf": 1}, "NDNT.utils.DanUtils.monocular_data_import": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1}, "NDNT.utils.NDNutils.pixel2grid": {"tf": 1}}, "df": 4}}}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.training.ada_hessian.AdaHessian": {"tf": 1}}, "df": 1}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"NDNT.NDN.NDN.training_step": {"tf": 1}, "NDNT.NDN.NDN.validation_step": {"tf": 1.4142135623730951}, "NDNT.modules.layers.lvlayers.LVLayerOLD": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.step": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.step": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1.7320508075688772}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1.7320508075688772}, "NDNT.training.lbfgsnew.LBFGSNew.step": {"tf": 1}, "NDNT.training.trainer.Trainer.__init__": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer.fit": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer.prepare_fit": {"tf": 2}, "NDNT.training.trainer.Trainer.fit_loop": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer.validate_one_epoch": {"tf": 1.7320508075688772}, "NDNT.training.trainer.Trainer.train_one_epoch": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer.train_one_step": {"tf": 1.7320508075688772}, "NDNT.training.trainer.Trainer.checkpoint_model": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer.graceful_exit": {"tf": 1.4142135623730951}, "NDNT.training.trainer.LBFGSTrainer.fit": {"tf": 1.4142135623730951}, "NDNT.training.trainer.LBFGSTrainer.fit_data_dict": {"tf": 1.4142135623730951}, "NDNT.training.trainer.LBFGSTrainer.train_one_epoch": {"tf": 1.4142135623730951}, "NDNT.training.trainer.TemperatureCalibratedTrainer.validate_one_epoch": {"tf": 1.7320508075688772}, "NDNT.utils.NDNutils.fit_lbfgs": {"tf": 1}}, "df": 23, "s": {"docs": {"NDNT.NDN.NDN.assemble_ffnetworks": {"tf": 1}, "NDNT.NDN.NDN.fit": {"tf": 1}, "NDNT.NDN.NDN.fit_dl": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1.7320508075688772}, "NDNT.utils.NDNutils.generate_xv_folds": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.unit_loss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.unit_loss": {"tf": 1}}, "df": 15}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1.4142135623730951}, "NDNT.training.lbfgs.LBFGS.line_search": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1.4142135623730951}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 2}}, "df": 4}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.NDN.NDN.get_trainer": {"tf": 2.23606797749979}, "NDNT.training.trainer.Trainer.__init__": {"tf": 1.4142135623730951}}, "df": 2}}}}, "s": {"docs": {"NDNT.training.earlystopping.EarlyStopping": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.regularization.Regularization": {"tf": 1}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1}}, "df": 2}, "d": {"docs": {"NDNT.modules.regularization.Regularization": {"tf": 1.7320508075688772}, "NDNT.modules.regularization.ActivityReg": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.curvature_update": {"tf": 1}, "NDNT.utils.NDNutils.get_fit_versions": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 1}}, "df": 8}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 2}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.utils.plotting.plot_filters_ST2D": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {"NDNT.modules.layers.convlayers.STconvLayer": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {"NDNT.modules.layers.readouts.FixationLayer.forward": {"tf": 1}, "NDNT.networks.FFnetwork": {"tf": 1}, "NDNT.utils.DanUtils.time_embedding_simple": {"tf": 1.4142135623730951}, "NDNT.utils.DanUtils.binocular_data_import": {"tf": 1.7320508075688772}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 2.449489742783178}, "NDNT.utils.DanUtils.monocular_data_import": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding": {"tf": 1.7320508075688772}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1.7320508075688772}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1.4142135623730951}, "NDNT.utils.ffnet_dicts.ffnet_dict_external": {"tf": 1}}, "df": 10, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.layers.laglayers.LagLayer": {"tf": 1.7320508075688772}, "NDNT.networks.FFnetwork": {"tf": 1}, "NDNT.networks.FFnetwork.determine_input_dims": {"tf": 1}, "NDNT.networks.FFnetwork.ffnet_dict": {"tf": 1}, "NDNT.networks.ReadoutNetwork.determine_input_dims": {"tf": 1}, "NDNT.utils.DanUtils.design_matrix_drift": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1.7320508075688772}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}}, "df": 10}}, "i": {"docs": {"NDNT.utils.DanUtils.binocular_data_import": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}}, "df": 2}}}, "[": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "d": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer.passive_readout": {"tf": 1}}, "df": 1}, "y": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.utils.NDNutils.save_checkpoint": {"tf": 1}, "NDNT.utils.NDNutils.load_checkpoint": {"tf": 1}, "NDNT.utils.NDNutils.ensure_dir": {"tf": 1}}, "df": 3}}}}}}}}}, "e": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 2}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 2}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 2}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 2}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 2}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.Regularization.set_reg_val": {"tf": 1}}, "df": 8, "d": {"docs": {"NDNT.NDN.NDN": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.get_dataloaders": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.fit": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.fit_dl": {"tf": 1.4142135623730951}, "NDNT.modules.experiment_sampler.ExperimentBatchGenerator": {"tf": 1.4142135623730951}, "NDNT.modules.experiment_sampler.ExperimentBatchIterator": {"tf": 1.4142135623730951}, "NDNT.modules.experiment_sampler.ExperimentSampler": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer.fit": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer.prepare_fit": {"tf": 1.4142135623730951}, "NDNT.training.trainer.LBFGSTrainer.fit": {"tf": 1.4142135623730951}}, "df": 10}, "m": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1.4142135623730951}}, "df": 1}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.NDN.NDN.forward": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.layers.lvlayers.LVLayer.__init__": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {"NDNT.NDN.NDN.initialize_loss": {"tf": 2.23606797749979}, "NDNT.NDN.NDN.get_readout_locations": {"tf": 1}, "NDNT.NDN.NDN.set_parameters": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.set_reg_val": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.BiConvLayer1D.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.ChannelConvLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.ConvLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.TconvLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.STconvLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.Dim0Layer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.ChannelLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.DimSPLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.DimSPTLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.laglayers.LagLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.set_reg_val": {"tf": 1.7320508075688772}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.orilayers.ConvLayer3D.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.ReadoutLayer.passive_readout": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.ReadoutLayer3d.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.Tlayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.L1convLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.OnOffLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.MaskLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.Regularization.set_reg_val": {"tf": 1.4142135623730951}, "NDNT.networks.FFnetwork.set_parameters": {"tf": 1.4142135623730951}, "NDNT.networks.FFnetwork.set_reg_val": {"tf": 2}, "NDNT.networks.FFnet_external.set_params": {"tf": 1.4142135623730951}, "NDNT.training.lbfgs.polyinterp": {"tf": 1}, "NDNT.training.trainer.Trainer.prepare_fit": {"tf": 1}, "NDNT.utils.DanUtils.design_matrix_drift": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.generate_xv_folds": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.initialize_gaussian_envelope": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 2}, "NDNT.utils.ffnet_dicts.ffnet_dict_NIM": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 1}}, "df": 49, "s": {"docs": {"NDNT.NDN.NDN.set_parameters": {"tf": 1}, "NDNT.NDN.NDN.set_reg_val": {"tf": 1}, "NDNT.modules.regularization.Regularization": {"tf": 1}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1}, "NDNT.networks.FFnetwork.determine_input_dims": {"tf": 1.4142135623730951}, "NDNT.networks.FFnetwork.set_parameters": {"tf": 1}, "NDNT.networks.ReadoutNetwork.determine_input_dims": {"tf": 1.4142135623730951}, "NDNT.networks.ReadoutNetwork.set_readout_locations": {"tf": 1}, "NDNT.networks.FFnet_external.set_params": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_readout": {"tf": 1}}, "df": 10}, "u": {"docs": {}, "df": 0, "p": {"docs": {"NDNT.modules.layers.reslayers.IterLayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer": {"tf": 1}}, "df": 3}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.networks.ReadoutNetwork": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"tf": 1}}, "df": 6}}}}, "/": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"tf": 1}}, "df": 4}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.layers.bilayers.BinocLayer1D": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer": {"tf": 1}}, "df": 3, "l": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.__init__": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_readout": {"tf": 1}}, "df": 4}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.modules.regularization.ConvReg.compute_reg_penalty": {"tf": 1}}, "df": 1}}}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.modules.regularization.LocalityReg": {"tf": 1}, "NDNT.modules.regularization.ActivityReg": {"tf": 1}}, "df": 2}}}}}}}, "l": {"docs": {}, "df": 0, "f": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer.set_readout_locations": {"tf": 1}, "NDNT.modules.regularization.Regularization.set_reg_val": {"tf": 1}, "NDNT.networks.FFnetwork.determine_input_dims": {"tf": 1.4142135623730951}, "NDNT.networks.ReadoutNetwork.determine_input_dims": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.NpEncoder.default": {"tf": 1.4142135623730951}}, "df": 5}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.training.ada_hessian.AdaHessian": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1.4142135623730951}, "NDNT.utils.create_reg_matrices.create_maxpenalty_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_localpenalty_matrix": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_readout": {"tf": 1}}, "df": 5}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 2.23606797749979}, "NDNT.training.lbfgs.LBFGS.line_search": {"tf": 2.23606797749979}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 2}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 4.795831523312719}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 2}}, "df": 5}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.utils.NDNutils.NpEncoder": {"tf": 1}, "NDNT.utils.NDNutils.NpEncoder.default": {"tf": 1}}, "df": 2}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.NDN.NDN": {"tf": 1}, "NDNT.NDN.NDN.get_trainer": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.fit": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.fit_dl": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.save_model_zip": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.save_model": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.save_model_chk": {"tf": 1.7320508075688772}, "NDNT.training.ada_hessian.AdaHessian": {"tf": 1}, "NDNT.training.trainer.Trainer.__init__": {"tf": 1}, "NDNT.utils.NDNutils.save_checkpoint": {"tf": 1}}, "df": 10, "s": {"docs": {"NDNT.NDN.NDN.compute_network_outputs": {"tf": 1}, "NDNT.utils.NDNutils.save_checkpoint": {"tf": 1}}, "df": 2}, "d": {"docs": {"NDNT.NDN.NDN.save_model": {"tf": 1}, "NDNT.NDN.NDN.save_model_chk": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}}, "df": 4}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.utils.NDNutils.save_checkpoint": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.NDN.NDN.fit": {"tf": 1}, "NDNT.NDN.NDN.eval_models": {"tf": 1}, "NDNT.NDN.NDN.generate_predictions": {"tf": 1}, "NDNT.NDN.NDN.get_null_adjusted_ll": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.get_activations": {"tf": 1.4142135623730951}, "NDNT.modules.experiment_sampler.ExperimentBatchGenerator": {"tf": 1.4142135623730951}, "NDNT.modules.experiment_sampler.construct_exp_to_time": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler": {"tf": 1.7320508075688772}, "NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 2}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 2.449489742783178}, "NDNT.modules.layers.readouts.FixationLayer.__init__": {"tf": 1.7320508075688772}, "NDNT.networks.ReadoutNetwork": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian": {"tf": 1}, "NDNT.utils.DanUtils.fold_sample": {"tf": 1}, "NDNT.utils.NDNutils.generate_xv_folds": {"tf": 1}}, "df": 15, "s": {"docs": {"NDNT.NDN.NDN.eval_models": {"tf": 1.4142135623730951}, "NDNT.modules.experiment_sampler.ExperimentSampler": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian": {"tf": 1}, "NDNT.utils.NDNutils.get_max_samples": {"tf": 1.7320508075688772}}, "df": 6}, "r": {"docs": {"NDNT.modules.experiment_sampler.ExperimentSampler": {"tf": 1}}, "df": 1}, "d": {"docs": {"NDNT.modules.layers.lvlayers.LVLayer": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.forward": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1}}, "df": 5}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.NDN.NDN.fit": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.create_time_embedding": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1}}, "df": 4}}}}}, "e": {"docs": {"NDNT.modules.layers.bilayers.BinocLayer1D.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.layers.bilayers.BiConvLayer1D.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.layers.bilayers.BiSTconv1D.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.layers.bilayers.ChannelConvLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.ChannelConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.ConvLayer.batchnorm_convert": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer": {"tf": 1.7320508075688772}, "NDNT.modules.layers.reslayers.IterTlayer": {"tf": 1.7320508075688772}, "NDNT.modules.layers.reslayers.IterSTlayer": {"tf": 1.7320508075688772}, "NDNT.modules.layers.specialtylayers.Tlayer": {"tf": 1.4142135623730951}}, "df": 11}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.NDN.NDN.__init__": {"tf": 1}, "NDNT.modules.activations.Square.__init__": {"tf": 1}, "NDNT.networks.FFnetwork.__init__": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.__init__": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d.__init__": {"tf": 1}, "NDNT.networks.ReadoutNetwork.__init__": {"tf": 1}, "NDNT.networks.FFnet_external.__init__": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.__init__": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.__init__": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.__init__": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.__init__": {"tf": 1}}, "df": 11}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.layers.bilayers.BinocLayer1D.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.BiSTconv1D.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.ChannelConvLayer.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.Dim0Layer.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.Dim0Layer.dim_info": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.ChannelLayer.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.DimSPLayer.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.DimSPTLayer.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.laglayers.LagLayer.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.initialize_gaussian_envelope": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.get_weights": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.dim_info": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.orilayers.OriConvLayer.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.orilayers.ConvLayer3D.forward": {"tf": 1.4142135623730951}, "NDNT.networks.ReadoutNetwork": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.initialize_gaussian_envelope": {"tf": 1}}, "df": 19}}}, "i": {"docs": {"NDNT.training.lbfgs.polyinterp": {"tf": 1}, "NDNT.training.lbfgs.LBFGS": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1}}, "df": 3, "f": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.modules.activations.adaptive_elu": {"tf": 1.4142135623730951}, "NDNT.modules.activations.AdaptiveELU.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.ReadoutLayer.forward": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.forward": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.forward": {"tf": 1}, "NDNT.utils.NDNutils.shift_mat_zpad": {"tf": 1.4142135623730951}}, "df": 7, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.modules.activations.adaptive_elu": {"tf": 1}, "NDNT.modules.activations.AdaptiveELU": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}}, "df": 4}, "r": {"docs": {"NDNT.networks.ReadoutNetwork": {"tf": 1}, "NDNT.networks.ReadoutNetwork.forward": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_readout": {"tf": 1}}, "df": 3}}, "s": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer.forward": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.forward": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.forward": {"tf": 1}, "NDNT.utils.NDNutils.shift_mat_zpad": {"tf": 1.4142135623730951}}, "df": 4}}}}, "u": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.experiment_sampler.ExperimentBatchGenerator": {"tf": 1.4142135623730951}, "NDNT.modules.experiment_sampler.ExperimentBatchIterator": {"tf": 1.4142135623730951}, "NDNT.modules.experiment_sampler.ExperimentSampler": {"tf": 1.4142135623730951}}, "df": 3}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.modules.experiment_sampler.ExperimentBatchGenerator": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchIterator": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler": {"tf": 1}}, "df": 3}}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.modules.layers.dimlayers.Dim0Layer.dim_info": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.dim_info": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.set_readout_locations": {"tf": 1}, "NDNT.modules.regularization.RegModule.forward": {"tf": 1.4142135623730951}, "NDNT.training.lbfgs.LBFGS.step": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}, "NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1}, "NDNT.utils.NDNutils.NpEncoder": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.unit_loss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.unit_loss": {"tf": 1}}, "df": 15}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.networks.ReadoutNetwork": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.networks.FFnet_external": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.NDN.NDN.__init__": {"tf": 1}, "NDNT.modules.activations.Square.__init__": {"tf": 1}, "NDNT.networks.FFnetwork.__init__": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.__init__": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d.__init__": {"tf": 1}, "NDNT.networks.ReadoutNetwork.__init__": {"tf": 1}, "NDNT.networks.FFnet_external.__init__": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.__init__": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.__init__": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.__init__": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.__init__": {"tf": 1}}, "df": 11}}}}}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.NDN.NDN.get_trainer": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.fit": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.fit_dl": {"tf": 1.7320508075688772}, "NDNT.training.trainer.Trainer.__init__": {"tf": 1.7320508075688772}}, "df": 4}}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.training.lbfgs.polyinterp": {"tf": 1}, "NDNT.training.lbfgs.LBFGS": {"tf": 1.4142135623730951}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}}, "df": 1}}}}}}}}}, "a": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.networks.FFnetwork": {"tf": 1.4142135623730951}, "NDNT.networks.FFnetwork.ffnet_dict": {"tf": 1.4142135623730951}, "NDNT.networks.ScaffoldNetwork": {"tf": 1.7320508075688772}, "NDNT.networks.ScaffoldNetwork.ffnet_dict": {"tf": 2.23606797749979}, "NDNT.networks.ScaffoldNetwork3d": {"tf": 1.4142135623730951}, "NDNT.networks.ScaffoldNetwork3d.ffnet_dict": {"tf": 1.4142135623730951}}, "df": 6}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}}, "df": 1, "s": {"docs": {"NDNT.utils.NDNutils.get_max_samples": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {"NDNT.NDN.NDN.assemble_ffnetworks": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer": {"tf": 1.7320508075688772}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.passive_readout": {"tf": 1}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.regularization.ConvReg.compute_reg_penalty": {"tf": 1}, "NDNT.networks.FFnet_external": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_readout": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_external": {"tf": 1}, "NDNT.utils.plotting.plot_filters_1D": {"tf": 1}, "NDNT.utils.plotting.plot_filters_2D": {"tf": 1}, "NDNT.utils.plotting.plot_filters_ST1D": {"tf": 1}}, "df": 19, "l": {"docs": {"NDNT.training.lbfgs.polyinterp": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.modules.layers.bilayers.BiConvLayer1D": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer": {"tf": 1}}, "df": 5}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.layers.laglayers.LagLayer": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1}, "NDNT.training.lbfgs.polyinterp": {"tf": 1}, "NDNT.utils.DanUtils.find_peaks": {"tf": 1}}, "df": 4, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.networks.ScaffoldNetwork": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1}}, "df": 3}}}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.modules.regularization.ConvReg.compute_reg_penalty": {"tf": 1}}, "df": 1}}, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_external": {"tf": 1}}, "df": 2}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.NDN.NDN.change_loss": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.training.lbfgs.LBFGS.line_search": {"tf": 1}}, "df": 1}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.activations.Square": {"tf": 1}, "NDNT.modules.activations.Square.forward": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1}}, "df": 3, "d": {"docs": {"NDNT.training.ada_hessian.AdaHessian": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.forward": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.forward": {"tf": 1.4142135623730951}, "NDNT.metrics.rmse_loss.RmseLoss.unit_loss": {"tf": 1}}, "df": 4}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.modules.layers.lvlayers.LVLayer.forward": {"tf": 1}}, "df": 1}}}}}}}}}, "b": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer3d": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer": {"tf": 1}, "NDNT.training.trainer.TemperatureCalibratedTrainer": {"tf": 1}, "NDNT.utils.NDNutils.NpEncoder": {"tf": 1}, "NDNT.utils.NDNutils.NpEncoder.default": {"tf": 1}}, "df": 5, "e": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.regularization.RegModule.forward": {"tf": 1}, "NDNT.utils.NDNutils.CPU_Unpickler.find_class": {"tf": 1}}, "df": 2}}}}}}}, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.utils.NDNutils.generate_xv_folds": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1}, "NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1}, "NDNT.utils.NDNutils.NpEncoder.default": {"tf": 1}}, "df": 5, "s": {"docs": {"NDNT.utils.NDNutils.NpEncoder": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_maxpenalty_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_localpenalty_matrix": {"tf": 1}}, "df": 4}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.utils.NDNutils.NpEncoder": {"tf": 1}}, "df": 1}}}}}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "h": {"docs": {"NDNT.utils.NDNutils.NpEncoder.default": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 1}}, "df": 5}}, "s": {"docs": {"NDNT.utils.DanUtils.binocular_data_import": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}}, "df": 2}, "m": {"docs": {"NDNT.metrics.mse_loss.MseLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.unit_loss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.unit_loss": {"tf": 1}}, "df": 4}}, "m": {"docs": {"NDNT.modules.layers.lvlayers.LVLayerOLD.__init__": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.layers.lvlayers.LVLayerOLD": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.__init__": {"tf": 1}}, "df": 2}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}}, "df": 1}}}}, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {"NDNT.modules.layers.reslayers.IterLayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer": {"tf": 1}}, "df": 3}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.training.lbfgs.polyinterp": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.utils.NDNutils.create_time_embedding": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1}}, "df": 2}}}}, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}}, "df": 1}}}}}}}, "b": {"docs": {"NDNT.modules.layers.bilayers.BiSTconv1D": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.ChannelLayer.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.DimSPLayer.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.DimSPTLayer.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.lvlayers.LVLayer.forward": {"tf": 1}}, "df": 7, "y": {"docs": {"NDNT.NDN.NDN": {"tf": 1}, "NDNT.NDN.NDN.__init__": {"tf": 1}, "NDNT.modules.activations.adaptive_elu": {"tf": 1}, "NDNT.modules.activations.Square.__init__": {"tf": 1}, "NDNT.modules.activations.AdaptiveELU": {"tf": 1}, "NDNT.modules.experiment_sampler.construct_exp_to_time": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.__init__": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.rotate_tensor": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1}, "NDNT.modules.regularization.Regularization.set_reg_val": {"tf": 1}, "NDNT.modules.regularization.RegModule.forward": {"tf": 1}, "NDNT.networks.FFnetwork.__init__": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.__init__": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d.__init__": {"tf": 1}, "NDNT.networks.ReadoutNetwork.__init__": {"tf": 1}, "NDNT.networks.FFnet_external.__init__": {"tf": 1}, "NDNT.training.lbfgs.polyinterp": {"tf": 1.4142135623730951}, "NDNT.training.lbfgs.LBFGS": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1}, "NDNT.utils.DanUtils.design_matrix_drift": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 1}, "NDNT.utils.NDNutils.shift_mat_zpad": {"tf": 1}, "NDNT.utils.NDNutils.initialize_gaussian_envelope": {"tf": 1}, "NDNT.utils.NDNutils.NpEncoder": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1.7320508075688772}, "NDNT.utils.plotting.plot_filters_1D": {"tf": 1}, "NDNT.utils.plotting.plot_filters_2D": {"tf": 1}, "NDNT.utils.plotting.plot_filters_ST1D": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 1.4142135623730951}, "NDNT.metrics.mse_loss.MseLoss_datafilter.__init__": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 2.23606797749979}, "NDNT.metrics.mse_loss.MseLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.__init__": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 2.449489742783178}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.__init__": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"tf": 2.449489742783178}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.unit_loss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 1.4142135623730951}, "NDNT.metrics.rmse_loss.RmseLoss.__init__": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"tf": 2.23606797749979}, "NDNT.metrics.rmse_loss.RmseLoss.unit_loss": {"tf": 1}}, "df": 52, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 2}}, "df": 2, "i": {"docs": {}, "df": 0, "o": {"docs": {"NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {"NDNT.NDN.NDN": {"tf": 2.6457513110645907}, "NDNT.NDN.NDN.assemble_ffnetworks": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.get_trainer": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.initialize_loss": {"tf": 2.449489742783178}, "NDNT.NDN.NDN.eval_models": {"tf": 2.23606797749979}, "NDNT.NDN.NDN.change_loss": {"tf": 1}, "NDNT.NDN.NDN.save_model": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.save_model_chk": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.BinocLayer1D.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.BiConvLayer1D.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.BiSTconv1D": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1.7320508075688772}, "NDNT.modules.layers.bilayers.ChannelConvLayer": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.STconvLayer": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.Dim0Layer.dim_info": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.ChannelLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.DimSPLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.DimSPTLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.laglayers.LagLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.lvlayers.LVLayer": {"tf": 1.7320508075688772}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.lvlayers.LVLayerOLD.forward": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.dim_info": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1.7320508075688772}, "NDNT.modules.layers.orilayers.ConvLayer3D.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.ReadoutLayer.set_readout_locations": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.ReadoutLayer3d.passive_readout": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterLayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterTlayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterSTlayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.Tlayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.L1convLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.OnOffLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.MaskLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.RegModule.forward": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.ConvReg.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.ActivityReg": {"tf": 1}, "NDNT.networks.FFnetwork.determine_input_dims": {"tf": 1}, "NDNT.networks.ScaffoldNetwork": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1}, "NDNT.networks.ReadoutNetwork.determine_input_dims": {"tf": 1}, "NDNT.networks.FFnet_external": {"tf": 1}, "NDNT.training.lbfgs.is_legal": {"tf": 1}, "NDNT.training.lbfgs.LBFGS": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1.4142135623730951}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1.7320508075688772}, "NDNT.utils.DanUtils.fold_sample": {"tf": 1}, "NDNT.utils.DanUtils.design_matrix_drift": {"tf": 1.7320508075688772}, "NDNT.utils.DanUtils.binocular_data_import": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1.7320508075688772}, "NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.CPU_Unpickler.find_class": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 1.7320508075688772}, "NDNT.utils.NDNutils.tent_basis_generate": {"tf": 1}, "NDNT.utils.NDNutils.load_checkpoint": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 2.23606797749979}, "NDNT.utils.ffnet_dicts.ffnet_dict_NIM": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_external": {"tf": 2.449489742783178}, "NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.unit_loss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.unit_loss": {"tf": 1}}, "df": 87, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.NDN.NDN.get_trainer": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.preprocess_weights": {"tf": 1}, "NDNT.networks.FFnetwork.prepare_regularization": {"tf": 1}, "NDNT.training.trainer.Trainer.__init__": {"tf": 1}, "NDNT.training.trainer.Trainer.prepare_fit": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_external": {"tf": 1}}, "df": 7}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {"NDNT.NDN.NDN.get_optimizer": {"tf": 1}}, "df": 1, "s": {"docs": {"NDNT.NDN.NDN.get_optimizer": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian": {"tf": 1}}, "df": 2}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.metrics.mse_loss.MseLoss_datafilter.forward": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.forward": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.forward": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.forward": {"tf": 1}}, "df": 4}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.NDN.NDN.load_model_chk": {"tf": 1}, "NDNT.training.trainer.Trainer.checkpoint_model": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.save_checkpoint": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.load_checkpoint": {"tf": 1.4142135623730951}}, "df": 4}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.layers.convlayers.STconvLayer": {"tf": 1}, "NDNT.networks.FFnetwork.prepare_regularization": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}}, "df": 3}}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.layers.readouts.FixationLayer.__init__": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.modules.layers.lvlayers.LVLayerOLD.forward": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 1}}, "df": 5}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer.set_readout_locations": {"tf": 1}, "NDNT.modules.regularization.Regularization.set_reg_val": {"tf": 1}}, "df": 2}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.networks.ReadoutNetwork": {"tf": 1.4142135623730951}, "NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1.4142135623730951}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 1.4142135623730951}}, "df": 5}}}, "e": {"docs": {"NDNT.networks.FFnet_external": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"NDNT.NDN.NDN.__init__": {"tf": 1}, "NDNT.modules.activations.Square.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D": {"tf": 1}, "NDNT.networks.FFnetwork.__init__": {"tf": 1}, "NDNT.networks.FFnetwork.determine_input_dims": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.__init__": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d.__init__": {"tf": 1}, "NDNT.networks.ReadoutNetwork.__init__": {"tf": 1}, "NDNT.networks.ReadoutNetwork.determine_input_dims": {"tf": 1}, "NDNT.networks.FFnet_external.__init__": {"tf": 1}, "NDNT.utils.DanUtils.design_matrix_drift": {"tf": 1}, "NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1}, "NDNT.utils.NDNutils.CPU_Unpickler.find_class": {"tf": 1}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.__init__": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.__init__": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.__init__": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.__init__": {"tf": 1}}, "df": 18}}, "o": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.NDN.NDN.get_trainer": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.get_dataloaders": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.get_optimizer": {"tf": 1}, "NDNT.NDN.NDN.fit": {"tf": 2}, "NDNT.NDN.NDN.fit_dl": {"tf": 1}, "NDNT.NDN.NDN.eval_models": {"tf": 1.7320508075688772}, "NDNT.modules.activations.adaptive_elu": {"tf": 1}, "NDNT.modules.activations.AdaptiveELU.__init__": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchGenerator": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchIterator": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.BiConvLayer1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1.7320508075688772}, "NDNT.modules.layers.bilayers.ChannelConvLayer": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.TconvLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.STconvLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.get_weights": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1.7320508075688772}, "NDNT.modules.layers.normlayers.DivNormLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.ReadoutLayer.get_weights": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.ReadoutLayer.forward": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.forward": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.__init__": {"tf": 2}, "NDNT.modules.layers.readouts.FixationLayer.forward": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterTlayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.timelayers.TimeLayer.__init__": {"tf": 1}, "NDNT.modules.regularization.Regularization.set_reg_val": {"tf": 1}, "NDNT.networks.FFnetwork.determine_input_dims": {"tf": 1}, "NDNT.networks.FFnetwork.set_parameters": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1.7320508075688772}, "NDNT.networks.ReadoutNetwork.determine_input_dims": {"tf": 1}, "NDNT.networks.FFnet_external.set_params": {"tf": 1}, "NDNT.training.earlystopping.EarlyStopping": {"tf": 1}, "NDNT.training.lbfgs.polyinterp": {"tf": 1}, "NDNT.training.lbfgs.LBFGS": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.curvature_update": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 3.3166247903554}, "NDNT.training.trainer.Trainer.__init__": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer.checkpoint_model": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.__init__": {"tf": 1}, "NDNT.utils.NDNutils.save_checkpoint": {"tf": 1}, "NDNT.utils.NDNutils.load_checkpoint": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.unit_loss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.unit_loss": {"tf": 1}}, "df": 76, "/": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.networks.FFnetwork.determine_input_dims": {"tf": 1}, "NDNT.networks.ReadoutNetwork.determine_input_dims": {"tf": 1}, "NDNT.utils.DanUtils.design_matrix_drift": {"tf": 1}, "NDNT.utils.NDNutils.is_int": {"tf": 1}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 1}}, "df": 6}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.training.lbfgs.polyinterp": {"tf": 1.4142135623730951}}, "df": 1, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.modules.regularization.Regularization.__init__": {"tf": 1}, "NDNT.modules.regularization.Regularization.set_reg_val": {"tf": 1}, "NDNT.modules.regularization.ConvReg.compute_reg_penalty": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 2}}, "df": 4}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}}, "df": 1}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.NDN.NDN.assemble_ffnetworks": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.modules.regularization.Regularization.__init__": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {"NDNT.modules.layers.bilayers.BinocLayer1D": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D.forward": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.forward": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.forward": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.dim_info": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.dim_info": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.get_weights": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.set_readout_locations": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.passive_readout": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.__init__": {"tf": 1}, "NDNT.modules.regularization.ConvReg.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.TikhanovC": {"tf": 1}, "NDNT.networks.FFnetwork.determine_input_dims": {"tf": 1.4142135623730951}, "NDNT.networks.ScaffoldNetwork": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d": {"tf": 1.4142135623730951}, "NDNT.networks.ReadoutNetwork": {"tf": 1}, "NDNT.networks.ReadoutNetwork.determine_input_dims": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer": {"tf": 1}, "NDNT.utils.DanUtils.fold_sample": {"tf": 1}, "NDNT.utils.DanUtils.design_matrix_drift": {"tf": 1}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 1}, "NDNT.utils.NDNutils.generate_xv_folds": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 1.4142135623730951}, "NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 1}}, "df": 39, "t": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}}, "df": 1}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.utils.NDNutils.get_max_samples": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 1}}, "df": 5}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"NDNT.NDN.NDN.training_step": {"tf": 2}, "NDNT.NDN.NDN.validation_step": {"tf": 2}, "NDNT.NDN.NDN.get_dataloaders": {"tf": 2}, "NDNT.NDN.NDN.fit": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.fit_dl": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.initialize_loss": {"tf": 2.8284271247461903}, "NDNT.NDN.NDN.eval_models": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.generate_predictions": {"tf": 1.4142135623730951}, "NDNT.modules.experiment_sampler.ExperimentBatchGenerator": {"tf": 1.4142135623730951}, "NDNT.modules.experiment_sampler.ExperimentBatchGenerator.next": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchIterator": {"tf": 1.4142135623730951}, "NDNT.modules.experiment_sampler.ExperimentSampler": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.BinocLayer1D.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.BiSTconv1D.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.ChannelConvLayer.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.ConvLayer.batchnorm_convert": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.STconvLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.laglayers.LagLayer.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.lvlayers.LVLayer": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.orilayers.OriConvLayer.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.orilayers.ConvLayer3D.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1.7320508075688772}, "NDNT.modules.layers.readouts.FixationLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1.4142135623730951}, "NDNT.training.lbfgs.LBFGS": {"tf": 1.4142135623730951}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 2.23606797749979}, "NDNT.training.trainer.Trainer.train_one_step": {"tf": 1.4142135623730951}, "NDNT.training.trainer.LBFGSTrainer.__init__": {"tf": 1.4142135623730951}, "NDNT.utils.ffnet_dicts.ffnet_dict_external": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 2.6457513110645907}, "NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 3.1622776601683795}, "NDNT.metrics.mse_loss.MseLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 2.6457513110645907}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 3.3166247903554}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 2.6457513110645907}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"tf": 3.3166247903554}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.unit_loss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 2.6457513110645907}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"tf": 3.1622776601683795}, "NDNT.metrics.rmse_loss.RmseLoss.unit_loss": {"tf": 1}}, "df": 50, "e": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.experiment_sampler.ExperimentBatchGenerator": {"tf": 1.4142135623730951}, "NDNT.modules.experiment_sampler.ExperimentBatchIterator": {"tf": 1.4142135623730951}}, "df": 2}}, "x": {"docs": {"NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1}}, "df": 6}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.RegModule": {"tf": 1}, "NDNT.networks.FFnetwork.determine_input_dims": {"tf": 1}, "NDNT.networks.ReadoutNetwork.determine_input_dims": {"tf": 1}, "NDNT.utils.NDNutils.NpEncoder.default": {"tf": 1.4142135623730951}}, "df": 5, "d": {"docs": {"NDNT.NDN.NDN.fit": {"tf": 1}, "NDNT.NDN.NDN.fit_dl": {"tf": 1}, "NDNT.NDN.NDN.initialize_loss": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer": {"tf": 1}, "NDNT.modules.regularization.Regularization.build_reg_modules": {"tf": 1}, "NDNT.training.lbfgs.polyinterp": {"tf": 1.4142135623730951}, "NDNT.training.lbfgs.LBFGS": {"tf": 1}, "NDNT.utils.DanUtils.design_matrix_drift": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.forward": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.forward": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.forward": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.forward": {"tf": 1}}, "df": 18}, "s": {"docs": {"NDNT.modules.layers.timelayers.TimeLayer.__init__": {"tf": 1}, "NDNT.utils.DanUtils.design_matrix_drift": {"tf": 1}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 1}, "NDNT.utils.NDNutils.tent_basis_generate": {"tf": 1}}, "df": 4}}, "i": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.layers.bilayers.ChannelConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.__init__": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.__init__": {"tf": 1}, "NDNT.utils.DanUtils.design_matrix_drift": {"tf": 2}, "NDNT.utils.NDNutils.create_time_embedding": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 2}}, "df": 9}, "c": {"docs": {"NDNT.training.trainer.Trainer": {"tf": 1}}, "df": 1, "s": {"docs": {"NDNT.networks.FFnet_external": {"tf": 1}, "NDNT.utils.DanUtils.fold_sample": {"tf": 1}}, "df": 2}}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.line_search": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1.4142135623730951}}, "df": 4}}}, "s": {"docs": {"NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"NDNT.NDN.NDN.fit": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.generate_predictions": {"tf": 1.4142135623730951}, "NDNT.utils.DanUtils.monocular_data_import": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.generate_xv_folds": {"tf": 1.4142135623730951}}, "df": 4, "s": {"docs": {"NDNT.NDN.NDN.generate_predictions": {"tf": 1}, "NDNT.utils.DanUtils.monocular_data_import": {"tf": 1}, "NDNT.utils.NDNutils.generate_xv_folds": {"tf": 1.4142135623730951}}, "df": 3}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {"NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_log_epsilon": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.layers.bilayers.BiConvLayer1D.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.layers.bilayers.BiSTconv1D.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 2}, "NDNT.modules.layers.bilayers.ChannelConvLayer": {"tf": 1.7320508075688772}, "NDNT.modules.layers.convlayers.ConvLayer": {"tf": 1.7320508075688772}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 2}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 2}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 2}, "NDNT.modules.layers.laglayers.LagLayer": {"tf": 1.7320508075688772}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 2.449489742783178}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 2}, "NDNT.modules.layers.ndnlayer.NDNLayer.reset_parameters": {"tf": 1.7320508075688772}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 2}, "NDNT.modules.layers.normlayers.DivNormLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.FixationLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterLayer": {"tf": 1.7320508075688772}, "NDNT.modules.layers.reslayers.IterTlayer": {"tf": 1.7320508075688772}, "NDNT.modules.layers.reslayers.IterSTlayer": {"tf": 1.7320508075688772}, "NDNT.modules.layers.specialtylayers.Tlayer": {"tf": 1.7320508075688772}, "NDNT.modules.layers.specialtylayers.L1convLayer.reset_parameters2": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1.7320508075688772}, "NDNT.networks.ReadoutNetwork": {"tf": 1.4142135623730951}}, "df": 22, "e": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.NDN.NDN.initialize_biases": {"tf": 1.7320508075688772}}, "df": 1}}}}, "t": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1}, "NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1.4142135623730951}}, "df": 2, "s": {"docs": {"NDNT.NDN.NDN.eval_models": {"tf": 1}, "NDNT.NDN.NDN.get_null_adjusted_ll": {"tf": 1}}, "df": 2, "/": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.NDN.NDN.eval_models": {"tf": 1}, "NDNT.NDN.NDN.get_null_adjusted_ll": {"tf": 1}}, "df": 2}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"NDNT.utils.DanUtils.figure_export": {"tf": 1.4142135623730951}}, "df": 1}}}}, "n": {"docs": {"NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 1}}, "df": 4, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.layers.bilayers.BiSTconv1D": {"tf": 1}}, "df": 1}}}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.utils.DanUtils.binocular_data_import": {"tf": 1.4142135623730951}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1.7320508075688772}, "NDNT.utils.DanUtils.monocular_data_import": {"tf": 1}}, "df": 3}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1.4142135623730951}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.utils.NDNutils.tent_basis_generate": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"NDNT.modules.layers.bilayers.BiSTconv1D": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"1": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.modules.layers.bilayers.BiSTconv1D": {"tf": 1}}, "df": 1}}, "docs": {}, "df": 0}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.training.lbfgs.polyinterp": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1}}, "df": 2}}}}}}}, "c": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.regularization.Regularization.__init__": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.training.lbfgs.polyinterp": {"tf": 1.4142135623730951}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.line_search": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1}}, "df": 3}}}}}}}}, "y": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 2.449489742783178}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1}}, "df": 3}}}, "s": {"2": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.utils.DanUtils.binocular_data_import": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}}, "df": 2}}}}}, "docs": {}, "df": 0}}, "w": {"1": {"docs": {"NDNT.modules.layers.lvlayers.LVLayer": {"tf": 1.7320508075688772}}, "df": 1}, "docs": {"NDNT.modules.layers.convlayers.ConvLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer": {"tf": 2}, "NDNT.modules.layers.convlayers.STconvLayer": {"tf": 2.23606797749979}, "NDNT.modules.layers.dimlayers.Dim0Layer.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.ChannelLayer.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.DimSPLayer.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.DimSPTLayer.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.lvlayers.LVLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.preprocess_weights": {"tf": 1}}, "df": 12, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.NDN.NDN": {"tf": 2}, "NDNT.NDN.NDN.assemble_ffnetworks": {"tf": 1}, "NDNT.NDN.NDN.get_trainer": {"tf": 1}, "NDNT.NDN.NDN.initialize_loss": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.eval_models": {"tf": 2}, "NDNT.NDN.NDN.change_loss": {"tf": 1}, "NDNT.NDN.NDN.save_model": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.save_model_chk": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer": {"tf": 2}, "NDNT.modules.layers.lvlayers.LVLayer.__init__": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.passive_readout": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.ReadoutLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.initialize": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.layer_dict": {"tf": 1}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1.4142135623730951}, "NDNT.networks.FFnetwork.determine_input_dims": {"tf": 1}, "NDNT.networks.ReadoutNetwork.determine_input_dims": {"tf": 1}, "NDNT.networks.FFnet_external": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1}, "NDNT.training.trainer.Trainer.__init__": {"tf": 1.4142135623730951}, "NDNT.utils.DanUtils.figure_export": {"tf": 1.4142135623730951}, "NDNT.utils.DanUtils.design_matrix_drift": {"tf": 1.7320508075688772}, "NDNT.utils.DanUtils.binocular_data_import": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1.7320508075688772}, "NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1}, "NDNT.utils.NDNutils.CPU_Unpickler.find_class": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 1.7320508075688772}, "NDNT.utils.NDNutils.tent_basis_generate": {"tf": 1}, "NDNT.utils.NDNutils.generate_xv_folds": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_NIM": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_external": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"tf": 1}}, "df": 69}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"NDNT.NDN.NDN.assemble_ffnetworks": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.initialize_loss": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.get_weights": {"tf": 1}, "NDNT.NDN.NDN.save_model_zip": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.load_model_zip": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.get_activations": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.batchnorm_convert": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.dim_info": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.Dim0Layer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.dim_info": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.L1convLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.layer_dict": {"tf": 1}, "NDNT.modules.regularization.Regularization": {"tf": 1}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.regularization.Regularization.set_reg_val": {"tf": 1}, "NDNT.networks.FFnetwork.prepare_regularization": {"tf": 1}, "NDNT.networks.FFnetwork.get_weights": {"tf": 1}, "NDNT.networks.ScaffoldNetwork": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 2.23606797749979}, "NDNT.training.ada_hessian.AdaHessian.get_params": {"tf": 1.4142135623730951}, "NDNT.training.lbfgs.polyinterp": {"tf": 1.4142135623730951}, "NDNT.training.lbfgs.LBFGS": {"tf": 1.4142135623730951}, "NDNT.training.lbfgs.LBFGS.curvature_update": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 2}, "NDNT.training.trainer.LBFGSTrainer": {"tf": 1}, "NDNT.training.trainer.TemperatureCalibratedTrainer": {"tf": 1}, "NDNT.utils.DanUtils.time_embedding_simple": {"tf": 1}, "NDNT.utils.DanUtils.design_matrix_drift": {"tf": 1}, "NDNT.utils.DanUtils.monocular_data_import": {"tf": 1}, "NDNT.utils.NDNutils.fit_lbfgs": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.tent_basis_generate": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.pixel2grid": {"tf": 1}, "NDNT.utils.NDNutils.NpEncoder": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1.4142135623730951}, "NDNT.utils.create_reg_matrices.create_maxpenalty_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_localpenalty_matrix": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"tf": 1}}, "df": 84, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.NDN.NDN.initialize_loss": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.batchnorm_convert": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.unit_loss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.unit_loss": {"tf": 1}}, "df": 7}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.modules.regularization.RegModule.forward": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1}}, "df": 3}}}}, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"NDNT.modules.layers.bilayers.BinocLayer1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D.forward": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.BiSTconv1D.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.BiSTconv1D.forward": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.ChannelConvLayer.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.layers.bilayers.ChannelConvLayer.forward": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.Dim0Layer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.dim_info": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.__init__": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.laglayers.LagLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.laglayers.LagLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.__init__": {"tf": 2}, "NDNT.modules.layers.orilayers.ConvLayer3D.layer_dict": {"tf": 2}, "NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.ReadoutLayer3d.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer": {"tf": 1.7320508075688772}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterTlayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterTlayer.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterSTlayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterSTlayer.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.Tlayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.Tlayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.networks.ReadoutNetwork": {"tf": 1}}, "df": 38}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"NDNT.modules.layers.bilayers.ChannelConvLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1}}, "df": 2, "s": {"docs": {"NDNT.utils.NDNutils.initialize_gaussian_envelope": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.regularization.Regularization": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"NDNT.modules.regularization.Regularization.__init__": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.NDN.NDN": {"tf": 1}, "NDNT.NDN.NDN.save_model_zip": {"tf": 1.4142135623730951}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.NDN.NDN.eval_models": {"tf": 1}}, "df": 1, "s": {"docs": {"NDNT.NDN.NDN.get_dataloaders": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.fit_dl": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.eval_models": {"tf": 1}}, "df": 3}}}}}, "l": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 2}, "NDNT.training.lbfgs.LBFGS.line_search": {"tf": 1.4142135623730951}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1.7320508075688772}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1.4142135623730951}}, "df": 4}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}}, "df": 1}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"NDNT.NDN.NDN.assemble_ffnetworks": {"tf": 1}, "NDNT.NDN.NDN.save_model": {"tf": 1}, "NDNT.NDN.NDN.save_model_chk": {"tf": 1}, "NDNT.NDN.NDN.get_activations": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1}, "NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1}, "NDNT.utils.NDNutils.generate_xv_folds": {"tf": 1.4142135623730951}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}}, "df": 10}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.regularization.RegModule.forward": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.NDN.NDN.assemble_ffnetworks": {"tf": 1}, "NDNT.NDN.NDN.eval_models": {"tf": 1}, "NDNT.modules.regularization.Regularization": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1.4142135623730951}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1.4142135623730951}, "NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 1}}, "df": 8, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.utils.NDNutils.CPU_Unpickler.find_class": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.NDN.NDN.get_trainer": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.get_dataloaders": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.get_optimizer": {"tf": 1}, "NDNT.NDN.NDN.fit": {"tf": 2}, "NDNT.NDN.NDN.fit_dl": {"tf": 1}, "NDNT.NDN.NDN.save_model": {"tf": 1}, "NDNT.NDN.NDN.get_null_adjusted_ll": {"tf": 1}, "NDNT.NDN.NDN.load_model": {"tf": 1}, "NDNT.modules.activations.adaptive_elu": {"tf": 1}, "NDNT.modules.activations.AdaptiveELU.__init__": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchGenerator": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchIterator": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.BiConvLayer1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1.7320508075688772}, "NDNT.modules.layers.bilayers.ChannelConvLayer": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.TconvLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.STconvLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.get_weights": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1.7320508075688772}, "NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.get_weights": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.FixationLayer.__init__": {"tf": 2}, "NDNT.modules.layers.reslayers.IterLayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterTlayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.layers.timelayers.TimeLayer.__init__": {"tf": 1}, "NDNT.networks.FFnetwork.determine_input_dims": {"tf": 1.4142135623730951}, "NDNT.networks.ReadoutNetwork.determine_input_dims": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer.__init__": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer.checkpoint_model": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.__init__": {"tf": 1}, "NDNT.utils.DanUtils.design_matrix_drift": {"tf": 1}, "NDNT.utils.DanUtils.monocular_data_import": {"tf": 1}, "NDNT.utils.NDNutils.is_int": {"tf": 1}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 1.4142135623730951}, "NDNT.metrics.mse_loss.MseLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.unit_loss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"tf": 1.4142135623730951}, "NDNT.metrics.rmse_loss.RmseLoss.unit_loss": {"tf": 1}}, "df": 68}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.layers.lvlayers.LVLayer.forward": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.__init__": {"tf": 1}, "NDNT.modules.regularization.TikhanovC": {"tf": 1}, "NDNT.training.trainer.Trainer.fit_loop": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1}, "NDNT.utils.NDNutils.get_fit_versions": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_maxpenalty_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_localpenalty_matrix": {"tf": 1}}, "df": 13}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.modules.layers.lvlayers.LVLayerOLD.forward": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1}, "NDNT.modules.regularization.ConvReg.compute_reg_penalty": {"tf": 1}}, "df": 3}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.layers.ndnlayer.NDNLayer.set_parameters": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.networks.ReadoutNetwork": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.NDN.NDN.get_trainer": {"tf": 1}, "NDNT.training.earlystopping.EarlyStopping": {"tf": 1}}, "df": 2}}, "y": {"docs": {"NDNT.NDN.NDN.model_string": {"tf": 1}, "NDNT.modules.regularization.ConvReg.compute_reg_penalty": {"tf": 1}}, "df": 2}, "n": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.modules.layers.dimlayers.Dim0Layer.dim_info": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.dim_info": {"tf": 1}, "NDNT.networks.ScaffoldNetwork": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_log_epsilon": {"tf": 1}}, "df": 6}, "g": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1}}, "df": 2}}}}}}}, "e": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1}, "NDNT.training.trainer.Trainer": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}}, "df": 4, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.NDN.NDN.get_optimizer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.BiConvLayer1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.Dim0Layer.dim_info": {"tf": 1.7320508075688772}, "NDNT.modules.layers.laglayers.LagLayer": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.lvlayers.LVLayer.forward": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 2.23606797749979}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.reset_parameters": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.dim_info": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer": {"tf": 1}, "NDNT.modules.regularization.ConvReg.compute_reg_penalty": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian": {"tf": 1.4142135623730951}, "NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 2.23606797749979}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 2.449489742783178}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"tf": 2.449489742783178}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"tf": 2.23606797749979}}, "df": 28, "s": {"docs": {"NDNT.NDN.NDN.initialize_loss": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.get_weights": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1.7320508075688772}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.batchnorm_convert": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.preprocess_weights": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.__init__": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.preprocess_weights": {"tf": 1.4142135623730951}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 2.23606797749979}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.reset_parameters": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.initialize_gaussian_envelope": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.preprocess_weights": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.get_weights": {"tf": 1.7320508075688772}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1.7320508075688772}, "NDNT.modules.layers.normlayers.DivNormLayer.__init__": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.preprocess_weights": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.ReadoutLayer.get_weights": {"tf": 1.7320508075688772}, "NDNT.modules.layers.readouts.FixationLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.preprocess_weights": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.L1convLayer.reset_parameters2": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 2}, "NDNT.modules.layers.specialtylayers.MaskLayer.preprocess_weights": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.MaskLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.__init__": {"tf": 1}, "NDNT.modules.regularization.Regularization": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1.4142135623730951}, "NDNT.networks.FFnetwork.get_weights": {"tf": 1.4142135623730951}, "NDNT.utils.plotting.plot_filters_1D": {"tf": 1}, "NDNT.utils.plotting.plot_filters_2D": {"tf": 1}, "NDNT.utils.plotting.plot_filters_ST1D": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 1.4142135623730951}, "NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 1.7320508075688772}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 1.7320508075688772}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"tf": 1.7320508075688772}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 1.4142135623730951}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"tf": 1.7320508075688772}}, "df": 44}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.NDN.NDN.initialize_loss": {"tf": 2.449489742783178}, "NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 2.23606797749979}, "NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 2}, "NDNT.metrics.mse_loss.MseLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 2.23606797749979}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 2}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 2.23606797749979}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"tf": 2}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.unit_loss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 2.23606797749979}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"tf": 2}, "NDNT.metrics.rmse_loss.RmseLoss.unit_loss": {"tf": 1}}, "df": 13}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.modules.layers.timelayers.TimeLayer": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.__init__": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"tf": 1}}, "df": 4}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.modules.layers.lvlayers.LVLayerOLD": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1}, "NDNT.training.trainer.Trainer": {"tf": 1}}, "df": 3}}, "a": {"docs": {}, "df": 0, "k": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"NDNT.modules.layers.ndnlayer.NDNLayer.get_weights": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.get_weights": {"tf": 1}, "NDNT.utils.NDNutils.initialize_gaussian_envelope": {"tf": 1}}, "df": 3, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.utils.NDNutils.initialize_gaussian_envelope": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.NDN.NDN.get_trainer": {"tf": 2.23606797749979}, "NDNT.NDN.NDN.get_dataloaders": {"tf": 2.23606797749979}, "NDNT.NDN.NDN.get_optimizer": {"tf": 2.449489742783178}, "NDNT.NDN.NDN.fit": {"tf": 2.8284271247461903}, "NDNT.NDN.NDN.fit_dl": {"tf": 1}, "NDNT.NDN.NDN.compute_average_responses": {"tf": 1}, "NDNT.NDN.NDN.initialize_biases": {"tf": 1}, "NDNT.NDN.NDN.generate_predictions": {"tf": 2.449489742783178}, "NDNT.NDN.NDN.change_loss": {"tf": 1}, "NDNT.NDN.NDN.save_model": {"tf": 1}, "NDNT.NDN.NDN.load_model": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchGenerator": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchIterator": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 2.449489742783178}, "NDNT.modules.layers.bilayers.ChannelConvLayer": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 2.23606797749979}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 2.23606797749979}, "NDNT.modules.layers.convlayers.TconvLayer.plot_filters": {"tf": 1.7320508075688772}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 2.23606797749979}, "NDNT.modules.layers.convlayers.STconvLayer.plot_filters": {"tf": 1.7320508075688772}, "NDNT.modules.layers.dimlayers.Dim0Layer.dim_info": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 2.6457513110645907}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 2.23606797749979}, "NDNT.modules.layers.ndnlayer.NDNLayer.reset_parameters": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.plot_filters": {"tf": 1.7320508075688772}, "NDNT.modules.layers.ndnlayer.NDNLayer.dim_info": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 2.449489742783178}, "NDNT.modules.layers.normlayers.DivNormLayer.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.get_weights": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.FixationLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.plot_filters": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1}, "NDNT.networks.FFnetwork.prepare_regularization": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1}, "NDNT.training.lbfgs.LBFGS": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.line_search": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer.__init__": {"tf": 1.7320508075688772}, "NDNT.training.trainer.LBFGSTrainer.__init__": {"tf": 1}, "NDNT.utils.DanUtils.figure_export": {"tf": 1}, "NDNT.utils.NDNutils.save_checkpoint": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 1}}, "df": 49, "d": {"docs": {"NDNT.NDN.NDN": {"tf": 2.6457513110645907}, "NDNT.NDN.NDN.initialize_loss": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.eval_models": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1}, "NDNT.networks.ScaffoldNetwork": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1}, "NDNT.training.trainer.Trainer.prepare_fit": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import": {"tf": 1.4142135623730951}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 2.449489742783178}, "NDNT.utils.DanUtils.monocular_data_import": {"tf": 1.7320508075688772}, "NDNT.utils.NDNutils.fit_lbfgs": {"tf": 1}, "NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.load_checkpoint": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}}, "df": 17}, "r": {"docs": {"NDNT.modules.activations.adaptive_elu": {"tf": 1}, "NDNT.modules.activations.AdaptiveELU": {"tf": 1}}, "df": 2}, "s": {"docs": {"NDNT.modules.layers.dimlayers.Dim0Layer.dim_info": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.dim_info": {"tf": 1}, "NDNT.networks.FFnetwork.determine_input_dims": {"tf": 1}, "NDNT.networks.ReadoutNetwork.determine_input_dims": {"tf": 1}, "NDNT.training.lbfgs.LBFGS": {"tf": 1.7320508075688772}, "NDNT.training.lbfgs.LBFGS.line_search": {"tf": 1.7320508075688772}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1.7320508075688772}}, "df": 7}, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.modules.layers.ndnlayer.NDNLayer.initialize_gaussian_envelope": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.NDN.NDN.fit": {"tf": 1}, "NDNT.NDN.NDN.fit_dl": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.initialize_biases": {"tf": 1}, "NDNT.NDN.NDN.save_model": {"tf": 1}, "NDNT.NDN.NDN.save_model_chk": {"tf": 1}, "NDNT.NDN.NDN.get_activations": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.curvature_update": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1.7320508075688772}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1}, "NDNT.utils.DanUtils.monocular_data_import": {"tf": 1}, "NDNT.utils.NDNutils.shift_mat_zpad": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 1.7320508075688772}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 1.7320508075688772}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1.7320508075688772}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 1.7320508075688772}}, "df": 19}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1.4142135623730951}, "NDNT.utils.DanUtils.figure_export": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}, "NDNT.utils.DanUtils.monocular_data_import": {"tf": 1}, "NDNT.utils.NDNutils.get_max_samples": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_maxpenalty_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_localpenalty_matrix": {"tf": 1}}, "df": 9}}}}, "n": {"docs": {"NDNT.modules.regularization.Regularization": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.NDN.NDN.initialize_loss": {"tf": 2.23606797749979}, "NDNT.modules.activations.adaptive_elu": {"tf": 1}, "NDNT.modules.activations.AdaptiveELU": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}, "NDNT.modules.regularization.Regularization.unit_reg_convert": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 1.7320508075688772}, "NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 2}, "NDNT.metrics.mse_loss.MseLoss_datafilter.forward": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 1.7320508075688772}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 2}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.forward": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.unit_loss": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1.7320508075688772}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"tf": 2}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.forward": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.unit_loss": {"tf": 1.4142135623730951}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 1.7320508075688772}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"tf": 2}, "NDNT.metrics.rmse_loss.RmseLoss.forward": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.unit_loss": {"tf": 1}}, "df": 27, "s": {"docs": {"NDNT.NDN.NDN.eval_models": {"tf": 1}, "NDNT.NDN.NDN.get_null_adjusted_ll": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.get_weights": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.ReadoutLayer.get_weights": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.set_readout_locations": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.get_readout_locations": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.ReadoutLayer.passive_readout": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.unit_loss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.unit_loss": {"tf": 1}}, "df": 27}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.metrics.mse_loss.MseLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.unit_loss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.unit_loss": {"tf": 1}}, "df": 4}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"NDNT.modules.layers.bilayers.BiConvLayer1D.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.BiSTconv1D.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.ChannelConvLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.ConvLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.lvlayers.LVLayer.__init__": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.reset_parameters": {"tf": 1.7320508075688772}, "NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.FixationLayer.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterTlayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterSTlayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.Tlayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.L1convLayer.reset_parameters2": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.networks.ReadoutNetwork": {"tf": 1.4142135623730951}}, "df": 23}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.utils.NDNutils.generate_xv_folds": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.NDN.NDN.save_model_chk": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.training.trainer.Trainer": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}}, "df": 1}}}}}}}}}}}, "k": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.training.lbfgs.polyinterp": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.training.lbfgs.LBFGS.step": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.utils.NDNutils.CPU_Unpickler.find_class": {"tf": 1}}, "df": 1}}}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"tf": 1}}, "df": 8}}}}}}}}}}}, "p": {"docs": {"NDNT.modules.layers.laglayers.LagLayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.__init__": {"tf": 1}, "NDNT.modules.regularization.Regularization": {"tf": 1}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1}, "NDNT.training.trainer.Trainer.prepare_fit": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.tent_basis_generate": {"tf": 1}, "NDNT.utils.NDNutils.pixel2grid": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_readout": {"tf": 1}}, "df": 10, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.training.ada_hessian.AdaHessian": {"tf": 1}, "NDNT.training.lbfgs.LBFGS": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.curvature_update": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.step": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1}}, "df": 6}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}, "b": {"docs": {}, "df": 0, "c": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "c": {"docs": {"NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 2}}, "df": 1}}}, "e": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1}, "NDNT.utils.DanUtils.design_matrix_drift": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}, "NDNT.utils.NDNutils.CPU_Unpickler.find_class": {"tf": 1}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"tf": 1}}, "df": 10, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.NDN.NDN": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.assemble_ffnetworks": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.forward": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.dim_info": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.dim_info": {"tf": 1}, "NDNT.networks.FFnetwork.determine_input_dims": {"tf": 1.7320508075688772}, "NDNT.networks.ReadoutNetwork.determine_input_dims": {"tf": 1.7320508075688772}, "NDNT.networks.FFnet_external": {"tf": 2.449489742783178}, "NDNT.networks.FFnet_external.ffnet_dict": {"tf": 1.4142135623730951}, "NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_external": {"tf": 1.7320508075688772}, "NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 1}}, "df": 15, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.layers.externallayer.ExternalLayer.__init__": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.forward": {"tf": 1}}, "df": 2}}}}}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.modules.layers.externallayer.ExternalLayer": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.__init__": {"tf": 1}}, "df": 2}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.utils.NDNutils.NpEncoder": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {"NDNT.utils.NDNutils.NpEncoder": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer3d.passive_readout": {"tf": 1}, "NDNT.networks.ScaffoldNetwork": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1}, "NDNT.utils.NDNutils.get_max_samples": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1}}, "df": 6, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1}}, "df": 1}}}}}}}}}}}, "p": {"docs": {"NDNT.modules.experiment_sampler.ExperimentBatchIterator": {"tf": 1.4142135623730951}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.NDN.NDN.get_dataloaders": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchGenerator": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchIterator": {"tf": 1.4142135623730951}, "NDNT.modules.experiment_sampler.construct_exp_to_time": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.__init__": {"tf": 1.7320508075688772}, "NDNT.utils.DanUtils.binocular_data_import": {"tf": 1.7320508075688772}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 2}}, "df": 8, "s": {"docs": {"NDNT.modules.experiment_sampler.ExperimentBatchIterator": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentSampler": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}}, "df": 4}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.modules.regularization.Regularization": {"tf": 1}}, "df": 1}}}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.networks.ReadoutNetwork": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.training.ada_hessian.AdaHessian": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.modules.activations.adaptive_elu": {"tf": 1}, "NDNT.modules.activations.AdaptiveELU": {"tf": 1}}, "df": 2}}}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.utils.DanUtils.figure_export": {"tf": 1.7320508075688772}, "NDNT.utils.DanUtils.matlab_export": {"tf": 1}}, "df": 2}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.modules.layers.laglayers.LagLayer": {"tf": 1}}, "df": 1}, "l": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.modules.layers.normlayers.DivNormLayer": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer.set_readout_locations": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {"NDNT.utils.DanUtils.binocular_data_import": {"tf": 1.4142135623730951}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1.4142135623730951}, "NDNT.utils.DanUtils.monocular_data_import": {"tf": 1.4142135623730951}}, "df": 3}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.networks.ReadoutNetwork.forward": {"tf": 1}, "NDNT.utils.NDNutils.load_checkpoint": {"tf": 1}, "NDNT.utils.NDNutils.ensure_dir": {"tf": 1}}, "df": 3}}}, "t": {"docs": {"NDNT.training.trainer.Trainer.graceful_exit": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.NpEncoder.default": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 1}}, "df": 6}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.utils.NDNutils.NpEncoder.default": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {"NDNT.NDN.NDN": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.networks.ScaffoldNetwork": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1}}, "df": 3}}}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.networks.FFnet_external": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.utils.ffnet_dicts.ffnet_dict_readout": {"tf": 1}}, "df": 1}}}}}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.utils.NDNutils.create_time_embedding": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1}}, "df": 2}}}}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"NDNT.NDN.NDN.assemble_ffnetworks": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.forward": {"tf": 1}, "NDNT.NDN.NDN.eval_models": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchIterator": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D": {"tf": 2}, "NDNT.modules.layers.bilayers.BiSTconv1D": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.dim_info": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.__init__": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.lvlayers.LVLayerOLD": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.dim_info": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.rotation_matrix_tensor": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.rotation_matrix_tensor": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.Tlayer.plot_filters": {"tf": 1}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1}, "NDNT.modules.regularization.LocalityReg": {"tf": 1}, "NDNT.modules.regularization.ActivityReg": {"tf": 1}, "NDNT.networks.FFnetwork": {"tf": 1}, "NDNT.networks.FFnetwork.determine_input_dims": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1}, "NDNT.networks.ReadoutNetwork.determine_input_dims": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.set_hessian": {"tf": 1}, "NDNT.training.earlystopping.EarlyStopping": {"tf": 1}, "NDNT.training.lbfgs.polyinterp": {"tf": 1}, "NDNT.utils.DanUtils.design_matrix_drift": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 1}, "NDNT.utils.NDNutils.tent_basis_generate": {"tf": 1}, "NDNT.utils.NDNutils.generate_xv_folds": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.initialize_gaussian_envelope": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 1.7320508075688772}, "NDNT.metrics.mse_loss.MseLoss_datafilter.forward": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 1.7320508075688772}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.forward": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.unit_loss": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"tf": 1.7320508075688772}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.forward": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.unit_loss": {"tf": 1.4142135623730951}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"tf": 1.7320508075688772}, "NDNT.metrics.rmse_loss.RmseLoss.forward": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.unit_loss": {"tf": 1}}, "df": 52}}, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.NDN.NDN.get_trainer": {"tf": 2.23606797749979}, "NDNT.training.earlystopping.EarlyStopping": {"tf": 1}, "NDNT.training.trainer.Trainer.__init__": {"tf": 1.4142135623730951}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}}, "df": 4, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.training.trainer.Trainer.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.utils.DanUtils.binocular_data_import": {"tf": 1.7320508075688772}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1.4142135623730951}, "NDNT.utils.DanUtils.monocular_data_import": {"tf": 1}}, "df": 3}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"NDNT.training.trainer.Trainer.validate_one_epoch": {"tf": 1}, "NDNT.training.trainer.Trainer.train_one_epoch": {"tf": 1.7320508075688772}, "NDNT.training.trainer.Trainer.checkpoint_model": {"tf": 1.4142135623730951}, "NDNT.training.trainer.LBFGSTrainer.train_one_epoch": {"tf": 1.7320508075688772}, "NDNT.training.trainer.TemperatureCalibratedTrainer.validate_one_epoch": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 1}}, "df": 9, "s": {"docs": {"NDNT.NDN.NDN.get_trainer": {"tf": 1}, "NDNT.training.trainer.Trainer.__init__": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer.fit_loop": {"tf": 1.4142135623730951}}, "df": 3}}}}, "s": {"docs": {"NDNT.training.ada_hessian.AdaHessian": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.curvature_update": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_log_epsilon": {"tf": 1.7320508075688772}}, "df": 1}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1.7320508075688772}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1}}, "df": 3, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.NDN.NDN.eval_models": {"tf": 1.7320508075688772}}, "df": 1, "d": {"docs": {"NDNT.NDN.NDN.eval_models": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.NDN.NDN.eval_models": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1}}, "df": 2, "s": {"docs": {"NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1.7320508075688772}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1}}, "df": 2}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.modules.regularization.Regularization": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1}}, "df": 2}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.modules.regularization.RegModule.forward": {"tf": 1}, "NDNT.utils.NDNutils.get_max_samples": {"tf": 1}}, "df": 2}}, "n": {"docs": {"NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.activations.AdaptiveELU": {"tf": 1}}, "df": 1}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.initialize_gaussian_envelope": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}}, "df": 3}}}}}}, "d": {"docs": {"NDNT.modules.layers.timelayers.TimeLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer.graceful_exit": {"tf": 1}, "NDNT.utils.DanUtils.design_matrix_drift": {"tf": 1}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 1}}, "df": 4, "s": {"docs": {"NDNT.modules.layers.laglayers.LagLayer": {"tf": 1}}, "df": 1}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.__init__": {"tf": 1}}, "df": 2}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.networks.ScaffoldNetwork": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1}}, "df": 3}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1}}, "df": 1}}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1.7320508075688772}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.utils.NDNutils.NpEncoder": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"NDNT.training.trainer.Trainer": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.experiment_sampler.ExperimentSampler": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1}}, "df": 2}}}}}}, "u": {"docs": {"NDNT.modules.layers.bilayers.BiConvLayer1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1}}, "df": 10}, "s": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.layers.specialtylayers.Tlayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.__init__": {"tf": 1}, "NDNT.utils.NDNutils.NpEncoder.default": {"tf": 1}}, "df": 3, "w": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.regularization.ActivityReg": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.modules.regularization.ConvReg.compute_reg_penalty": {"tf": 1}}, "df": 1}}}}}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.utils.DanUtils.binocular_data_import": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}}, "df": 2}}}}}}}}, "y": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.layers.bilayers.BinocLayer1D": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.ReadoutLayer.forward": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.forward": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.forward": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}}, "df": 6, "s": {"docs": {"NDNT.modules.layers.bilayers.BinocLayer1D": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D": {"tf": 1}}, "df": 2}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.modules.layers.bilayers.BinocLayer1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.layer_dict": {"tf": 1}}, "df": 26}}}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.modules.layers.laglayers.LagLayer": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.utils.DanUtils.time_embedding_simple": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.utils.NDNutils.create_time_embedding": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1.4142135623730951}}, "df": 2}}}, "s": {"docs": {"NDNT.utils.DanUtils.time_embedding_simple": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {"NDNT.utils.MattUtils.smooth_ema": {"tf": 1}}, "df": 1}}, "i": {"docs": {"NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}}, "df": 7, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.networks.FFnetwork.determine_input_dims": {"tf": 1}, "NDNT.networks.ReadoutNetwork.determine_input_dims": {"tf": 1}}, "df": 2}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer.passive_readout": {"tf": 1}}, "df": 1, "s": {"docs": {"NDNT.modules.layers.dimlayers.ChannelLayer": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.metrics.mse_loss.MseLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.unit_loss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.unit_loss": {"tf": 1}}, "df": 4}}}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.training.lbfgs.polyinterp": {"tf": 1}, "NDNT.training.lbfgs.LBFGS": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1}}, "df": 3}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.utils.DanUtils.design_matrix_drift": {"tf": 1}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 1}}, "df": 2, "s": {"docs": {"NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1.4142135623730951}}, "df": 1, "a": {"docs": {"NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1.4142135623730951}}, "df": 1}, "c": {"docs": {"NDNT.training.trainer.Trainer": {"tf": 1}}, "df": 1}}, "g": {"docs": {"NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1}}, "df": 1}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.metrics.mse_loss.MseLoss_datafilter.forward": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.forward": {"tf": 1.4142135623730951}, "NDNT.metrics.rmse_loss.RmseLoss.unit_loss": {"tf": 1}}, "df": 3, "s": {"docs": {"NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "m": {"docs": {"NDNT.modules.layers.bilayers.ChannelConvLayer": {"tf": 1}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1}, "NDNT.modules.regularization.ConvReg.compute_reg_penalty": {"tf": 1}, "NDNT.training.lbfgs.polyinterp": {"tf": 1}}, "df": 4, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.NDN.NDN.__init__": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.assemble_ffnetworks": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.initialize_loss": {"tf": 1}, "NDNT.NDN.NDN.change_loss": {"tf": 1}, "NDNT.NDN.NDN.get_activations": {"tf": 1}, "NDNT.modules.activations.Square.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.RegModule.__init__": {"tf": 1}, "NDNT.modules.regularization.RegModule.forward": {"tf": 1}, "NDNT.modules.regularization.DiagonalReg": {"tf": 1}, "NDNT.modules.regularization.DiagonalReg.__init__": {"tf": 1}, "NDNT.modules.regularization.InlineReg": {"tf": 1}, "NDNT.modules.regularization.InlineReg.__init__": {"tf": 1}, "NDNT.modules.regularization.ConvReg": {"tf": 1}, "NDNT.modules.regularization.ConvReg.__init__": {"tf": 1}, "NDNT.modules.regularization.Tikhanov": {"tf": 1}, "NDNT.modules.regularization.TikhanovC": {"tf": 1}, "NDNT.networks.FFnetwork.__init__": {"tf": 1.4142135623730951}, "NDNT.networks.ScaffoldNetwork.__init__": {"tf": 1.4142135623730951}, "NDNT.networks.ScaffoldNetwork3d.__init__": {"tf": 1.4142135623730951}, "NDNT.networks.ReadoutNetwork.__init__": {"tf": 1.4142135623730951}, "NDNT.networks.FFnet_external": {"tf": 2}, "NDNT.networks.FFnet_external.__init__": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer.__init__": {"tf": 1}, "NDNT.training.trainer.Trainer.fit": {"tf": 1}, "NDNT.training.trainer.Trainer.prepare_fit": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer.fit_loop": {"tf": 1}, "NDNT.training.trainer.Trainer.validate_one_epoch": {"tf": 1}, "NDNT.training.trainer.Trainer.train_one_epoch": {"tf": 1}, "NDNT.training.trainer.Trainer.train_one_step": {"tf": 1}, "NDNT.training.trainer.Trainer.checkpoint_model": {"tf": 1}, "NDNT.training.trainer.Trainer.graceful_exit": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.fit": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.fit_data_dict": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.train_one_epoch": {"tf": 1}, "NDNT.training.trainer.TemperatureCalibratedTrainer.validate_one_epoch": {"tf": 1}, "NDNT.utils.NDNutils.CPU_Unpickler.find_class": {"tf": 1.4142135623730951}, "NDNT.metrics.mse_loss.MseLoss_datafilter.__init__": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.__init__": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.__init__": {"tf": 1.4142135623730951}, "NDNT.metrics.rmse_loss.RmseLoss.__init__": {"tf": 1.4142135623730951}}, "df": 40, "s": {"docs": {"NDNT.NDN.NDN": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.Regularization": {"tf": 1}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1}, "NDNT.modules.regularization.Regularization.build_reg_modules": {"tf": 1}, "NDNT.modules.regularization.RegModule": {"tf": 1}, "NDNT.networks.FFnetwork.prepare_regularization": {"tf": 1}, "NDNT.networks.FFnet_external": {"tf": 1}}, "df": 7}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.NDN.NDN.assemble_ffnetworks": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 1}, "NDNT.training.lbfgs.LBFGS": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1.4142135623730951}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 2.23606797749979}}, "df": 5, "l": {"docs": {"NDNT.NDN.NDN": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.validation_step": {"tf": 1}, "NDNT.NDN.NDN.compute_reg_loss": {"tf": 1}, "NDNT.NDN.NDN.prepare_regularization": {"tf": 1}, "NDNT.NDN.NDN.fit": {"tf": 2}, "NDNT.NDN.NDN.fit_dl": {"tf": 2.23606797749979}, "NDNT.NDN.NDN.eval_models": {"tf": 1}, "NDNT.NDN.NDN.change_loss": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.save_model_zip": {"tf": 2}, "NDNT.NDN.NDN.load_model_zip": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.save_model_chk": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.load_model": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.load_model_chk": {"tf": 2.8284271247461903}, "NDNT.NDN.NDN.model_string": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.step": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.step": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1.4142135623730951}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew.step": {"tf": 1}, "NDNT.training.trainer.Trainer.__init__": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer.fit": {"tf": 1.7320508075688772}, "NDNT.training.trainer.Trainer.prepare_fit": {"tf": 2.23606797749979}, "NDNT.training.trainer.Trainer.fit_loop": {"tf": 1.7320508075688772}, "NDNT.training.trainer.Trainer.validate_one_epoch": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer.train_one_epoch": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer.train_one_step": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer.checkpoint_model": {"tf": 2}, "NDNT.training.trainer.Trainer.graceful_exit": {"tf": 1.4142135623730951}, "NDNT.training.trainer.LBFGSTrainer.fit": {"tf": 1.7320508075688772}, "NDNT.training.trainer.LBFGSTrainer.fit_data_dict": {"tf": 1.4142135623730951}, "NDNT.training.trainer.LBFGSTrainer.train_one_epoch": {"tf": 1.4142135623730951}, "NDNT.training.trainer.TemperatureCalibratedTrainer.validate_one_epoch": {"tf": 1.4142135623730951}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}, "NDNT.utils.NDNutils.fit_lbfgs": {"tf": 2}, "NDNT.utils.NDNutils.save_checkpoint": {"tf": 2}, "NDNT.utils.NDNutils.load_checkpoint": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.get_fit_versions": {"tf": 1.7320508075688772}, "NDNT.utils.NDNutils.get_max_samples": {"tf": 1}}, "df": 39, "s": {"docs": {"NDNT.NDN.NDN.eval_models": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.save_model": {"tf": 1}, "NDNT.NDN.NDN.save_model_chk": {"tf": 1}}, "df": 3}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.modules.activations.adaptive_elu": {"tf": 1}, "NDNT.modules.activations.AdaptiveELU.__init__": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.step": {"tf": 1}}, "df": 3}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.training.lbfgs.polyinterp": {"tf": 1}, "NDNT.utils.DanUtils.imagesc": {"tf": 1}}, "df": 2}}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.utils.plotting.plot_filters_ST2D": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1}}, "df": 2}}}}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.NDN.NDN.get_trainer": {"tf": 1}, "NDNT.training.earlystopping.EarlyStopping": {"tf": 1}}, "df": 2}}}}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.layers.bilayers.BinocLayer1D": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1}, "NDNT.modules.regularization.ConvReg.compute_reg_penalty": {"tf": 1.4142135623730951}, "NDNT.utils.DanUtils.fold_sample": {"tf": 1}}, "df": 3}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.training.lbfgs.LBFGS.step": {"tf": 1}, "NDNT.training.trainer.Trainer": {"tf": 1}}, "df": 2}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.utils.NDNutils.shift_mat_zpad": {"tf": 1}}, "df": 1}}}, "u": {"docs": {"NDNT.modules.layers.lvlayers.LVLayerOLD.__init__": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 2.23606797749979}, "NDNT.modules.layers.readouts.ReadoutLayer.get_readout_locations": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.passive_readout": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import": {"tf": 1}}, "df": 8, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {"NDNT.NDN.NDN.get_dataloaders": {"tf": 1}, "NDNT.training.lbfgs.LBFGS": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer.__init__": {"tf": 1}, "NDNT.utils.DanUtils.time_embedding_simple": {"tf": 1}}, "df": 4, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.NDN.NDN.assemble_ffnetworks": {"tf": 1}, "NDNT.NDN.NDN.forward": {"tf": 1}, "NDNT.NDN.NDN.eval_models": {"tf": 1}, "NDNT.training.trainer.Trainer.__init__": {"tf": 1}, "NDNT.utils.plotting.plot_filters_1D": {"tf": 1}, "NDNT.utils.plotting.plot_filters_2D": {"tf": 1}, "NDNT.utils.plotting.plot_filters_ST1D": {"tf": 1}}, "df": 7}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "p": {"docs": {"NDNT.NDN.NDN.get_dataloaders": {"tf": 1}}, "df": 1}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}}, "df": 1}}}}}}}}}}, "s": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}}, "df": 3, "t": {"docs": {"NDNT.NDN.NDN.assemble_ffnetworks": {"tf": 1}, "NDNT.NDN.NDN.initialize_loss": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.passive_readout": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.layer_dict": {"tf": 1}, "NDNT.networks.FFnetwork.determine_input_dims": {"tf": 1}, "NDNT.networks.ReadoutNetwork.determine_input_dims": {"tf": 1}, "NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1}, "NDNT.utils.NDNutils.tent_basis_generate": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_external": {"tf": 1.4142135623730951}, "NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 1}}, "df": 41}}, "/": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"NDNT.modules.layers.lvlayers.LVLayerOLD": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.training.lbfgs.polyinterp": {"tf": 1}, "NDNT.training.lbfgs.LBFGS": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1}}, "df": 3}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {"NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"tf": 1}}, "df": 4}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.modules.layers.orilayers.OriConvLayer.get_rot_mat": {"tf": 1}, "NDNT.utils.DanUtils.matlab_export": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}}, "df": 4, "c": {"docs": {}, "df": 0, "h": {"docs": {"NDNT.NDN.NDN.assemble_ffnetworks": {"tf": 1}, "NDNT.networks.FFnetwork.determine_input_dims": {"tf": 1}, "NDNT.networks.ReadoutNetwork.determine_input_dims": {"tf": 1}}, "df": 3}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {"NDNT.modules.layers.laglayers.LagLayer.plot_filters": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"NDNT.modules.layers.lvlayers.LVLayer": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.rotation_matrix_tensor": {"tf": 1.7320508075688772}, "NDNT.modules.layers.orilayers.OriConvLayer.rotation_matrix_tensor": {"tf": 1.7320508075688772}, "NDNT.modules.layers.orilayers.OriConvLayer.get_rot_mat": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.ConvReg.compute_reg_penalty": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.two_loop_recursion": {"tf": 1}, "NDNT.utils.DanUtils.design_matrix_drift": {"tf": 1.7320508075688772}, "NDNT.utils.NDNutils.create_time_embedding": {"tf": 2}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 2}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.shift_mat_zpad": {"tf": 1.4142135623730951}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 2.23606797749979}, "NDNT.utils.create_reg_matrices.create_maxpenalty_matrix": {"tf": 2.449489742783178}, "NDNT.utils.create_reg_matrices.create_localpenalty_matrix": {"tf": 2.449489742783178}}, "df": 15}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.regularization.Regularization": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1}, "NDNT.training.lbfgs.LBFGS": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}}, "df": 4}}}}}, "s": {"docs": {"NDNT.modules.regularization.Regularization": {"tf": 1}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1}}, "df": 2}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {"NDNT.training.lbfgs.polyinterp": {"tf": 1}, "NDNT.training.lbfgs.LBFGS": {"tf": 1.7320508075688772}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}}, "df": 3}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1.4142135623730951}}, "df": 1}}, "s": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}}, "df": 1}}}}}}}, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}}, "df": 1}}}}}}}, "x": {"docs": {"NDNT.NDN.NDN.get_optimizer": {"tf": 1}, "NDNT.training.lbfgs.polyinterp": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1.7320508075688772}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 2.23606797749979}, "NDNT.training.trainer.Trainer.__init__": {"tf": 1}, "NDNT.utils.NDNutils.save_checkpoint": {"tf": 1.4142135623730951}, "NDNT.utils.create_reg_matrices.create_maxpenalty_matrix": {"tf": 1.7320508075688772}, "NDNT.utils.create_reg_matrices.create_localpenalty_matrix": {"tf": 1.7320508075688772}}, "df": 8, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"NDNT.NDN.NDN.get_optimizer": {"tf": 1}, "NDNT.training.lbfgs.polyinterp": {"tf": 1.4142135623730951}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 2.23606797749979}, "NDNT.training.trainer.Trainer.__init__": {"tf": 1}, "NDNT.utils.DanUtils.find_peaks": {"tf": 1}, "NDNT.utils.NDNutils.get_max_samples": {"tf": 1}}, "df": 6}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1.4142135623730951}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}}, "df": 7}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.utils.create_reg_matrices.create_maxpenalty_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_localpenalty_matrix": {"tf": 1}}, "df": 2}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.NDN.NDN.fit": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.fit_dl": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1}, "NDNT.training.trainer.Trainer.fit_loop": {"tf": 1}}, "df": 4}}, "s": {"docs": {}, "df": 0, "k": {"docs": {"NDNT.NDN.NDN.eval_models": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.layers.specialtylayers.MaskLayer.layer_dict": {"tf": 1.4142135623730951}}, "df": 11, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.layers.specialtylayers.MaskLayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.preprocess_weights": {"tf": 1}}, "df": 3}}}}}}}, "p": {"docs": {"NDNT.modules.experiment_sampler.ExperimentBatchIterator": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.plot_filters": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1}, "NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1}, "NDNT.utils.NDNutils.load_checkpoint": {"tf": 1}}, "df": 5, "s": {"docs": {"NDNT.modules.experiment_sampler.construct_exp_to_time": {"tf": 1}}, "df": 1}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.layers.lvlayers.LVLayerOLD": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.__init__": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_NIM": {"tf": 1}}, "df": 4, "s": {"docs": {"NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}, "NDNT.networks.FFnetwork.prepare_regularization": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}}, "df": 9}}}, "n": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.modules.layers.lvlayers.LVLayer": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian": {"tf": 1}, "NDNT.utils.NDNutils.is_int": {"tf": 1}, "NDNT.utils.NDNutils.generate_xv_folds": {"tf": 1}}, "df": 4}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.regularization.Regularization.__init__": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 1}}, "df": 2}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.modules.regularization.TikhanovC": {"tf": 1}}, "df": 1}}}}}}}}}, "k": {"docs": {"NDNT.training.lbfgs.polyinterp": {"tf": 1}, "NDNT.training.lbfgs.LBFGS": {"tf": 1.4142135623730951}}, "df": 2}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.training.ada_hessian.AdaHessian": {"tf": 1}, "NDNT.training.lbfgs.LBFGS": {"tf": 1.7320508075688772}}, "df": 2}}}}}, "y": {"docs": {"NDNT.utils.NDNutils.CPU_Unpickler.find_class": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.NDN.NDN.compute_network_outputs": {"tf": 1}, "NDNT.NDN.NDN.fit": {"tf": 1}, "NDNT.NDN.NDN.initialize_loss": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.initialize_biases": {"tf": 1}, "NDNT.NDN.NDN.change_loss": {"tf": 1}, "NDNT.NDN.NDN.get_weights": {"tf": 1}, "NDNT.NDN.NDN.get_readout_locations": {"tf": 1}, "NDNT.NDN.NDN.passive_readout": {"tf": 1}, "NDNT.NDN.NDN.set_parameters": {"tf": 1}, "NDNT.NDN.NDN.set_reg_val": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchGenerator.next": {"tf": 1}, "NDNT.training.lbfgs.LBFGS": {"tf": 2}, "NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.CPU_Unpickler.find_class": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.NpEncoder": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.NpEncoder.default": {"tf": 1.4142135623730951}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}}, "df": 17, "s": {"docs": {"NDNT.modules.layers.dimlayers.Dim0Layer.dim_info": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.dim_info": {"tf": 1}, "NDNT.training.lbfgs.LBFGS": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1.4142135623730951}}, "df": 4}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"NDNT.NDN.NDN.get_trainer": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.NDN.NDN.get_dataloaders": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.generate_predictions": {"tf": 1}, "NDNT.training.lbfgs.LBFGS": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.get_max_samples": {"tf": 1.7320508075688772}}, "df": 5}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.initialize_spatial_mapping": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1.4142135623730951}, "NDNT.networks.ReadoutNetwork": {"tf": 1.4142135623730951}, "NDNT.metrics.mse_loss.MseLoss_datafilter.forward": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.forward": {"tf": 1.4142135623730951}, "NDNT.metrics.rmse_loss.RmseLoss.unit_loss": {"tf": 1}}, "df": 7, "s": {"docs": {"NDNT.modules.layers.dimlayers.DimSPLayer": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 1}}, "df": 2}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 1}}, "df": 4}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.training.earlystopping.EarlyStopping": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.training.lbfgs.polyinterp": {"tf": 1.4142135623730951}}, "df": 1, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"NDNT.NDN.NDN.get_trainer": {"tf": 1}, "NDNT.training.earlystopping.EarlyStopping": {"tf": 1}, "NDNT.training.lbfgs.polyinterp": {"tf": 2.449489742783178}}, "df": 3}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.training.lbfgs.polyinterp": {"tf": 1.4142135623730951}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"NDNT.training.lbfgs.polyinterp": {"tf": 1}, "NDNT.training.lbfgs.LBFGS": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.layers.bilayers.BiSTconv1D": {"tf": 1}}, "df": 1}}}, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer3d.passive_readout": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.training.lbfgs.polyinterp": {"tf": 1}, "NDNT.training.lbfgs.LBFGS": {"tf": 1.7320508075688772}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1}}, "df": 3}}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.utils.NDNutils.generate_xv_folds": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.NDN.NDN.eval_models": {"tf": 1}}, "df": 1}}}, "*": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.modules.layers.bilayers.ChannelConvLayer": {"tf": 1}}, "df": 1}}, "y": {"docs": {"NDNT.modules.regularization.Regularization.__init__": {"tf": 1}}, "df": 1}, "c": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}}, "df": 1}}}}}}}}}, "p": {"docs": {"NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 2}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1}}, "df": 2, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.NDN.NDN": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_log_epsilon": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.forward": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.forward": {"tf": 1}}, "df": 5}}}}, "n": {"docs": {}, "df": 0, "t": {"1": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.networks.ScaffoldNetwork": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1}}, "df": 3}}}}}}}}}}, "docs": {"NDNT.modules.layers.lvlayers.LVLayer": {"tf": 1.4142135623730951}, "NDNT.training.lbfgs.polyinterp": {"tf": 1}, "NDNT.utils.DanUtils.design_matrix_drift": {"tf": 1}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 1}}, "df": 4, "s": {"docs": {"NDNT.modules.layers.lvlayers.LVLayer.__init__": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.__init__": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1}, "NDNT.training.lbfgs.polyinterp": {"tf": 2.23606797749979}, "NDNT.utils.DanUtils.find_peaks": {"tf": 1}, "NDNT.utils.DanUtils.design_matrix_drift": {"tf": 1.7320508075688772}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 2}, "NDNT.utils.NDNutils.tent_basis_generate": {"tf": 1}}, "df": 9}}}}, "s": {"docs": {"NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.__init__": {"tf": 1}}, "df": 10, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.activations.AdaptiveELU": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1}, "NDNT.utils.NDNutils.shift_mat_zpad": {"tf": 1}}, "df": 10}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.modules.layers.lvlayers.LVLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.__init__": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.preprocess_weights": {"tf": 1}}, "df": 3}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.networks.ReadoutNetwork": {"tf": 1}}, "df": 1, "s": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1}}, "df": 2}}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.regularization.ConvReg.compute_reg_penalty": {"tf": 1}, "NDNT.utils.NDNutils.NpEncoder": {"tf": 1}}, "df": 2}, "y": {"docs": {"NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}}, "df": 1}}}}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.training.ada_hessian.AdaHessian": {"tf": 1}}, "df": 1}, "l": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.curvature_update": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1}}, "df": 4}}}}, "l": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.training.lbfgs.polyinterp": {"tf": 2}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "p": {"docs": {"NDNT.training.lbfgs.polyinterp": {"tf": 1}}, "df": 1}}}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"NDNT.modules.layers.ndnlayer.NDNLayer.reset_parameters": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.reset_parameters2": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.get_params": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1}}, "df": 4, "s": {"docs": {"NDNT.NDN.NDN": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.set_parameters": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1}, "NDNT.utils.NDNutils.tent_basis_generate": {"tf": 1.4142135623730951}, "NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 1}}, "df": 6}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.NDN.NDN.set_parameters": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.reset_parameters": {"tf": 1}, "NDNT.modules.regularization.Regularization.set_reg_val": {"tf": 1}, "NDNT.networks.FFnetwork.set_parameters": {"tf": 1.4142135623730951}, "NDNT.networks.FFnet_external.set_params": {"tf": 1.4142135623730951}, "NDNT.training.ada_hessian.AdaHessian": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.set_hessian": {"tf": 1}, "NDNT.training.lbfgs.LBFGS": {"tf": 1.4142135623730951}, "NDNT.training.lbfgs.LBFGS.step": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1.4142135623730951}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.get_max_samples": {"tf": 1}}, "df": 12, "s": {"docs": {"NDNT.NDN.NDN": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.list_parameters": {"tf": 1}, "NDNT.NDN.NDN.set_parameters": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.save_model_zip": {"tf": 1}, "NDNT.NDN.NDN.load_model_zip": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.ChannelConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.ConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.TconvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.STconvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1.7320508075688772}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.reset_parameters": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.orilayers.OriLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.orilayers.OriConvLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.orilayers.ConvLayer3D.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.ReadoutLayer3d.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.FixationLayer.initialize": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterSTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.Tlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.reset_parameters2": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.L1convLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.MaskLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1}, "NDNT.networks.FFnetwork": {"tf": 1}, "NDNT.networks.FFnetwork.list_parameters": {"tf": 1.4142135623730951}, "NDNT.networks.FFnetwork.set_parameters": {"tf": 1.4142135623730951}, "NDNT.networks.ReadoutNetwork": {"tf": 1}, "NDNT.networks.FFnet_external.list_params": {"tf": 1.4142135623730951}, "NDNT.networks.FFnet_external.set_params": {"tf": 1.4142135623730951}, "NDNT.training.ada_hessian.AdaHessian": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.get_params": {"tf": 1.4142135623730951}, "NDNT.training.lbfgs.LBFGS": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.step": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1.7320508075688772}, "NDNT.utils.NDNutils.tent_basis_generate": {"tf": 1}, "NDNT.utils.NDNutils.get_max_samples": {"tf": 1.4142135623730951}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_maxpenalty_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_localpenalty_matrix": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_readout": {"tf": 1}}, "df": 63}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.modules.layers.laglayers.LagLayer.__init__": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.__init__": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1}}, "df": 5}}}, "t": {"docs": {"NDNT.utils.DanUtils.binocular_data_import": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.regularization.Regularization.__init__": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}}, "df": 2}}}}}}, "s": {"docs": {"NDNT.networks.FFnet_external": {"tf": 1}}, "df": 1}, "l": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.utils.DanUtils.binocular_data_import": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.NDN.NDN.forward": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.initialize_loss": {"tf": 1}, "NDNT.modules.activations.Square.forward": {"tf": 1}, "NDNT.modules.activations.AdaptiveELU.forward": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.forward": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.forward": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.forward": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.__init__": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.forward": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.__init__": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.forward": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.__init__": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.forward": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.forward": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.forward": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.forward": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.forward": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.passive_readout": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.forward": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.forward": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.forward": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.forward": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.reset_parameters2": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.forward": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.__init__": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.forward": {"tf": 1}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1}, "NDNT.modules.regularization.Regularization.set_reg_val": {"tf": 1}, "NDNT.modules.regularization.RegModule.forward": {"tf": 1}, "NDNT.networks.FFnetwork.forward": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.forward": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d.forward": {"tf": 1}, "NDNT.networks.FFnet_external.forward": {"tf": 1}, "NDNT.utils.NDNutils.NpEncoder.default": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_external": {"tf": 1}}, "df": 53, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.NDN.NDN.assemble_ffnetworks": {"tf": 1}, "NDNT.NDN.NDN.get_trainer": {"tf": 1}, "NDNT.NDN.NDN.get_weights": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.__init__": {"tf": 1}, "NDNT.modules.regularization.Regularization": {"tf": 1}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1}, "NDNT.networks.FFnetwork.determine_input_dims": {"tf": 1.7320508075688772}, "NDNT.networks.FFnetwork.get_weights": {"tf": 1}, "NDNT.networks.ReadoutNetwork.determine_input_dims": {"tf": 1.7320508075688772}, "NDNT.utils.NDNutils.CPU_Unpickler.find_class": {"tf": 1}, "NDNT.utils.NDNutils.initialize_gaussian_envelope": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_external": {"tf": 1.7320508075688772}}, "df": 13}, "s": {"docs": {"NDNT.modules.layers.lvlayers.LVLayer": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.NDN.NDN.passive_readout": {"tf": 1.4142135623730951}}, "df": 1}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.utils.ffnet_dicts.ffnet_dict_external": {"tf": 1}, "NDNT.utils.plotting.plot_filters_1D": {"tf": 1}, "NDNT.utils.plotting.plot_filters_2D": {"tf": 1}, "NDNT.utils.plotting.plot_filters_ST1D": {"tf": 1}}, "df": 4}}}}, "t": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1}, "NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1}}, "df": 2}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.NDN.NDN.get_trainer": {"tf": 1}, "NDNT.training.earlystopping.EarlyStopping": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "h": {"docs": {"NDNT.NDN.NDN.load_model": {"tf": 1}, "NDNT.NDN.NDN.load_model_chk": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer.__init__": {"tf": 1}, "NDNT.utils.NDNutils.save_checkpoint": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.load_checkpoint": {"tf": 1}}, "df": 5}}, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.modules.layers.bilayers.BinocLayer1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1}, "NDNT.utils.NDNutils.shift_mat_zpad": {"tf": 1}}, "df": 12}}}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.layers.dimlayers.Dim0Layer.dim_info": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.dim_info": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.training.lbfgs.LBFGS.curvature_update": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1}}, "df": 2, "s": {"docs": {"NDNT.modules.regularization.Regularization.__init__": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.NDN.NDN.save_model": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.get_rot_mat": {"tf": 1}, "NDNT.utils.NDNutils.get_max_samples": {"tf": 1}}, "df": 3, "s": {"docs": {"NDNT.NDN.NDN.assemble_ffnetworks": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.utils.DanUtils.monocular_data_import": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.utils.NDNutils.save_checkpoint": {"tf": 1}, "NDNT.utils.NDNutils.load_checkpoint": {"tf": 1}, "NDNT.utils.NDNutils.ensure_dir": {"tf": 1}}, "df": 3}}}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.NDN.NDN.assemble_ffnetworks": {"tf": 1}}, "df": 1, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.networks.FFnet_external": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.utils.DanUtils.find_peaks": {"tf": 1}}, "df": 1}}}}}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.NDN.NDN.plot_filters": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.plot_filters": {"tf": 1.7320508075688772}, "NDNT.modules.layers.convlayers.STconvLayer.plot_filters": {"tf": 1.7320508075688772}, "NDNT.modules.layers.laglayers.LagLayer.plot_filters": {"tf": 1.7320508075688772}, "NDNT.modules.layers.ndnlayer.NDNLayer.plot_filters": {"tf": 1.7320508075688772}, "NDNT.modules.layers.orilayers.ConvLayer3D.plot_filters": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.plot_filters": {"tf": 1.7320508075688772}, "NDNT.modules.layers.specialtylayers.OnOffLayer.plot_filters": {"tf": 1}, "NDNT.networks.FFnetwork.plot_filters": {"tf": 1}, "NDNT.training.lbfgs.polyinterp": {"tf": 1.4142135623730951}, "NDNT.utils.plotting.plot_filters_1D": {"tf": 1}, "NDNT.utils.plotting.plot_filters_2D": {"tf": 1}, "NDNT.utils.plotting.plot_filters_ST1D": {"tf": 1}, "NDNT.utils.plotting.plot_filters_ST2D": {"tf": 1}}, "df": 14, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.modules.layers.convlayers.TconvLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.plot_filters": {"tf": 1}}, "df": 5}}}}, "s": {"docs": {"NDNT.networks.FFnetwork.plot_filters": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.activations.adaptive_elu": {"tf": 1}, "NDNT.modules.activations.AdaptiveELU.__init__": {"tf": 1}}, "df": 2, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.regularization.Regularization": {"tf": 1}}, "df": 1}}}}}}}}}}, "t": {"docs": {"NDNT.utils.DanUtils.imagesc": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.NDN.NDN.forward": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {"NDNT.modules.experiment_sampler.ExperimentSampler": {"tf": 1}, "NDNT.training.earlystopping.EarlyStopping": {"tf": 1.4142135623730951}}, "df": 2, "s": {"docs": {"NDNT.training.earlystopping.EarlyStopping": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {"NDNT.networks.ReadoutNetwork": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.NDN.NDN.fit": {"tf": 1}, "NDNT.NDN.NDN.fit_dl": {"tf": 1}}, "df": 2, "s": {"docs": {"NDNT.NDN.NDN.prepare_regularization": {"tf": 1}, "NDNT.modules.regularization.Regularization.build_reg_modules": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.layers.convlayers.ConvLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.get_weights": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.preprocess_weights": {"tf": 1}, "NDNT.networks.FFnetwork.preprocess_input": {"tf": 1}}, "df": 7, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.modules.layers.convlayers.ConvLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.preprocess_weights": {"tf": 1}, "NDNT.networks.FFnetwork.preprocess_input": {"tf": 1}}, "df": 7}, "s": {"docs": {"NDNT.modules.layers.lvlayers.LVLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.preprocess_weights": {"tf": 1}}, "df": 2}}}}}}}}}, "d": {"docs": {"NDNT.metrics.mse_loss.MseLoss_datafilter.forward": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.forward": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.forward": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.unit_loss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.forward": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.unit_loss": {"tf": 1}}, "df": 8, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.NDN.NDN.generate_predictions": {"tf": 1.7320508075688772}, "NDNT.metrics.mse_loss.MseLoss_datafilter.forward": {"tf": 1.4142135623730951}, "NDNT.metrics.mse_loss.MseLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.forward": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.forward": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.unit_loss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.forward": {"tf": 1}}, "df": 8, "s": {"docs": {"NDNT.NDN.NDN.generate_predictions": {"tf": 1.4142135623730951}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.networks.ReadoutNetwork": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.metrics.rmse_loss.RmseLoss.forward": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.unit_loss": {"tf": 1}}, "df": 2}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.modules.layers.dimlayers.ChannelLayer": {"tf": 1}, "NDNT.networks.ScaffoldNetwork": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.networks.ScaffoldNetwork3d": {"tf": 1}}, "df": 1}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.layers.ndnlayer.NDNLayer.get_weights": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.modules.regularization.Regularization.set_reg_val": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.curvature_update": {"tf": 1}}, "df": 2}}}}}}}}, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.NDN.NDN.fit_dl": {"tf": 1}, "NDNT.NDN.NDN.eval_models": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.change_loss": {"tf": 1}, "NDNT.networks.FFnetwork": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.fit_data_dict": {"tf": 1}}, "df": 5}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.NDN.NDN.eval_models": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.NDN.NDN.generate_predictions": {"tf": 1}, "NDNT.training.lbfgs.LBFGS": {"tf": 1}}, "df": 2}}}}}}}, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.utils.DanUtils.design_matrix_drift": {"tf": 1}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 1}}, "df": 2, "s": {"docs": {"NDNT.modules.layers.lvlayers.LVLayerOLD": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.get_params": {"tf": 1}}, "df": 2}}, "t": {"docs": {"NDNT.training.lbfgs.LBFGS.two_loop_recursion": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1.4142135623730951}}, "df": 2}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer.get_weights": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.networks.FFnetwork.determine_input_dims": {"tf": 1}, "NDNT.networks.ReadoutNetwork.determine_input_dims": {"tf": 1}}, "df": 2}}}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer.forward": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.forward": {"tf": 1}}, "df": 2}}}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 1}}, "df": 4}}}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.layers.bilayers.BiSTconv1D": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.networks.ReadoutNetwork": {"tf": 1}, "NDNT.training.lbfgs.LBFGS": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1.7320508075688772}, "NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1.4142135623730951}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 1.4142135623730951}}, "df": 13, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"NDNT.NDN.NDN.eval_models": {"tf": 1}}, "df": 1, "s": {"docs": {"NDNT.NDN.NDN.training_step": {"tf": 1}, "NDNT.NDN.NDN.validation_step": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.step": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.two_loop_recursion": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.curvature_update": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.step": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew.step": {"tf": 1}}, "df": 10}, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.modules.regularization.RegModule.forward": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.modules.layers.lvlayers.LVLayerOLD.__init__": {"tf": 1}, "NDNT.modules.regularization.Regularization": {"tf": 1}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1}, "NDNT.modules.regularization.LocalityReg.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.InlineReg.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.Tikhanov.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.TikhanovC.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.ActivityReg": {"tf": 1}, "NDNT.modules.regularization.ActivityReg.compute_activity_penalty": {"tf": 1}, "NDNT.modules.regularization.ActivityReg.compute_reg_penalty": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian": {"tf": 1}}, "df": 11}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.regularization.Regularization": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.DiagonalReg": {"tf": 1}, "NDNT.modules.regularization.InlineReg": {"tf": 1}, "NDNT.modules.regularization.ConvReg": {"tf": 1}, "NDNT.modules.regularization.ConvReg.compute_reg_penalty": {"tf": 1}}, "df": 5}}}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.regularization.LocalityReg": {"tf": 1}, "NDNT.modules.regularization.ActivityReg": {"tf": 1}}, "df": 2}}}}}}, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.utils.DanUtils.find_peaks": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.NDN.NDN.get_dataloaders": {"tf": 1.4142135623730951}}, "df": 1}, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 2.23606797749979}}, "df": 1, "d": {"docs": {"NDNT.NDN.NDN.load_model": {"tf": 1}, "NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "x": {"docs": {"NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1.4142135623730951}, "NDNT.utils.create_reg_matrices.create_maxpenalty_matrix": {"tf": 1.4142135623730951}, "NDNT.utils.create_reg_matrices.create_localpenalty_matrix": {"tf": 1.4142135623730951}}, "df": 3, "e": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.utils.NDNutils.create_time_embedding": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1}}, "df": 2, "s": {"docs": {"NDNT.utils.NDNutils.pixel2grid": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {"NDNT.NDN.NDN.save_model": {"tf": 1}, "NDNT.NDN.NDN.load_model": {"tf": 1}}, "df": 2}, "y": {"docs": {"NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1.4142135623730951}}, "df": 7, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"NDNT.networks.ReadoutNetwork": {"tf": 1.4142135623730951}, "NDNT.training.lbfgs.LBFGS": {"tf": 1}, "NDNT.training.trainer.Trainer.__init__": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer.fit": {"tf": 1}, "NDNT.training.trainer.Trainer.prepare_fit": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer.fit_loop": {"tf": 1}, "NDNT.training.trainer.Trainer.validate_one_epoch": {"tf": 1}, "NDNT.training.trainer.Trainer.train_one_epoch": {"tf": 1}, "NDNT.training.trainer.Trainer.train_one_step": {"tf": 1}, "NDNT.training.trainer.Trainer.checkpoint_model": {"tf": 1}, "NDNT.training.trainer.Trainer.graceful_exit": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.fit": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.fit_data_dict": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.train_one_epoch": {"tf": 1}, "NDNT.training.trainer.TemperatureCalibratedTrainer.validate_one_epoch": {"tf": 1}, "NDNT.utils.NDNutils.fit_lbfgs": {"tf": 1.4142135623730951}}, "df": 16}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.utils.DanUtils.binocular_data_import": {"tf": 1}, "NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 2}, "NDNT.utils.NDNutils.NpEncoder": {"tf": 1.4142135623730951}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1.4142135623730951}}, "df": 4}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.layers.lvlayers.LVLayer.__init__": {"tf": 1.7320508075688772}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1}}, "df": 3}}, "g": {"docs": {"NDNT.utils.DanUtils.figure_export": {"tf": 1}}, "df": 1}}, "h": {"docs": {"NDNT.modules.regularization.Regularization": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1.4142135623730951}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "f": {"docs": {"NDNT.utils.DanUtils.figure_export": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {"NDNT.training.lbfgs.LBFGS.two_loop_recursion": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"NDNT.NDN.NDN": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchGenerator": {"tf": 1.4142135623730951}, "NDNT.modules.experiment_sampler.ExperimentBatchIterator": {"tf": 1.4142135623730951}, "NDNT.modules.experiment_sampler.ExperimentSampler": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer.fit": {"tf": 1}, "NDNT.training.trainer.Trainer.prepare_fit": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.fit": {"tf": 1}}, "df": 7, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.utils.DanUtils.fold_sample": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.layers.lvlayers.LVLayerOLD.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.networks.ReadoutNetwork": {"tf": 1.7320508075688772}, "NDNT.utils.NDNutils.tent_basis_generate": {"tf": 1}, "NDNT.utils.NDNutils.pixel2grid": {"tf": 1}}, "df": 5}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.utils.NDNutils.NpEncoder": {"tf": 1}, "NDNT.utils.NDNutils.NpEncoder.default": {"tf": 1.4142135623730951}}, "df": 2, "s": {"docs": {"NDNT.NDN.NDN.assemble_ffnetworks": {"tf": 1}, "NDNT.NDN.NDN.compute_network_outputs": {"tf": 1}, "NDNT.NDN.NDN.fit": {"tf": 1}, "NDNT.NDN.NDN.fit_dl": {"tf": 1}, "NDNT.NDN.NDN.eval_models": {"tf": 1}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1}, "NDNT.modules.regularization.Regularization.set_reg_val": {"tf": 1}, "NDNT.networks.FFnetwork": {"tf": 1}, "NDNT.networks.FFnetwork.preprocess_input": {"tf": 1}, "NDNT.networks.FFnetwork.list_parameters": {"tf": 1}, "NDNT.networks.FFnetwork.set_parameters": {"tf": 1}, "NDNT.networks.FFnetwork.set_reg_val": {"tf": 1}, "NDNT.networks.FFnetwork.get_weights": {"tf": 1}, "NDNT.networks.ScaffoldNetwork": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.forward": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.ffnet_dict": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d.forward": {"tf": 1}, "NDNT.networks.FFnet_external": {"tf": 1}, "NDNT.networks.FFnet_external.forward": {"tf": 1}, "NDNT.networks.FFnet_external.list_params": {"tf": 1}, "NDNT.networks.FFnet_external.set_params": {"tf": 1}, "NDNT.utils.NDNutils.shift_mat_zpad": {"tf": 1}}, "df": 23}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.NDN.NDN.get_trainer": {"tf": 1}, "NDNT.NDN.NDN.get_optimizer": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.fit": {"tf": 1}, "NDNT.NDN.NDN.initialize_loss": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian": {"tf": 1}, "NDNT.training.lbfgs.LBFGS": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1}, "NDNT.training.trainer.Trainer.__init__": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"tf": 1}}, "df": 17}, "i": {"docs": {}, "df": 0, "o": {"docs": {"NDNT.NDN.NDN.eval_models": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D": {"tf": 1}}, "df": 2}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.layers.orilayers.OriConvLayer.get_rot_mat": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.rotate_tensor": {"tf": 1}}, "df": 2}}}}}, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "u": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.NDN.NDN": {"tf": 1}, "NDNT.NDN.NDN.fit": {"tf": 1}, "NDNT.training.trainer.Trainer.fit": {"tf": 1}, "NDNT.training.trainer.Trainer.prepare_fit": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.fit": {"tf": 1}}, "df": 5}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.networks.FFnetwork": {"tf": 1}, "NDNT.networks.FFnetwork.ffnet_dict": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}}, "df": 4}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1}}, "df": 3}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.NDN.NDN.compute_network_outputs": {"tf": 1}, "NDNT.NDN.NDN.get_null_adjusted_ll": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1}, "NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1}, "NDNT.utils.NDNutils.CPU_Unpickler.find_class": {"tf": 1}, "NDNT.utils.NDNutils.NpEncoder.default": {"tf": 1.4142135623730951}}, "df": 6, "s": {"docs": {"NDNT.NDN.NDN": {"tf": 1}, "NDNT.NDN.NDN.assemble_ffnetworks": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.compute_network_outputs": {"tf": 1}, "NDNT.NDN.NDN.forward": {"tf": 1}, "NDNT.NDN.NDN.training_step": {"tf": 1}, "NDNT.NDN.NDN.validation_step": {"tf": 1}, "NDNT.NDN.NDN.compute_reg_loss": {"tf": 1}, "NDNT.NDN.NDN.get_trainer": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.get_dataloaders": {"tf": 1}, "NDNT.NDN.NDN.get_optimizer": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.prepare_regularization": {"tf": 1}, "NDNT.NDN.NDN.fit": {"tf": 1}, "NDNT.NDN.NDN.fit_dl": {"tf": 1}, "NDNT.NDN.NDN.initialize_loss": {"tf": 1}, "NDNT.NDN.NDN.compute_average_responses": {"tf": 1}, "NDNT.NDN.NDN.initialize_biases": {"tf": 1}, "NDNT.NDN.NDN.eval_models": {"tf": 1}, "NDNT.NDN.NDN.generate_predictions": {"tf": 1}, "NDNT.NDN.NDN.change_loss": {"tf": 1}, "NDNT.NDN.NDN.get_weights": {"tf": 1}, "NDNT.NDN.NDN.get_readout_locations": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.passive_readout": {"tf": 1}, "NDNT.NDN.NDN.list_parameters": {"tf": 1}, "NDNT.NDN.NDN.set_parameters": {"tf": 1}, "NDNT.NDN.NDN.set_reg_val": {"tf": 1}, "NDNT.NDN.NDN.plot_filters": {"tf": 1}, "NDNT.NDN.NDN.save_model_zip": {"tf": 1}, "NDNT.NDN.NDN.load_model_zip": {"tf": 1}, "NDNT.NDN.NDN.save_model": {"tf": 1}, "NDNT.NDN.NDN.save_model_chk": {"tf": 1}, "NDNT.NDN.NDN.get_null_adjusted_ll": {"tf": 1}, "NDNT.NDN.NDN.get_activations": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.load_model": {"tf": 1}, "NDNT.NDN.NDN.load_model_chk": {"tf": 1}, "NDNT.NDN.NDN.model_string": {"tf": 1}, "NDNT.modules.activations.adaptive_elu": {"tf": 1}, "NDNT.modules.activations.Square.forward": {"tf": 1}, "NDNT.modules.activations.AdaptiveELU.__init__": {"tf": 1}, "NDNT.modules.activations.AdaptiveELU.forward": {"tf": 1}, "NDNT.modules.activity_regularization.ActivityRegularization.activity": {"tf": 1}, "NDNT.modules.activity_regularization.ActivityRegularization.nonneg": {"tf": 1}, "NDNT.modules.activity_regularization.ActivityRegularization.regularize": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchGenerator": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchGenerator.next": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchIterator": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D.forward": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.forward": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.forward": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.forward": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.forward": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.forward": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.forward": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.dim_info": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.forward": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.forward": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.forward": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.forward": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.forward": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.forward": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.forward": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.forward": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.compute_reg_loss": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.get_weights": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.set_reg_val": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.dim_info": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.normlayers.DivNormLayer.forward": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.rotation_matrix_tensor": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.forward": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.rotation_matrix_tensor": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.get_rot_mat": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.forward": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.forward": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.plot_filters": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.ReadoutLayer.get_weights": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.forward": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.get_readout_locations": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.ReadoutLayer.passive_readout": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.forward": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.forward": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.forward": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.forward": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.forward": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.forward": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.reset_parameters2": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.forward": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.preprocess_weights": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.forward": {"tf": 1}, "NDNT.modules.regularization.Regularization": {"tf": 1}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1}, "NDNT.modules.regularization.Regularization.set_reg_val": {"tf": 1}, "NDNT.networks.FFnetwork.determine_input_dims": {"tf": 1.4142135623730951}, "NDNT.networks.FFnetwork.preprocess_input": {"tf": 1}, "NDNT.networks.FFnetwork.forward": {"tf": 1}, "NDNT.networks.FFnetwork.compute_reg_loss": {"tf": 1}, "NDNT.networks.FFnetwork.list_parameters": {"tf": 1}, "NDNT.networks.FFnetwork.set_parameters": {"tf": 1}, "NDNT.networks.FFnetwork.set_reg_val": {"tf": 1}, "NDNT.networks.FFnetwork.plot_filters": {"tf": 1}, "NDNT.networks.FFnetwork.get_weights": {"tf": 1}, "NDNT.networks.FFnetwork.ffnet_dict": {"tf": 1.4142135623730951}, "NDNT.networks.ScaffoldNetwork.forward": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.ffnet_dict": {"tf": 1.4142135623730951}, "NDNT.networks.ScaffoldNetwork3d.forward": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d.ffnet_dict": {"tf": 1.4142135623730951}, "NDNT.networks.ReadoutNetwork.determine_input_dims": {"tf": 1.4142135623730951}, "NDNT.networks.ReadoutNetwork.forward": {"tf": 1}, "NDNT.networks.ReadoutNetwork.get_readout_locations": {"tf": 1.4142135623730951}, "NDNT.networks.ReadoutNetwork.set_readout_locations": {"tf": 1}, "NDNT.networks.ReadoutNetwork.ffnet_dict": {"tf": 1.4142135623730951}, "NDNT.networks.FFnet_external.forward": {"tf": 1}, "NDNT.networks.FFnet_external.compute_reg_loss": {"tf": 1}, "NDNT.networks.FFnet_external.list_params": {"tf": 1}, "NDNT.networks.FFnet_external.set_params": {"tf": 1}, "NDNT.networks.FFnet_external.ffnet_dict": {"tf": 1.4142135623730951}, "NDNT.training.ada_hessian.AdaHessian.get_params": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.step": {"tf": 1}, "NDNT.training.lbfgs.polyinterp": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.step": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1.4142135623730951}, "NDNT.training.lbfgsnew.LBFGSNew.step": {"tf": 1}, "NDNT.training.trainer.Trainer.fit": {"tf": 1}, "NDNT.training.trainer.Trainer.prepare_fit": {"tf": 1}, "NDNT.training.trainer.Trainer.fit_loop": {"tf": 1}, "NDNT.training.trainer.Trainer.validate_one_epoch": {"tf": 1}, "NDNT.training.trainer.Trainer.train_one_epoch": {"tf": 1}, "NDNT.training.trainer.Trainer.train_one_step": {"tf": 1}, "NDNT.training.trainer.Trainer.checkpoint_model": {"tf": 1}, "NDNT.training.trainer.Trainer.graceful_exit": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.fit": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.fit_data_dict": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.train_one_epoch": {"tf": 1}, "NDNT.training.trainer.TemperatureCalibratedTrainer.validate_one_epoch": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1}, "NDNT.utils.NDNutils.is_int": {"tf": 1}, "NDNT.utils.NDNutils.shift_mat_zpad": {"tf": 1}, "NDNT.utils.NDNutils.NpEncoder": {"tf": 1}, "NDNT.utils.NDNutils.NpEncoder.default": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_maxpenalty_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_localpenalty_matrix": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.forward": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_log_epsilon": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.forward": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.forward": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.unit_loss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.forward": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.unit_loss": {"tf": 1}}, "df": 181}, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.NDN.NDN.eval_models": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.layer_dict": {"tf": 1}}, "df": 27}}}}}}, "g": {"docs": {"NDNT.NDN.NDN.assemble_ffnetworks": {"tf": 1}, "NDNT.NDN.NDN.set_reg_val": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1.7320508075688772}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.compute_reg_loss": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.set_reg_val": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1}, "NDNT.modules.regularization.Regularization": {"tf": 1.7320508075688772}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.Regularization.set_reg_val": {"tf": 2.6457513110645907}, "NDNT.modules.regularization.Regularization.unit_reg_convert": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.RegModule.__init__": {"tf": 1}, "NDNT.modules.regularization.DiagonalReg.__init__": {"tf": 1}, "NDNT.modules.regularization.InlineReg.__init__": {"tf": 1}, "NDNT.modules.regularization.InlineReg.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.ConvReg.__init__": {"tf": 1}, "NDNT.modules.regularization.Tikhanov.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.TikhanovC.compute_reg_penalty": {"tf": 1}, "NDNT.networks.FFnetwork": {"tf": 1}, "NDNT.networks.FFnetwork.set_reg_val": {"tf": 1.7320508075688772}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1.7320508075688772}, "NDNT.utils.create_reg_matrices.create_maxpenalty_matrix": {"tf": 1.4142135623730951}, "NDNT.utils.create_reg_matrices.create_localpenalty_matrix": {"tf": 1.4142135623730951}}, "df": 30, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.NDN.NDN.training_step": {"tf": 1}, "NDNT.NDN.NDN.compute_reg_loss": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.prepare_regularization": {"tf": 1}, "NDNT.NDN.NDN.set_reg_val": {"tf": 2}, "NDNT.modules.activity_regularization.ActivityRegularization.activity": {"tf": 1.7320508075688772}, "NDNT.modules.activity_regularization.ActivityRegularization.nonneg": {"tf": 1.7320508075688772}, "NDNT.modules.activity_regularization.ActivityRegularization.regularize": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 2}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.compute_reg_loss": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.set_reg_val": {"tf": 2}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1}, "NDNT.modules.regularization.Regularization": {"tf": 2.8284271247461903}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 2.6457513110645907}, "NDNT.modules.regularization.Regularization.set_reg_val": {"tf": 1.7320508075688772}, "NDNT.modules.regularization.Regularization.build_reg_modules": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.Regularization.reg_copy": {"tf": 1}, "NDNT.modules.regularization.RegModule": {"tf": 1}, "NDNT.modules.regularization.LocalityReg": {"tf": 1}, "NDNT.modules.regularization.LocalityReg.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.DiagonalReg": {"tf": 1}, "NDNT.modules.regularization.DiagonalReg.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.InlineReg": {"tf": 1}, "NDNT.modules.regularization.InlineReg.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.ConvReg": {"tf": 1}, "NDNT.modules.regularization.ConvReg.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.Tikhanov": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.Tikhanov.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.TikhanovC": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.TikhanovC.compute_reg_penalty": {"tf": 1}, "NDNT.modules.regularization.ActivityReg": {"tf": 1}, "NDNT.modules.regularization.ActivityReg.compute_reg_penalty": {"tf": 1}, "NDNT.networks.FFnetwork": {"tf": 1}, "NDNT.networks.FFnetwork.prepare_regularization": {"tf": 1}, "NDNT.networks.FFnetwork.compute_reg_loss": {"tf": 1.4142135623730951}, "NDNT.networks.FFnetwork.set_reg_val": {"tf": 1.7320508075688772}, "NDNT.networks.FFnet_external.compute_reg_loss": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1.4142135623730951}, "NDNT.utils.create_reg_matrices.create_maxpenalty_matrix": {"tf": 1.4142135623730951}, "NDNT.utils.create_reg_matrices.create_localpenalty_matrix": {"tf": 1.4142135623730951}}, "df": 48}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.NDN.NDN.fit": {"tf": 1}, "NDNT.NDN.NDN.fit_dl": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}}, "df": 9}}}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.modules.regularization.RegModule.forward": {"tf": 1}}, "df": 1}}}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.NDN.NDN.fit": {"tf": 1.4142135623730951}}, "df": 1}}}, "s": {"docs": {"NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.__init__": {"tf": 1}}, "df": 8, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.utils.DanUtils.binocular_data_import": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}}, "df": 2, "s": {"docs": {"NDNT.NDN.NDN.compute_average_responses": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.initialize_biases": {"tf": 1}, "NDNT.NDN.NDN.eval_models": {"tf": 1.4142135623730951}}, "df": 3}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 2}}, "df": 1, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1}}, "df": 1}}}}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.NDN.NDN.eval_models": {"tf": 1}, "NDNT.NDN.NDN.get_null_adjusted_ll": {"tf": 1}}, "df": 2}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.layers.bilayers.BinocLayer1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D.forward": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.forward": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.forward": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.get_weights": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.ReadoutLayer.get_weights": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1}, "NDNT.networks.FFnet_external": {"tf": 1.4142135623730951}}, "df": 11, "d": {"docs": {"NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_external": {"tf": 1.4142135623730951}}, "df": 2}, "s": {"docs": {"NDNT.utils.ffnet_dicts.ffnet_dict_external": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.L1convLayer.reset_parameters2": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_log_epsilon": {"tf": 1}}, "df": 7}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.modules.layers.reslayers.IterLayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.__init__": {"tf": 1}}, "df": 11}}}}}, "t": {"docs": {"NDNT.utils.ffnet_dicts.ffnet_dict_external": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.utils.NDNutils.CPU_Unpickler.find_class": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.NDN.NDN.generate_predictions": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer3d.passive_readout": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer.get_weights": {"tf": 1}, "NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1.4142135623730951}}, "df": 2, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"3": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer3d.passive_readout": {"tf": 1}}, "df": 1}}, "docs": {"NDNT.NDN.NDN.get_readout_locations": {"tf": 2}, "NDNT.NDN.NDN.passive_readout": {"tf": 2}, "NDNT.modules.layers.readouts.ReadoutLayer": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.initialize_spatial_mapping": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.get_weights": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.forward": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.set_readout_locations": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.get_readout_locations": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.ReadoutLayer.passive_readout": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.forward": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1}, "NDNT.networks.ReadoutNetwork.get_readout_locations": {"tf": 1.4142135623730951}, "NDNT.networks.ReadoutNetwork.set_readout_locations": {"tf": 1.4142135623730951}, "NDNT.networks.ReadoutNetwork.ffnet_dict": {"tf": 1.4142135623730951}, "NDNT.utils.ffnet_dicts.ffnet_dict_readout": {"tf": 1}}, "df": 18, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"3": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer3d": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.__init__": {"tf": 1}}, "df": 2}}, "docs": {"NDNT.modules.layers.readouts.ReadoutLayer": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d": {"tf": 1}}, "df": 3}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1.4142135623730951}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {"NDNT.modules.layers.convlayers.STconvLayer": {"tf": 1.4142135623730951}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.regularization.Regularization.__init__": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1.4142135623730951}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.utils.DanUtils.imagesc": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.layers.bilayers.BinocLayer1D": {"tf": 1}}, "df": 1}}}}}}}}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {"NDNT.modules.layers.bilayers.BiConvLayer1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1}}, "df": 10}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.layers.lvlayers.LVLayer": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.forward": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.utils.DanUtils.binocular_data_import": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_dict_readout": {"tf": 1}}, "df": 3}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.modules.layers.bilayers.ChannelConvLayer": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.__init__": {"tf": 1}, "NDNT.networks.ScaffoldNetwork": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 1}}, "df": 12}, "s": {"docs": {"NDNT.modules.layers.lvlayers.LVLayer": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 1.4142135623730951}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1.4142135623730951}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 1.4142135623730951}}, "df": 7}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1}, "NDNT.networks.FFnetwork.prepare_regularization": {"tf": 1}, "NDNT.networks.FFnet_external": {"tf": 1}}, "df": 3}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.layers.convlayers.TconvLayer.plot_filters": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.STconvLayer.plot_filters": {"tf": 1.4142135623730951}, "NDNT.modules.layers.laglayers.LagLayer.plot_filters": {"tf": 1.7320508075688772}, "NDNT.modules.layers.ndnlayer.NDNLayer.get_weights": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.plot_filters": {"tf": 1.4142135623730951}, "NDNT.modules.layers.orilayers.ConvLayer3D.plot_filters": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.ReadoutLayer.get_weights": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.plot_filters": {"tf": 1.7320508075688772}, "NDNT.modules.layers.specialtylayers.OnOffLayer.plot_filters": {"tf": 1.4142135623730951}}, "df": 11}}}}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.regularization.RegModule.forward": {"tf": 1}}, "df": 1}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 1}}, "df": 4}}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.training.lbfgs.LBFGS.two_loop_recursion": {"tf": 1.4142135623730951}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1}}, "df": 2}}}}}}, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.utils.NDNutils.NpEncoder": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.training.ada_hessian.AdaHessian.step": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.step": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1.4142135623730951}, "NDNT.training.lbfgsnew.LBFGSNew.step": {"tf": 1}}, "df": 4}}}}}}}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}}, "df": 1}}}}}}}}, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.training.lbfgs.LBFGS.curvature_update": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1}}, "df": 2}}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.NDN.NDN.fit": {"tf": 1}, "NDNT.NDN.NDN.fit_dl": {"tf": 1}}, "df": 2, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.NDN.NDN.generate_predictions": {"tf": 1}, "NDNT.modules.regularization.RegModule.forward": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian": {"tf": 1}}, "df": 3}}}}, "s": {"docs": {"NDNT.utils.NDNutils.fit_lbfgs": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.NDN.NDN.eval_models": {"tf": 1.4142135623730951}, "NDNT.utils.DanUtils.binocular_data_import": {"tf": 1.4142135623730951}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 2}, "NDNT.utils.DanUtils.monocular_data_import": {"tf": 1}}, "df": 4, "[": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "w": {"docs": {"NDNT.modules.layers.convlayers.TconvLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.plot_filters": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.plot_filters": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.Tlayer.plot_filters": {"tf": 1.4142135623730951}}, "df": 6, "s": {"docs": {"NDNT.modules.layers.convlayers.TconvLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.plot_filters": {"tf": 1}}, "df": 3}}, "t": {"docs": {"NDNT.modules.layers.orilayers.OriConvLayer.get_rot_mat": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.modules.layers.orilayers.OriLayer.__init__": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.rotation_matrix_tensor": {"tf": 1.7320508075688772}, "NDNT.modules.layers.orilayers.OriLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.rotation_matrix_tensor": {"tf": 1.7320508075688772}, "NDNT.modules.layers.orilayers.OriConvLayer.get_rot_mat": {"tf": 1.4142135623730951}, "NDNT.modules.layers.orilayers.OriConvLayer.layer_dict": {"tf": 1}}, "df": 7}}}, "e": {"docs": {"NDNT.modules.layers.orilayers.OriConvLayer.rotate_tensor": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.networks.ReadoutNetwork": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.networks.FFnetwork.compute_reg_loss": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1}, "NDNT.utils.DanUtils.design_matrix_drift": {"tf": 1.7320508075688772}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 1.7320508075688772}, "NDNT.utils.NDNutils.shift_mat_zpad": {"tf": 1}}, "df": 4}}}, "d": {"docs": {"NDNT.utils.DanUtils.find_peaks": {"tf": 1}}, "df": 1}}}, "h": {"docs": {"NDNT.modules.layers.convlayers.TconvLayer": {"tf": 2}, "NDNT.modules.layers.convlayers.STconvLayer": {"tf": 2.23606797749979}, "NDNT.modules.layers.dimlayers.Dim0Layer.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.ChannelLayer.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.DimSPLayer.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.DimSPTLayer.forward": {"tf": 1.4142135623730951}}, "df": 6, "a": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.NDN.NDN.assemble_ffnetworks": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.lvlayers.LVLayer": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.forward": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer": {"tf": 1}, "NDNT.modules.regularization.Regularization.set_reg_val": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 1}}, "df": 12, "n": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer.set_readout_locations": {"tf": 1}}, "df": 1}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.NDN.NDN.assemble_ffnetworks": {"tf": 1}, "NDNT.NDN.NDN.save_model_chk": {"tf": 1}}, "df": 2}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.NDN.NDN.eval_models": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.batchnorm_convert": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.initialize_gaussian_envelope": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.ReadoutLayer3d.passive_readout": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1}, "NDNT.training.lbfgs.LBFGS": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}, "NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 1}}, "df": 21}}, "l": {"docs": {}, "df": 0, "f": {"docs": {"NDNT.modules.layers.bilayers.BinocLayer1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.__init__": {"tf": 1}}, "df": 4}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.utils.DanUtils.figure_export": {"tf": 1}}, "df": 1, "s": {"docs": {"NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1}}, "df": 1}, "d": {"docs": {"NDNT.modules.layers.specialtylayers.Tlayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.__init__": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.modules.regularization.Regularization": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {"NDNT.training.lbfgs.polyinterp": {"tf": 1}, "NDNT.training.lbfgs.LBFGS": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.utils.DanUtils.fold_sample": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.NDN.NDN.get_optimizer": {"tf": 1.4142135623730951}, "NDNT.training.lbfgs.LBFGS": {"tf": 1.4142135623730951}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1.4142135623730951}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 2.449489742783178}, "NDNT.utils.NDNutils.get_max_samples": {"tf": 1.4142135623730951}}, "df": 5}}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.networks.ReadoutNetwork": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.activations.AdaptiveELU": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.modules.layers.bilayers.BinocLayer1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D.forward": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.forward": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.forward": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.dim_info": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.__init__": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.__init__": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.laglayers.LagLayer": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.__init__": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.plot_filters": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.plot_filters": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.ReadoutLayer3d.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.plot_filters": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.OnOffLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.networks.ReadoutNetwork": {"tf": 1}}, "df": 39}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.regularization.ConvReg.compute_reg_penalty": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.ActivityReg": {"tf": 1}, "NDNT.utils.DanUtils.design_matrix_drift": {"tf": 1}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1.4142135623730951}, "NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 1}}, "df": 6}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.training.ada_hessian.AdaHessian": {"tf": 2.23606797749979}, "NDNT.training.ada_hessian.AdaHessian.zero_hessian": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.set_hessian": {"tf": 1}}, "df": 3}}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.regularization.RegModule.forward": {"tf": 1}, "NDNT.training.trainer.Trainer": {"tf": 1}}, "df": 2}}}, "w": {"docs": {"NDNT.training.ada_hessian.AdaHessian": {"tf": 1}, "NDNT.training.earlystopping.EarlyStopping": {"tf": 1}, "NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1}, "NDNT.utils.NDNutils.generate_xv_folds": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"tf": 1}}, "df": 8}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.training.ada_hessian.AdaHessian.set_hessian": {"tf": 1}}, "df": 1}}}}}}}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, ":": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "w": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}}, "df": 2}}}}}}, "s": {"docs": {}, "df": 0, ":": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "b": {"docs": {"NDNT.utils.MattUtils.smooth_ema": {"tf": 1}, "NDNT.utils.NDNutils.save_checkpoint": {"tf": 1}, "NDNT.utils.NDNutils.load_checkpoint": {"tf": 1}, "NDNT.utils.NDNutils.ensure_dir": {"tf": 1}}, "df": 4}}}}}}, "j": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.utils.NDNutils.NpEncoder": {"tf": 1}}, "df": 1}}}}}}}}}}, "m": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}}, "df": 1}}}, "v": {"docs": {"NDNT.training.lbfgs.LBFGS.two_loop_recursion": {"tf": 1.4142135623730951}}, "df": 1}}, "g": {"docs": {"NDNT.modules.regularization.Regularization.__init__": {"tf": 1}, "NDNT.training.lbfgs.polyinterp": {"tf": 1.4142135623730951}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 2.23606797749979}, "NDNT.utils.DanUtils.design_matrix_drift": {"tf": 1}, "NDNT.utils.NDNutils.CPU_Unpickler.find_class": {"tf": 1}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"tf": 1}}, "df": 10, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 1}}, "df": 4, "n": {"docs": {"NDNT.NDN.NDN.compute_network_outputs": {"tf": 1}, "NDNT.NDN.NDN.eval_models": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.dim_info": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.set_reg_val": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.dim_info": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.get_rot_mat": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.rotate_tensor": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.layer_dict": {"tf": 1}, "NDNT.networks.FFnetwork.determine_input_dims": {"tf": 1}, "NDNT.networks.ReadoutNetwork.determine_input_dims": {"tf": 1}, "NDNT.training.earlystopping.EarlyStopping": {"tf": 1}, "NDNT.training.lbfgs.polyinterp": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.two_loop_recursion": {"tf": 1}}, "df": 39}, "s": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1}, "NDNT.training.lbfgs.polyinterp": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1}}, "df": 4}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {"NDNT.NDN.NDN.get_trainer": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.Regularization": {"tf": 1}, "NDNT.training.trainer.Trainer.__init__": {"tf": 1.4142135623730951}}, "df": 3}}, "y": {"docs": {"NDNT.modules.layers.convlayers.TconvLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.plot_filters": {"tf": 1}}, "df": 3}, "d": {"docs": {"NDNT.training.lbfgs.LBFGS.curvature_update": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.step": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1.7320508075688772}}, "df": 4, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.training.ada_hessian.AdaHessian": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.curvature_update": {"tf": 1.7320508075688772}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1.4142135623730951}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1}}, "df": 5, "s": {"docs": {"NDNT.training.ada_hessian.AdaHessian.get_params": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.training.trainer.Trainer.graceful_exit": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"NDNT.modules.layers.bilayers.ChannelConvLayer": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.modules.layers.bilayers.BinocLayer1D": {"tf": 1}}, "df": 1}}, "s": {"docs": {"NDNT.training.ada_hessian.AdaHessian": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.get_params": {"tf": 1}, "NDNT.training.lbfgs.LBFGS": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1}}, "df": 5}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.forward": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.forward": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.forward": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1}}, "df": 7, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.networks.ReadoutNetwork": {"tf": 1}}, "df": 1}}}}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.NDN.NDN.fit": {"tf": 1}, "NDNT.NDN.NDN.fit_dl": {"tf": 1}, "NDNT.NDN.NDN.get_weights": {"tf": 1}, "NDNT.NDN.NDN.get_readout_locations": {"tf": 1}, "NDNT.NDN.NDN.get_null_adjusted_ll": {"tf": 1}, "NDNT.NDN.NDN.get_activations": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.orilayers.OriConvLayer.get_rot_mat": {"tf": 1}, "NDNT.networks.FFnetwork.get_weights": {"tf": 1}, "NDNT.utils.DanUtils.find_peaks": {"tf": 1}, "NDNT.utils.NDNutils.save_checkpoint": {"tf": 1}, "NDNT.utils.NDNutils.get_max_samples": {"tf": 1.4142135623730951}, "NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 1}}, "df": 16, "s": {"docs": {"NDNT.modules.layers.externallayer.ExternalLayer": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.__init__": {"tf": 1}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.get_params": {"tf": 1}, "NDNT.training.trainer.Trainer.graceful_exit": {"tf": 1}}, "df": 5}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.NDN.NDN.generate_predictions": {"tf": 1}, "NDNT.utils.DanUtils.design_matrix_drift": {"tf": 1}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 1}, "NDNT.utils.NDNutils.tent_basis_generate": {"tf": 1}, "NDNT.utils.NDNutils.generate_xv_folds": {"tf": 1}}, "df": 5, "s": {"docs": {"NDNT.modules.layers.lvlayers.LVLayer": {"tf": 1}}, "df": 1}, "d": {"docs": {"NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.experiment_sampler.ExperimentBatchGenerator": {"tf": 1}, "NDNT.modules.experiment_sampler.ExperimentBatchGenerator.next": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian.get_params": {"tf": 1.4142135623730951}}, "df": 3}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.modules.regularization.Regularization": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {"NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.layers.lvlayers.LVLayerOLD.__init__": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.__init__": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1.7320508075688772}}, "df": 3, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.initialize_gaussian_envelope": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.initialize_spatial_mapping": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1.7320508075688772}, "NDNT.networks.ReadoutNetwork": {"tf": 2}, "NDNT.utils.NDNutils.initialize_gaussian_envelope": {"tf": 1}}, "df": 7}}}}}}}, "t": {"docs": {"NDNT.modules.layers.dimlayers.ChannelLayer": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1}}, "df": 2, "d": {"docs": {"NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1.4142135623730951}}, "df": 1}}, "o": {"docs": {"NDNT.modules.layers.lvlayers.LVLayer": {"tf": 1}}, "df": 1}, "\u00fc": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {"NDNT.training.trainer.Trainer.__init__": {"tf": 1}}, "df": 1, "s": {"docs": {"NDNT.training.trainer.Trainer.__init__": {"tf": 1}}, "df": 1}}}, "q": {"docs": {}, "df": 0, "m": {"docs": {"NDNT.utils.NDNutils.get_max_samples": {"tf": 1}}, "df": 1}}, "b": {"docs": {"NDNT.utils.NDNutils.get_max_samples": {"tf": 1}}, "df": 1}}, "x": {"docs": {"NDNT.modules.activations.adaptive_elu": {"tf": 1.4142135623730951}, "NDNT.modules.activations.Square.forward": {"tf": 1}, "NDNT.modules.activations.AdaptiveELU.__init__": {"tf": 1}, "NDNT.modules.activations.AdaptiveELU.forward": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D.forward": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D": {"tf": 1.7320508075688772}, "NDNT.modules.layers.bilayers.BiSTconv1D.forward": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.forward": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.TconvLayer.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.STconvLayer.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.Dim0Layer.forward": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.forward": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.forward": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.forward": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.forward": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.forward": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.lvlayers.LVLayerOLD.forward": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.normlayers.DivNormLayer.forward": {"tf": 1.4142135623730951}, "NDNT.modules.layers.orilayers.OriLayer.forward": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.rotate_tensor": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.forward": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.forward": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.forward": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.forward": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.forward": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.forward": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.forward": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.forward": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.forward": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.forward": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.forward": {"tf": 1}, "NDNT.networks.FFnetwork.preprocess_input": {"tf": 1}, "NDNT.networks.FFnetwork.forward": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.forward": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d.forward": {"tf": 1}, "NDNT.training.lbfgs.polyinterp": {"tf": 2}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 1.4142135623730951}, "NDNT.utils.DanUtils.design_matrix_drift": {"tf": 1.4142135623730951}, "NDNT.utils.DanUtils.binocular_data_import": {"tf": 1.7320508075688772}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.create_time_embedding": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.shift_mat_zpad": {"tf": 1}, "NDNT.utils.NDNutils.initialize_gaussian_envelope": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_maxpenalty_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_localpenalty_matrix": {"tf": 1}}, "df": 52, "s": {"docs": {"NDNT.NDN.NDN.compute_network_outputs": {"tf": 1}, "NDNT.NDN.NDN.forward": {"tf": 1}, "NDNT.utils.NDNutils.tent_basis_generate": {"tf": 2}}, "df": 3, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.modules.activations.adaptive_elu": {"tf": 1}, "NDNT.modules.activations.AdaptiveELU.__init__": {"tf": 1}}, "df": 2}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {"NDNT.networks.FFnetwork": {"tf": 1}, "NDNT.networks.FFnetwork.determine_input_dims": {"tf": 1}, "NDNT.networks.FFnetwork.ffnet_dict": {"tf": 1}, "NDNT.networks.ReadoutNetwork.determine_input_dims": {"tf": 1}, "NDNT.utils.ffnet_dicts.ffnet_params_default": {"tf": 1.7320508075688772}}, "df": 5}}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.layers.bilayers.BiConvLayer1D.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.BiSTconv1D.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.ChannelConvLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.ConvLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.lvlayers.LVLayer.__init__": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.reset_parameters": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterTlayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterSTlayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.Tlayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.L1convLayer.reset_parameters2": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1.4142135623730951}}, "df": 19}}}}}, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "o": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}}, "df": 1}}, "c": {"docs": {"NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1.7320508075688772}}, "df": 1}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"NDNT.utils.NDNutils.create_time_embedding": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}, "v": {"docs": {"NDNT.training.lbfgs.is_legal": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}}, "df": 2, "a": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.NDN.NDN.get_dataloaders": {"tf": 1}, "NDNT.NDN.NDN.fit": {"tf": 1}, "NDNT.NDN.NDN.fit_dl": {"tf": 1}, "NDNT.NDN.NDN.eval_models": {"tf": 1}, "NDNT.NDN.NDN.set_parameters": {"tf": 1}, "NDNT.NDN.NDN.set_reg_val": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.set_reg_val": {"tf": 1}, "NDNT.modules.regularization.Regularization.set_reg_val": {"tf": 1.4142135623730951}, "NDNT.networks.FFnetwork.set_parameters": {"tf": 1}, "NDNT.networks.FFnetwork.set_reg_val": {"tf": 1}, "NDNT.networks.FFnet_external.set_params": {"tf": 1}, "NDNT.training.trainer.Trainer.fit": {"tf": 1}, "NDNT.training.trainer.Trainer.fit_loop": {"tf": 1}, "NDNT.training.trainer.Trainer.validate_one_epoch": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.fit": {"tf": 1}, "NDNT.training.trainer.TemperatureCalibratedTrainer.validate_one_epoch": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}, "NDNT.utils.NDNutils.is_int": {"tf": 1}}, "df": 18, "u": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.NDN.NDN.initialize_loss": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.set_parameters": {"tf": 1}, "NDNT.NDN.NDN.set_reg_val": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.set_reg_val": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.Regularization.set_reg_val": {"tf": 1.4142135623730951}, "NDNT.networks.FFnetwork.set_parameters": {"tf": 1}, "NDNT.networks.FFnetwork.set_reg_val": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1}, "NDNT.networks.FFnet_external.set_params": {"tf": 1}, "NDNT.training.lbfgs.polyinterp": {"tf": 1.4142135623730951}, "NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 2}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1}, "NDNT.utils.NDNutils.tent_basis_generate": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.forward": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.forward": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.unit_loss": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.forward": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.unit_loss": {"tf": 1}}, "df": 21, "s": {"docs": {"NDNT.NDN.NDN.training_step": {"tf": 1}, "NDNT.NDN.NDN.get_optimizer": {"tf": 1}, "NDNT.NDN.NDN.eval_models": {"tf": 1}, "NDNT.NDN.NDN.set_reg_val": {"tf": 1.4142135623730951}, "NDNT.modules.activations.adaptive_elu": {"tf": 1}, "NDNT.modules.activations.AdaptiveELU": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.BiConvLayer1D.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1.7320508075688772}, "NDNT.modules.layers.bilayers.ChannelConvLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.Dim0Layer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.ChannelLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.DimSPLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.dimlayers.DimSPTLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.laglayers.LagLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1.7320508075688772}, "NDNT.modules.layers.orilayers.ConvLayer3D.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.ReadoutLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.ReadoutLayer3d.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.Tlayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.L1convLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.OnOffLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.layer_dict": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.Regularization": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1}, "NDNT.modules.regularization.Regularization.build_reg_modules": {"tf": 1}, "NDNT.networks.FFnetwork.prepare_regularization": {"tf": 1}, "NDNT.networks.FFnetwork.set_reg_val": {"tf": 1}}, "df": 43}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.regularization.Regularization.set_reg_val": {"tf": 1.4142135623730951}, "NDNT.networks.FFnetwork.preprocess_input": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.forward": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d.forward": {"tf": 1}, "NDNT.networks.FFnet_external.forward": {"tf": 1}}, "df": 5}}}}}, "/": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.NDN.NDN.get_dataloaders": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer": {"tf": 1}, "NDNT.modules.regularization.Regularization.set_reg_val": {"tf": 1}, "NDNT.modules.regularization.ConvReg.compute_reg_penalty": {"tf": 1}, "NDNT.networks.FFnetwork.determine_input_dims": {"tf": 1.7320508075688772}, "NDNT.networks.ReadoutNetwork.determine_input_dims": {"tf": 1.7320508075688772}, "NDNT.training.lbfgs.polyinterp": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1.4142135623730951}}, "df": 17, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.NDN.NDN.validation_step": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.get_dataloaders": {"tf": 2}, "NDNT.NDN.NDN.fit": {"tf": 1.7320508075688772}, "NDNT.NDN.NDN.fit_dl": {"tf": 1}, "NDNT.NDN.NDN.eval_models": {"tf": 1.4142135623730951}, "NDNT.training.earlystopping.EarlyStopping": {"tf": 1.7320508075688772}, "NDNT.training.trainer.Trainer.__init__": {"tf": 1}, "NDNT.training.trainer.Trainer.fit": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer.prepare_fit": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer.fit_loop": {"tf": 1.4142135623730951}, "NDNT.training.trainer.Trainer.validate_one_epoch": {"tf": 2}, "NDNT.training.trainer.Trainer.train_one_epoch": {"tf": 1}, "NDNT.training.trainer.Trainer.train_one_step": {"tf": 1}, "NDNT.training.trainer.Trainer.checkpoint_model": {"tf": 1}, "NDNT.training.trainer.Trainer.graceful_exit": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.fit": {"tf": 1.4142135623730951}, "NDNT.training.trainer.LBFGSTrainer.fit_data_dict": {"tf": 1}, "NDNT.training.trainer.LBFGSTrainer.train_one_epoch": {"tf": 1}, "NDNT.training.trainer.TemperatureCalibratedTrainer.validate_one_epoch": {"tf": 2}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}, "NDNT.utils.NDNutils.generate_xv_folds": {"tf": 2}}, "df": 21}}}}}}}, "s": {"docs": {"NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1}, "NDNT.modules.regularization.Regularization": {"tf": 2}, "NDNT.modules.regularization.Regularization.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.regularization.Regularization.set_reg_val": {"tf": 1}}, "df": 11}}, "r": {"docs": {"NDNT.modules.regularization.Regularization": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.NDN.NDN.get_optimizer": {"tf": 1}}, "df": 1}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.utils.DanUtils.figure_export": {"tf": 1}, "NDNT.utils.DanUtils.design_matrix_drift": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 1.7320508075688772}}, "df": 3, "s": {"docs": {"NDNT.modules.layers.lvlayers.LVLayer.__init__": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1}, "NDNT.modules.regularization.Regularization": {"tf": 1}, "NDNT.utils.DanUtils.matlab_export": {"tf": 1}, "NDNT.utils.NDNutils.tent_basis_generate": {"tf": 1}}, "df": 6}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.modules.regularization.InlineReg.compute_reg_penalty": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.NDN.NDN.get_trainer": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.fit": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.fit_dl": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.save_model_chk": {"tf": 1}, "NDNT.NDN.NDN.load_model_chk": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.L1convLayer": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1}, "NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1}}, "df": 8, "s": {"docs": {"NDNT.utils.NDNutils.get_fit_versions": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.modules.experiment_sampler.ExperimentSampler": {"tf": 1}, "NDNT.training.earlystopping.EarlyStopping": {"tf": 1}}, "df": 2}}}}, "y": {"docs": {"NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1}}, "df": 1}}, "c": {"docs": {"NDNT.training.lbfgs.LBFGS.two_loop_recursion": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1}, "NDNT.modules.regularization.ConvReg.compute_reg_penalty": {"tf": 1}, "NDNT.training.lbfgs.LBFGS.two_loop_recursion": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.shift_mat_zpad": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_maxpenalty_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_localpenalty_matrix": {"tf": 1}}, "df": 7, "s": {"docs": {"NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}}, "df": 7}}}}}}, "i": {"docs": {}, "df": 0, "a": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}}, "df": 1}}}, "k": {"docs": {"NDNT.training.lbfgs.FullBatchLBFGS.step": {"tf": 2.449489742783178}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_maxpenalty_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_localpenalty_matrix": {"tf": 1}}, "df": 4, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.NDN.NDN.get_trainer": {"tf": 1}, "NDNT.NDN.NDN.get_dataloaders": {"tf": 1}, "NDNT.NDN.NDN.fit": {"tf": 1}, "NDNT.NDN.NDN.fit_dl": {"tf": 1}, "NDNT.NDN.NDN.eval_models": {"tf": 1}, "NDNT.NDN.NDN.get_weights": {"tf": 1}, "NDNT.NDN.NDN.plot_filters": {"tf": 1}, "NDNT.modules.activations.AdaptiveELU.__init__": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.__init__": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.__init__": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.__init__": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.plot_filters": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.__init__": {"tf": 1}, "NDNT.networks.FFnetwork": {"tf": 1}, "NDNT.networks.FFnetwork.plot_filters": {"tf": 1}, "NDNT.networks.FFnetwork.get_weights": {"tf": 1}, "NDNT.networks.FFnetwork.ffnet_dict": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.ffnet_dict": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d.ffnet_dict": {"tf": 1}, "NDNT.networks.ReadoutNetwork.determine_input_dims": {"tf": 1}, "NDNT.networks.FFnet_external": {"tf": 1}, "NDNT.networks.FFnet_external.ffnet_dict": {"tf": 1}}, "df": 37}}}}}, "e": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.modules.regularization.Regularization.__init__": {"tf": 1}}, "df": 1, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"NDNT.NDN.NDN.get_trainer": {"tf": 1}, "NDNT.NDN.NDN.get_dataloaders": {"tf": 1}, "NDNT.NDN.NDN.fit": {"tf": 1}, "NDNT.NDN.NDN.fit_dl": {"tf": 1}, "NDNT.NDN.NDN.eval_models": {"tf": 1}, "NDNT.NDN.NDN.get_weights": {"tf": 1}, "NDNT.NDN.NDN.plot_filters": {"tf": 1}, "NDNT.modules.activations.AdaptiveELU.__init__": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.__init__": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.__init__": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1}, "NDNT.networks.FFnetwork": {"tf": 1}, "NDNT.networks.FFnetwork.plot_filters": {"tf": 1}, "NDNT.networks.FFnetwork.get_weights": {"tf": 1}, "NDNT.networks.FFnetwork.ffnet_dict": {"tf": 1}, "NDNT.networks.ScaffoldNetwork.ffnet_dict": {"tf": 1}, "NDNT.networks.ScaffoldNetwork3d.ffnet_dict": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1}, "NDNT.networks.ReadoutNetwork.determine_input_dims": {"tf": 1}, "NDNT.networks.FFnet_external": {"tf": 1}, "NDNT.networks.FFnet_external.ffnet_dict": {"tf": 1}, "NDNT.utils.NDNutils.CPU_Unpickler": {"tf": 1}}, "df": 24, "s": {"docs": {"NDNT.modules.layers.bilayers.BinocLayer1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.BiConvLayer1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.layer_dict": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayerOLD.layer_dict": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.layer_dict": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.L1convLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.MaskLayer.layer_dict": {"tf": 1}}, "df": 26}}}}}, "s": {"docs": {"NDNT.NDN.NDN.eval_models": {"tf": 1}, "NDNT.NDN.NDN.get_activations": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.dim_info": {"tf": 1}}, "df": 3}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"NDNT.utils.NDNutils.save_checkpoint": {"tf": 1.4142135623730951}, "NDNT.utils.NDNutils.get_max_samples": {"tf": 1}}, "df": 2, "s": {"docs": {"NDNT.modules.layers.bilayers.BinocLayer1D": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.modules.layers.bilayers.BiConvLayer1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.ConvLayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.__init__": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer": {"tf": 1}}, "df": 15, "s": {"docs": {"NDNT.utils.NDNutils.get_max_samples": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.modules.layers.ndnlayer.NDNLayer.reset_parameters": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {"NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.metrics.mse_loss.MseLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss": {"tf": 1}}, "df": 4}}}}}}}}}, "z": {"docs": {"NDNT.modules.layers.lvlayers.LVLayerOLD.forward": {"tf": 1}, "NDNT.training.ada_hessian.AdaHessian": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "p": {"docs": {"NDNT.NDN.NDN.save_model_zip": {"tf": 1.4142135623730951}, "NDNT.NDN.NDN.load_model_zip": {"tf": 1.4142135623730951}}, "df": 2}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer.passive_readout": {"tf": 1}, "NDNT.training.lbfgsnew.LBFGSNew": {"tf": 1}, "NDNT.utils.DanUtils.design_matrix_drift": {"tf": 2}, "NDNT.utils.DanUtils.binocular_data_import": {"tf": 1}, "NDNT.utils.DanUtils.binocular_data_import_cell": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding": {"tf": 1}, "NDNT.utils.NDNutils.create_time_embedding_NIM": {"tf": 1}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 2}, "NDNT.utils.NDNutils.shift_mat_zpad": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}}, "df": 10, "s": {"docs": {"NDNT.modules.layers.bilayers.BiConvLayer1D.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.BiSTconv1D.__init__": {"tf": 1.4142135623730951}, "NDNT.modules.layers.bilayers.ChannelConvLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.ConvLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.convlayers.ConvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.TconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.convlayers.STconvLayer.__init__": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.lvlayers.LVLayer.__init__": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.layer_dict": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.__init__": {"tf": 1}, "NDNT.modules.layers.ndnlayer.NDNLayer.reset_parameters": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterLayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterTlayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.reslayers.IterSTlayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.Tlayer": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.L1convLayer.reset_parameters2": {"tf": 1.4142135623730951}, "NDNT.modules.layers.specialtylayers.MaskLayer.__init__": {"tf": 1.4142135623730951}, "NDNT.training.ada_hessian.AdaHessian.zero_hessian": {"tf": 1}}, "df": 20}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"NDNT.utils.DanUtils.design_matrix_drift": {"tf": 1}, "NDNT.utils.NDNutils.design_matrix_tent_basis": {"tf": 1}}, "df": 2}}}}}}}, "j": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.NDN.NDN.save_model_zip": {"tf": 1}, "NDNT.NDN.NDN.load_model_zip": {"tf": 1}, "NDNT.utils.NDNutils.NpEncoder": {"tf": 1.4142135623730951}}, "df": 3, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"NDNT.utils.NDNutils.NpEncoder.default": {"tf": 1}}, "df": 1}}}}}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.modules.layers.ndnlayer.NDNLayer": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.sample_grid": {"tf": 1}, "NDNT.modules.regularization.ActivityReg": {"tf": 1}, "NDNT.networks.FFnetwork.determine_input_dims": {"tf": 1}, "NDNT.networks.ReadoutNetwork": {"tf": 1}, "NDNT.networks.ReadoutNetwork.determine_input_dims": {"tf": 1}}, "df": 6}}, "n": {"docs": {"NDNT.training.lbfgs.polyinterp": {"tf": 1}, "NDNT.training.lbfgs.LBFGS": {"tf": 1}, "NDNT.training.lbfgs.FullBatchLBFGS": {"tf": 1}}, "df": 3}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 2}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}}, "df": 1}}}}}, "y": {"docs": {"NDNT.modules.activations.adaptive_elu": {"tf": 1}, "NDNT.modules.activations.AdaptiveELU.__init__": {"tf": 1}, "NDNT.modules.layers.bilayers.BinocLayer1D.forward": {"tf": 1}, "NDNT.modules.layers.bilayers.BiSTconv1D.forward": {"tf": 1}, "NDNT.modules.layers.bilayers.ChannelConvLayer.forward": {"tf": 1}, "NDNT.modules.layers.dimlayers.Dim0Layer.forward": {"tf": 1}, "NDNT.modules.layers.dimlayers.ChannelLayer.forward": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPLayer.forward": {"tf": 1}, "NDNT.modules.layers.dimlayers.DimSPTLayer.forward": {"tf": 1}, "NDNT.modules.layers.externallayer.ExternalLayer.forward": {"tf": 1}, "NDNT.modules.layers.laglayers.LagLayer.forward": {"tf": 1}, "NDNT.modules.layers.lvlayers.LVLayer.forward": {"tf": 1}, "NDNT.modules.layers.orilayers.OriLayer.forward": {"tf": 1}, "NDNT.modules.layers.orilayers.OriConvLayer.forward": {"tf": 1}, "NDNT.modules.layers.orilayers.ConvLayer3D.forward": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer.forward": {"tf": 1}, "NDNT.modules.layers.readouts.ReadoutLayer3d.forward": {"tf": 1}, "NDNT.modules.layers.readouts.FixationLayer.forward": {"tf": 1}, "NDNT.modules.layers.reslayers.IterLayer.forward": {"tf": 1}, "NDNT.modules.layers.reslayers.IterTlayer.forward": {"tf": 1}, "NDNT.modules.layers.reslayers.IterSTlayer.forward": {"tf": 1}, "NDNT.modules.layers.specialtylayers.Tlayer.forward": {"tf": 1}, "NDNT.modules.layers.specialtylayers.OnOffLayer.forward": {"tf": 1}, "NDNT.modules.layers.timelayers.TimeLayer.forward": {"tf": 1}, "NDNT.networks.ReadoutNetwork.forward": {"tf": 1}, "NDNT.networks.FFnet_external.forward": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_tikhonov_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_maxpenalty_matrix": {"tf": 1}, "NDNT.utils.create_reg_matrices.create_localpenalty_matrix": {"tf": 1}}, "df": 29, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.modules.activations.adaptive_elu": {"tf": 1}, "NDNT.modules.activations.AdaptiveELU.__init__": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"NDNT.modules.layers.readouts.ReadoutLayer.set_readout_locations": {"tf": 1}, "NDNT.training.trainer.Trainer": {"tf": 1}}, "df": 2}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}}, "df": 1}}, "u": {"docs": {"NDNT.utils.NDNutils.NpEncoder.default": {"tf": 1}}, "df": 1}}, "u": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 1}}, "df": 1}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.training.earlystopping.EarlyStopping": {"tf": 1}, "NDNT.metrics.mse_loss.MseLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.PoissonLoss_datafilter.set_loss_weighting": {"tf": 1}, "NDNT.metrics.poisson_loss.SimplePoissonLoss.set_loss_weighting": {"tf": 1}, "NDNT.metrics.rmse_loss.RmseLoss.set_loss_weighting": {"tf": 1}}, "df": 5}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "y": {"docs": {"NDNT.training.earlystopping.EarlyStopping": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {"NDNT.training.lbfgs.LBFGS": {"tf": 2}}, "df": 1}}, "d": {"docs": {"NDNT.utils.NDNutils.get_max_samples": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"NDNT.utils.NDNutils.get_max_samples": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "pipeline": ["trimmer"], "_isPrebuiltIndex": true};

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();